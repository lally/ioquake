
server/sv_init.c,1098
static void SV_SendConfigstring(client_t *client, int index)SV_SendConfigstring34,1147
void SV_UpdateConfigstrings(client_t *client)SV_UpdateConfigstrings81,2144
void SV_SetConfigstring (int index, const char *val) {SV_SetConfigstring106,2687
void SV_GetConfigstring( int index, char *buffer, int bufferSize ) {SV_GetConfigstring156,3850
void SV_SetUserinfo( int index, const char *val ) {SV_SetUserinfo178,4330
void SV_GetUserinfo( int index, char *buffer, int bufferSize ) {SV_GetUserinfo199,4792
void SV_CreateBaseline( void ) {SV_CreateBaseline219,5351
void SV_BoundMaxClients( int minimum ) {SV_BoundMaxClients244,5746
void SV_Startup( void ) {SV_Startup268,6350
void SV_ChangeMaxClients( void ) {SV_ChangeMaxClients300,7196
void SV_ClearServer(void) {SV_ClearServer366,8783
void SV_TouchCGame(void) {SV_TouchCGame384,9112
void SV_SpawnServer( char *server, qboolean killBots ) {SV_SpawnServer404,9500
void SV_Init (void) {SV_Init632,15772
void SV_FinalMessage( char *message ) {SV_FinalMessage710,19267
void SV_Shutdown( char *finalmsg ) {SV_Shutdown740,19975

server/server.h,9686
#define	PERS_SCORE	PERS_SCORE31,1195
#define	MAX_ENT_CLUSTERS	MAX_ENT_CLUSTERS34,1293
typedef struct voipServerPacket_svoipServerPacket_s37,1338
	int generation;generation39,1374
	int sequence;sequence40,1391
	int frames;frames41,1406
	int len;len42,1419
	int sender;sender43,1429
	byte data[1024];data44,1442
} voipServerPacket_t;voipServerPacket_t45,1460
typedef struct svEntity_s {svEntity_s48,1490
	struct worldSector_s *worldSector;worldSector49,1518
	struct svEntity_s *nextEntityInWorldSector;nextEntityInWorldSector50,1554
	entityState_t	baseline;		// for delta compression of initial sightingbaseline52,1601
	int			numClusters;		// if -1, use headnode insteadnumClusters53,1672
	int			clusternums[MAX_ENT_CLUSTERS];clusternums54,1724
	int			lastCluster;		// if all the clusters don't fit in clusternumslastCluster55,1762
	int			areanum, areanum2;areanum56,1831
	int			areanum, areanum2;areanum256,1831
	int			snapshotCounter;	// used to prevent double adding from portal viewssnapshotCounter57,1857
} svEntity_t;svEntity_t58,1932
	SS_DEAD,			// no map loadedSS_DEAD61,1962
	SS_LOADING,			// spawning level entitiesSS_LOADING62,1991
	SS_GAME				// actively runningSS_GAME63,2033
} serverState_t;serverState_t64,2065
	serverState_t	state;state67,2100
	qboolean		restarting;			// if true, send configstring changes during SS_LOADINGrestarting68,2122
	int				serverId;			// changes each server startserverId69,2203
	int				restartedServerId;	// serverId before a map_restartrestartedServerId70,2252
	int				checksumFeed;		// the feed key that we use to compute the pure checksum stringschecksumFeed71,2312
	int       checksumFeedServerId;	checksumFeedServerId74,2544
	int				snapshotCounter;	// incremented for each snapshot builtsnapshotCounter75,2578
	int				timeResidual;		// <= 1000 / sv_frame->valuetimeResidual76,2642
	int				nextFrameTime;		// when time > nextFrameTime, process worldnextFrameTime77,2694
	struct cmodel_s	*models[MAX_MODELS];models78,2762
	char			*configstrings[MAX_CONFIGSTRINGS];configstrings79,2800
	svEntity_t		svEntities[MAX_GENTITIES];svEntities80,2843
	char			*entityParsePoint;	// used during game VM initentityParsePoint82,2884
	sharedEntity_t	*gentities;gentities85,3007
	int				gentitySize;gentitySize86,3035
	int				num_entities;		// current number, <= MAX_GENTITIESnum_entities87,3056
	playerState_t	*gameClients;gameClients89,3116
	int				gameClientSize;		// will be > sizeof(playerState_t) due to game private datagameClientSize90,3145
	int				restartTime;restartTime92,3231
	int				time;time93,3252
} server_t;server_t94,3266
	int				areabytes;areabytes101,3300
	byte			areabits[MAX_MAP_AREA_BYTES];		// portalarea visibility bitsareabits102,3319
	playerState_t	ps;ps103,3388
	int				num_entities;num_entities104,3407
	int				first_entity;		// into the circular sv_packet_entities[]first_entity105,3429
	int				messageSent;		// time the message was transmittedmessageSent108,3617
	int				messageAcked;		// time the message was ackedmessageAcked109,3675
	int				messageSize;		// used to rate drop packetsmessageSize110,3728
} clientSnapshot_t;clientSnapshot_t111,3779
	CS_FREE,		// can be reused for a new connectionCS_FREE114,3815
	CS_ZOMBIE,		// client has been disconnected, but don't reuseCS_ZOMBIE115,3864
	CS_CONNECTED,	// has been assigned to a client_t, but no gamestate yetCS_CONNECTED117,3966
	CS_PRIMED,		// gamestate has been sent, but client hasn't sent a usercmdCS_PRIMED118,4038
	CS_ACTIVE		// client is fully in gameCS_ACTIVE119,4112
} clientState_t;clientState_t120,4151
typedef struct netchan_buffer_s {netchan_buffer_s122,4169
	msg_t           msg;msg123,4203
	byte            msgBuffer[MAX_MSGLEN];msgBuffer124,4225
	struct netchan_buffer_s *next;next125,4265
} netchan_buffer_t;netchan_buffer_t126,4297
typedef struct client_s {client_s128,4318
	clientState_t	state;state129,4344
	char			userinfo[MAX_INFO_STRING];		// name, etcuserinfo130,4366
	char			reliableCommands[MAX_RELIABLE_COMMANDS][MAX_STRING_CHARS];reliableCommands132,4416
	int				reliableSequence;		// last added reliable message, not necesarily sent or acknowledged yetreliableSequence133,4483
	int				reliableAcknowledge;	// last acknowledged reliable messagereliableAcknowledge134,4582
	int				reliableSent;			// last sent reliable message, not necesarily acknowledged yetreliableSent135,4649
	int				messageAcknowledge;messageAcknowledge136,4736
	int				gamestateMessageNum;	// netchan->outgoingSequence of gamestategamestateMessageNum138,4765
	int				challenge;challenge139,4836
	usercmd_t		lastUsercmd;lastUsercmd141,4856
	int				lastMessageNum;		// for delta compressionlastMessageNum142,4881
	int				lastClientCommand;	// reliable client message sequencelastClientCommand143,4931
	char			lastClientCommandString[MAX_STRING_CHARS];lastClientCommandString144,4994
	sharedEntity_t	*gentity;			// SV_GentityNum(clientnum)gentity145,5045
	char			name[MAX_NAME_LENGTH];			// extracted from userinfo, high bits maskedname146,5101
	char			downloadName[MAX_QPATH]; // if not empty string, we are downloadingdownloadName149,5196
	fileHandle_t	download;			// file being downloadeddownload150,5272
 	int				downloadSize;		// total bytes (can't use EOF because of paks)downloadSize151,5323
 	int				downloadCount;		// bytes sentdownloadCount152,5394
	int				downloadClientBlock;	// last block we sent to the client, awaiting ackdownloadClientBlock153,5433
	int				downloadCurrentBlock;	// current block numberdownloadCurrentBlock154,5512
	int				downloadXmitBlock;	// last block we xmiteddownloadXmitBlock155,5566
	unsigned char	*downloadBlocks[MAX_DOWNLOAD_WINDOW];	// the buffers for the download blocksdownloadBlocks156,5617
	int				downloadBlockSize[MAX_DOWNLOAD_WINDOW];downloadBlockSize157,5709
	qboolean		downloadEOF;		// We have sent the EOF blockdownloadEOF158,5757
	int				downloadSendTime;	// time we last got an ack from the clientdownloadSendTime159,5812
	int				deltaMessage;		// frame last client usercmd messagedeltaMessage161,5882
	int				nextReliableTime;	// svs.time when another reliable command will be allowednextReliableTime162,5942
	int				lastPacketTime;		// svs.time when packet was last receivedlastPacketTime163,6026
	int				lastConnectTime;	// svs.time when connection startedlastConnectTime164,6093
	int				nextSnapshotTime;	// send another snapshot when svs.time >= nextSnapshotTimenextSnapshotTime165,6154
	qboolean		rateDelayed;		// true if nextSnapshotTime was set based on rate instead of snapshotMsecrateDelayed166,6239
	int				timeoutCount;		// must timeout a few frames in a row so debugging doesn't breaktimeoutCount167,6338
	clientSnapshot_t	frames[PACKET_BACKUP];	// updates can be delta'd from hereframes168,6426
	int				ping;ping169,6503
	int				rate;				// bytes / secondrate170,6517
	int				snapshotMsec;		// requests a snapshot every snapshotMsec unless rate chokedsnapshotMsec171,6552
	int				pureAuthentic;pureAuthentic172,6636
	qboolean  gotCP; // TTimo - additional flag to distinguish between a bad pure checksum, and no cp command at allgotCP173,6659
	netchan_t		netchan;netchan174,6773
	netchan_buffer_t *netchan_start_queue;netchan_start_queue179,7020
	netchan_buffer_t **netchan_end_queue;netchan_end_queue180,7060
	qboolean hasVoip;hasVoip183,7116
	qboolean muteAllVoip;muteAllVoip184,7135
	qboolean ignoreVoipFromClient[MAX_CLIENTS];ignoreVoipFromClient185,7158
	voipServerPacket_t voipPacket[64]; // !!! FIXME: WAY too much memory!voipPacket186,7203
	int queuedVoipPackets;queuedVoipPackets187,7274
	int				oldServerTime;oldServerTime190,7306
	qboolean			csUpdated[MAX_CONFIGSTRINGS+1];	csUpdated191,7329
} client_t;client_t192,7374
#define	MAX_CHALLENGES	MAX_CHALLENGES200,7612
#define	AUTHORIZE_TIMEOUT	AUTHORIZE_TIMEOUT202,7641
	netadr_t	adr;adr205,7690
	int			challenge;challenge206,7705
	int			time;				// time the last packet was sent to the autherize servertime207,7723
	int			pingTime;			// time the challenge response was sent to clientpingTime208,7796
	int			firstTime;			// time the adr was first used, for authorize timeout checksfirstTime209,7865
	qboolean	connected;connected210,7946
} challenge_t;challenge_t211,7967
#define	MAX_MASTERS	MAX_MASTERS214,7984
	qboolean	initialized;				// sv_init has completedinitialized219,8133
	int			time;						// will be strictly increasing across level changestime221,8185
	int			snapFlagServerBit;			// ^= SNAPFLAG_SERVERCOUNT every SV_SpawnServer()snapFlagServerBit223,8256
	client_t	*clients;					// [sv_maxclients->integer];clients225,8335
	int			numSnapshotEntities;		// sv_maxclients->integer*PACKET_BACKUP*MAX_PACKET_ENTITIESnumSnapshotEntities226,8388
	int			nextSnapshotEntities;		// next snapshotEntities to usenextSnapshotEntities227,8477
	entityState_t	*snapshotEntities;		// [numSnapshotEntities]snapshotEntities228,8539
	int			nextHeartbeatTime;nextHeartbeatTime229,8599
	challenge_t	challenges[MAX_CHALLENGES];	// to prevent invalid IPs from connectingchallenges230,8625
	netadr_t	redirectAddress;			// for rcon return messagesredirectAddress231,8708
	netadr_t	authorizeAddress;			// for rcon return messagesauthorizeAddress233,8766
} serverStatic_t;serverStatic_t234,8824
#define SERVER_MAXBANS	SERVER_MAXBANS236,8843
#define SERVER_BANFILE	SERVER_BANFILE237,8871
	netadr_t ip;ip241,8959
	int subnet;subnet243,9009
	qboolean isexception;isexception245,9024
} serverBan_t;serverBan_t246,9047
#define	MAX_MASTER_SERVERS	MAX_MASTER_SERVERS254,9305

server/sv_world.c,2443
clipHandle_t SV_ClipHandleForEntity( const sharedEntity_t *ent ) {SV_ClipHandleForEntity35,1286
typedef struct worldSector_s {worldSector_s64,2240
	int		axis;		// -1 = leaf nodeaxis65,2271
	float	dist;dist66,2302
	struct worldSector_s	*children[2];children67,2315
	svEntity_t	*entities;entities68,2351
} worldSector_t;worldSector_t69,2374
#define	AREA_DEPTH	AREA_DEPTH71,2392
#define	AREA_NODES	AREA_NODES72,2413
worldSector_t	sv_worldSectors[AREA_NODES];sv_worldSectors74,2436
int			sv_numworldSectors;sv_numworldSectors75,2479
void SV_SectorList_f( void ) {SV_SectorList_f83,2561
worldSector_t *SV_CreateworldSector( int depth, vec3_t mins, vec3_t maxs ) {SV_CreateworldSector106,2989
void SV_ClearWorld( void ) {SV_ClearWorld147,3888
void SV_UnlinkEntity( sharedEntity_t *gEnt ) {SV_UnlinkEntity167,4227
#define MAX_TOTAL_ENT_LEAFS	MAX_TOTAL_ENT_LEAFS204,4933
void SV_LinkEntity( sharedEntity_t *gEnt ) {SV_LinkEntity205,4966
	const float	*mins;mins369,9031
	const float	*maxs;maxs370,9051
	int			*list;list371,9071
	int			count, maxcount;count372,9085
	int			count, maxcount;maxcount372,9085
} areaParms_t;areaParms_t373,9109
void SV_AreaEntities_r( worldSector_t *node, areaParms_t *ap ) {SV_AreaEntities_r382,9193
int SV_AreaEntities( const vec3_t mins, const vec3_t maxs, int *entityList, int maxcount ) {SV_AreaEntities430,10238
	vec3_t		boxmins, boxmaxs;// enclose the test object along entire moveboxmins450,10613
	vec3_t		boxmins, boxmaxs;// enclose the test object along entire moveboxmaxs450,10613
	const float	*mins;mins451,10684
	const float *maxs;	// size of the moving objectmaxs452,10704
	const float	*start;start453,10753
	vec3_t		end;end454,10774
	trace_t		trace;trace455,10788
	int			passEntityNum;passEntityNum456,10805
	int			contentmask;contentmask457,10827
	int			capsule;capsule458,10847
} moveclip_t;moveclip_t459,10863
void SV_ClipToEntity( trace_t *trace, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end, int entityNum, int contentmask, int capsule ) {SV_ClipToEntity468,10944
void SV_ClipMoveToEntities( moveclip_t *clip ) {SV_ClipMoveToEntities510,11959
void SV_Trace( trace_t *results, const vec3_t start, vec3_t mins, vec3_t maxs, const vec3_t end, int passEntityNum, int contentmask, int capsule ) {SV_Trace600,14297
int SV_PointContents( const vec3_t p, int passEntityNum ) {SV_PointContents657,15778

server/sv_game.c,1967
botlib_export_t	*botlib_export;botlib_export28,1069
void SV_GameError( const char *string ) {SV_GameError30,1102
void SV_GamePrint( const char *string ) {SV_GamePrint34,1185
int	SV_NumForGentity( sharedEntity_t *ent ) {SV_NumForGentity40,1416
sharedEntity_t *SV_GentityNum( int num ) {SV_GentityNum48,1555
playerState_t *SV_GameClientNum( int num ) {SV_GameClientNum56,1710
svEntity_t	*SV_SvEntityForGentity( sharedEntity_t *gEnt ) {SV_SvEntityForGentity64,1867
sharedEntity_t *SV_GEntityForSvEntity( svEntity_t *svEnt ) {SV_GEntityForSvEntity71,2108
void SV_GameSendServerCommand( int clientNum, const char *text ) {SV_GameSendServerCommand85,2343
void SV_GameDropClient( int clientNum, const char *reason ) {SV_GameDropClient104,2735
void SV_SetBrushModel( sharedEntity_t *ent, const char *name ) {SV_SetBrushModel119,3027
qboolean SV_inPVS (const vec3_t p1, const vec3_t p2)SV_inPVS154,3732
qboolean SV_inPVSIgnorePortals( const vec3_t p1, const vec3_t p2)SV_inPVSIgnorePortals184,4357
void SV_AdjustAreaPortalState( sharedEntity_t *ent, qboolean open ) {SV_AdjustAreaPortalState212,4905
qboolean	SV_EntityContact( vec3_t mins, vec3_t maxs, const sharedEntity_t *gEnt, int capsule ) {SV_EntityContact228,5216
void SV_GetServerinfo( char *buffer, int bufferSize ) {SV_GetServerinfo251,5712
void SV_LocateGameData( sharedEntity_t *gEnts, int numGEntities, int sizeofGEntity_t,SV_LocateGameData264,6002
void SV_GetUsercmd( int clientNum, usercmd_t *cmd ) {SV_GetUsercmd281,6360
static int	FloatAsInt( float f ) {FloatAsInt290,6648
intptr_t SV_GameSystemCalls( intptr_t *args ) {SV_GameSystemCalls303,6830
void SV_ShutdownGameProgs( void ) {SV_ShutdownGameProgs864,25778
static void SV_InitGameVM( qboolean restart ) {SV_InitGameVM880,26016
void SV_RestartGameProgs( void ) {SV_RestartGameProgs908,26706
void SV_InitGameProgs( void ) {SV_InitGameProgs931,27081
qboolean SV_GameCommand( void ) {SV_GameCommand961,27667

server/sv_ccmds.c,1681
static client_t *SV_GetPlayerByHandle( void ) {SV_GetPlayerByHandle42,1401
static client_t *SV_GetPlayerByNum( void ) {SV_GetPlayerByNum105,2515
static void SV_Map_f( void ) {SV_Map_f153,3358
static void SV_MapRestart_f( void ) {SV_MapRestart_f225,5226
static void SV_Kick_f( void ) {SV_Kick_f348,8356
static void SV_Ban_f( void ) {SV_Ban_f411,9961
static void SV_BanNum_f( void ) {SV_BanNum_f467,11558
void SV_RehashBans_f(void)SV_RehashBans_f521,13123
static void SV_AddBanToList(qboolean isexception)SV_AddBanToList604,15030
static void SV_DelBanFromList(qboolean isexception)SV_DelBanFromList718,17167
static void SV_ListBans_f(void)SV_ListBans_f777,18391
static void SV_FlushBans_f(void)SV_FlushBans_f808,18964
static void SV_BanAddr_f(void)SV_BanAddr_f821,19158
static void SV_ExceptAddr_f(void)SV_ExceptAddr_f826,19220
static void SV_BanDel_f(void)SV_BanDel_f831,19284
static void SV_ExceptDel_f(void)SV_ExceptDel_f836,19347
static void SV_KickNum_f( void ) {SV_KickNum_f848,19521
static void SV_Status_f( void ) {SV_Status_f880,20144
static void SV_ConSay_f(void) {SV_ConSay_f945,21654
void SV_Heartbeat_f( void ) {SV_Heartbeat_f980,22180
static void SV_Serverinfo_f( void ) {SV_Serverinfo_f992,22326
static void SV_Systeminfo_f( void ) {SV_Systeminfo_f1005,22548
static void SV_DumpUser_f( void ) {SV_DumpUser_f1018,22781
static void SV_KillServer_f( void ) {SV_KillServer_f1048,23244
static void SV_CompleteMapName( char *args, int argNum ) {SV_CompleteMapName1059,23441
void SV_AddOperatorCommands( void ) {SV_AddOperatorCommands1070,23644
void SV_RemoveOperatorCommands( void ) {SV_RemoveOperatorCommands1123,25295

server/sv_rankings.c,3549
	GR_CONTEXT		context;context30,1135
	uint64_t        game_id;game_id31,1157
	uint64_t		match;match32,1183
	uint64_t		player_id;player_id33,1201
	GR_PLAYER_TOKEN     token;token34,1223
	grank_status_t	grank_status;grank_status35,1251
	grank_status_t	final_status;	// status to set after cleanupfinal_status36,1281
	uint32_t        grank;          // global rankgrank37,1342
	char			name[32];name38,1390
} ranked_player_t;ranked_player_t39,1408
static int				s_rankings_contexts = 0;s_rankings_contexts41,1428
static qboolean			s_rankings_active = qfalse;s_rankings_active42,1467
static GR_CONTEXT		s_server_context = 0;s_server_context43,1513
static uint64_t			s_server_match = 0;s_server_match44,1554
static char*			s_rankings_game_key = NULL;s_rankings_game_key45,1592
static uint64_t			s_rankings_game_id = 0;s_rankings_game_id46,1635
static ranked_player_t*	s_ranked_players = NULL;s_ranked_players47,1677
static qboolean			s_server_quitting = qfalse;s_server_quitting48,1726
static const char		s_ascii_encoding[] = s_ascii_encoding49,1772
static char     SV_RankGameKey[64];SV_RankGameKey72,2880
void SV_RankBegin( char *gamekey )SV_RankBegin79,2970
void SV_RankEnd( void )SV_RankEnd199,5559
void SV_RankPoll( void )SV_RankPoll263,6699
qboolean SV_RankCheckInit( void )SV_RankCheckInit273,6800
qboolean SV_RankActive( void )SV_RankActive283,6928
grank_status_t SV_RankUserStatus( int index )SV_RankUserStatus293,7051
int SV_RankUserGrank( int index )SV_RankUserGrank312,7366
void SV_RankUserReset( int index )SV_RankUserReset331,7648
void SV_RankUserSpectate( int index )SV_RankUserSpectate363,8229
void SV_RankUserCreate( int index, char* username, char* password, SV_RankUserCreate383,8577
void SV_RankUserLogin( int index, char* username, char* password )SV_RankUserLogin449,10312
qboolean SV_RankUserValidate( int index, const char* player_id, const char* key, int token_len, int rank, char* name )SV_RankUserValidate511,11960
void SV_RankUserLogout( int index )SV_RankUserLogout613,14923
void SV_RankReportInt( int index1, int index2, int key, int value, SV_RankReportInt681,16427
void SV_RankReportStr( int index1, int index2, int key, char* value )SV_RankReportStr795,18634
void SV_RankQuit( void )SV_RankQuit901,20593
static void SV_RankNewGameCBF( GR_NEWGAME* gr_newgame, void* cbf_arg )SV_RankNewGameCBF964,21896
static void SV_RankUserCBF( GR_LOGIN* gr_login, void* cbf_arg )SV_RankUserCBF1024,23422
static void SV_RankJoinGameCBF( GR_JOINGAME* gr_joingame, void* cbf_arg )SV_RankJoinGameCBF1108,25624
static void SV_RankSendReportsCBF( GR_STATUS* status, void* cbf_arg )SV_RankSendReportsCBF1170,27211
static void SV_RankCleanupCBF( GR_STATUS* status, void* cbf_arg )SV_RankCleanupCBF1231,28531
static void SV_RankCloseContext( ranked_player_t* ranked_player )SV_RankCloseContext1255,29059
static int SV_RankAsciiEncode( char* dest, const unsigned char* src, SV_RankAsciiEncode1320,30477
static int SV_RankAsciiDecode( unsigned char* dest, const char* src, SV_RankAsciiDecode1372,31626
static void SV_RankEncodeGameID( uint64_t game_id, char* result, SV_RankEncodeGameID1432,32868
static uint64_t SV_RankDecodePlayerID( const char* string )SV_RankDecodePlayerID1455,33321
static void SV_RankDecodePlayerKey( const char* string, GR_PLAYER_TOKEN key )SV_RankDecodePlayerKey1475,33745
static char* SV_RankStatusString( GR_STATUS status )SV_RankStatusString1494,34189
static void SV_RankError( const char* fmt, ... )SV_RankError1520,35113

server/sv_snapshot.c,1436
static void SV_EmitPacketEntities( clientSnapshot_t *from, clientSnapshot_t *to, msg_t *msg ) {SV_EmitPacketEntities55,1622
static void SV_WriteSnapshotToClient( client_t *client, msg_t *msg ) {SV_WriteSnapshotToClient122,3295
void SV_UpdateServerCommandsToClient( client_t *client, msg_t *msg ) {SV_UpdateServerCommandsToClient218,6330
#define	MAX_SNAPSHOT_ENTITIES	MAX_SNAPSHOT_ENTITIES238,6950
	int		numSnapshotEntities;numSnapshotEntities240,7002
	int		snapshotEntities[MAX_SNAPSHOT_ENTITIES];	snapshotEntities241,7029
} snapshotEntityNumbers_t;snapshotEntityNumbers_t242,7077
static int QDECL SV_QsortEntityNumbers( const void *a, const void *b ) {SV_QsortEntityNumbers249,7181
static void SV_AddEntToSnapshot( svEntity_t *svEnt, sharedEntity_t *gEnt, snapshotEntityNumbers_t *eNums ) {SV_AddEntToSnapshot272,7506
static void SV_AddEntitiesVisibleFromPoint( vec3_t origin, clientSnapshot_t *frame, SV_AddEntitiesVisibleFromPoint293,8103
static void SV_BuildClientSnapshot( client_t *client ) {SV_BuildClientSnapshot446,11993
#define	HEADER_RATE_BYTES	HEADER_RATE_BYTES536,14931
static int SV_RateMsec( client_t *client, int messageSize ) {SV_RateMsec537,15013
void SV_SendMessageToClient( msg_t *msg, client_t *client ) {SV_SendMessageToClient573,15848
void SV_SendClientSnapshot( client_t *client ) {SV_SendClientSnapshot626,17772
void SV_SendClientMessages( void ) {SV_SendClientMessages675,18989

server/sv_main.c,3259
cvar_t *sv_voip;sv_voip26,1012
serverStatic_t	svs;				// persistant server infosvs29,1037
server_t		sv;					// local serversv30,1086
vm_t			*gvm = NULL;				// game virtual machinegvm31,1120
cvar_t	*sv_fps;				// time rate for running non-clientssv_fps33,1168
cvar_t	*sv_timeout;			// seconds without any messagesv_timeout34,1224
cvar_t	*sv_zombietime;			// seconds to sink messages after disconnectsv_zombietime35,1277
cvar_t	*sv_rconPassword;		// password for remote server commandssv_rconPassword36,1347
cvar_t	*sv_privatePassword;	// password for the privateClient slotssv_privatePassword37,1412
cvar_t	*sv_allowDownload;sv_allowDownload38,1480
cvar_t	*sv_maxclients;sv_maxclients39,1506
cvar_t	*sv_privateClients;		// number of clients reserved for passwordsv_privateClients41,1530
cvar_t	*sv_hostname;sv_hostname42,1601
cvar_t	*sv_master[MAX_MASTER_SERVERS];		// master server ip addresssv_master43,1622
cvar_t	*sv_reconnectlimit;		// minimum seconds between connect messagessv_reconnectlimit44,1690
cvar_t	*sv_showloss;			// report when usercmds are lostsv_showloss45,1762
cvar_t	*sv_padPackets;			// add nop bytes to messagessv_padPackets46,1818
cvar_t	*sv_killserver;			// menu system can set to 1 to shut server downsv_killserver47,1872
cvar_t	*sv_mapname;sv_mapname48,1945
cvar_t	*sv_mapChecksum;sv_mapChecksum49,1965
cvar_t	*sv_serverid;sv_serverid50,1989
cvar_t	*sv_minRate;sv_minRate51,2010
cvar_t	*sv_maxRate;sv_maxRate52,2030
cvar_t	*sv_minPing;sv_minPing53,2050
cvar_t	*sv_maxPing;sv_maxPing54,2070
cvar_t	*sv_gametype;sv_gametype55,2090
cvar_t	*sv_pure;sv_pure56,2111
cvar_t	*sv_floodProtect;sv_floodProtect57,2128
cvar_t	*sv_lanForceRate; // dedicated 1 (LAN) server forces local client rates to 99999 (bug #491)sv_lanForceRate58,2153
cvar_t	*sv_strictAuth;sv_strictAuth59,2252
serverBan_t serverBans[SERVER_MAXBANS];serverBans61,2276
int serverBansCount = 0;serverBansCount62,2316
char	*SV_ExpandNewlines( char *in ) {SV_ExpandNewlines79,2628
int SV_ReplacePendingServerCommands( client_t *client, const char *cmd ) {SV_ReplacePendingServerCommands105,3006
void SV_AddServerCommand( client_t *client, const char *cmd ) {SV_AddServerCommand136,3995
void QDECL SV_SendServerCommand(client_t *cl, const char *fmt, ...) {SV_SendServerCommand177,5485
#define	HEARTBEAT_MSEC	HEARTBEAT_MSEC231,6955
#define	HEARTBEAT_GAME	HEARTBEAT_GAME232,6987
void SV_MasterHeartbeat( void ) {SV_MasterHeartbeat233,7025
void SV_MasterShutdown( void ) {SV_MasterShutdown294,8786
void SVC_Status( netadr_t from ) {SVC_Status325,9524
void SVC_Info( netadr_t from ) {SVC_Info375,10882
void SV_FlushRedirect( char *outputbuf ) {SV_FlushRedirect446,13125
void SVC_RemoteCommand( netadr_t from, msg_t *msg ) {SVC_RemoteCommand459,13399
#define SV_OUTPUTBUF_LENGTH SV_OUTPUTBUF_LENGTH465,13652
void SV_ConnectionlessPacket( netadr_t from, msg_t *msg ) {SV_ConnectionlessPacket529,15427
void SV_PacketEvent( netadr_t from, msg_t *msg ) {SV_PacketEvent577,16711
void SV_CalcPings( void ) {SV_CalcPings642,18596
void SV_CheckTimeouts( void ) {SV_CheckTimeouts702,19867
qboolean SV_CheckPaused( void ) {SV_CheckPaused743,20934
void SV_Frame( int msec ) {SV_Frame780,21631

server/sv_bot.c,2719
typedef struct bot_debugpoly_sbot_debugpoly_s27,1038
	int inuse;inuse29,1071
	int color;color30,1083
	int numPoints;numPoints31,1095
	vec3_t points[128];points32,1111
} bot_debugpoly_t;bot_debugpoly_t33,1132
static bot_debugpoly_t *debugpolygons;debugpolygons35,1152
int bot_maxdebugpolys;bot_maxdebugpolys36,1191
int	bot_enable;bot_enable39,1254
int SV_BotAllocateClient(void) {SV_BotAllocateClient47,1337
void SV_BotFreeClient( int clientNum ) {SV_BotFreeClient77,1854
void BotDrawDebugPolygons(void (*drawPoly)(int color, int numPoints, float *points), int value) {BotDrawDebugPolygons96,2254
void QDECL BotImport_Print(int type, char *fmt, ...)BotImport_Print136,3661
void BotImport_Trace(bsp_trace_t *bsptrace, vec3_t start, vec3_t mins, vec3_t maxs, vec3_t end, int passent, int contentmask) {BotImport_Trace178,4362
void BotImport_EntityTrace(bsp_trace_t *bsptrace, vec3_t start, vec3_t mins, vec3_t maxs, vec3_t end, int entnum, int contentmask) {BotImport_EntityTrace203,5188
int BotImport_PointContents(vec3_t point) {BotImport_PointContents229,6028
int BotImport_inPVS(vec3_t p1, vec3_t p2) {BotImport_inPVS238,6172
char *BotImport_BSPEntityData(void) {BotImport_BSPEntityData247,6314
void BotImport_BSPModelMinsMaxsOrigin(int modelnum, vec3_t angles, vec3_t outmins, vec3_t outmaxs, vec3_t origin) {BotImport_BSPModelMinsMaxsOrigin256,6459
void *BotImport_GetMemory(int size) {BotImport_GetMemory284,7088
void BotImport_FreeMemory(void *ptr) {BotImport_FreeMemory296,7260
void *BotImport_HunkAlloc( int size ) {BotImport_HunkAlloc305,7378
int BotImport_DebugPolygonCreate(int color, int numPoints, vec3_t *points) {BotImport_DebugPolygonCreate317,7636
void BotImport_DebugPolygonShow(int id, int color, int numPoints, vec3_t *points) {BotImport_DebugPolygonShow344,8162
void BotImport_DebugPolygonDelete(int id)BotImport_DebugPolygonDelete360,8541
int BotImport_DebugLineCreate(void) {BotImport_DebugLineCreate371,8722
void BotImport_DebugLineDelete(int line) {BotImport_DebugLineDelete381,8904
void BotImport_DebugLineShow(int line, vec3_t start, vec3_t end, int color) {BotImport_DebugLineShow390,9055
void BotClientCommand( int client, char *command ) {BotClientCommand423,9861
void SV_BotFrame( int time ) {SV_BotFrame432,10039
int SV_BotLibSetup( void ) {SV_BotLibSetup444,10257
int SV_BotLibShutdown( void ) {SV_BotLibShutdown465,10645
void SV_BotInitCvars(void) {SV_BotInitCvars479,10824
void SV_BotInitBotLib(void) {SV_BotInitBotLib518,13029
int SV_BotGetConsoleMessage( int client, char *buf, int size )SV_BotGetConsoleMessage570,14757
int SV_BotGetSnapshotEntity( int client, int sequence ) {SV_BotGetSnapshotEntity620,15752

server/sv_client.c,2406
void SV_GetChallenge( netadr_t from ) {SV_GetChallenge46,1622
void SV_AuthorizeIpPacket( netadr_t from ) {SV_AuthorizeIpPacket167,5366
qboolean SV_IsBanned(netadr_t *from, qboolean isexception)SV_IsBanned238,7378
void SV_DirectConnect( netadr_t from ) {SV_DirectConnect318,8795
void SV_DropClient( client_t *drop, const char *reason ) {SV_DropClient576,16631
void SV_SendClientGameState( client_t *client ) {SV_SendClientGameState650,18621
void SV_ClientEnterWorld( client_t *client, usercmd_t *cmd ) {SV_ClientEnterWorld720,20712
static void SV_CloseDownload( client_t *cl ) {SV_CloseDownload760,21703
void SV_StopDownload_f( client_t *cl ) {SV_StopDownload_f787,22155
void SV_DoneDownload_f( client_t *cl ) {SV_DoneDownload_f801,22442
void SV_NextDownload_f( client_t *cl )SV_NextDownload_f815,22828
void SV_BeginDownload_f( client_t *cl ) {SV_BeginDownload_f844,23731
void SV_WriteDownloadToClient( client_t *cl , msg_t *msg )SV_WriteDownloadToClient862,24193
void SV_WriteVoipToClient( client_t *cl, msg_t *msg )SV_WriteVoipToClient1094,31899
static void SV_Disconnect_f( client_t *cl ) {SV_Disconnect_f1145,33450
static void SV_VerifyPaks_f( client_t *cl ) {SV_VerifyPaks_f1162,33865
static void SV_ResetPureClient_f( client_t *cl ) {SV_ResetPureClient_f1317,37853
void SV_UserinfoChanged( client_t *cl ) {SV_UserinfoChanged1330,38099
static void SV_UpdateUserinfo_f( client_t *cl ) {SV_UpdateUserinfo_f1415,40226
void SV_UpdateVoipIgnore(client_t *cl, const char *idstr, qboolean ignore)SV_UpdateVoipIgnore1426,40498
static void SV_Voip_f( client_t *cl ) {SV_Voip_f1441,40805
	char	*name;name1457,41225
	void	(*func)( client_t *cl );func1458,41238
} ucmd_t;ucmd_t1459,41269
static ucmd_t ucmds[] = {ucmds1461,41280
void SV_ExecuteClientCommand( client_t *cl, const char *s, qboolean clientOK ) {SV_ExecuteClientCommand1485,41723
static qboolean SV_ClientCommand( client_t *cl, msg_t *msg ) {SV_ClientCommand1515,42367
void SV_ClientThink (client_t *cl, usercmd_t *cmd) {SV_ClientThink1576,44222
static void SV_UserMove( client_t *cl, msg_t *msg, qboolean delta ) {SV_UserMove1598,44758
qboolean SV_ShouldIgnoreVoipSender(const client_t *cl)SV_ShouldIgnoreVoipSender1697,47632
void SV_UserVoip( client_t *cl, msg_t *msg ) {SV_UserVoip1710,47935
void SV_ExecuteClientMessage( client_t *cl, msg_t *msg ) {SV_ExecuteClientMessage1822,51607

server/sv_net_chan.c,492
static void SV_Netchan_Encode( client_t *client, msg_t *msg ) {SV_Netchan_Encode36,1189
static void SV_Netchan_Decode( client_t *client, msg_t *msg ) {SV_Netchan_Decode90,2472
void SV_Netchan_TransmitNextFragment( client_t *client ) {SV_Netchan_TransmitNextFragment134,3627
void SV_Netchan_Transmit( client_t *client, msg_t *msg) {	//int length, const byte *data ) {SV_Netchan_Transmit174,5104
qboolean SV_Netchan_Process( client_t *client, msg_t *msg ) {SV_Netchan_Process199,6115

ui/ui_main.c,24041
uiInfo_t uiInfo;uiInfo36,1306
static const char *MonthAbbrev[] = {MonthAbbrev38,1324
static const char *skillLevels[] = {skillLevels46,1445
static const int numSkillLevels = sizeof(skillLevels) / sizeof(const char*);numSkillLevels54,1566
static const char *netSources[] = {netSources57,1645
static const int numNetSources = sizeof(netSources) / sizeof(const char*);numNetSources63,1732
static const serverFilter_t serverFilters[] = {serverFilters65,1808
static const char *teamArenaGameTypes[] = {teamArenaGameTypes75,2046
static int const numTeamArenaGameTypes = sizeof(teamArenaGameTypes) / sizeof(const char*);numTeamArenaGameTypes87,2199
static const char *teamArenaGameNames[] = {teamArenaGameNames90,2292
static int const numTeamArenaGameNames = sizeof(teamArenaGameNames) / sizeof(const char*);numTeamArenaGameNames102,2495
static const int numServerFilters = sizeof(serverFilters) / sizeof(serverFilter_t);numServerFilters105,2588
static const char *sortKeys[] = {sortKeys107,2673
static const int numSortKeys = sizeof(sortKeys) / sizeof(const char*);numSortKeys114,2788
static char* netnames[] = {netnames116,2860
static char quake3worldMessage[] = "Visit www.quake3world.com - News, Community, Events, Files";quake3worldMessage123,2934
static int gamecodetoui[] = {4,2,3,0,5,1,6};gamecodetoui126,3039
static int uitogamecode[] = {4,6,2,3,1,5,7};uitogamecode127,3084
vmCvar_t  ui_new;ui_new156,4197
vmCvar_t  ui_debug;ui_debug157,4215
vmCvar_t  ui_initialized;ui_initialized158,4235
vmCvar_t  ui_teamArenaFirstRun;ui_teamArenaFirstRun159,4261
intptr_t vmMain( int command, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11  ) {vmMain167,4501
void AssetCache( void ) {AssetCache215,5460
void _UI_DrawSides(float x, float y, float w, float h, float size) {_UI_DrawSides246,7312
void _UI_DrawTopBottom(float x, float y, float w, float h, float size) {_UI_DrawTopBottom253,7617
void _UI_DrawRect( float x, float y, float width, float height, float size, const float *color ) {_UI_DrawRect266,8018
int Text_Width(const char *text, float scale, int limit) {Text_Width275,8267
int Text_Height(const char *text, float scale, int limit) {Text_Height310,9008
void Text_PaintChar(float x, float y, float width, float height, float scale, float s, float t, float s2, float t2, qhandle_t hShader) {Text_PaintChar347,9896
void Text_Paint(float x, float y, float scale, vec4_t color, const char *text, float adjust, int limit, int style) {Text_Paint355,10193
void Text_PaintWithCursor(float x, float y, float scale, vec4_t color, const char *text, int cursorPos, char cursor, int limit, int style) {Text_PaintWithCursor423,12375
static void Text_Paint_Limit(float *maxX, float x, float y, float scale, vec4_t color, const char* text, float adjust, int limit) {Text_Paint_Limit522,15538
void UI_ShowPostGame(qboolean newHigh) {UI_ShowPostGame578,17096
void UI_DrawCenteredPic(qhandle_t image, int w, int h) {UI_DrawCenteredPic590,17345
int frameCount = 0;frameCount597,17517
int startTime;startTime598,17537
#define	UI_FPS_FRAMES	UI_FPS_FRAMES600,17553
void _UI_Refresh( int realtime )_UI_Refresh601,17577
void _UI_Shutdown( void ) {_UI_Shutdown665,18897
char *defaultMenu = NULL;defaultMenu669,18959
char *GetMenuBuffer(const char *filename) {GetMenuBuffer671,18986
qboolean Asset_Parse(int handle) {Asset_Parse695,19576
void Font_Report( void ) {Font_Report846,23293
void UI_Report( void ) {UI_Report855,23514
void UI_ParseMenu(const char *menuFile) {UI_ParseMenu861,23581
qboolean Load_Menu(int handle) {Load_Menu908,24405
void UI_LoadMenus(const char *menuFile, qboolean reset) {UI_LoadMenus935,24813
void UI_Load(void) {UI_Load982,25762
static const char *handicapValues[] = {"None","95","90","85","80","75","70","65","60","55","50","45","40","35","30","25","20","15","10","5",NULL};handicapValues1008,26291
static int numHandicaps = sizeof(handicapValues) / sizeof(const char*);numHandicaps1010,26458
static void UI_DrawHandicap(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawHandicap1013,26538
static void UI_DrawClanName(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawClanName1022,26808
static void UI_SetCapFragLimits(qboolean uiVars) {UI_SetCapFragLimits1027,27003
static void UI_DrawGameType(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawGameType1044,27539
static void UI_DrawNetGameType(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawNetGameType1048,27742
static void UI_DrawJoinGameType(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawJoinGameType1056,28124
static int UI_TeamIndexFromName(const char *name) {UI_TeamIndexFromName1065,28475
static void UI_DrawClanLogo(rectDef_t *rect, float scale, vec4_t color) {UI_DrawClanLogo1080,28722
static void UI_DrawClanCinematic(rectDef_t *rect, float scale, vec4_t color) {UI_DrawClanCinematic1097,29434
static void UI_DrawPreviewCinematic(rectDef_t *rect, float scale, vec4_t color) {UI_DrawPreviewCinematic1125,30491
static void UI_DrawSkill(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawSkill1141,31009
static void UI_DrawTeamName(rectDef_t *rect, float scale, vec4_t color, qboolean blue, int textStyle) {UI_DrawTeamName1151,31285
static void UI_DrawTeamMember(rectDef_t *rect, float scale, vec4_t color, qboolean blue, int num, int textStyle) {UI_DrawTeamMember1159,31668
static void UI_DrawEffects(rectDef_t *rect, float scale, vec4_t color) {UI_DrawEffects1187,32390
static void UI_DrawMapPreview(rectDef_t *rect, float scale, vec4_t color, qboolean net) {UI_DrawMapPreview1192,32678
static void UI_DrawMapTimeToBeat(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawMapTimeToBeat1217,33470
static void UI_DrawMapCinematic(rectDef_t *rect, float scale, vec4_t color, qboolean net) {UI_DrawMapCinematic1234,33995
static qboolean updateModel = qtrue;updateModel1266,34996
static qboolean q3Model = qfalse;q3Model1267,35033
static void UI_DrawPlayerModel(rectDef_t *rect) {UI_DrawPlayerModel1269,35068
static void UI_DrawNetSource(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawNetSource1311,36256
static void UI_DrawNetMapPreview(rectDef_t *rect, float scale, vec4_t color) {UI_DrawNetMapPreview1318,36568
static void UI_DrawNetMapCinematic(rectDef_t *rect, float scale, vec4_t color) {UI_DrawNetMapCinematic1327,36924
static void UI_DrawNetFilter(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawNetFilter1344,37530
static void UI_DrawTier(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawTier1352,37889
static void UI_DrawTierMap(rectDef_t *rect, int index) {UI_DrawTierMap1361,38198
static const char *UI_EnglishMapName(const char *map) {UI_EnglishMapName1375,38657
static void UI_DrawTierMapName(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawTierMapName1385,38881
static void UI_DrawTierGameType(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawTierGameType1399,39298
static const char *UI_OpponentLeaderName(void) {UI_OpponentLeaderName1415,39751
static const char *UI_AIFromName(const char *name) {UI_AIFromName1421,39928
static const int UI_AIIndex(const char *name) {UI_AIIndex1432,40169
static const int UI_AIIndexFromName(const char *name) {UI_AIIndexFromName1444,40393
static const char *UI_OpponentLeaderHead(void) {UI_OpponentLeaderHead1457,40651
static const char *UI_OpponentLeaderModel(void) {UI_OpponentLeaderModel1464,40808
static qboolean updateOpponentModel = qtrue;updateOpponentModel1477,41093
static void UI_DrawOpponent(rectDef_t *rect) {UI_DrawOpponent1478,41138
static void UI_NextOpponent( void ) {UI_NextOpponent1507,42029
static void UI_PriorOpponent( void ) {UI_PriorOpponent1523,42402
static void	UI_DrawPlayerLogo(rectDef_t *rect, vec3_t color) {UI_DrawPlayerLogo1539,42782
static void	UI_DrawPlayerLogoMetal(rectDef_t *rect, vec3_t color) {UI_DrawPlayerLogoMetal1553,43424
static void	UI_DrawPlayerLogoName(rectDef_t *rect, vec3_t color) {UI_DrawPlayerLogoName1566,44076
static void	UI_DrawOpponentLogo(rectDef_t *rect, vec3_t color) {UI_DrawOpponentLogo1579,44726
static void	UI_DrawOpponentLogoMetal(rectDef_t *rect, vec3_t color) {UI_DrawOpponentLogoMetal1592,45373
static void	UI_DrawOpponentLogoName(rectDef_t *rect, vec3_t color) {UI_DrawOpponentLogoName1605,46031
static void UI_DrawAllMapsSelection(rectDef_t *rect, float scale, vec4_t color, int textStyle, qboolean net) {UI_DrawAllMapsSelection1618,46687
static void UI_DrawOpponentName(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawOpponentName1625,47008
static int UI_OwnerDrawWidth(int ownerDraw, float scale) {UI_OwnerDrawWidth1630,47211
static void UI_DrawBotName(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawBotName1746,50292
static void UI_DrawBotSkill(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawBotSkill1764,50786
static void UI_DrawRedBlue(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawRedBlue1770,51046
static void UI_DrawCrosshair(rectDef_t *rect, float scale, vec4_t color) {UI_DrawCrosshair1774,51240
static void UI_BuildPlayerList( void ) {UI_BuildPlayerList1788,51672
static void UI_DrawSelectedPlayer(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawSelectedPlayer1837,53254
static void UI_DrawServerRefreshDate(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawServerRefreshDate1845,53653
static void UI_DrawServerMOTD(rectDef_t *rect, float scale, vec4_t color) {UI_DrawServerMOTD1861,54435
static void UI_DrawKeyBindStatus(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawKeyBindStatus1920,56668
static void UI_DrawGLInfo(rectDef_t *rect, float scale, vec4_t color, int textStyle) {UI_DrawGLInfo1929,57076
static void UI_OwnerDraw(float x, float y, float w, float h, float text_x, float text_y, int ownerDraw, int ownerDrawFlags, int align, float special, float scale, vec4_t color, qhandle_t shader, int textStyle) {UI_OwnerDraw1978,58752
static qboolean UI_OwnerDrawVisible(int flags) {UI_OwnerDrawVisible2145,63439
static qboolean UI_Handicap_HandleKey(int flags, float *special, int key) {UI_Handicap_HandleKey2257,66672
static qboolean UI_Effects_HandleKey(int flags, float *special, int key) {UI_Effects_HandleKey2277,67134
static qboolean UI_ClanName_HandleKey(int flags, float *special, int key) {UI_ClanName_HandleKey2298,67641
static qboolean UI_GameType_HandleKey(int flags, float *special, int key, qboolean resetMap) {UI_GameType_HandleKey2325,68374
static qboolean UI_NetGameType_HandleKey(int flags, float *special, int key) {UI_NetGameType_HandleKey2364,69620
static qboolean UI_JoinGameType_HandleKey(int flags, float *special, int key) {UI_JoinGameType_HandleKey2389,70430
static qboolean UI_Skill_HandleKey(int flags, float *special, int key) {UI_Skill_HandleKey2413,71041
static qboolean UI_TeamName_HandleKey(int flags, float *special, int key, qboolean blue) {UI_TeamName_HandleKey2435,71492
static qboolean UI_TeamMember_HandleKey(int flags, float *special, int key, qboolean blue, int num) {UI_TeamMember_HandleKey2459,72067
static qboolean UI_NetSource_HandleKey(int flags, float *special, int key) {UI_NetSource_HandleKey2493,72890
static qboolean UI_NetFilter_HandleKey(int flags, float *special, int key) {UI_NetFilter_HandleKey2518,73552
static qboolean UI_OpponentName_HandleKey(int flags, float *special, int key) {UI_OpponentName_HandleKey2538,74110
static qboolean UI_BotName_HandleKey(int flags, float *special, int key) {UI_BotName_HandleKey2550,74400
static qboolean UI_BotSkill_HandleKey(int flags, float *special, int key) {UI_BotSkill_HandleKey2580,75074
static qboolean UI_RedBlue_HandleKey(int flags, float *special, int key) {UI_RedBlue_HandleKey2597,75516
static qboolean UI_Crosshair_HandleKey(int flags, float *special, int key) {UI_Crosshair_HandleKey2605,75735
static qboolean UI_SelectedPlayer_HandleKey(int flags, float *special, int key) {UI_SelectedPlayer_HandleKey2626,76289
static qboolean UI_OwnerDrawHandleKey(int ownerDraw, int flags, float *special, int key) {UI_OwnerDrawHandleKey2659,77070
static float UI_GetValue(int ownerDraw) {UI_GetValue2734,79171
static int QDECL UI_ServersQsortCompare( const void *arg1, const void *arg2 ) {UI_ServersQsortCompare2743,79293
void UI_ServersSort(int column, qboolean force) {UI_ServersSort2753,79574
static void UI_LoadMods( void ) {UI_LoadMods2810,81445
static void UI_LoadTeams( void ) {UI_LoadTeams2841,82097
static void UI_LoadMovies( void ) {UI_LoadMovies2865,82473
static void UI_LoadDemos( void ) {UI_LoadDemos2897,83096
static qboolean UI_SetNextMap(int actual, int index) {UI_SetNextMap2928,83883
static void UI_StartSkirmish(qboolean next) {UI_StartSkirmish2940,84144
static void UI_Update(const char *name) {UI_Update3030,87759
static void UI_RunMenuScript(char **args) {UI_RunMenuScript3151,92130
static void UI_GetTeamColor(vec4_t *color) {UI_GetTeamColor3534,108206
static int UI_MapCountByGameType(qboolean singlePlayer) {UI_MapCountByGameType3542,108320
qboolean UI_hasSkinForBase(const char *base, const char *team) {UI_hasSkinForBase3568,108925
static int UI_HeadCountByTeam(void) {UI_HeadCountByTeam3589,109422
static void UI_InsertServerIntoDisplayList(int num, int position) {UI_InsertServerIntoDisplayList3648,111058
static void UI_RemoveServerFromDisplayList(int num) {UI_RemoveServerFromDisplayList3667,111555
static void UI_BinaryServerInsertion(int num) {UI_BinaryServerInsertion3686,112027
static void UI_BuildServerDisplayList(qboolean force) {UI_BuildServerDisplayList3725,112809
	char *name, *altName;name3842,116456
	char *name, *altName;altName3842,116456
} serverStatusCvar_t;serverStatusCvar_t3843,116479
serverStatusCvar_t serverStatusCvars[] = {serverStatusCvars3845,116502
static void UI_SortServerStatusInfo( serverStatusInfo_t *info ) {UI_SortServerStatusInfo3863,116831
static int UI_GetServerStatusInfo( const char *serverAddress, serverStatusInfo_t *info ) {UI_GetServerStatusInfo3899,117748
static char *stristr(char *str, char *charset) {stristr3997,120192
static void UI_BuildFindPlayerList(qboolean force) {UI_BuildFindPlayerList4015,120493
static void UI_BuildServerStatus(qboolean force) {UI_BuildServerStatus4151,126267
static int UI_FeederCount(float feederID) {UI_FeederCount4184,127202
static const char *UI_SelectedMap(int index, int *actual) {UI_SelectedMap4219,128432
static const char *UI_SelectedHead(int index, int *actual) {UI_SelectedHead4236,128724
static int UI_GetIndexFromSelection(int actual) {UI_GetIndexFromSelection4253,129032
static void UI_UpdatePendingPings( void ) { UI_UpdatePendingPings4267,129248
static const char *UI_FeederItemText(float feederID, int index, int column, qhandle_t *handle) {UI_FeederItemText4274,129449
static qhandle_t UI_FeederItemImage(float feederID, int index) {UI_FeederItemImage4386,133170
static void UI_FeederSelection(float feederID, int index) {UI_FeederSelection4415,134143
static qboolean Team_Parse(char **p) {Team_Parse4497,137840
static qboolean Character_Parse(char **p) {Character_Parse4557,139568
static qboolean Alias_Parse(char **p) {Alias_Parse4614,141236
static void UI_ParseTeamInfo(const char *teamFile) {UI_ParseTeamInfo4663,142475
static qboolean GameType_Parse(char **p, qboolean join) {GameType_Parse4708,143170
static qboolean MapList_Parse(char **p) {MapList_Parse4769,144510
static void UI_ParseGameInfo(const char *teamFile) {UI_ParseGameInfo4833,146299
static void UI_Pause(qboolean b) {UI_Pause4882,147031
static int UI_OwnerDraw_Width(int ownerDraw) {UI_OwnerDraw_Width4896,147410
static int UI_PlayCinematic(const char *name, float x, float y, float w, float h) {UI_PlayCinematic4901,147479
static void UI_StopCinematic(int handle) {UI_StopCinematic4905,147642
static void UI_DrawCinematic(int handle, float x, float y, float w, float h) {UI_DrawCinematic4932,148572
static void UI_RunCinematicFrame(int handle) {UI_RunCinematicFrame4937,148730
static void UI_BuildQ3Model_List( void )UI_BuildQ3Model_List4948,148879
void _UI_Init( qboolean inGameLoad ) {_UI_Init5019,150749
void _UI_KeyEvent( int key, qboolean down ) {_UI_KeyEvent5168,155658
void _UI_MouseEvent( int dx, int dy )_UI_MouseEvent5195,156241
void UI_LoadNonIngame( void ) {UI_LoadNonIngame5218,156878
void _UI_SetActiveMenu( uiMenuCommand_t menu ) {_UI_SetActiveMenu5227,157114
qboolean _UI_IsFullscreen( void ) {_UI_IsFullscreen5299,159228
static connstate_t	lastConnState;lastConnState5305,159307
static char			lastLoadingText[MAX_INFO_VALUE];lastLoadingText5306,159341
static void UI_ReadableSize ( char *buf, int bufsize, int value )UI_ReadableSize5308,159389
static void UI_PrintTime ( char *buf, int bufsize, int time ) {UI_PrintTime5326,160088
void Text_PaintCenter(float x, float y, float scale, vec4_t color, const char *text, float adjust) {Text_PaintCenter5338,160487
void Text_PaintCenter_AutoWrapped(float x, float y, float xmax, float ystep, float scale, vec4_t color, const char *str, float adjust) {Text_PaintCenter_AutoWrapped5343,160714
static void UI_DisplayDownloadInfo( const char *downloadName, float centerPoint, float yStart, float scale ) {UI_DisplayDownloadInfo5399,161962
void UI_DrawConnectScreen( qboolean overlay ) {UI_DrawConnectScreen5477,164893
	vmCvar_t	*vmCvar;vmCvar5571,167280
	char		*cvarName;cvarName5572,167299
	char		*defaultString;defaultString5573,167317
	int			cvarFlags;cvarFlags5574,167340
} cvarTable_t;cvarTable_t5575,167358
vmCvar_t	ui_ffa_fraglimit;ui_ffa_fraglimit5577,167374
vmCvar_t	ui_ffa_timelimit;ui_ffa_timelimit5578,167401
vmCvar_t	ui_tourney_fraglimit;ui_tourney_fraglimit5580,167429
vmCvar_t	ui_tourney_timelimit;ui_tourney_timelimit5581,167460
vmCvar_t	ui_team_fraglimit;ui_team_fraglimit5583,167492
vmCvar_t	ui_team_timelimit;ui_team_timelimit5584,167520
vmCvar_t	ui_team_friendly;ui_team_friendly5585,167548
vmCvar_t	ui_ctf_capturelimit;ui_ctf_capturelimit5587,167576
vmCvar_t	ui_ctf_timelimit;ui_ctf_timelimit5588,167606
vmCvar_t	ui_ctf_friendly;ui_ctf_friendly5589,167633
vmCvar_t	ui_arenasFile;ui_arenasFile5591,167660
vmCvar_t	ui_botsFile;ui_botsFile5592,167684
vmCvar_t	ui_spScores1;ui_spScores15593,167706
vmCvar_t	ui_spScores2;ui_spScores25594,167729
vmCvar_t	ui_spScores3;ui_spScores35595,167752
vmCvar_t	ui_spScores4;ui_spScores45596,167775
vmCvar_t	ui_spScores5;ui_spScores55597,167798
vmCvar_t	ui_spAwards;ui_spAwards5598,167821
vmCvar_t	ui_spVideos;ui_spVideos5599,167843
vmCvar_t	ui_spSkill;ui_spSkill5600,167865
vmCvar_t	ui_spSelection;ui_spSelection5602,167887
vmCvar_t	ui_browserMaster;ui_browserMaster5604,167913
vmCvar_t	ui_browserGameType;ui_browserGameType5605,167940
vmCvar_t	ui_browserSortKey;ui_browserSortKey5606,167969
vmCvar_t	ui_browserShowFull;ui_browserShowFull5607,167997
vmCvar_t	ui_browserShowEmpty;ui_browserShowEmpty5608,168026
vmCvar_t	ui_brassTime;ui_brassTime5610,168057
vmCvar_t	ui_drawCrosshair;ui_drawCrosshair5611,168080
vmCvar_t	ui_drawCrosshairNames;ui_drawCrosshairNames5612,168107
vmCvar_t	ui_marks;ui_marks5613,168139
vmCvar_t	ui_server1;ui_server15615,168159
vmCvar_t	ui_server2;ui_server25616,168180
vmCvar_t	ui_server3;ui_server35617,168201
vmCvar_t	ui_server4;ui_server45618,168222
vmCvar_t	ui_server5;ui_server55619,168243
vmCvar_t	ui_server6;ui_server65620,168264
vmCvar_t	ui_server7;ui_server75621,168285
vmCvar_t	ui_server8;ui_server85622,168306
vmCvar_t	ui_server9;ui_server95623,168327
vmCvar_t	ui_server10;ui_server105624,168348
vmCvar_t	ui_server11;ui_server115625,168370
vmCvar_t	ui_server12;ui_server125626,168392
vmCvar_t	ui_server13;ui_server135627,168414
vmCvar_t	ui_server14;ui_server145628,168436
vmCvar_t	ui_server15;ui_server155629,168458
vmCvar_t	ui_server16;ui_server165630,168480
vmCvar_t	ui_cdkeychecked;ui_cdkeychecked5632,168503
vmCvar_t	ui_redteam;ui_redteam5634,168530
vmCvar_t	ui_redteam1;ui_redteam15635,168551
vmCvar_t	ui_redteam2;ui_redteam25636,168573
vmCvar_t	ui_redteam3;ui_redteam35637,168595
vmCvar_t	ui_redteam4;ui_redteam45638,168617
vmCvar_t	ui_redteam5;ui_redteam55639,168639
vmCvar_t	ui_blueteam;ui_blueteam5640,168661
vmCvar_t	ui_blueteam1;ui_blueteam15641,168683
vmCvar_t	ui_blueteam2;ui_blueteam25642,168706
vmCvar_t	ui_blueteam3;ui_blueteam35643,168729
vmCvar_t	ui_blueteam4;ui_blueteam45644,168752
vmCvar_t	ui_blueteam5;ui_blueteam55645,168775
vmCvar_t	ui_teamName;ui_teamName5646,168798
vmCvar_t	ui_dedicated;ui_dedicated5647,168820
vmCvar_t	ui_gameType;ui_gameType5648,168843
vmCvar_t	ui_netGameType;ui_netGameType5649,168865
vmCvar_t	ui_actualNetGameType;ui_actualNetGameType5650,168890
vmCvar_t	ui_joinGameType;ui_joinGameType5651,168921
vmCvar_t	ui_netSource;ui_netSource5652,168947
vmCvar_t	ui_serverFilterType;ui_serverFilterType5653,168970
vmCvar_t	ui_opponentName;ui_opponentName5654,169000
vmCvar_t	ui_menuFiles;ui_menuFiles5655,169026
vmCvar_t	ui_currentTier;ui_currentTier5656,169049
vmCvar_t	ui_currentMap;ui_currentMap5657,169074
vmCvar_t	ui_currentNetMap;ui_currentNetMap5658,169098
vmCvar_t	ui_mapIndex;ui_mapIndex5659,169125
vmCvar_t	ui_currentOpponent;ui_currentOpponent5660,169147
vmCvar_t	ui_selectedPlayer;ui_selectedPlayer5661,169176
vmCvar_t	ui_selectedPlayerName;ui_selectedPlayerName5662,169204
vmCvar_t	ui_lastServerRefresh_0;ui_lastServerRefresh_05663,169236
vmCvar_t	ui_lastServerRefresh_1;ui_lastServerRefresh_15664,169269
vmCvar_t	ui_lastServerRefresh_2;ui_lastServerRefresh_25665,169302
vmCvar_t	ui_lastServerRefresh_3;ui_lastServerRefresh_35666,169335
vmCvar_t	ui_singlePlayerActive;ui_singlePlayerActive5667,169368
vmCvar_t	ui_scoreAccuracy;ui_scoreAccuracy5668,169400
vmCvar_t	ui_scoreImpressives;ui_scoreImpressives5669,169427
vmCvar_t	ui_scoreExcellents;ui_scoreExcellents5670,169457
vmCvar_t	ui_scoreCaptures;ui_scoreCaptures5671,169486
vmCvar_t	ui_scoreDefends;ui_scoreDefends5672,169513
vmCvar_t	ui_scoreAssists;ui_scoreAssists5673,169539
vmCvar_t	ui_scoreGauntlets;ui_scoreGauntlets5674,169565
vmCvar_t	ui_scoreScore;ui_scoreScore5675,169593
vmCvar_t	ui_scorePerfect;ui_scorePerfect5676,169617
vmCvar_t	ui_scoreTeam;ui_scoreTeam5677,169643
vmCvar_t	ui_scoreBase;ui_scoreBase5678,169666
vmCvar_t	ui_scoreTimeBonus;ui_scoreTimeBonus5679,169689
vmCvar_t	ui_scoreSkillBonus;ui_scoreSkillBonus5680,169717
vmCvar_t	ui_scoreShutoutBonus;ui_scoreShutoutBonus5681,169746
vmCvar_t	ui_scoreTime;ui_scoreTime5682,169777
vmCvar_t	ui_captureLimit;ui_captureLimit5683,169800
vmCvar_t	ui_fragLimit;ui_fragLimit5684,169826
vmCvar_t	ui_smallFont;ui_smallFont5685,169849
vmCvar_t	ui_bigFont;ui_bigFont5686,169872
vmCvar_t	ui_findPlayer;ui_findPlayer5687,169893
vmCvar_t	ui_Q3Model;ui_Q3Model5688,169917
vmCvar_t	ui_hudFiles;ui_hudFiles5689,169938
vmCvar_t	ui_recordSPDemo;ui_recordSPDemo5690,169960
vmCvar_t	ui_realCaptureLimit;ui_realCaptureLimit5691,169986
vmCvar_t	ui_realWarmUp;ui_realWarmUp5692,170016
vmCvar_t	ui_serverStatusTimeOut;ui_serverStatusTimeOut5693,170040
static cvarTable_t		cvarTable[] = {cvarTable5695,170074
static int		cvarTableSize = sizeof(cvarTable) / sizeof(cvarTable[0]);cvarTableSize5817,176627
void UI_RegisterCvars( void ) {UI_RegisterCvars5825,176758
void UI_UpdateCvars( void ) {UI_UpdateCvars5839,177031
static void UI_StopServerRefresh( void )UI_StopServerRefresh5854,177263
static int ArenaServers_MaxPing( void ) {ArenaServers_MaxPing5881,177996
static void UI_DoServerRefresh( void )UI_DoServerRefresh5897,178242
static void UI_StartServerRefresh(qboolean full)UI_StartServerRefresh5940,179140

ui/ui_shared.c,25599
#define SCROLL_TIME_START	SCROLL_TIME_START27,1034
#define SCROLL_TIME_ADJUST	SCROLL_TIME_ADJUST28,1068
#define SCROLL_TIME_ADJUSTOFFSET	SCROLL_TIME_ADJUSTOFFSET29,1102
#define SCROLL_TIME_FLOOR	SCROLL_TIME_FLOOR30,1138
typedef struct scrollInfo_s {scrollInfo_s32,1172
	int nextScrollTime;nextScrollTime33,1202
	int nextAdjustTime;nextAdjustTime34,1223
	int adjustValue;adjustValue35,1244
	int scrollKey;scrollKey36,1262
	float xStart;xStart37,1278
	float yStart;yStart38,1293
	itemDef_t *item;item39,1308
	qboolean scrollDir;scrollDir40,1326
} scrollInfo_t;scrollInfo_t41,1347
static scrollInfo_t scrollInfo;scrollInfo43,1364
static void (*captureFunc) (void *p) = 0;captureFunc45,1397
static void *captureData = NULL;captureData46,1439
static itemDef_t *itemCapture = NULL;   // item that has the mouse captured ( if any )itemCapture47,1472
displayContextDef_t *DC = NULL;DC49,1560
static qboolean g_waitingForKey = qfalse;g_waitingForKey51,1593
static qboolean g_editingField = qfalse;g_editingField52,1635
static itemDef_t *g_bindItem = NULL;g_bindItem54,1677
static itemDef_t *g_editItem = NULL;g_editItem55,1714
menuDef_t Menus[MAX_MENUS];      // defined menusMenus57,1752
int menuCount = 0;               // how manymenuCount58,1802
menuDef_t *menuStack[MAX_OPEN_MENUS];menuStack60,1848
int openMenuCount = 0;openMenuCount61,1886
static qboolean debugMode = qfalse;debugMode63,1910
#define DOUBLE_CLICK_DELAY DOUBLE_CLICK_DELAY65,1947
static int lastListBoxClickTime = 0;lastListBoxClickTime66,1978
#define MEM_POOL_SIZE MEM_POOL_SIZE78,2439
#define MEM_POOL_SIZE MEM_POOL_SIZE80,2479
static char		memoryPool[MEM_POOL_SIZE];memoryPool83,2522
static int		allocPoint, outOfMemory;allocPoint84,2562
static int		allocPoint, outOfMemory;outOfMemory84,2562
void *UI_Alloc( int size ) {UI_Alloc92,2654
void UI_InitMemory( void ) {UI_InitMemory116,3059
qboolean UI_OutOfMemory( void ) {UI_OutOfMemory121,3131
#define HASH_TABLE_SIZE HASH_TABLE_SIZE129,3193
static unsigned hashForString(const char *str) {hashForString135,3297
typedef struct stringDef_s {stringDef_s151,3552
	struct stringDef_s *next;next152,3581
	const char *str;str153,3608
} stringDef_t;stringDef_t154,3626
static int strPoolIndex = 0;strPoolIndex156,3642
static char strPool[STRING_POOL_SIZE];strPool157,3671
static int strHandleCount = 0;strHandleCount159,3711
static stringDef_t *strHandle[HASH_TABLE_SIZE];strHandle160,3742
const char *String_Alloc(const char *p) {String_Alloc163,3792
void String_Report(void) {String_Report213,4621
void String_Init(void) {String_Init232,5102
void PC_SourceWarning(int handle, char *format, ...) {PC_SourceWarning254,5469
void PC_SourceError(int handle, char *format, ...) {PC_SourceError276,5931
void LerpColor(vec4_t a, vec4_t b, vec4_t c, float t)LerpColor298,6381
qboolean Float_Parse(char **p, float *f) {Float_Parse318,6662
qboolean PC_Float_Parse(int handle, float *f) {PC_Float_Parse334,6910
qboolean Color_Parse(char **p, vec4_t *c) {Color_Parse361,7443
qboolean PC_Color_Parse(int handle, vec4_t *c) {PC_Color_Parse379,7677
qboolean Int_Parse(char **p, int *i) {Int_Parse397,7919
qboolean PC_Int_Parse(int handle, int *i) {PC_Int_Parse414,8162
qboolean Rect_Parse(char **p, rectDef_t *r) {Rect_Parse440,8670
qboolean PC_Rect_Parse(int handle, rectDef_t *r) {PC_Rect_Parse458,8954
qboolean String_Parse(char **p, const char **out) {String_Parse476,9274
qboolean PC_String_Parse(int handle, const char **out) {PC_String_Parse492,9534
qboolean PC_Script_Parse(int handle, const char **out) {PC_Script_Parse507,9788
void Init_Display(displayContextDef_t *dc) {Init_Display550,10765
void GradientBar_Paint(rectDef_t *rect, vec4_t color) {GradientBar_Paint558,10854
void Window_Init(Window *w) {Window_Init574,11195
void Fade(int *flags, float *f, float clamp, int *nextTime, int offsetTime, qboolean bFlags, float fadeAmount) {Fade581,11382
void Window_Paint(Window *w, float fadeAmount, float fadeClamp, float fadeCycle) {Window_Paint605,11998
void Item_SetScreenCoords(itemDef_t *item, float x, float y) {Item_SetScreenCoords704,15179
void Item_UpdatePosition(itemDef_t *item) {Item_UpdatePosition726,15739
void Menu_UpdatePosition(menuDef_t *menu) {Menu_UpdatePosition749,16119
void Menu_PostParse(menuDef_t *menu) {Menu_PostParse769,16486
itemDef_t *Menu_ClearFocus(menuDef_t *menu) {Menu_ClearFocus782,16730
qboolean IsVisible(int flags) {IsVisible803,17177
qboolean Rect_ContainsPoint(rectDef_t *rect, float x, float y) {Rect_ContainsPoint807,17278
int Menu_ItemsMatchingGroup(menuDef_t *menu, const char *name) {Menu_ItemsMatchingGroup816,17495
itemDef_t *Menu_GetMatchingItemByNumber(menuDef_t *menu, int index, const char *name) {Menu_GetMatchingItemByNumber827,17822
void Script_SetColor(itemDef_t *item, char **args) {Script_SetColor843,18240
void Script_SetAsset(itemDef_t *item, char **args) {Script_SetAsset872,19022
void Script_SetBackground(itemDef_t *item, char **args) {Script_SetBackground882,19246
itemDef_t *Menu_FindItemByName(menuDef_t *menu, const char *p) {Menu_FindItemByName893,19466
void Script_SetTeamColor(itemDef_t *item, char **args) {Script_SetTeamColor908,19755
void Script_SetItemColor(itemDef_t *item, char **args) {Script_SetItemColor919,19984
void Menu_ShowItemByName(menuDef_t *menu, const char *p, qboolean bShow) {Menu_ShowItemByName959,21053
void Menu_FadeItemByName(menuDef_t *menu, const char *p, qboolean fadeOut) {Menu_FadeItemByName980,21605
menuDef_t *Menus_FindByName(const char *p) {Menus_FindByName998,22154
void Menus_ShowByName(const char *p) {Menus_ShowByName1008,22348
void Menus_OpenByName(const char *p) {Menus_OpenByName1015,22470
static void Menu_RunCloseScript(menuDef_t *menu) {Menu_RunCloseScript1019,22539
void Menus_CloseByName(const char *p) {Menus_CloseByName1027,22749
void Menus_CloseAll(void) {Menus_CloseAll1035,22949
void Script_Show(itemDef_t *item, char **args) {Script_Show1044,23128
void Script_Hide(itemDef_t *item, char **args) {Script_Hide1051,23291
void Script_FadeIn(itemDef_t *item, char **args) {Script_FadeIn1058,23455
void Script_FadeOut(itemDef_t *item, char **args) {Script_FadeOut1065,23621
void Script_Open(itemDef_t *item, char **args) {Script_Open1074,23789
void Script_ConditionalOpen(itemDef_t *item, char **args) {Script_ConditionalOpen1081,23928
void Script_Close(itemDef_t *item, char **args) {Script_Close1097,24299
void Menu_TransitionItemByName(menuDef_t *menu, const char *p, rectDef_t rectFrom, rectDef_t rectTo, int time, float amt) {Menu_TransitionItemByName1104,24440
void Script_Transition(itemDef_t *item, char **args) {Script_Transition1125,25303
void Menu_OrbitItemByName(menuDef_t *menu, const char *p, float x, float y, float cx, float cy, int time) {Menu_OrbitItemByName1139,25685
void Script_Orbit(itemDef_t *item, char **args) {Script_Orbit1158,26279
void Script_SetFocus(itemDef_t *item, char **args) {Script_SetFocus1172,26640
void Script_SetPlayerModel(itemDef_t *item, char **args) {Script_SetPlayerModel1191,27267
void Script_SetPlayerHead(itemDef_t *item, char **args) {Script_SetPlayerHead1198,27425
void Script_SetCvar(itemDef_t *item, char **args) {Script_SetCvar1205,27586
void Script_Exec(itemDef_t *item, char **args) {Script_Exec1213,27759
void Script_Play(itemDef_t *item, char **args) {Script_Play1220,27915
void Script_playLooped(itemDef_t *item, char **args) {Script_playLooped1227,28094
commandDef_t commandList[] =commandList1236,28274
int scriptCommandCount = sizeof(commandList) / sizeof(commandDef_t);scriptCommandCount1261,29691
void Item_RunScript(itemDef_t *item, const char *s) {Item_RunScript1264,29762
qboolean Item_EnableShowViaCvar(itemDef_t *item, int flag) {Item_EnableShowViaCvar1300,30590
qboolean Item_SetFocus(itemDef_t *item, float x, float y) {Item_SetFocus1340,31610
int Item_ListBox_MaxScroll(itemDef_t *item) {Item_ListBox_MaxScroll1408,33288
int Item_ListBox_ThumbPosition(itemDef_t *item) {Item_ListBox_ThumbPosition1425,33689
int Item_ListBox_ThumbDrawPosition(itemDef_t *item) {Item_ListBox_ThumbDrawPosition1452,34384
float Item_Slider_ThumbPosition(itemDef_t *item) {Item_Slider_ThumbPosition1482,35253
int Item_Slider_OverSlider(itemDef_t *item, float x, float y) {Item_Slider_OverSlider1515,35967
int Item_ListBox_OverLB(itemDef_t *item, float x, float y) {Item_ListBox_OverLB1529,36281
void Item_ListBox_MouseEnter(itemDef_t *item, float x, float y) Item_ListBox_MouseEnter1597,38234
void Item_MouseEnter(itemDef_t *item, float x, float y) {Item_MouseEnter1637,39821
void Item_MouseLeave(itemDef_t *item) {Item_MouseLeave1682,41040
itemDef_t *Menu_HitTest(menuDef_t *menu, float x, float y) {Menu_HitTest1693,41376
void Item_SetMouseOver(itemDef_t *item, qboolean focus) {Item_SetMouseOver1703,41611
qboolean Item_OwnerDraw_HandleKey(itemDef_t *item, int key) {Item_OwnerDraw_HandleKey1714,41820
qboolean Item_ListBox_HandleKey(itemDef_t *item, int key, qboolean down, qboolean force) {Item_ListBox_HandleKey1721,42055
qboolean Item_YesNo_HandleKey(itemDef_t *item, int key) {Item_YesNo_HandleKey1928,48077
int Item_Multi_CountSettings(itemDef_t *item) {Item_Multi_CountSettings1941,48464
int Item_Multi_FindCvarByValue(itemDef_t *item) {Item_Multi_FindCvarByValue1949,48633
const char *Item_Multi_Setting(itemDef_t *item) {Item_Multi_Setting1975,49186
qboolean Item_Multi_HandleKey(itemDef_t *item, int key) {Item_Multi_HandleKey2001,49779
qboolean Item_TextField_HandleKey(itemDef_t *item, int key) {Item_TextField_HandleKey2029,50665
static void Scroll_ListBox_AutoFunc(void *p) {Scroll_ListBox_AutoFunc2173,54323
static void Scroll_ListBox_ThumbFunc(void *p) {Scroll_ListBox_ThumbFunc2191,54963
static void Scroll_Slider_ThumbFunc(void *p) {Scroll_Slider_ThumbFunc2252,56786
void Item_StartCapture(itemDef_t *item, int key) {Item_StartCapture2277,57373
void Item_StopCapture(itemDef_t *item) {Item_StopCapture2324,58777
qboolean Item_Slider_HandleKey(itemDef_t *item, int key, qboolean down) {Item_Slider_HandleKey2328,58822
qboolean Item_HandleKey(itemDef_t *item, int key, qboolean down) {Item_HandleKey2369,60154
void Item_Action(itemDef_t *item) {Item_Action2433,61618
itemDef_t *Menu_SetPrevCursorItem(menuDef_t *menu) {Menu_SetPrevCursorItem2439,61715
itemDef_t *Menu_SetNextCursorItem(menuDef_t *menu) {Menu_SetNextCursorItem2466,62430
static void Window_CloseCinematic(windowDef_t *window) {Window_CloseCinematic2495,63141
static void Menu_CloseCinematics(menuDef_t *menu) {Menu_CloseCinematics2502,63344
static void Display_CloseCinematics( void ) {Display_CloseCinematics2515,63682
void  Menus_Activate(menuDef_t *menu) {Menus_Activate2522,63812
int Display_VisibleMenuCount( void ) {Display_VisibleMenuCount2539,64250
void Menus_HandleOOBClick(menuDef_t *menu, int key, qboolean down) {Menus_HandleOOBClick2550,64454
static rectDef_t *Item_CorrectedTextRect(itemDef_t *item) {Item_CorrectedTextRect2580,65428
void Menu_HandleKey(menuDef_t *menu, int key, qboolean down) {Menu_HandleKey2592,65650
void ToWindowCoords(float *x, float *y, windowDef_t *window) {ToWindowCoords2752,69114
void Rect_ToWindowCoords(rectDef_t *rect, windowDef_t *window) {Rect_ToWindowCoords2761,69314
void Item_SetTextExtents(itemDef_t *item, int *width, int *height, const char *text) {Item_SetTextExtents2765,69427
void Item_TextColor(itemDef_t *item, vec4_t *newColor) {Item_TextColor2803,70906
void Item_Text_AutoWrapped_Paint(itemDef_t *item) {Item_Text_AutoWrapped_Paint2833,72274
void Item_Text_Wrapped_Paint(itemDef_t *item) {Item_Text_Wrapped_Paint2906,74009
void Item_Text_Paint(itemDef_t *item) {Item_Text_Paint2951,74962
void Item_TextField_Paint(itemDef_t *item) {Item_TextField_Paint3026,77789
void Item_YesNo_Paint(itemDef_t *item) {Item_YesNo_Paint3063,79152
void Item_Multi_Paint(itemDef_t *item) {Item_Multi_Paint3088,80085
	char	*command;command3115,80976
	int		id;id3116,80992
	int		defaultbind1;defaultbind13117,81002
	int		defaultbind2;defaultbind23118,81022
	int		bind1;bind13119,81042
	int		bind2;bind23120,81055
} bind_t;bind_t3121,81068
	char*	name;name3125,81096
	float	defaultvalue;defaultvalue3126,81109
	float	value;	value3127,81130
} configcvar_t;configcvar_t3128,81145
static bind_t g_bindings[] = g_bindings3131,81163
static const int g_bindCount = sizeof(g_bindings) / sizeof(bind_t);g_bindCount3196,83619
static configcvar_t g_configcvars[] =g_configcvars3199,83708
static void Controls_GetKeyAssignment (char *command, int *twokeys)Controls_GetKeyAssignment3218,84072
void Controls_GetConfig( void )Controls_GetConfig3248,84504
void Controls_SetConfig(qboolean restart)Controls_SetConfig3278,85631
void Controls_SetDefaults( void )Controls_SetDefaults3316,86864
int BindingIDFromName(const char *name) {BindingIDFromName3337,87743
char g_nameBind1[32];g_nameBind13348,87918
char g_nameBind2[32];g_nameBind23349,87940
void BindingFromName(const char *cvar) {BindingFromName3351,87963
void Item_Slider_Paint(itemDef_t *item) {Item_Slider_Paint3379,88568
void Item_Bind_Paint(itemDef_t *item) {Item_Bind_Paint3411,89591
qboolean Display_KeyBindPending(void) {Display_KeyBindPending3449,90863
qboolean Item_Bind_HandleKey(itemDef_t *item, int key, qboolean down) {Item_Bind_HandleKey3453,90931
void AdjustFrom640(float *x, float *y, float *w, float *h) {AdjustFrom6403551,92776
void Item_Model_Paint(itemDef_t *item) {Item_Model_Paint3559,92951
void Item_Image_Paint(itemDef_t *item) {Item_Image_Paint3642,95052
void Item_ListBox_Paint(itemDef_t *item) {Item_ListBox_Paint3649,95255
void Item_OwnerDraw_Paint(itemDef_t *item) {Item_OwnerDraw_Paint3802,101118
void Item_Paint(itemDef_t *item) {Item_Paint3860,103974
void Menu_Init(menuDef_t *menu) {Menu_Init4054,109499
itemDef_t *Menu_GetFocusedItem(menuDef_t *menu) {Menu_GetFocusedItem4063,109751
menuDef_t *Menu_GetFocused(void) {Menu_GetFocused4075,109995
void Menu_ScrollFeeder(menuDef_t *menu, int feeder, qboolean down) {Menu_ScrollFeeder4085,110220
void Menu_SetFeederSelection(menuDef_t *menu, int feeder, int index, const char *name) {Menu_SetFeederSelection4099,110520
qboolean Menus_AnyFullScreenVisible(void) {Menus_AnyFullScreenVisible4125,111142
menuDef_t *Menus_ActivateByName(const char *p) {Menus_ActivateByName4135,111351
void Item_Init(itemDef_t *item) {Item_Init4155,111819
void Menu_HandleMouseMove(menuDef_t *menu, float x, float y) {Menu_HandleMouseMove4161,111948
void Menu_Paint(menuDef_t *menu, qboolean forcePaint) {Menu_Paint4234,113909
void Item_ValidateTypeData(itemDef_t *item) {Item_ValidateTypeData4283,115240
#define KEYWORDHASH_SIZE	KEYWORDHASH_SIZE4312,116223
typedef struct keywordHash_skeywordHash_s4314,116253
	char *keyword;keyword4316,116284
	qboolean (*func)(itemDef_t *item, int handle);func4317,116300
	struct keywordHash_s *next;next4318,116348
} keywordHash_t;keywordHash_t4319,116377
int KeywordHash_Key(char *keyword) {KeywordHash_Key4321,116395
void KeywordHash_Add(keywordHash_t *table[], keywordHash_t *key) {KeywordHash_Add4335,116735
keywordHash_t *KeywordHash_Find(keywordHash_t *table[], char *keyword)KeywordHash_Find4348,116956
qboolean ItemParse_name( itemDef_t *item, int handle ) {ItemParse_name4368,117306
qboolean ItemParse_focusSound( itemDef_t *item, int handle ) {ItemParse_focusSound4376,117471
qboolean ItemParse_text( itemDef_t *item, int handle ) {ItemParse_text4387,117702
qboolean ItemParse_group( itemDef_t *item, int handle ) {ItemParse_group4395,117861
qboolean ItemParse_asset_model( itemDef_t *item, int handle ) {ItemParse_asset_model4403,118035
qboolean ItemParse_asset_shader( itemDef_t *item, int handle ) {ItemParse_asset_shader4418,118389
qboolean ItemParse_model_origin( itemDef_t *item, int handle ) {ItemParse_model_origin4429,118641
qboolean ItemParse_model_fovx( itemDef_t *item, int handle ) {ItemParse_model_fovx4445,119035
qboolean ItemParse_model_fovy( itemDef_t *item, int handle ) {ItemParse_model_fovy4457,119304
qboolean ItemParse_model_rotation( itemDef_t *item, int handle ) {ItemParse_model_rotation4469,119578
qboolean ItemParse_model_angle( itemDef_t *item, int handle ) {ItemParse_model_angle4481,119859
qboolean ItemParse_rect( itemDef_t *item, int handle ) {ItemParse_rect4493,120124
qboolean ItemParse_style( itemDef_t *item, int handle ) {ItemParse_style4501,120295
qboolean ItemParse_decoration( itemDef_t *item, int handle ) {ItemParse_decoration4509,120456
qboolean ItemParse_notselectable( itemDef_t *item, int handle ) {ItemParse_notselectable4515,120596
qboolean ItemParse_wrapped( itemDef_t *item, int handle ) {ItemParse_wrapped4526,120884
qboolean ItemParse_autowrapped( itemDef_t *item, int handle ) {ItemParse_autowrapped4532,121017
qboolean ItemParse_horizontalscroll( itemDef_t *item, int handle ) {ItemParse_horizontalscroll4539,121163
qboolean ItemParse_type( itemDef_t *item, int handle ) {ItemParse_type4545,121310
qboolean ItemParse_elementwidth( itemDef_t *item, int handle ) {ItemParse_elementwidth4555,121558
qboolean ItemParse_elementheight( itemDef_t *item, int handle ) {ItemParse_elementheight4568,121895
qboolean ItemParse_feeder( itemDef_t *item, int handle ) {ItemParse_feeder4580,122171
qboolean ItemParse_elementtype( itemDef_t *item, int handle ) {ItemParse_elementtype4589,122419
qboolean ItemParse_columns( itemDef_t *item, int handle ) {ItemParse_columns4603,122777
qboolean ItemParse_border( itemDef_t *item, int handle ) {ItemParse_border4633,123489
qboolean ItemParse_bordersize( itemDef_t *item, int handle ) {ItemParse_bordersize4640,123638
qboolean ItemParse_visible( itemDef_t *item, int handle ) {ItemParse_visible4647,123797
qboolean ItemParse_ownerdraw( itemDef_t *item, int handle ) {ItemParse_ownerdraw4659,123991
qboolean ItemParse_align( itemDef_t *item, int handle ) {ItemParse_align4667,124181
qboolean ItemParse_textalign( itemDef_t *item, int handle ) {ItemParse_textalign4674,124325
qboolean ItemParse_textalignx( itemDef_t *item, int handle ) {ItemParse_textalignx4681,124477
qboolean ItemParse_textaligny( itemDef_t *item, int handle ) {ItemParse_textaligny4688,124629
qboolean ItemParse_textscale( itemDef_t *item, int handle ) {ItemParse_textscale4695,124781
qboolean ItemParse_textstyle( itemDef_t *item, int handle ) {ItemParse_textstyle4702,124931
qboolean ItemParse_backcolor( itemDef_t *item, int handle ) {ItemParse_backcolor4709,125079
qboolean ItemParse_forecolor( itemDef_t *item, int handle ) {ItemParse_forecolor4722,125301
qboolean ItemParse_bordercolor( itemDef_t *item, int handle ) {ItemParse_bordercolor4736,125568
qboolean ItemParse_outlinecolor( itemDef_t *item, int handle ) {ItemParse_outlinecolor4749,125794
qboolean ItemParse_background( itemDef_t *item, int handle ) {ItemParse_background4756,125956
qboolean ItemParse_cinematic( itemDef_t *item, int handle ) {ItemParse_cinematic4766,126175
qboolean ItemParse_doubleClick( itemDef_t *item, int handle ) {ItemParse_doubleClick4773,126337
qboolean ItemParse_onFocus( itemDef_t *item, int handle ) {ItemParse_onFocus4789,126638
qboolean ItemParse_leaveFocus( itemDef_t *item, int handle ) {ItemParse_leaveFocus4796,126785
qboolean ItemParse_mouseEnter( itemDef_t *item, int handle ) {ItemParse_mouseEnter4803,126938
qboolean ItemParse_mouseExit( itemDef_t *item, int handle ) {ItemParse_mouseExit4810,127091
qboolean ItemParse_mouseEnterText( itemDef_t *item, int handle ) {ItemParse_mouseEnterText4817,127242
qboolean ItemParse_mouseExitText( itemDef_t *item, int handle ) {ItemParse_mouseExitText4824,127403
qboolean ItemParse_action( itemDef_t *item, int handle ) {ItemParse_action4831,127562
qboolean ItemParse_special( itemDef_t *item, int handle ) {ItemParse_special4838,127707
qboolean ItemParse_cvarTest( itemDef_t *item, int handle ) {ItemParse_cvarTest4845,127853
qboolean ItemParse_cvar( itemDef_t *item, int handle ) {ItemParse_cvar4852,128002
qboolean ItemParse_maxChars( itemDef_t *item, int handle ) {ItemParse_maxChars4868,128343
qboolean ItemParse_maxPaintChars( itemDef_t *item, int handle ) {ItemParse_maxPaintChars4884,128670
qboolean ItemParse_cvarFloat( itemDef_t *item, int handle ) {ItemParse_cvarFloat4902,129009
qboolean ItemParse_cvarStrList( itemDef_t *item, int handle ) {ItemParse_cvarStrList4918,129432
qboolean ItemParse_cvarFloatList( itemDef_t *item, int handle ) {ItemParse_cvarFloatList4967,130408
qboolean ItemParse_addColorRange( itemDef_t *item, int handle ) {ItemParse_addColorRange5014,131329
qboolean ItemParse_ownerdrawFlag( itemDef_t *item, int handle ) {ItemParse_ownerdrawFlag5029,131726
qboolean ItemParse_enableCvar( itemDef_t *item, int handle ) {ItemParse_enableCvar5038,131907
qboolean ItemParse_disableCvar( itemDef_t *item, int handle ) {ItemParse_disableCvar5046,132092
qboolean ItemParse_showCvar( itemDef_t *item, int handle ) {ItemParse_showCvar5054,132279
qboolean ItemParse_hideCvar( itemDef_t *item, int handle ) {ItemParse_hideCvar5062,132460
keywordHash_t itemParseKeywords[] = {itemParseKeywords5071,132642
keywordHash_t *itemParseKeywordHash[KEYWORDHASH_SIZE];itemParseKeywordHash5137,135415
void Item_SetupKeywordHash(void) {Item_SetupKeywordHash5144,135531
qboolean Item_Parse(int handle, itemDef_t *item) {Item_Parse5158,135808
void Item_InitControls(itemDef_t *item) {Item_InitControls5194,136583
qboolean MenuParse_font( itemDef_t *item, int handle ) {MenuParse_font5216,136978
qboolean MenuParse_name( itemDef_t *item, int handle ) {MenuParse_name5228,137289
qboolean MenuParse_fullscreen( itemDef_t *item, int handle ) {MenuParse_fullscreen5240,137604
qboolean MenuParse_rect( itemDef_t *item, int handle ) {MenuParse_rect5255,137870
qboolean MenuParse_style( itemDef_t *item, int handle ) {MenuParse_style5263,138053
qboolean MenuParse_visible( itemDef_t *item, int handle ) {MenuParse_visible5271,138237
qboolean MenuParse_onOpen( itemDef_t *item, int handle ) {MenuParse_onOpen5284,138468
qboolean MenuParse_onClose( itemDef_t *item, int handle ) {MenuParse_onClose5292,138650
qboolean MenuParse_onESC( itemDef_t *item, int handle ) {MenuParse_onESC5300,138834
qboolean MenuParse_border( itemDef_t *item, int handle ) {MenuParse_border5310,139016
qboolean MenuParse_borderSize( itemDef_t *item, int handle ) {MenuParse_borderSize5318,139202
qboolean MenuParse_backcolor( itemDef_t *item, int handle ) {MenuParse_backcolor5326,139398
qboolean MenuParse_forecolor( itemDef_t *item, int handle ) {MenuParse_forecolor5340,139657
qboolean MenuParse_bordercolor( itemDef_t *item, int handle ) {MenuParse_bordercolor5355,139961
qboolean MenuParse_focuscolor( itemDef_t *item, int handle ) {MenuParse_focuscolor5369,140224
qboolean MenuParse_disablecolor( itemDef_t *item, int handle ) {MenuParse_disablecolor5383,140478
qboolean MenuParse_outlinecolor( itemDef_t *item, int handle ) {MenuParse_outlinecolor5397,140736
qboolean MenuParse_background( itemDef_t *item, int handle ) {MenuParse_background5405,140935
qboolean MenuParse_cinematic( itemDef_t *item, int handle ) {MenuParse_cinematic5416,141191
qboolean MenuParse_ownerdrawFlag( itemDef_t *item, int handle ) {MenuParse_ownerdrawFlag5425,141391
qboolean MenuParse_ownerdraw( itemDef_t *item, int handle ) {MenuParse_ownerdraw5436,141610
qboolean MenuParse_popup( itemDef_t *item, int handle ) {MenuParse_popup5447,141818
qboolean MenuParse_outOfBounds( itemDef_t *item, int handle ) {MenuParse_outOfBounds5454,141969
qboolean MenuParse_soundLoop( itemDef_t *item, int handle ) {MenuParse_soundLoop5461,142130
qboolean MenuParse_fadeClamp( itemDef_t *item, int handle ) {MenuParse_fadeClamp5470,142319
qboolean MenuParse_fadeAmount( itemDef_t *item, int handle ) {MenuParse_fadeAmount5479,142507
qboolean MenuParse_fadeCycle( itemDef_t *item, int handle ) {MenuParse_fadeCycle5489,142698
qboolean MenuParse_itemDef( itemDef_t *item, int handle ) {MenuParse_itemDef5499,142885
keywordHash_t menuParseKeywords[] = {menuParseKeywords5513,143329
keywordHash_t *menuParseKeywordHash[KEYWORDHASH_SIZE];menuParseKeywordHash5545,144557
void Menu_SetupKeywordHash(void) {Menu_SetupKeywordHash5552,144673
qboolean Menu_Parse(int handle, menuDef_t *menu) {Menu_Parse5566,144950
void Menu_New(int handle) {Menu_New5606,145761
int Menu_Count(void) {Menu_Count5618,145962
void Menu_PaintAll(void) {Menu_PaintAll5622,146007
void Menu_Reset(void) {Menu_Reset5638,146283
displayContextDef_t *Display_GetContext(void) {Display_GetContext5642,146326
static float captureX;captureX5647,146410
static float captureY;captureY5648,146433
void *Display_CaptureItem(int x, int y) {Display_CaptureItem5651,146464
qboolean Display_MouseMove(void *p, int x, int y) {Display_MouseMove5666,146748
int Display_CursorType(int x, int y) {Display_CursorType5690,147205
void Display_HandleKey(int key, qboolean down, int x, int y) {Display_HandleKey5705,147492
static void Window_CacheContents(windowDef_t *window) {Window_CacheContents5715,147710
static void Item_CacheContents(itemDef_t *item) {Item_CacheContents5725,147917
static void Menu_CacheContents(menuDef_t *menu) {Menu_CacheContents5732,148026
void Display_CacheAll(void) {Display_CacheAll5747,148326
static qboolean Menu_OverActiveItem(menuDef_t *menu, float x, float y) {Menu_OverActiveItem5755,148439

ui/ui_players.c,3676
#define UI_TIMER_GESTURE	UI_TIMER_GESTURE28,1018
#define UI_TIMER_JUMP	UI_TIMER_JUMP29,1049
#define UI_TIMER_LAND	UI_TIMER_LAND30,1078
#define UI_TIMER_WEAPON_SWITCH	UI_TIMER_WEAPON_SWITCH31,1106
#define UI_TIMER_ATTACK	UI_TIMER_ATTACK32,1141
#define	UI_TIMER_MUZZLE_FLASH	UI_TIMER_MUZZLE_FLASH33,1171
#define	UI_TIMER_WEAPON_DELAY	UI_TIMER_WEAPON_DELAY34,1204
#define JUMP_HEIGHT	JUMP_HEIGHT36,1239
#define SWINGSPEED	SWINGSPEED38,1266
#define SPIN_SPEED	SPIN_SPEED40,1294
#define COAST_TIME	COAST_TIME41,1321
static int			dp_realtime;dp_realtime44,1350
static float		jumpHeight;jumpHeight45,1376
sfxHandle_t weaponChangeSound;weaponChangeSound46,1402
static void UI_PlayerInfo_SetWeapon( playerInfo_t *pi, weapon_t weaponNum ) {UI_PlayerInfo_SetWeapon54,1497
static void UI_ForceLegsAnim( playerInfo_t *pi, int anim ) {UI_ForceLegsAnim156,3591
static void UI_SetLegsAnim( playerInfo_t *pi, int anim ) {UI_SetLegsAnim170,3862
static void UI_ForceTorsoAnim( playerInfo_t *pi, int anim ) {UI_ForceTorsoAnim184,4102
static void UI_SetTorsoAnim( playerInfo_t *pi, int anim ) {UI_SetTorsoAnim202,4490
static void UI_TorsoSequencing( playerInfo_t *pi ) {UI_TorsoSequencing217,4737
static void UI_LegsSequencing( playerInfo_t *pi ) {UI_LegsSequencing262,5637
static void UI_PositionEntityOnTag( refEntity_t *entity, const refEntity_t *parent, UI_PositionEntityOnTag293,6260
static void UI_PositionRotatedEntityOnTag( refEntity_t *entity, const refEntity_t *parent, UI_PositionRotatedEntityOnTag319,7015
static void UI_SetLerpFrameAnimation( playerInfo_t *ci, lerpFrame_t *lf, int newAnimation ) {UI_SetLerpFrameAnimation346,7796
static void UI_RunLerpFrame( playerInfo_t *ci, lerpFrame_t *lf, int newAnimation ) {UI_RunLerpFrame368,8289
static void UI_PlayerAnimation( playerInfo_t *pi, int *legsOld, int *legs, float *legsBackLerp,UI_PlayerAnimation430,9960
static void UI_SwingAngles( float destination, float swingTolerance, float clampTolerance,UI_SwingAngles470,10946
static float UI_MovedirAdjustment( playerInfo_t *pi ) {UI_MovedirAdjustment532,12412
static void UI_PlayerAngles( playerInfo_t *pi, vec3_t legs[3], vec3_t torso[3], vec3_t head[3] ) {UI_PlayerAngles576,13306
static void UI_PlayerFloatSprite( playerInfo_t *pi, vec3_t origin, qhandle_t shader ) {UI_PlayerFloatSprite635,15151
float	UI_MachinegunSpinAngle( playerInfo_t *pi ) {UI_MachinegunSpinAngle654,15557
void UI_DrawPlayer( float x, float y, float w, float h, playerInfo_t *pi, int time ) {UI_DrawPlayer691,16350
static qboolean	UI_FileExists(const char *filename) {UI_FileExists907,21581
static qboolean	UI_FindClientHeadFile( char *filename, int length, const char *teamName, const char *headModelName, const char *headSkinName, const char *base, const char *ext ) {UI_FindClientHeadFile922,21833
static qboolean	UI_RegisterClientSkin( playerInfo_t *pi, const char *modelName, const char *skinName, const char *headModelName, const char *headSkinName , const char *teamName) {UI_RegisterClientSkin974,23268
static qboolean UI_ParseAnimationFile( const char *filename, animation_t *animations ) {UI_ParseAnimationFile1024,25178
qboolean UI_RegisterClientModelname( playerInfo_t *pi, const char *modelSkinName, const char *headModelSkinName, const char *teamName ) {UI_RegisterClientModelname1147,27757
void UI_PlayerInfo_SetModel( playerInfo_t *pi, const char *model, const char *headmodel, char *teamName ) {UI_PlayerInfo_SetModel1251,31192
void UI_PlayerInfo_SetInfo( playerInfo_t *pi, int legsAnim, int torsoAnim, vec3_t viewAngles, vec3_t moveAngles, weapon_t weaponNumber, qboolean chat ) {UI_PlayerInfo_SetInfo1270,31684

ui/ui_atoms.c,2149
qboolean		m_entersound;		// after a frame, so caching won't disrupt the soundm_entersound30,1212
void QDECL Com_Error( int level, const char *error, ... ) {Com_Error32,1291
void QDECL Com_Printf( const char *msg, ... ) {Com_Printf43,1519
qboolean newUI = qfalse;newUI54,1731
float UI_ClampCvar( float min, float max, float value )UI_ClampCvar62,1813
void UI_StartDemoLoop( void ) {UI_StartDemoLoop74,2012
static void NeedCDAction( qboolean result ) {NeedCDAction80,2114
static void NeedCDKeyAction( qboolean result ) {NeedCDKeyAction88,2275
char *UI_Argv( int arg ) {UI_Argv95,2419
char *UI_Cvar_VariableString( const char *var_name ) {UI_Cvar_VariableString104,2552
void UI_SetBestScores(postGameInfo_t *newInfo, qboolean postGame) {UI_SetBestScores114,2740
void UI_LoadBestScores(const char *map, int game) {UI_LoadBestScores149,5002
void UI_ClearScores(void) {UI_ClearScores178,5821
static void	UI_Cache_f( void ) {UI_Cache_f209,6459
static void UI_CalcPostGameStats( void ) {UI_CalcPostGameStats218,6591
qboolean UI_ConsoleCommand( int realTime ) {UI_ConsoleCommand319,9786
void UI_Shutdown( void ) {UI_Shutdown388,11066
void UI_AdjustFrom640( float *x, float *y, float *w, float *h ) {UI_AdjustFrom640398,11202
void UI_DrawNamedPic( float x, float y, float width, float height, const char *picname ) {UI_DrawNamedPic414,11547
void UI_DrawHandlePic( float x, float y, float w, float h, qhandle_t hShader ) {UI_DrawHandlePic422,11826
void UI_FillRect( float x, float y, float width, float height, const float *color ) {UI_FillRect459,12359
void UI_DrawSides(float x, float y, float w, float h) {UI_DrawSides468,12633
void UI_DrawTopBottom(float x, float y, float w, float h) {UI_DrawTopBottom474,12887
void UI_DrawRect( float x, float y, float width, float height, const float *color ) {UI_DrawRect486,13237
void UI_SetColor( const float *rgba ) {UI_SetColor495,13459
void UI_UpdateScreen( void ) {UI_UpdateScreen499,13528
void UI_DrawTextBox (int x, int y, int width, int lines)UI_DrawTextBox504,13585
qboolean UI_CursorInRect (int x, int y, int width, int height)UI_CursorInRect510,13915

ui/ui_public.h,6045
#define __UI_PUBLIC_H____UI_PUBLIC_H__24,1001
#define UI_API_VERSION	UI_API_VERSION26,1026
	connstate_t		connState;connState29,1069
	int				connectPacketCount;connectPacketCount30,1094
	int				clientNum;clientNum31,1122
	char			servername[MAX_STRING_CHARS];servername32,1141
	char			updateInfoString[MAX_STRING_CHARS];updateInfoString33,1179
	char			messageString[MAX_STRING_CHARS];messageString34,1223
} uiClientState_t;uiClientState_t35,1264
	UI_ERROR,UI_ERROR38,1299
	UI_PRINT,UI_PRINT39,1310
	UI_MILLISECONDS,UI_MILLISECONDS40,1321
	UI_CVAR_SET,UI_CVAR_SET41,1339
	UI_CVAR_VARIABLEVALUE,UI_CVAR_VARIABLEVALUE42,1353
	UI_CVAR_VARIABLESTRINGBUFFER,UI_CVAR_VARIABLESTRINGBUFFER43,1377
	UI_CVAR_SETVALUE,UI_CVAR_SETVALUE44,1408
	UI_CVAR_RESET,UI_CVAR_RESET45,1427
	UI_CVAR_CREATE,UI_CVAR_CREATE46,1443
	UI_CVAR_INFOSTRINGBUFFER,UI_CVAR_INFOSTRINGBUFFER47,1460
	UI_ARGC,UI_ARGC48,1487
	UI_ARGV,UI_ARGV49,1497
	UI_CMD_EXECUTETEXT,UI_CMD_EXECUTETEXT50,1507
	UI_FS_FOPENFILE,UI_FS_FOPENFILE51,1528
	UI_FS_READ,UI_FS_READ52,1546
	UI_FS_WRITE,UI_FS_WRITE53,1559
	UI_FS_FCLOSEFILE,UI_FS_FCLOSEFILE54,1573
	UI_FS_GETFILELIST,UI_FS_GETFILELIST55,1592
	UI_R_REGISTERMODEL,UI_R_REGISTERMODEL56,1612
	UI_R_REGISTERSKIN,UI_R_REGISTERSKIN57,1633
	UI_R_REGISTERSHADERNOMIP,UI_R_REGISTERSHADERNOMIP58,1653
	UI_R_CLEARSCENE,UI_R_CLEARSCENE59,1680
	UI_R_ADDREFENTITYTOSCENE,UI_R_ADDREFENTITYTOSCENE60,1698
	UI_R_ADDPOLYTOSCENE,UI_R_ADDPOLYTOSCENE61,1725
	UI_R_ADDLIGHTTOSCENE,UI_R_ADDLIGHTTOSCENE62,1747
	UI_R_RENDERSCENE,UI_R_RENDERSCENE63,1770
	UI_R_SETCOLOR,UI_R_SETCOLOR64,1789
	UI_R_DRAWSTRETCHPIC,UI_R_DRAWSTRETCHPIC65,1805
	UI_UPDATESCREEN,UI_UPDATESCREEN66,1827
	UI_CM_LERPTAG,UI_CM_LERPTAG67,1845
	UI_CM_LOADMODEL,UI_CM_LOADMODEL68,1861
	UI_S_REGISTERSOUND,UI_S_REGISTERSOUND69,1879
	UI_S_STARTLOCALSOUND,UI_S_STARTLOCALSOUND70,1900
	UI_KEY_KEYNUMTOSTRINGBUF,UI_KEY_KEYNUMTOSTRINGBUF71,1923
	UI_KEY_GETBINDINGBUF,UI_KEY_GETBINDINGBUF72,1950
	UI_KEY_SETBINDING,UI_KEY_SETBINDING73,1973
	UI_KEY_ISDOWN,UI_KEY_ISDOWN74,1993
	UI_KEY_GETOVERSTRIKEMODE,UI_KEY_GETOVERSTRIKEMODE75,2009
	UI_KEY_SETOVERSTRIKEMODE,UI_KEY_SETOVERSTRIKEMODE76,2036
	UI_KEY_CLEARSTATES,UI_KEY_CLEARSTATES77,2063
	UI_KEY_GETCATCHER,UI_KEY_GETCATCHER78,2084
	UI_KEY_SETCATCHER,UI_KEY_SETCATCHER79,2104
	UI_GETCLIPBOARDDATA,UI_GETCLIPBOARDDATA80,2124
	UI_GETGLCONFIG,UI_GETGLCONFIG81,2146
	UI_GETCLIENTSTATE,UI_GETCLIENTSTATE82,2163
	UI_GETCONFIGSTRING,UI_GETCONFIGSTRING83,2183
	UI_LAN_GETPINGQUEUECOUNT,UI_LAN_GETPINGQUEUECOUNT84,2204
	UI_LAN_CLEARPING,UI_LAN_CLEARPING85,2231
	UI_LAN_GETPING,UI_LAN_GETPING86,2250
	UI_LAN_GETPINGINFO,UI_LAN_GETPINGINFO87,2267
	UI_CVAR_REGISTER,UI_CVAR_REGISTER88,2288
	UI_CVAR_UPDATE,UI_CVAR_UPDATE89,2307
	UI_MEMORY_REMAINING,UI_MEMORY_REMAINING90,2324
	UI_GET_CDKEY,UI_GET_CDKEY91,2346
	UI_SET_CDKEY,UI_SET_CDKEY92,2361
	UI_R_REGISTERFONT,UI_R_REGISTERFONT93,2376
	UI_R_MODELBOUNDS,UI_R_MODELBOUNDS94,2396
	UI_PC_ADD_GLOBAL_DEFINE,UI_PC_ADD_GLOBAL_DEFINE95,2415
	UI_PC_LOAD_SOURCE,UI_PC_LOAD_SOURCE96,2441
	UI_PC_FREE_SOURCE,UI_PC_FREE_SOURCE97,2461
	UI_PC_READ_TOKEN,UI_PC_READ_TOKEN98,2481
	UI_PC_SOURCE_FILE_AND_LINE,UI_PC_SOURCE_FILE_AND_LINE99,2500
	UI_S_STOPBACKGROUNDTRACK,UI_S_STOPBACKGROUNDTRACK100,2529
	UI_S_STARTBACKGROUNDTRACK,UI_S_STARTBACKGROUNDTRACK101,2556
	UI_REAL_TIME,UI_REAL_TIME102,2584
	UI_LAN_GETSERVERCOUNT,UI_LAN_GETSERVERCOUNT103,2599
	UI_LAN_GETSERVERADDRESSSTRING,UI_LAN_GETSERVERADDRESSSTRING104,2623
	UI_LAN_GETSERVERINFO,UI_LAN_GETSERVERINFO105,2655
	UI_LAN_MARKSERVERVISIBLE,UI_LAN_MARKSERVERVISIBLE106,2678
	UI_LAN_UPDATEVISIBLEPINGS,UI_LAN_UPDATEVISIBLEPINGS107,2705
	UI_LAN_RESETPINGS,UI_LAN_RESETPINGS108,2733
	UI_LAN_LOADCACHEDSERVERS,UI_LAN_LOADCACHEDSERVERS109,2753
	UI_LAN_SAVECACHEDSERVERS,UI_LAN_SAVECACHEDSERVERS110,2780
	UI_LAN_ADDSERVER,UI_LAN_ADDSERVER111,2807
	UI_LAN_REMOVESERVER,UI_LAN_REMOVESERVER112,2826
	UI_CIN_PLAYCINEMATIC,UI_CIN_PLAYCINEMATIC113,2848
	UI_CIN_STOPCINEMATIC,UI_CIN_STOPCINEMATIC114,2871
	UI_CIN_RUNCINEMATIC,UI_CIN_RUNCINEMATIC115,2894
	UI_CIN_DRAWCINEMATIC,UI_CIN_DRAWCINEMATIC116,2916
	UI_CIN_SETEXTENTS,UI_CIN_SETEXTENTS117,2939
	UI_R_REMAP_SHADER,UI_R_REMAP_SHADER118,2959
	UI_VERIFY_CDKEY,UI_VERIFY_CDKEY119,2979
	UI_LAN_SERVERSTATUS,UI_LAN_SERVERSTATUS120,2997
	UI_LAN_GETSERVERPING,UI_LAN_GETSERVERPING121,3019
	UI_LAN_SERVERISVISIBLE,UI_LAN_SERVERISVISIBLE122,3042
	UI_LAN_COMPARESERVERS,UI_LAN_COMPARESERVERS123,3067
	UI_FS_SEEK,UI_FS_SEEK125,3100
	UI_SET_PBCLSTATUS,UI_SET_PBCLSTATUS126,3113
	UI_MEMSET = 100,UI_MEMSET128,3134
	UI_MEMCPY,UI_MEMCPY129,3152
	UI_STRNCPY,UI_STRNCPY130,3164
	UI_SIN,UI_SIN131,3177
	UI_COS,UI_COS132,3186
	UI_ATAN2,UI_ATAN2133,3195
	UI_SQRT,UI_SQRT134,3206
	UI_FLOOR,UI_FLOOR135,3216
	UI_CEILUI_CEIL136,3227
} uiImport_t;uiImport_t137,3236
	UIMENU_NONE,UIMENU_NONE140,3266
	UIMENU_MAIN,UIMENU_MAIN141,3280
	UIMENU_INGAME,UIMENU_INGAME142,3294
	UIMENU_NEED_CD,UIMENU_NEED_CD143,3310
	UIMENU_BAD_CD_KEY,UIMENU_BAD_CD_KEY144,3327
	UIMENU_TEAM,UIMENU_TEAM145,3347
	UIMENU_POSTGAMEUIMENU_POSTGAME146,3361
} uiMenuCommand_t;uiMenuCommand_t147,3378
#define SORT_HOST	SORT_HOST149,3398
#define SORT_MAP	SORT_MAP150,3420
#define SORT_CLIENTS	SORT_CLIENTS151,3441
#define SORT_GAME	SORT_GAME152,3465
#define SORT_PING	SORT_PING153,3487
#define SORT_PUNKBUSTER	SORT_PUNKBUSTER154,3509
	UI_GETAPIVERSION = 0,	// system reservedUI_GETAPIVERSION157,3552
	UI_INIT,UI_INIT159,3595
	UI_SHUTDOWN,UI_SHUTDOWN162,3631
	UI_KEY_EVENT,UI_KEY_EVENT165,3675
	UI_MOUSE_EVENT,UI_MOUSE_EVENT168,3723
	UI_REFRESH,UI_REFRESH171,3782
	UI_IS_FULLSCREEN,UI_IS_FULLSCREEN174,3828
	UI_SET_ACTIVE_MENU,UI_SET_ACTIVE_MENU177,3885
	UI_CONSOLE_COMMAND,UI_CONSOLE_COMMAND180,3957
	UI_DRAW_CONNECT_SCREEN,UI_DRAW_CONNECT_SCREEN183,4026
	UI_HASUNIQUECDKEYUI_HASUNIQUECDKEY185,4101
} uiExport_t;uiExport_t189,4303

ui/ui_local.h,17585
#define __UI_LOCAL_H____UI_LOCAL_H__24,1000
#define RCOLUMN_OFFSET	RCOLUMN_OFFSET140,4122
#define LCOLUMN_OFFSET	LCOLUMN_OFFSET141,4165
#define SLIDER_RANGE	SLIDER_RANGE143,4209
#define	MAX_EDIT_LINE	MAX_EDIT_LINE144,4235
#define MAX_MENUDEPTH	MAX_MENUDEPTH146,4264
#define MAX_MENUITEMS	MAX_MENUITEMS147,4290
#define MTYPE_NULL	MTYPE_NULL149,4318
#define MTYPE_SLIDER	MTYPE_SLIDER150,4342
#define MTYPE_ACTION	MTYPE_ACTION151,4368
#define MTYPE_SPINCONTROL	MTYPE_SPINCONTROL152,4393
#define MTYPE_FIELD	MTYPE_FIELD153,4422
#define MTYPE_RADIOBUTTON	MTYPE_RADIOBUTTON154,4447
#define MTYPE_BITMAP	MTYPE_BITMAP155,4476
#define MTYPE_TEXT	MTYPE_TEXT156,4502
#define MTYPE_SCROLLLIST	MTYPE_SCROLLLIST157,4526
#define MTYPE_PTEXT	MTYPE_PTEXT158,4554
#define MTYPE_BTEXT	MTYPE_BTEXT159,4579
#define QMF_BLINK	QMF_BLINK161,4606
#define QMF_SMALLFONT	QMF_SMALLFONT162,4638
#define QMF_LEFT_JUSTIFY	QMF_LEFT_JUSTIFY163,4673
#define QMF_CENTER_JUSTIFY	QMF_CENTER_JUSTIFY164,4710
#define QMF_RIGHT_JUSTIFY	QMF_RIGHT_JUSTIFY165,4749
#define QMF_NUMBERSONLY	QMF_NUMBERSONLY166,4787
#define QMF_HIGHLIGHT	QMF_HIGHLIGHT167,4854
#define QMF_HIGHLIGHT_IF_FOCUS	QMF_HIGHLIGHT_IF_FOCUS168,4889
#define QMF_PULSEIFFOCUS	QMF_PULSEIFFOCUS169,4947
#define QMF_HASMOUSEFOCUS	QMF_HASMOUSEFOCUS170,5002
#define QMF_NOONOFFTEXT	QMF_NOONOFFTEXT171,5040
#define QMF_MOUSEONLY	QMF_MOUSEONLY172,5077
#define QMF_HIDDEN	QMF_HIDDEN173,5140
#define QMF_GRAYED	QMF_GRAYED174,5190
#define QMF_INACTIVE	QMF_INACTIVE175,5245
#define QMF_NODEFAULTINIT	QMF_NODEFAULTINIT176,5301
#define QMF_OWNERDRAW	QMF_OWNERDRAW177,5370
#define QMF_PULSE	QMF_PULSE178,5405
#define QMF_LOWERCASE	QMF_LOWERCASE179,5437
#define QMF_UPPERCASE	QMF_UPPERCASE180,5504
#define QMF_SILENT	QMF_SILENT181,5571
#define QM_GOTFOCUS	QM_GOTFOCUS184,5631
#define QM_LOSTFOCUS	QM_LOSTFOCUS185,5656
#define QM_ACTIVATED	QM_ACTIVATED186,5681
typedef struct _tag_menuframework_tag_menuframework188,5707
	int	cursor;cursor190,5743
	int cursor_prev;cursor_prev191,5756
	int	nitems;nitems193,5775
	void *items[MAX_MENUITEMS];items194,5788
	void (*draw) (void);draw196,5818
	sfxHandle_t (*key) (int key);key197,5840
	qboolean	wrapAround;wrapAround199,5872
	qboolean	fullscreen;fullscreen200,5894
	qboolean	showlogo;showlogo201,5916
} menuframework_s;menuframework_s202,5936
	int type;type206,5973
	const char *name;name207,5984
	int	id;id208,6003
	int x, y;x209,6012
	int x, y;y209,6012
	int left;left210,6023
	int	top;top211,6034
	int	right;right212,6044
	int	bottom;bottom213,6056
	menuframework_s *parent;parent214,6069
	int menuPosition;menuPosition215,6095
	unsigned flags;flags216,6114
	void (*callback)( void *self, int event );callback218,6132
	void (*statusbar)( void *self );statusbar219,6176
	void (*ownerdraw)( void *self );ownerdraw220,6210
} menucommon_s;menucommon_s221,6244
	int		cursor;cursor224,6278
	int		scroll;scroll225,6292
	int		widthInChars;widthInChars226,6306
	char	buffer[MAX_EDIT_LINE];buffer227,6326
	int		maxchars;maxchars228,6355
} mfield_t;mfield_t229,6371
	menucommon_s	generic;generic233,6401
	mfield_t		field;field234,6424
} menufield_s;menufield_s235,6442
	menucommon_s generic;generic239,6476
	float minvalue;minvalue241,6500
	float maxvalue;maxvalue242,6517
	float curvalue;curvalue243,6534
	float range;range245,6552
} menuslider_s;menuslider_s246,6566
	menucommon_s generic;generic250,6600
	int	oldvalue;oldvalue252,6624
	int curvalue;curvalue253,6639
	int	numitems;numitems254,6654
	int	top;top255,6669
	const char **itemnames;itemnames257,6682
	int width;width259,6708
	int height;height260,6720
	int	columns;columns261,6733
	int	seperation;seperation262,6747
} menulist_s;menulist_s263,6764
	menucommon_s generic;generic267,6796
} menuaction_s;menuaction_s268,6819
	menucommon_s generic;generic272,6853
	int curvalue;curvalue273,6876
} menuradiobutton_s;menuradiobutton_s274,6891
	menucommon_s	generic;generic278,6930
	char*			focuspic;	focuspic279,6953
	char*			errorpic;errorpic280,6973
	qhandle_t		shader;shader281,6992
	qhandle_t		focusshader;focusshader282,7012
	int				width;width283,7037
	int				height;height284,7052
	float*			focuscolor;focuscolor285,7068
} menubitmap_s;menubitmap_s286,7090
	menucommon_s	generic;generic290,7124
	char*			string;string291,7147
	int				style;style292,7164
	float*			color;color293,7179
} menutext_s;menutext_s294,7196
#define MAX_FAVORITESERVERS MAX_FAVORITESERVERS471,11542
	int			oldFrame;oldFrame504,12226
	int			oldFrameTime;		// time when ->oldFrame was exactly onoldFrameTime505,12243
	int			frame;frame507,12305
	int			frameTime;			// time when ->frame will be exactly onframeTime508,12319
	float		backlerp;backlerp510,12380
	float		yawAngle;yawAngle512,12399
	qboolean	yawing;yawing513,12417
	float		pitchAngle;pitchAngle514,12435
	qboolean	pitching;pitching515,12455
	int			animationNumber;	// may include ANIM_TOGGLEBITanimationNumber517,12476
	animation_t	*animation;animation518,12530
	int			animationTime;		// time when the first frame of the animation will be exactanimationTime519,12555
} lerpFrame_t;lerpFrame_t520,12638
	qhandle_t		legsModel;legsModel524,12686
	qhandle_t		legsSkin;legsSkin525,12709
	lerpFrame_t		legs;legs526,12731
	qhandle_t		torsoModel;torsoModel528,12752
	qhandle_t		torsoSkin;torsoSkin529,12776
	lerpFrame_t		torso;torso530,12799
	qhandle_t		headModel;headModel532,12821
	qhandle_t		headSkin;headSkin533,12844
	animation_t		animations[MAX_TOTALANIMATIONS];animations535,12867
	qhandle_t		weaponModel;weaponModel537,12915
	qhandle_t		barrelModel;barrelModel538,12940
	qhandle_t		flashModel;flashModel539,12965
	vec3_t			flashDlightColor;flashDlightColor540,12989
	int				muzzleFlashTime;muzzleFlashTime541,13017
	vec3_t			viewAngles;viewAngles544,13078
	vec3_t			moveAngles;moveAngles545,13100
	weapon_t		currentWeapon;currentWeapon546,13122
	int				legsAnim;legsAnim547,13148
	int				torsoAnim;torsoAnim548,13166
	weapon_t		weapon;weapon551,13205
	weapon_t		lastWeapon;lastWeapon552,13224
	weapon_t		pendingWeapon;pendingWeapon553,13247
	int				weaponTimer;weaponTimer554,13273
	int				pendingLegsAnim;pendingLegsAnim555,13294
	int				torsoAnimationTimer;torsoAnimationTimer556,13319
	int				pendingTorsoAnim;pendingTorsoAnim558,13349
	int				legsAnimationTimer;legsAnimationTimer559,13375
	qboolean		chat;chat561,13404
	qboolean		newModel;newModel562,13421
	qboolean		barrelSpinning;barrelSpinning564,13443
	float			barrelAngle;barrelAngle565,13470
	int				barrelTime;barrelTime566,13492
	int				realWeapon;realWeapon568,13513
} playerInfo_t;playerInfo_t569,13533
	int					frametime;frametime581,14127
	int					realtime;realtime582,14147
	int					cursorx;cursorx583,14166
	int					cursory;cursory584,14184
	glconfig_t 	glconfig;glconfig585,14202
	qboolean		debug;debug586,14225
	qhandle_t		whiteShader;whiteShader587,14243
	qhandle_t		menuBackShader;menuBackShader588,14268
	qhandle_t		menuBackShader2;menuBackShader2589,14296
	qhandle_t		menuBackNoLogoShader;menuBackNoLogoShader590,14325
	qhandle_t		charset;charset591,14359
	qhandle_t		charsetProp;charsetProp592,14380
	qhandle_t		charsetPropGlow;charsetPropGlow593,14405
	qhandle_t		charsetPropB;charsetPropB594,14434
	qhandle_t		cursor;cursor595,14460
	qhandle_t		rb_on;rb_on596,14480
	qhandle_t		rb_off;rb_off597,14499
	float				scale;scale598,14519
	float				bias;bias599,14536
	qboolean		demoversion;demoversion600,14552
	qboolean		firstdraw;firstdraw601,14576
} uiStatic_t;uiStatic_t602,14598
#define UI_NUMFX UI_NUMFX606,14630
#define MAX_HEADS MAX_HEADS607,14649
#define MAX_ALIASES MAX_ALIASES608,14670
#define MAX_HEADNAME MAX_HEADNAME609,14693
#define MAX_TEAMS MAX_TEAMS610,14718
#define MAX_GAMETYPES MAX_GAMETYPES611,14739
#define MAX_MAPS MAX_MAPS612,14764
#define MAX_SPMAPS MAX_SPMAPS613,14785
#define PLAYERS_PER_TEAM PLAYERS_PER_TEAM614,14807
#define MAX_PINGREQUESTS	MAX_PINGREQUESTS615,14834
#define MAX_ADDRESSLENGTH	MAX_ADDRESSLENGTH616,14863
#define MAX_HOSTNAMELENGTH	MAX_HOSTNAMELENGTH617,14893
#define MAX_MAPNAMELENGTH	MAX_MAPNAMELENGTH618,14924
#define MAX_STATUSLENGTH	MAX_STATUSLENGTH619,14954
#define MAX_LISTBOXWIDTH	MAX_LISTBOXWIDTH620,14983
#define UI_FONT_THRESHOLD	UI_FONT_THRESHOLD621,15012
#define MAX_DISPLAY_SERVERS	MAX_DISPLAY_SERVERS622,15043
#define MAX_SERVERSTATUS_LINES	MAX_SERVERSTATUS_LINES623,15077
#define MAX_SERVERSTATUS_TEXT	MAX_SERVERSTATUS_TEXT624,15112
#define MAX_FOUNDPLAYER_SERVERS	MAX_FOUNDPLAYER_SERVERS625,15147
#define TEAM_MEMBERS TEAM_MEMBERS626,15182
#define GAMES_ALL	GAMES_ALL627,15205
#define GAMES_FFA	GAMES_FFA628,15227
#define GAMES_TEAMPLAY	GAMES_TEAMPLAY629,15249
#define GAMES_TOURNEY	GAMES_TOURNEY630,15275
#define GAMES_CTF	GAMES_CTF631,15300
#define MAPS_PER_TIER MAPS_PER_TIER632,15322
#define MAX_TIERS MAX_TIERS633,15346
#define MAX_MODS MAX_MODS634,15367
#define MAX_DEMOS MAX_DEMOS635,15387
#define MAX_MOVIES MAX_MOVIES636,15409
#define MAX_PLAYERMODELS MAX_PLAYERMODELS637,15432
  const char *name;name641,15480
	const char *imageName;imageName642,15500
  qhandle_t headImage;headImage643,15524
	const char *base;base644,15547
	qboolean active;active645,15566
	int reference;reference646,15584
} characterInfo;characterInfo647,15600
	const char *name;name650,15635
	const char *ai;ai651,15654
	const char *action;action652,15671
} aliasInfo;aliasInfo653,15692
  const char *teamName;teamName656,15723
	const char *imageName;imageName657,15747
	const char *teamMembers[TEAM_MEMBERS];teamMembers658,15771
  qhandle_t teamIcon;teamIcon659,15811
  qhandle_t teamIcon_Metal;teamIcon_Metal660,15833
  qhandle_t teamIcon_Name;teamIcon_Name661,15861
	int cinematic;cinematic662,15888
} teamInfo;teamInfo663,15904
  const char *gameType;gameType666,15934
  int gtEnum;gtEnum667,15958
} gameTypeInfo;gameTypeInfo668,15972
  const char *mapName;mapName671,16006
  const char *mapLoadName;mapLoadName672,16029
	const char *imageName;imageName673,16056
	const char *opponentName;opponentName674,16080
	int teamMembers;teamMembers675,16107
  int typeBits;typeBits676,16125
	int cinematic;cinematic677,16141
	int timeToBeat[MAX_GAMETYPES];timeToBeat678,16157
	qhandle_t levelShot;levelShot679,16189
	qboolean active;active680,16211
} mapInfo;mapInfo681,16229
	const char *tierName;tierName684,16258
	const char *maps[MAPS_PER_TIER];maps685,16281
	int gameTypes[MAPS_PER_TIER];gameTypes686,16315
	qhandle_t mapHandles[MAPS_PER_TIER];mapHandles687,16346
} tierInfo;tierInfo688,16384
typedef struct serverFilter_s {serverFilter_s690,16397
	const char *description;description691,16429
	const char *basedir;basedir692,16455
} serverFilter_t;serverFilter_t693,16477
	char	adrstr[MAX_ADDRESSLENGTH];adrstr696,16513
	int		start;start697,16546
} pinglist_t;pinglist_t698,16559
typedef struct serverStatus_s {serverStatus_s701,16575
	pinglist_t pingList[MAX_PINGREQUESTS];pingList702,16607
	int		numqueriedservers;numqueriedservers703,16647
	int		currentping;currentping704,16672
	int		nextpingtime;nextpingtime705,16691
	int		maxservers;maxservers706,16711
	int		refreshtime;refreshtime707,16729
	int		numServers;numServers708,16748
	int		sortKey;sortKey709,16766
	int		sortDir;sortDir710,16781
	int		lastCount;lastCount711,16796
	qboolean refreshActive;refreshActive712,16813
	int		currentServer;currentServer713,16838
	int		displayServers[MAX_DISPLAY_SERVERS];displayServers714,16859
	int		numDisplayServers;numDisplayServers715,16902
	int		numPlayersOnServers;numPlayersOnServers716,16927
	int		nextDisplayRefresh;nextDisplayRefresh717,16954
	int		nextSortTime;nextSortTime718,16980
	qhandle_t currentServerPreview;currentServerPreview719,17000
	int		currentServerCinematic;currentServerCinematic720,17033
	int		motdLen;motdLen721,17063
	int		motdWidth;motdWidth722,17078
	int		motdPaintX;motdPaintX723,17095
	int		motdPaintX2;motdPaintX2724,17113
	int		motdOffset;motdOffset725,17132
	int		motdTime;motdTime726,17150
	char	motd[MAX_STRING_CHARS];motd727,17166
} serverStatus_t;serverStatus_t728,17196
	char		adrstr[MAX_ADDRESSLENGTH];adrstr732,17233
	char		name[MAX_ADDRESSLENGTH];name733,17267
	int			startTime;startTime734,17299
	int			serverNum;serverNum735,17317
	qboolean	valid;valid736,17335
} pendingServer_t;pendingServer_t737,17352
	int num;num740,17389
	pendingServer_t server[MAX_SERVERSTATUSREQUESTS];server741,17399
} pendingServerStatus_t;pendingServerStatus_t742,17450
	char address[MAX_ADDRESSLENGTH];address745,17493
	char *lines[MAX_SERVERSTATUS_LINES][4];lines746,17527
	char text[MAX_SERVERSTATUS_TEXT];text747,17568
	char pings[MAX_CLIENTS * 3];pings748,17603
	int numLines;numLines749,17633
} serverStatusInfo_t;serverStatusInfo_t750,17648
	const char *modName;modName753,17688
	const char *modDescr;modDescr754,17710
} modInfo_t;modInfo_t755,17733
	displayContextDef_t uiDC;uiDC759,17765
	int newHighScoreTime;newHighScoreTime760,17792
	int newBestTime;newBestTime761,17815
	int showPostGameTime;showPostGameTime762,17833
	qboolean newHighScore;newHighScore763,17856
	qboolean demoAvailable;demoAvailable764,17880
	qboolean soundHighScore;soundHighScore765,17905
	int characterCount;characterCount767,17933
	int botIndex;botIndex768,17954
	characterInfo characterList[MAX_HEADS];characterList769,17969
	int aliasCount;aliasCount771,18011
	aliasInfo aliasList[MAX_ALIASES];aliasList772,18028
	int teamCount;teamCount774,18064
	teamInfo teamList[MAX_TEAMS];teamList775,18080
	int numGameTypes;numGameTypes777,18112
	gameTypeInfo gameTypes[MAX_GAMETYPES];gameTypes778,18131
	int numJoinGameTypes;numJoinGameTypes780,18172
	gameTypeInfo joinGameTypes[MAX_GAMETYPES];joinGameTypes781,18195
	int redBlue;redBlue783,18240
	int playerCount;playerCount784,18254
	int myTeamCount;myTeamCount785,18272
	int teamIndex;teamIndex786,18290
	int playerRefresh;playerRefresh787,18306
	int playerIndex;playerIndex788,18326
	int playerNumber; playerNumber789,18344
	qboolean teamLeader;teamLeader790,18364
	char playerNames[MAX_CLIENTS][MAX_NAME_LENGTH];playerNames791,18386
	char teamNames[MAX_CLIENTS][MAX_NAME_LENGTH];teamNames792,18435
	int teamClientNums[MAX_CLIENTS];teamClientNums793,18482
	int mapCount;mapCount795,18517
	mapInfo mapList[MAX_MAPS];mapList796,18532
	int tierCount;tierCount799,18562
	tierInfo tierList[MAX_TIERS];tierList800,18578
	int skillIndex;skillIndex802,18610
	modInfo_t modList[MAX_MODS];modList804,18628
	int modCount;modCount805,18658
	int modIndex;modIndex806,18673
	const char *demoList[MAX_DEMOS];demoList808,18689
	int demoCount;demoCount809,18723
	int demoIndex;demoIndex810,18739
	const char *movieList[MAX_MOVIES];movieList812,18756
	int movieCount;movieCount813,18792
	int movieIndex;movieIndex814,18809
	int previewMovie;previewMovie815,18826
	serverStatus_t serverStatus;serverStatus817,18846
	char serverStatusAddress[MAX_ADDRESSLENGTH];serverStatusAddress820,18920
	serverStatusInfo_t serverStatusInfo;serverStatusInfo821,18966
	int nextServerStatusRefresh;nextServerStatusRefresh822,19004
	pendingServerStatus_t pendingServerStatus;pendingServerStatus825,19089
	char findPlayerName[MAX_STRING_CHARS];findPlayerName826,19133
	char foundPlayerServerAddresses[MAX_FOUNDPLAYER_SERVERS][MAX_ADDRESSLENGTH];foundPlayerServerAddresses827,19173
	char foundPlayerServerNames[MAX_FOUNDPLAYER_SERVERS][MAX_ADDRESSLENGTH];foundPlayerServerNames828,19251
	int currentFoundPlayerServer;currentFoundPlayerServer829,19325
	int numFoundPlayerServers;numFoundPlayerServers830,19356
	int nextFindPlayerRefresh;nextFindPlayerRefresh831,19384
	int currentCrosshair;currentCrosshair833,19413
	int startPostGameTime;startPostGameTime834,19436
	sfxHandle_t newHighScoreSound;newHighScoreSound835,19460
	int				q3HeadCount;q3HeadCount837,19493
	char			q3HeadNames[MAX_PLAYERMODELS][64];q3HeadNames838,19514
	qhandle_t	q3HeadIcons[MAX_PLAYERMODELS];q3HeadIcons839,19557
	int				q3SelectedHead;q3SelectedHead840,19599
	int effectsColor;effectsColor842,19624
	qboolean inGameLoad;inGameLoad844,19644
}	uiInfo_t;uiInfo_t846,19667
	AWARD_ACCURACY,AWARD_ACCURACY1055,28239
	AWARD_IMPRESSIVE,AWARD_IMPRESSIVE1056,28256
	AWARD_EXCELLENT,AWARD_EXCELLENT1057,28275
	AWARD_GAUNTLET,AWARD_GAUNTLET1058,28293
	AWARD_FRAGS,AWARD_FRAGS1059,28310
	AWARD_PERFECTAWARD_PERFECT1060,28324
} awardType_t;awardType_t1061,28339
#define ASSET_BACKGROUND ASSET_BACKGROUND1112,29492
typedef struct postGameInfo_s {postGameInfo_s1115,29576
	int score;score1116,29608
	int redScore;redScore1117,29620
	int blueScore;blueScore1118,29635
	int perfects;perfects1119,29651
	int accuracy;accuracy1120,29666
	int impressives;impressives1121,29681
	int excellents;excellents1122,29699
	int defends;defends1123,29716
	int assists;assists1124,29730
	int gauntlets;gauntlets1125,29744
	int	captures;captures1126,29760
	int time;time1127,29775
	int timeBonus;timeBonus1128,29786
	int shutoutBonus;shutoutBonus1129,29802
	int skillBonus;skillBonus1130,29821
	int baseScore;baseScore1131,29838
} postGameInfo_t;postGameInfo_t1132,29854

ui/ui_shared.h,17542
#define __UI_SHARED_H__UI_SHARED_H23,996
#define MAX_MENUNAME MAX_MENUNAME32,1151
#define MAX_ITEMTEXT MAX_ITEMTEXT33,1175
#define MAX_ITEMACTION MAX_ITEMACTION34,1199
#define MAX_MENUDEFFILE MAX_MENUDEFFILE35,1225
#define MAX_MENUFILE MAX_MENUFILE36,1254
#define MAX_MENUS MAX_MENUS37,1281
#define MAX_MENUITEMS MAX_MENUITEMS38,1302
#define MAX_COLOR_RANGES MAX_COLOR_RANGES39,1327
#define MAX_OPEN_MENUS MAX_OPEN_MENUS40,1355
#define WINDOW_MOUSEOVER	WINDOW_MOUSEOVER42,1382
#define WINDOW_HASFOCUS	WINDOW_HASFOCUS43,1455
#define WINDOW_VISIBLE	WINDOW_VISIBLE44,1524
#define WINDOW_GREY	WINDOW_GREY45,1575
#define WINDOW_DECORATION	WINDOW_DECORATION46,1649
#define WINDOW_FADINGOUT	WINDOW_FADINGOUT47,1739
#define WINDOW_FADINGIN	WINDOW_FADINGIN48,1803
#define WINDOW_MOUSEOVERTEXT	WINDOW_MOUSEOVERTEXT49,1854
#define WINDOW_INTRANSITION	WINDOW_INTRANSITION50,1929
#define WINDOW_FORECOLORSET	WINDOW_FORECOLORSET51,1996
#define WINDOW_HORIZONTAL	WINDOW_HORIZONTAL52,2106
#define WINDOW_LB_LEFTARROW	WINDOW_LB_LEFTARROW53,2222
#define WINDOW_LB_RIGHTARROW	WINDOW_LB_RIGHTARROW54,2293
#define WINDOW_LB_THUMB	WINDOW_LB_THUMB55,2367
#define WINDOW_LB_PGUP	WINDOW_LB_PGUP56,2428
#define WINDOW_LB_PGDN	WINDOW_LB_PGDN57,2490
#define WINDOW_ORBITING	WINDOW_ORBITING58,2554
#define WINDOW_OOB_CLICK	WINDOW_OOB_CLICK59,2612
#define WINDOW_WRAPPED	WINDOW_WRAPPED60,2682
#define WINDOW_AUTOWRAPPED	WINDOW_AUTOWRAPPED61,2741
#define WINDOW_FORCED	WINDOW_FORCED62,2799
#define WINDOW_POPUP	WINDOW_POPUP63,2851
#define WINDOW_BACKCOLORSET	WINDOW_BACKCOLORSET64,2896
#define WINDOW_TIMEDVISIBLE	WINDOW_TIMEDVISIBLE65,2969
#define CURSOR_NONE	CURSOR_NONE69,3078
#define CURSOR_ARROW	CURSOR_ARROW70,3113
#define CURSOR_SIZER	CURSOR_SIZER71,3148
#define STRING_POOL_SIZE STRING_POOL_SIZE74,3197
#define STRING_POOL_SIZE STRING_POOL_SIZE76,3237
#define MAX_STRING_HANDLES MAX_STRING_HANDLES78,3278
#define MAX_SCRIPT_ARGS MAX_SCRIPT_ARGS80,3311
#define MAX_EDITFIELD MAX_EDITFIELD81,3338
#define ART_FX_BASE	ART_FX_BASE83,3365
#define ART_FX_BLUE	ART_FX_BLUE84,3406
#define ART_FX_CYAN	ART_FX_CYAN85,3447
#define ART_FX_GREEN	ART_FX_GREEN86,3488
#define ART_FX_RED	ART_FX_RED87,3528
#define ART_FX_TEAL	ART_FX_TEAL88,3567
#define ART_FX_WHITE	ART_FX_WHITE89,3608
#define ART_FX_YELLOW	ART_FX_YELLOW90,3650
#define ASSET_GRADIENTBAR ASSET_GRADIENTBAR92,3692
#define ASSET_SCROLLBAR ASSET_SCROLLBAR93,3747
#define ASSET_SCROLLBAR_ARROWDOWN ASSET_SCROLLBAR_ARROWDOWN94,3809
#define ASSET_SCROLLBAR_ARROWUP ASSET_SCROLLBAR_ARROWUP95,3883
#define ASSET_SCROLLBAR_ARROWLEFT ASSET_SCROLLBAR_ARROWLEFT96,3956
#define ASSET_SCROLLBAR_ARROWRIGHT ASSET_SCROLLBAR_ARROWRIGHT97,4029
#define ASSET_SCROLL_THUMB ASSET_SCROLL_THUMB98,4103
#define ASSET_SLIDER_BAR	ASSET_SLIDER_BAR99,4171
#define ASSET_SLIDER_THUMB	ASSET_SLIDER_THUMB100,4225
#define SCROLLBAR_SIZE SCROLLBAR_SIZE101,4285
#define SLIDER_WIDTH SLIDER_WIDTH102,4313
#define SLIDER_HEIGHT SLIDER_HEIGHT103,4339
#define SLIDER_THUMB_WIDTH SLIDER_THUMB_WIDTH104,4366
#define SLIDER_THUMB_HEIGHT SLIDER_THUMB_HEIGHT105,4398
#define	NUM_CROSSHAIRS	NUM_CROSSHAIRS106,4431
  const char *command;command109,4477
  const char *args[MAX_SCRIPT_ARGS];args110,4500
} scriptDef_t;scriptDef_t111,4537
  float x;    // horiz positionx115,4571
  float y;    // vert positiony116,4603
  float w;    // widthw117,4634
  float h;    // height;h118,4657
} rectDef_t;rectDef_t119,4682
typedef rectDef_t Rectangle;Rectangle121,4696
  Rectangle rect;                 // client coord rectanglerect125,4799
  Rectangle rectClient;           // screen coord rectanglerectClient126,4859
  const char *name;               //name127,4919
  const char *group;              // if it belongs to a groupgroup128,4956
  const char *cinematicName;		  // cinematic namecinematicName129,5018
  int cinematic;								  // cinematic handlecinematic130,5068
  int style;                      //style131,5114
  int border;                     //border132,5151
  int ownerDraw;									// ownerDraw styleownerDraw133,5188
	int ownerDrawFlags;							// show flags for ownerdraw itemsownerDrawFlags134,5232
  float borderSize;               // borderSize135,5293
  int flags;                      // visible, focus, mouseover, cursorflags136,5331
  Rectangle rectEffects;          // for various effectsrectEffects137,5402
  Rectangle rectEffects2;         // for various effectsrectEffects2138,5459
  int offsetTime;                 // time based value for various effectsoffsetTime139,5516
  int nextTime;                   // time next effect should cyclenextTime140,5590
  vec4_t foreColor;               // text colorforeColor141,5657
  vec4_t backColor;               // border colorbackColor142,5705
  vec4_t borderColor;             // border colorborderColor143,5755
  vec4_t outlineColor;            // border coloroutlineColor144,5805
  qhandle_t background;           // background asset  background145,5855
} windowDef_t;windowDef_t146,5911
typedef windowDef_t Window;Window148,5927
	vec4_t	color;color151,5973
	float		low;low152,5988
	float		high;high153,6001
} colorRangeDef_t;colorRangeDef_t154,6015
#define MAX_LB_COLUMNS MAX_LB_COLUMNS166,6750
typedef struct columnInfo_s {columnInfo_s168,6777
	int pos;pos169,6807
	int width;width170,6817
	int maxChars;maxChars171,6829
} columnInfo_t;columnInfo_t172,6844
typedef struct listBoxDef_s {listBoxDef_s174,6861
	int startPos;startPos175,6891
	int endPos;endPos176,6906
	int drawPadding;drawPadding177,6919
	int cursorPos;cursorPos178,6937
	float elementWidth;elementWidth179,6953
	float elementHeight;elementHeight180,6974
	int elementStyle;elementStyle181,6996
	int numColumns;numColumns182,7015
	columnInfo_t columnInfo[MAX_LB_COLUMNS];columnInfo183,7032
	const char *doubleClick;doubleClick184,7074
	qboolean notselectable;notselectable185,7100
} listBoxDef_t;listBoxDef_t186,7125
typedef struct editFieldDef_s {editFieldDef_s188,7142
  float minVal;                  //	edit field limitsminVal189,7174
  float maxVal;                  //maxVal190,7228
  float defVal;                  //defVal191,7264
	float range;									 // range192,7300
  int maxChars;                  // for edit fieldsmaxChars193,7327
  int maxPaintChars;             // for edit fieldsmaxPaintChars194,7379
	int paintOffset;							 // paintOffset195,7431
} editFieldDef_t;editFieldDef_t196,7460
#define MAX_MULTI_CVARS MAX_MULTI_CVARS198,7479
typedef struct multiDef_s {multiDef_s200,7507
	const char *cvarList[MAX_MULTI_CVARS];cvarList201,7535
	const char *cvarStr[MAX_MULTI_CVARS];cvarStr202,7575
	float cvarValue[MAX_MULTI_CVARS];cvarValue203,7614
	int count;count204,7649
	qboolean strDef;strDef205,7661
} multiDef_t;multiDef_t206,7679
typedef struct modelDef_s {modelDef_s208,7694
	int angle;angle209,7722
	vec3_t origin;origin210,7734
	float fov_x;fov_x211,7750
	float fov_y;fov_y212,7764
	int rotationSpeed;rotationSpeed213,7778
} modelDef_t;modelDef_t214,7798
#define CVAR_ENABLE	CVAR_ENABLE216,7813
#define CVAR_DISABLE	CVAR_DISABLE217,7845
#define CVAR_SHOW	CVAR_SHOW218,7877
#define CVAR_HIDE	CVAR_HIDE219,7908
typedef struct itemDef_s {itemDef_s221,7940
  Window window;                 // common positional, border, style, layout infowindow222,7967
  Rectangle textRect;            // rectangle the text ( if any ) consumes     textRect223,8049
  int type;                      // text, button, radiobutton, checkbox, textfield, listbox, combotype224,8129
  int alignment;                 // left center rightalignment225,8228
  int textalignment;             // ( optional ) alignment for text within rect based on text widthtextalignment226,8282
  float textalignx;              // ( optional ) text alignment x coordtextalignx227,8382
  float textaligny;              // ( optional ) text alignment x coordtextaligny228,8454
  float textscale;               // scale percentage from 72ptstextscale229,8526
  int textStyle;                 // ( optional ) style, normal and shadowed are it for nowtextStyle230,8590
  const char *text;              // display texttext231,8681
  void *parent;                  // menu ownerparent232,8730
  qhandle_t asset;               // handle to assetasset233,8777
  const char *mouseEnterText;    // mouse enter scriptmouseEnterText234,8829
  const char *mouseExitText;     // mouse exit scriptmouseExitText235,8884
  const char *mouseEnter;        // mouse enter scriptmouseEnter236,8938
  const char *mouseExit;         // mouse exit script mouseExit237,8993
  const char *action;            // select scriptaction238,9048
  const char *onFocus;           // select scriptonFocus239,9098
  const char *leaveFocus;        // select scriptleaveFocus240,9148
  const char *cvar;              // associated cvar cvar241,9198
  const char *cvarTest;          // associated cvar for enable actionscvarTest242,9251
	const char *enableCvar;			   // enable, disable, show, or hide based on value, this can contain a listenableCvar243,9322
	int cvarFlags;								 //	what type of action to take on cvarenablescvarFlags244,9426
  sfxHandle_t focusSound;focusSound245,9496
	int numColors;								 // number of color rangesnumColors246,9522
	colorRangeDef_t colorRanges[MAX_COLOR_RANGES];colorRanges247,9572
	float special;								 // used for feeder id's etc.. diff per typespecial248,9620
  int cursorPos;                 // cursor position in characterscursorPos249,9688
	void *typeData;								 // type specific data ptr's	typeData250,9754
} itemDef_t;itemDef_t251,9808
  Window window;window254,9839
  const char  *font;								// fontfont255,9856
  qboolean fullScreen;							// covers entire screen fullScreen256,9892
  int itemCount;										// number of items;itemCount257,9946
  int fontIndex;										// fontIndex258,9992
  int cursorItem;										// which item as the cursorcursorItem259,10022
	int fadeCycle;										//fadeCycle260,10077
	float fadeClamp;									//fadeClamp261,10105
	float fadeAmount;									//fadeAmount262,10134
  const char *onOpen;								// run when the menu is first openedonOpen263,10164
  const char *onClose;							// run when the menu is closedonClose264,10230
  const char *onESC;								// run when the menu is closedonESC265,10290
	const char *soundName;						// background loop sound for menusoundName266,10349
  vec4_t focusColor;								// focus color for itemsfocusColor268,10413
  vec4_t disableColor;							// focus color for itemsdisableColor269,10466
  itemDef_t *items[MAX_MENUITEMS];	// items this menu contains   items270,10520
} menuDef_t;menuDef_t271,10586
  const char *fontStr;fontStr274,10617
  const char *cursorStr;cursorStr275,10640
  const char *gradientStr;gradientStr276,10665
  fontInfo_t textFont;textFont277,10692
  fontInfo_t smallFont;smallFont278,10715
  fontInfo_t bigFont;bigFont279,10739
  qhandle_t cursor;cursor280,10761
  qhandle_t gradientBar;gradientBar281,10781
  qhandle_t scrollBarArrowUp;scrollBarArrowUp282,10806
  qhandle_t scrollBarArrowDown;scrollBarArrowDown283,10836
  qhandle_t scrollBarArrowLeft;scrollBarArrowLeft284,10868
  qhandle_t scrollBarArrowRight;scrollBarArrowRight285,10900
  qhandle_t scrollBar;scrollBar286,10933
  qhandle_t scrollBarThumb;scrollBarThumb287,10956
  qhandle_t buttonMiddle;buttonMiddle288,10984
  qhandle_t buttonInside;buttonInside289,11010
  qhandle_t solidBox;solidBox290,11036
  qhandle_t sliderBar;sliderBar291,11058
  qhandle_t sliderThumb;sliderThumb292,11081
  sfxHandle_t menuEnterSound;menuEnterSound293,11106
  sfxHandle_t menuExitSound;menuExitSound294,11136
  sfxHandle_t menuBuzzSound;menuBuzzSound295,11165
  sfxHandle_t itemFocusSound;itemFocusSound296,11194
  float fadeClamp;fadeClamp297,11224
  int fadeCycle;fadeCycle298,11243
  float fadeAmount;fadeAmount299,11260
  float shadowX;shadowX300,11280
  float shadowY;shadowY301,11297
  vec4_t shadowColor;shadowColor302,11314
  float shadowFadeClamp;shadowFadeClamp303,11336
  qboolean fontRegistered;fontRegistered304,11361
	qhandle_t fxBasePic;fxBasePic307,11410
  qhandle_t fxPic[7];fxPic308,11432
	qhandle_t	crosshairShader[NUM_CROSSHAIRS];crosshairShader309,11454
} cachedAssets_t;cachedAssets_t311,11499
  const char *name;name314,11535
  void (*handler) (itemDef_t *item, char** args);handler315,11555
} commandDef_t;commandDef_t316,11605
  qhandle_t (*registerShaderNoMip) (const char *p);registerShaderNoMip319,11639
  void (*setColor) (const vec4_t v);setColor320,11691
  void (*drawHandlePic) (float x, float y, float w, float h, qhandle_t asset);drawHandlePic321,11728
  void (*drawStretchPic) (float x, float y, float w, float h, float s1, float t1, float s2, float t2, qhandle_t hShader );drawStretchPic322,11807
  void (*drawText) (float x, float y, float scale, vec4_t color, const char *text, float adjust, int limit, int style );drawText323,11930
  int (*textWidth) (const char *text, float scale, int limit);textWidth324,12051
  int (*textHeight) (const char *text, float scale, int limit);textHeight325,12114
  qhandle_t (*registerModel) (const char *p);registerModel326,12178
  void (*modelBounds) (qhandle_t model, vec3_t min, vec3_t max);modelBounds327,12224
  void (*fillRect) ( float x, float y, float w, float h, const vec4_t color);fillRect328,12289
  void (*drawRect) ( float x, float y, float w, float h, float size, const vec4_t color);drawRect329,12367
  void (*drawSides) (float x, float y, float w, float h, float size);drawSides330,12457
  void (*drawTopBottom) (float x, float y, float w, float h, float size);drawTopBottom331,12527
  void (*clearScene) ( void );clearScene332,12601
  void (*addRefEntityToScene) (const refEntity_t *re );addRefEntityToScene333,12632
  void (*renderScene) ( const refdef_t *fd );renderScene334,12688
  void (*registerFont) (const char *pFontname, int pointSize, fontInfo_t *font);registerFont335,12734
  void (*ownerDrawItem) (float x, float y, float w, float h, float text_x, float text_y, int ownerDraw, int ownerDrawFlags, int align, float special, float scale, vec4_t color, qhandle_t shader, int textStyle);ownerDrawItem336,12815
	float (*getValue) (int ownerDraw);getValue337,13026
	qboolean (*ownerDrawVisible) (int flags);ownerDrawVisible338,13062
  void (*runScript)(char **p);runScript339,13105
  void (*getTeamColor)(vec4_t *color);getTeamColor340,13136
  void (*getCVarString)(const char *cvar, char *buffer, int bufsize);getCVarString341,13175
  float (*getCVarValue)(const char *cvar);getCVarValue342,13245
  void (*setCVar)(const char *cvar, const char *value);setCVar343,13288
  void (*drawTextWithCursor)(float x, float y, float scale, vec4_t color, const char *text, int cursorPos, char cursor, int limit, int style);drawTextWithCursor344,13344
  void (*setOverstrikeMode)(qboolean b);setOverstrikeMode345,13487
  qboolean (*getOverstrikeMode)( void );getOverstrikeMode346,13528
  void (*startLocalSound)( sfxHandle_t sfx, int channelNum );startLocalSound347,13569
  qboolean (*ownerDrawHandleKey)(int ownerDraw, int flags, float *special, int key);ownerDrawHandleKey348,13631
  int (*feederCount)(float feederID);feederCount349,13716
  const char *(*feederItemText)(float feederID, int index, int column, qhandle_t *handle);feederItemText350,13754
  qhandle_t (*feederItemImage)(float feederID, int index);feederItemImage351,13845
  void (*feederSelection)(float feederID, int index);feederSelection352,13904
	void (*keynumToStringBuf)( int keynum, char *buf, int buflen );keynumToStringBuf353,13958
	void (*getBindingBuf)( int keynum, char *buf, int buflen );getBindingBuf354,14023
	void (*setBinding)( int keynum, const char *binding );setBinding355,14084
	void (*executeText)(int exec_when, const char *text );	executeText356,14140
	void (*Error)(int level, const char *error, ...);Error357,14197
	void (*Print)(const char *msg, ...);Print358,14248
	void (*Pause)(qboolean b);Pause359,14286
	int (*ownerDrawWidth)(int ownerDraw, float scale);ownerDrawWidth360,14314
	sfxHandle_t (*registerSound)(const char *name, qboolean compressed);registerSound361,14366
	void (*startBackgroundTrack)( const char *intro, const char *loop);startBackgroundTrack362,14436
	void (*stopBackgroundTrack)( void );stopBackgroundTrack363,14505
	int (*playCinematic)(const char *name, float x, float y, float w, float h);playCinematic364,14543
	void (*stopCinematic)(int handle);stopCinematic365,14620
	void (*drawCinematic)(int handle, float x, float y, float w, float h);drawCinematic366,14656
	void (*runCinematicFrame)(int handle);runCinematicFrame367,14728
  float			yscale;yscale369,14769
  float			xscale;xscale370,14787
  float			bias;bias371,14805
  int				realTime;realTime372,14821
  int				frameTime;frameTime373,14840
	int				cursorx;cursorx374,14860
	int				cursory;cursory375,14877
	qboolean	debug;debug376,14894
  cachedAssets_t Assets;Assets378,14912
	glconfig_t glconfig;glconfig380,14938
	qhandle_t	whiteShader;whiteShader381,14960
  qhandle_t gradientImage;gradientImage382,14984
  qhandle_t cursor;cursor383,15011
	float FPS;FPS384,15031
} displayContextDef_t;displayContextDef_t386,15044

ui/ui_syscalls.c,7977
static intptr_t (QDECL *syscall)( intptr_t arg, ... ) = (intptr_t (QDECL *)( intptr_t, ...))-1;syscall31,1159
void dllEntry( intptr_t (QDECL *syscallptr)( intptr_t arg,... ) ) {intptr_t33,1256
int PASSFLOAT( float x ) {PASSFLOAT37,1350
void trap_Print( const char *string ) {trap_Print43,1421
void trap_Error( const char *string ) {trap_Error47,1494
int trap_Milliseconds( void ) {trap_Milliseconds51,1567
void trap_Cvar_Register( vmCvar_t *cvar, const char *var_name, const char *value, int flags ) {trap_Cvar_Register55,1639
void trap_Cvar_Update( vmCvar_t *cvar ) {trap_Cvar_Update59,1798
void trap_Cvar_Set( const char *var_name, const char *value ) {trap_Cvar_Set63,1877
float trap_Cvar_VariableValue( const char *var_name ) {trap_Cvar_VariableValue67,1986
void trap_Cvar_VariableStringBuffer( const char *var_name, char *buffer, int bufsize ) {trap_Cvar_VariableStringBuffer73,2127
void trap_Cvar_SetValue( const char *var_name, float value ) {trap_Cvar_SetValue77,2288
void trap_Cvar_Reset( const char *name ) {trap_Cvar_Reset81,2414
void trap_Cvar_Create( const char *var_name, const char *var_value, int flags ) {trap_Cvar_Create85,2494
void trap_Cvar_InfoStringBuffer( int bit, char *buffer, int bufsize ) {trap_Cvar_InfoStringBuffer89,2635
int trap_Argc( void ) {trap_Argc93,2770
void trap_Argv( int n, char *buffer, int bufferLength ) {trap_Argv97,2825
void trap_Cmd_ExecuteText( int exec_when, const char *text ) {trap_Cmd_ExecuteText101,2932
int trap_FS_FOpenFile( const char *qpath, fileHandle_t *f, fsMode_t mode ) {trap_FS_FOpenFile105,3047
void trap_FS_Read( void *buffer, int len, fileHandle_t f ) {trap_FS_Read109,3179
void trap_FS_Write( const void *buffer, int len, fileHandle_t f ) {trap_FS_Write113,3283
void trap_FS_FCloseFile( fileHandle_t f ) {trap_FS_FCloseFile117,3395
int trap_FS_GetFileList(  const char *path, const char *extension, char *listbuf, int bufsize ) {trap_FS_GetFileList121,3475
int trap_FS_Seek( fileHandle_t f, long offset, int origin ) {trap_FS_Seek125,3649
qhandle_t trap_R_RegisterModel( const char *name ) {trap_R_RegisterModel129,3764
qhandle_t trap_R_RegisterSkin( const char *name ) {trap_R_RegisterSkin133,3865
void trap_R_RegisterFont(const char *fontName, int pointSize, fontInfo_t *font) {trap_R_RegisterFont137,3964
qhandle_t trap_R_RegisterShaderNoMip( const char *name ) {trap_R_RegisterShaderNoMip141,4107
void trap_R_ClearScene( void ) {trap_R_ClearScene145,4220
void trap_R_AddRefEntityToScene( const refEntity_t *re ) {trap_R_AddRefEntityToScene149,4285
void trap_R_AddPolyToScene( qhandle_t hShader , int numVerts, const polyVert_t *verts ) {trap_R_AddPolyToScene153,4389
void trap_R_AddLightToScene( const vec3_t org, float intensity, float r, float g, float b ) {trap_R_AddLightToScene157,4541
void trap_R_RenderScene( const refdef_t *fd ) {trap_R_RenderScene161,4741
void trap_R_SetColor( const float *rgba ) {trap_R_SetColor165,4826
void trap_R_DrawStretchPic( float x, float y, float w, float h, float s1, float t1, float s2, float t2, qhandle_t hShader ) {trap_R_DrawStretchPic169,4906
void	trap_R_ModelBounds( clipHandle_t model, vec3_t mins, vec3_t maxs ) {trap_R_ModelBounds173,5193
void trap_UpdateScreen( void ) {trap_UpdateScreen177,5319
int trap_CM_LerpTag( orientation_t *tag, clipHandle_t mod, int startFrame, int endFrame, float frac, const char *tagName ) {trap_CM_LerpTag181,5384
void trap_S_StartLocalSound( sfxHandle_t sfx, int channelNum ) {trap_S_StartLocalSound185,5604
sfxHandle_t	trap_S_RegisterSound( const char *sample, qboolean compressed ) {trap_S_RegisterSound189,5723
void trap_Key_KeynumToStringBuf( int keynum, char *buf, int buflen ) {trap_Key_KeynumToStringBuf193,5863
void trap_Key_GetBindingBuf( int keynum, char *buf, int buflen ) {trap_Key_GetBindingBuf197,5996
void trap_Key_SetBinding( int keynum, const char *binding ) {trap_Key_SetBinding201,6121
qboolean trap_Key_IsDown( int keynum ) {trap_Key_IsDown205,6234
qboolean trap_Key_GetOverstrikeMode( void ) {trap_Key_GetOverstrikeMode209,6320
void trap_Key_SetOverstrikeMode( qboolean state ) {trap_Key_SetOverstrikeMode213,6414
void trap_Key_ClearStates( void ) {trap_Key_ClearStates217,6514
int trap_Key_GetCatcher( void ) {trap_Key_GetCatcher221,6585
void trap_Key_SetCatcher( int catcher ) {trap_Key_SetCatcher225,6660
void trap_GetClipboardData( char *buf, int bufsize ) {trap_GetClipboardData229,6745
void trap_GetClientState( uiClientState_t *state ) {trap_GetClientState233,6850
void trap_GetGlconfig( glconfig_t *glconfig ) {trap_GetGlconfig237,6944
int trap_GetConfigString( int index, char* buff, int buffsize ) {trap_GetConfigString241,7033
int	trap_LAN_GetServerCount( int source ) {trap_LAN_GetServerCount245,7164
void trap_LAN_GetServerAddressString( int source, int n, char *buf, int buflen ) {trap_LAN_GetServerAddressString249,7261
void trap_LAN_GetServerInfo( int source, int n, char *buf, int buflen ) {trap_LAN_GetServerInfo253,7414
int trap_LAN_GetServerPing( int source, int n ) {trap_LAN_GetServerPing257,7549
int trap_LAN_GetPingQueueCount( void ) {trap_LAN_GetPingQueueCount261,7654
int trap_LAN_ServerStatus( const char *serverAddress, char *serverStatus, int maxLen ) {trap_LAN_ServerStatus265,7743
void trap_LAN_SaveCachedServers( void ) {trap_LAN_SaveCachedServers269,7912
void trap_LAN_LoadCachedServers( void ) {trap_LAN_LoadCachedServers273,7995
void trap_LAN_ResetPings(int n) {trap_LAN_ResetPings277,8078
void trap_LAN_ClearPing( int n ) {trap_LAN_ClearPing281,8149
void trap_LAN_GetPing( int n, char *buf, int buflen, int *pingtime ) {trap_LAN_GetPing285,8220
void trap_LAN_GetPingInfo( int n, char *buf, int buflen ) {trap_LAN_GetPingInfo289,8348
void trap_LAN_MarkServerVisible( int source, int n, qboolean visible ) {trap_LAN_MarkServerVisible293,8459
int trap_LAN_ServerIsVisible( int source, int n) {trap_LAN_ServerIsVisible297,8593
qboolean trap_LAN_UpdateVisiblePings( int source ) {trap_LAN_UpdateVisiblePings301,8701
int trap_LAN_AddServer(int source, const char *name, const char *addr) {trap_LAN_AddServer305,8811
void trap_LAN_RemoveServer(int source, const char *addr) {trap_LAN_RemoveServer309,8944
int trap_LAN_CompareServers( int source, int sortKey, int sortDir, int s1, int s2 ) {trap_LAN_CompareServers313,9053
int trap_MemoryRemaining( void ) {trap_MemoryRemaining317,9218
void trap_GetCDKey( char *buf, int buflen ) {trap_GetCDKey321,9296
void trap_SetCDKey( char *buf ) {trap_SetCDKey325,9384
int trap_PC_AddGlobalDefine( char *define ) {trap_PC_AddGlobalDefine329,9452
int trap_PC_LoadSource( const char *filename ) {trap_PC_LoadSource333,9553
int trap_PC_FreeSource( int handle ) {trap_PC_FreeSource337,9653
int trap_PC_ReadToken( int handle, pc_token_t *pc_token ) {trap_PC_ReadToken341,9741
int trap_PC_SourceFileAndLine( int handle, char *filename, int *line ) {trap_PC_SourceFileAndLine345,9859
void trap_S_StopBackgroundTrack( void ) {trap_S_StopBackgroundTrack349,10006
void trap_S_StartBackgroundTrack( const char *intro, const char *loop) {trap_S_StartBackgroundTrack353,10089
int trap_RealTime(qtime_t *qtime) {trap_RealTime357,10217
int trap_CIN_PlayCinematic( const char *arg0, int xpos, int ypos, int width, int height, int bits) {trap_CIN_PlayCinematic362,10435
e_status trap_CIN_StopCinematic(int handle) {trap_CIN_StopCinematic368,10765
e_status trap_CIN_RunCinematic (int handle) {trap_CIN_RunCinematic374,10989
void trap_CIN_DrawCinematic (int handle) {trap_CIN_DrawCinematic380,11114
void trap_CIN_SetExtents (int handle, int x, int y, int w, int h) {trap_CIN_SetExtents386,11253
void	trap_R_RemapShader( const char *oldShader, const char *newShader, const char *timeOffset ) {trap_R_RemapShader391,11375
qboolean trap_VerifyCDKey( const char *key, const char *chksum) {trap_VerifyCDKey395,11541
void trap_SetPbClStatus( int status ) {trap_SetPbClStatus399,11658

ui/ui_gameinfo.c,978
int				ui_numBots;ui_numBots35,1052
static char		*ui_botInfos[MAX_BOTS];ui_botInfos36,1071
static int		ui_numArenas;ui_numArenas38,1109
static char		*ui_arenaInfos[MAX_ARENAS];ui_arenaInfos39,1135
static int		ui_numSinglePlayerArenas;ui_numSinglePlayerArenas42,1197
static int		ui_numSpecialSinglePlayerArenas;ui_numSpecialSinglePlayerArenas43,1235
int UI_ParseInfos( char *buf, int max, char *infos[] ) {UI_ParseInfos51,1340
static void UI_LoadArenasFromFile( char *filename ) {UI_LoadArenasFromFile107,2436
void UI_LoadArenas( void ) {UI_LoadArenas135,3106
static void UI_LoadBotsFromFile( char *filename ) {UI_LoadBotsFromFile218,5536
void UI_LoadBots( void ) {UI_LoadBots248,6207
char *UI_GetBotInfoByNumber( int num ) {UI_GetBotInfoByNumber285,6983
char *UI_GetBotInfoByName( const char *name ) {UI_GetBotInfoByName299,7235
int UI_GetNumBots( void ) {UI_GetNumBots313,7488
char *UI_GetBotNameByNumber( int num ) {UI_GetBotNameByNumber318,7540

asm/qasm.h,270
#define __ASM_I386____ASM_I386__23,995
#define C(C32,1129
#define pl_normal	pl_normal39,1281
#define pl_dist	pl_dist40,1301
#define pl_type	pl_type41,1321
#define pl_signbits	pl_signbits42,1341
#define pl_pad	pl_pad43,1364
#define pl_size	pl_size44,1383

botlib/aasfile.h,8272
#define AASID	AASID27,1025
#define AASVERSION_OLD	AASVERSION_OLD28,1079
#define AASVERSION	AASVERSION29,1107
#define PRESENCE_NONE	PRESENCE_NONE32,1150
#define PRESENCE_NORMAL	PRESENCE_NORMAL33,1177
#define PRESENCE_CROUCH	PRESENCE_CROUCH34,1206
#define MAX_TRAVELTYPES	MAX_TRAVELTYPES37,1251
#define TRAVEL_INVALID	TRAVEL_INVALID38,1281
#define TRAVEL_WALK	TRAVEL_WALK39,1335
#define TRAVEL_CROUCH	TRAVEL_CROUCH40,1372
#define TRAVEL_BARRIERJUMP	TRAVEL_BARRIERJUMP41,1412
#define TRAVEL_JUMP	TRAVEL_JUMP42,1469
#define TRAVEL_LADDER	TRAVEL_LADDER43,1506
#define TRAVEL_WALKOFFLEDGE	TRAVEL_WALKOFFLEDGE44,1554
#define TRAVEL_SWIM	TRAVEL_SWIM45,1608
#define TRAVEL_WATERJUMP	TRAVEL_WATERJUMP46,1646
#define TRAVEL_TELEPORT	TRAVEL_TELEPORT47,1700
#define TRAVEL_ELEVATOR	TRAVEL_ELEVATOR48,1747
#define TRAVEL_ROCKETJUMP	TRAVEL_ROCKETJUMP49,1799
#define TRAVEL_BFGJUMP	TRAVEL_BFGJUMP50,1868
#define TRAVEL_GRAPPLEHOOK	TRAVEL_GRAPPLEHOOK51,1932
#define TRAVEL_DOUBLEJUMP	TRAVEL_DOUBLEJUMP52,2002
#define TRAVEL_RAMPJUMP	TRAVEL_RAMPJUMP53,2048
#define TRAVEL_STRAFEJUMP	TRAVEL_STRAFEJUMP54,2091
#define TRAVEL_JUMPPAD	TRAVEL_JUMPPAD55,2137
#define TRAVEL_FUNCBOB	TRAVEL_FUNCBOB56,2178
#define TRAVELTYPE_MASK	TRAVELTYPE_MASK59,2246
#define TRAVELFLAG_NOTTEAM1	TRAVELFLAG_NOTTEAM160,2282
#define TRAVELFLAG_NOTTEAM2	TRAVELFLAG_NOTTEAM261,2322
#define FACE_SOLID	FACE_SOLID64,2376
#define FACE_LADDER	FACE_LADDER65,2433
#define FACE_GROUND	FACE_GROUND66,2469
#define FACE_GAP	FACE_GAP67,2535
#define FACE_LIQUID	FACE_LIQUID68,2579
#define FACE_LIQUIDSURFACE	FACE_LIQUIDSURFACE69,2647
#define FACE_BRIDGE	FACE_BRIDGE70,2713
#define AREACONTENTS_WATER	AREACONTENTS_WATER73,2804
#define AREACONTENTS_LAVA	AREACONTENTS_LAVA74,2836
#define AREACONTENTS_SLIME	AREACONTENTS_SLIME75,2867
#define AREACONTENTS_CLUSTERPORTAL	AREACONTENTS_CLUSTERPORTAL76,2899
#define AREACONTENTS_TELEPORTAL	AREACONTENTS_TELEPORTAL77,2937
#define AREACONTENTS_ROUTEPORTAL	AREACONTENTS_ROUTEPORTAL78,2974
#define AREACONTENTS_TELEPORTER	AREACONTENTS_TELEPORTER79,3011
#define AREACONTENTS_JUMPPAD	AREACONTENTS_JUMPPAD80,3048
#define AREACONTENTS_DONOTENTER	AREACONTENTS_DONOTENTER81,3083
#define	AREACONTENTS_VIEWPORTAL	AREACONTENTS_VIEWPORTAL82,3121
#define AREACONTENTS_MOVER	AREACONTENTS_MOVER83,3159
#define AREACONTENTS_NOTTEAM1	AREACONTENTS_NOTTEAM184,3194
#define AREACONTENTS_NOTTEAM2	AREACONTENTS_NOTTEAM285,3231
#define AREACONTENTS_MODELNUMSHIFT	AREACONTENTS_MODELNUMSHIFT87,3316
#define AREACONTENTS_MAXMODELNUM	AREACONTENTS_MAXMODELNUM88,3355
#define AREACONTENTS_MODELNUM	AREACONTENTS_MODELNUM89,3394
#define AREA_GROUNDED	AREA_GROUNDED92,3497
#define AREA_LADDER	AREA_LADDER93,3555
#define AREA_LIQUID	AREA_LIQUID94,3623
#define AREA_DISABLED	AREA_DISABLED95,3675
#define AREA_BRIDGE	AREA_BRIDGE96,3743
#define AAS_LUMPS	AAS_LUMPS99,3821
#define AASLUMP_BBOXES	AASLUMP_BBOXES100,3846
#define AASLUMP_VERTEXES	AASLUMP_VERTEXES101,3874
#define AASLUMP_PLANES	AASLUMP_PLANES102,3903
#define AASLUMP_EDGES	AASLUMP_EDGES103,3931
#define AASLUMP_EDGEINDEX	AASLUMP_EDGEINDEX104,3958
#define AASLUMP_FACES	AASLUMP_FACES105,3988
#define AASLUMP_FACEINDEX	AASLUMP_FACEINDEX106,4015
#define AASLUMP_AREAS	AASLUMP_AREAS107,4045
#define AASLUMP_AREASETTINGS	AASLUMP_AREASETTINGS108,4072
#define AASLUMP_REACHABILITY	AASLUMP_REACHABILITY109,4104
#define AASLUMP_NODES	AASLUMP_NODES110,4136
#define AASLUMP_PORTALS	AASLUMP_PORTALS111,4164
#define AASLUMP_PORTALINDEX	AASLUMP_PORTALINDEX112,4194
#define AASLUMP_CLUSTERS	AASLUMP_CLUSTERS113,4227
typedef struct aas_bbox_saas_bbox_s118,4310
	int presencetype;presencetype120,4338
	int flags;flags121,4357
	vec3_t mins, maxs;mins122,4369
	vec3_t mins, maxs;maxs122,4369
} aas_bbox_t;aas_bbox_t123,4389
typedef struct aas_reachability_saas_reachability_s128,4472
	int areanum;						//number of the reachable areaareanum130,4508
	int facenum;						//number of the face towards the other areafacenum131,4558
	int edgenum;						//number of the edge towards the other areaedgenum132,4621
	vec3_t start;						//start point of inter area movementstart133,4684
	vec3_t end;							//end point of inter area movementend134,4741
	int traveltype;					//type of travel required to get to the areatraveltype135,4795
	unsigned short int traveltime;//travel time of the inter area movementtraveltime136,4861
} aas_reachability_t;aas_reachability_t137,4933
typedef struct aas_areasettings_saas_areasettings_s140,4972
	int contents;						//contents of the areacontents143,5055
	int areaflags;						//several area flagsareaflags144,5098
	int presencetype;					//how a bot can be present in this areapresencetype145,5140
	int cluster;						//cluster the area belongs to, if negative it's a portalcluster146,5203
	int clusterareanum;				//number of the area in the clusterclusterareanum147,5279
	int numreachableareas;			//number of reachable areas from this onenumreachableareas148,5339
	int firstreachablearea;			//first reachable area in the reachable area indexfirstreachablearea149,5407
} aas_areasettings_t;aas_areasettings_t150,5485
typedef struct aas_portal_saas_portal_s153,5525
	int areanum;						//area that is the actual portalareanum155,5555
	int frontcluster;					//cluster at front of portalfrontcluster156,5607
	int backcluster;					//cluster at back of portalbackcluster157,5659
	int clusterareanum[2];			//number of the area in the front and back clusterclusterareanum158,5709
} aas_portal_t;aas_portal_t159,5786
typedef int aas_portalindex_t;aas_portalindex_t162,5826
typedef struct aas_cluster_saas_cluster_s165,5868
	int numareas;						//number of areas in the clusternumareas167,5899
	int numreachabilityareas;			//number of areas with reachabilitiesnumreachabilityareas168,5952
	int numportals;						//number of cluster portalsnumportals169,6019
	int firstportal;					//first cluster portal in the indexfirstportal170,6069
} aas_cluster_t;aas_cluster_t171,6127
typedef vec3_t aas_vertex_t;aas_vertex_t175,6188
typedef struct aas_plane_saas_plane_s178,6256
	vec3_t normal;						//normal vector of the planenormal180,6285
	float dist;							//distance of the plane (normal vector * distance = point in plane)dist181,6335
	int type;type182,6422
} aas_plane_t;aas_plane_t183,6433
typedef struct aas_edge_saas_edge_s186,6456
	int v[2];							//numbers of the vertexes of this edgev188,6484
} aas_edge_t;aas_edge_t189,6540
typedef int aas_edgeindex_t;aas_edgeindex_t192,6603
typedef struct aas_face_saas_face_s195,6696
	int planenum;						//number of the plane this face is inplanenum197,6724
	int faceflags;						//face flags (no use to create face settings for just this field)faceflags198,6782
	int numedges;						//number of edges in the boundary of the facenumedges199,6869
	int firstedge;						//first edge in the edge indexfirstedge200,6935
	int frontarea;						//area at the front of this facefrontarea201,6987
	int backarea;						//area at the back of this facebackarea202,7041
} aas_face_t;aas_face_t203,7093
typedef int aas_faceindex_t;aas_faceindex_t206,7166
typedef struct aas_area_saas_area_s209,7228
	int areanum;						//number of this areaareanum211,7256
	int numfaces;						//number of faces used for the boundary of the areanumfaces213,7314
	int firstface;						//first face in the face index used for the boundary of the areafirstface214,7386
	vec3_t mins;						//mins of the areamins215,7472
	vec3_t maxs;						//maxs of the areamaxs216,7510
	vec3_t center;						//'center' of the areacenter217,7548
} aas_area_t;aas_area_t218,7592
typedef struct aas_node_saas_node_s221,7631
	int planenum;planenum223,7659
	int children[2];					//child nodes of this node, or areas as leaves when negativechildren224,7674
} aas_node_t;aas_node_t226,7808
	int fileofs;fileofs233,7894
	int filelen;filelen234,7908
} aas_lump_t;aas_lump_t235,7922
typedef struct aas_header_saas_header_s238,7955
	int ident;ident240,7985
	int version;version241,7997
	int bspchecksum;bspchecksum242,8011
	aas_lump_t lumps[AAS_LUMPS];lumps244,8045
} aas_header_t;aas_header_t245,8075

botlib/l_script.c,3515
typedef enum {qfalse, qtrue}	qboolean;qfalse46,1475
typedef enum {qfalse, qtrue}	qboolean;qtrue46,1475
typedef enum {qfalse, qtrue}	qboolean;qboolean46,1475
#define qtrue	qtrue68,1924
#define qfalse	qfalse69,1943
#define qtrue	qtrue78,2120
#define qfalse	qfalse79,2139
#define PUNCTABLEPUNCTABLE83,2176
punctuation_t default_punctuations[] =default_punctuations86,2223
char basefolder[MAX_PATH];basefolder164,3991
char basefolder[MAX_QPATH];basefolder166,4024
void PS_CreatePunctuationTable(script_t *script, punctuation_t *punctuations)PS_CreatePunctuationTable175,4279
char *PunctuationFromNum(script_t *script, int num)PunctuationFromNum215,5601
void QDECL ScriptError(script_t *script, char *str, ...)ScriptError231,6091
void QDECL ScriptWarning(script_t *script, char *str, ...)ScriptWarning257,6898
void SetScriptPunctuations(script_t *script, punctuation_t *p)SetScriptPunctuations283,7717
int PS_ReadWhiteSpace(script_t *script)PS_ReadWhiteSpace300,8400
int PS_ReadEscapeCharacter(script_t *script, char *ch)PS_ReadEscapeCharacter359,9904
int PS_ReadString(script_t *script, token_t *token, int quote)PS_ReadString437,12185
int PS_ReadName(script_t *script, token_t *token)PS_ReadName526,14559
void NumberValue(char *string, int subtype, unsigned long int *intvalue,NumberValue556,15335
int PS_ReadNumber(script_t *script, token_t *token)PS_ReadNumber628,17181
int PS_ReadLiteral(script_t *script, token_t *token)PS_ReadLiteral736,20175
int PS_ReadPunctuation(script_t *script, token_t *token)PS_ReadPunctuation783,21483
int PS_ReadPrimitive(script_t *script, token_t *token)PS_ReadPrimitive824,22582
int PS_ReadToken(script_t *script, token_t *token)PS_ReadToken850,23347
int PS_ExpectTokenString(script_t *script, char *string)PS_ExpectTokenString924,25700
int PS_ExpectTokenType(script_t *script, int type, int subtype, token_t *token)PS_ExpectTokenType947,26303
int PS_ExpectAnyToken(script_t *script, token_t *token)PS_ExpectAnyToken1005,28101
int PS_CheckTokenString(script_t *script, char *string)PS_CheckTokenString1023,28574
int PS_CheckTokenType(script_t *script, int type, int subtype, token_t *token)PS_CheckTokenType1040,29105
int PS_SkipUntilString(script_t *script, char *string)PS_SkipUntilString1062,29745
void PS_UnreadLastToken(script_t *script)PS_UnreadLastToken1078,30196
void PS_UnreadToken(script_t *script, token_t *token)PS_UnreadToken1088,30530
char PS_NextWhiteSpaceChar(script_t *script)PS_NextWhiteSpaceChar1100,31001
void StripDoubleQuotes(char *string)StripDoubleQuotes1117,31453
void StripSingleQuotes(char *string)StripSingleQuotes1134,31909
float ReadSignedFloat(script_t *script)ReadSignedFloat1151,32365
signed long int ReadSignedInt(script_t *script)ReadSignedInt1174,33016
void SetScriptFlags(script_t *script, int flags)SetScriptFlags1197,33717
int GetScriptFlags(script_t *script)GetScriptFlags1207,34052
void ResetScript(script_t *script)ResetScript1217,34374
int EndOfScript(script_t *script)EndOfScript1242,35176
int NumLinesCrossed(script_t *script)NumLinesCrossed1252,35512
int ScriptSkipTo(script_t *script, char *value)ScriptSkipTo1262,35854
int FileLength(FILE *fp)FileLength1289,36469
script_t *LoadScriptFile(const char *filename)LoadScriptFile1308,36882
script_t *LoadScriptMemory(char *ptr, int length, char *name)LoadScriptMemory1375,38593
void FreeScript(script_t *script)FreeScript1411,39694
void PS_SetBaseFolder(char *path)PS_SetBaseFolder1424,40112

botlib/be_aas_cluster.h,0

botlib/l_struct.c,784
#define qtrue	qtrue50,1676
#define qfalse	qfalse51,1695
fielddef_t *FindField(fielddef_t *defs, char *name)FindField60,1950
qboolean ReadNumber(source_t *source, fielddef_t *fd, void *p)ReadNumber76,2380
qboolean ReadChar(source_t *source, fielddef_t *fd, void *p)ReadChar191,5493
int ReadString(source_t *source, fielddef_t *fd, void *p)ReadString216,6127
int ReadStructure(source_t *source, structdef_t *def, char *structure)ReadStructure236,6759
int WriteIndent(FILE *fp, int indent)WriteIndent330,9087
int WriteFloat(FILE *fp, float value)WriteFloat344,9480
int WriteStructWithIndent(FILE *fp, structdef_t *def, char *structure, int indent)WriteStructWithIndent372,10110
int WriteStructure(FILE *fp, structdef_t *def, char *structure)WriteStructure458,12223

botlib/l_crc.c,553
#define CRC_INIT_VALUE	CRC_INIT_VALUE47,1604
#define CRC_XOR_VALUE	CRC_XOR_VALUE48,1634
unsigned short crctable[257] =crctable50,1664
void CRC_Init(unsigned short *crcvalue)CRC_Init92,3999
void CRC_ProcessByte(unsigned short *crcvalue, byte data)CRC_ProcessByte102,4322
unsigned short CRC_Value(unsigned short crcvalue)CRC_Value112,4708
unsigned short CRC_ProcessString(unsigned char *data, int length)CRC_ProcessString122,5047
void CRC_ContinueProcessString(unsigned short *crc, char *data, int length)CRC_ContinueProcessString143,5632

botlib/be_aas_debug.h,0

botlib/be_ai_weap.c,2154
#define WEAPON_OFS(WEAPON_OFS51,1656
#define PROJECTILE_OFS(PROJECTILE_OFS52,1712
static fielddef_t weaponinfo_fields[] =weaponinfo_fields55,1797
static fielddef_t projectileinfo_fields[] =projectileinfo_fields83,3777
static structdef_t weaponinfo_struct =weaponinfo_struct103,5117
static structdef_t projectileinfo_struct =projectileinfo_struct107,5202
typedef struct weaponconfig_sweaponconfig_s113,5356
	int numweapons;numweapons115,5388
	int numprojectiles;numprojectiles116,5405
	projectileinfo_t *projectileinfo;projectileinfo117,5426
	weaponinfo_t *weaponinfo;weaponinfo118,5461
} weaponconfig_t;weaponconfig_t119,5488
typedef struct bot_weaponstate_sbot_weaponstate_s122,5530
	struct weightconfig_s *weaponweightconfig;		//weapon weight configurationweaponweightconfig124,5565
	int *weaponweightindex;							//weapon weight indexweaponweightindex125,5640
} bot_weaponstate_t;bot_weaponstate_t126,5693
static bot_weaponstate_t *botweaponstates[MAX_CLIENTS+1];botweaponstates128,5715
static weaponconfig_t *weaponconfig;weaponconfig129,5773
int BotValidWeaponNumber(int weaponnum)BotValidWeaponNumber137,6024
bot_weaponstate_t *BotWeaponStateFromHandle(int handle)BotWeaponStateFromHandle152,6494
void DumpWeaponConfig(weaponconfig_t *wc)DumpWeaponConfig173,7149
weaponconfig_t *LoadWeaponConfig(char *filename)LoadWeaponConfig198,7830
int *WeaponWeightIndex(weightconfig_t *wwc, weaponconfig_t *wc)WeaponWeightIndex330,12096
void BotFreeWeaponWeights(int weaponstate)BotFreeWeaponWeights349,12666
int BotLoadWeaponWeights(int weaponstate, char *filename)BotLoadWeaponWeights364,13197
void BotGetWeaponInfo(int weaponstate, int weapon, weaponinfo_t *weaponinfo)BotGetWeaponInfo388,14056
int BotChooseBestFightWeapon(int weaponstate, int *inventory)BotChooseBestFightWeapon404,14637
void BotResetWeaponState(int weaponstate)BotResetWeaponState441,15641
int BotAllocWeaponState(void)BotAllocWeaponState462,16329
void BotFreeWeaponState(int handle)BotFreeWeaponState482,16816
int BotSetupWeaponAI(void)BotSetupWeaponAI504,17483
void BotShutdownWeaponAI(void)BotShutdownWeaponAI528,18123

botlib/be_aas_move.h,0

botlib/be_aas.h,6692
#define MAX_STRINGFIELD	MAX_STRINGFIELD34,1292
#define TFL_INVALID	TFL_INVALID38,1345
#define TFL_WALK	TFL_WALK39,1414
#define TFL_CROUCH	TFL_CROUCH40,1455
#define TFL_BARRIERJUMP	TFL_BARRIERJUMP41,1500
#define TFL_JUMP	TFL_JUMP42,1562
#define TFL_LADDER	TFL_LADDER43,1603
#define TFL_WALKOFFLEDGE	TFL_WALKOFFLEDGE44,1656
#define TFL_SWIM	TFL_SWIM45,1714
#define TFL_WATERJUMP	TFL_WATERJUMP46,1756
#define TFL_TELEPORT	TFL_TELEPORT47,1818
#define TFL_ELEVATOR	TFL_ELEVATOR48,1866
#define TFL_ROCKETJUMP	TFL_ROCKETJUMP49,1911
#define TFL_BFGJUMP	TFL_BFGJUMP50,1964
#define TFL_GRAPPLEHOOK	TFL_GRAPPLEHOOK51,2012
#define TFL_DOUBLEJUMP	TFL_DOUBLEJUMP52,2066
#define TFL_RAMPJUMP	TFL_RAMPJUMP53,2116
#define TFL_STRAFEJUMP	TFL_STRAFEJUMP54,2162
#define TFL_JUMPPAD	TFL_JUMPPAD55,2212
#define TFL_AIR	TFL_AIR56,2257
#define TFL_WATER	TFL_WATER57,2309
#define TFL_SLIME	TFL_SLIME58,2364
#define TFL_LAVA	TFL_LAVA59,2419
#define TFL_DONOTENTER	TFL_DONOTENTER60,2472
#define TFL_FUNCBOB	TFL_FUNCBOB61,2541
#define TFL_FLIGHT	TFL_FLIGHT62,2590
#define TFL_BRIDGE	TFL_BRIDGE63,2632
#define TFL_NOTTEAM1	TFL_NOTTEAM165,2689
#define TFL_NOTTEAM2	TFL_NOTTEAM266,2736
#define TFL_DEFAULT	TFL_DEFAULT69,2807
	SOLID_NOT,			// no interaction with other objectsSOLID_NOT77,3019
	SOLID_TRIGGER,		// only touch when inside, after movingSOLID_TRIGGER78,3070
	SOLID_BBOX,			// touch on edgeSOLID_BBOX79,3127
	SOLID_BSP			// bsp clip, touch on edgeSOLID_BSP80,3159
} solid_t;solid_t81,3199
typedef struct aas_trace_saas_trace_s84,3275
	qboolean	startsolid;	// if true, the initial point was in a solid areastartsolid86,3304
	float		fraction;	// time completed, 1.0 = didn't hit anythingfraction87,3376
	vec3_t		endpos;		// final positionendpos88,3439
	int			ent;		// entity blocking the traceent89,3475
	int			lastarea;	// last area the trace was in (zero if none)lastarea90,3517
	int			area;		// area blocking the trace (zero if none)area91,3579
	int			planenum;	// number of the plane that was hitplanenum92,3635
} aas_trace_t;aas_trace_t93,3688
typedef struct aas_entityinfo_saas_entityinfo_s123,4476
	int		valid;			// true if updated this framevalid125,4510
	int		type;			// entity typetype126,4555
	int		flags;			// entity flagsflags127,4584
	float	ltime;			// local timeltime128,4615
	float	update_time;	// time between last and current updateupdate_time129,4645
	int		number;			// number of the entitynumber130,4705
	vec3_t	origin;			// origin of the entityorigin131,4745
	vec3_t	angles;			// angles of the modelangles132,4787
	vec3_t	old_origin;		// for lerpingold_origin133,4828
	vec3_t	lastvisorigin;	// last visible originlastvisorigin134,4864
	vec3_t	mins;			// bounding box minimumsmins135,4910
	vec3_t	maxs;			// bounding box maximumsmaxs136,4951
	int		groundent;		// ground entitygroundent137,4992
	int		solid;			// solid typesolid138,5027
	int		modelindex;		// model usedmodelindex139,5056
	int		modelindex2;	// weapons, CTF flags, etcmodelindex2140,5089
	int		frame;			// model frame numberframe141,5135
	int		event;			// impulse events -- muzzle flashes, footsteps, etcevent142,5172
	int		eventParm;		// even parametereventParm143,5239
	int		powerups;		// bit flagspowerups144,5275
	int		weapon;			// determines weapon and flash model, etcweapon145,5305
	int		legsAnim;		// mask off ANIM_TOGGLEBITlegsAnim146,5363
	int		torsoAnim;		// mask off ANIM_TOGGLEBITtorsoAnim147,5407
} aas_entityinfo_t;aas_entityinfo_t148,5452
typedef struct aas_areainfo_saas_areainfo_s151,5486
	int contents;contents153,5518
	int flags;flags154,5533
	int presencetype;presencetype155,5545
	int cluster;cluster156,5564
	vec3_t mins;mins157,5578
	vec3_t maxs;maxs158,5592
	vec3_t center;center159,5606
} aas_areainfo_t;aas_areainfo_t160,5622
#define SE_NONE	SE_NONE163,5701
#define SE_HITGROUND	SE_HITGROUND164,5723
#define SE_LEAVEGROUND	SE_LEAVEGROUND165,5770
#define SE_ENTERWATER	SE_ENTERWATER166,5819
#define SE_ENTERSLIME	SE_ENTERSLIME167,5866
#define SE_ENTERLAVA	SE_ENTERLAVA168,5913
#define SE_HITGROUNDDAMAGE	SE_HITGROUNDDAMAGE169,5959
#define SE_GAP	SE_GAP170,6024
#define SE_TOUCHJUMPPAD	SE_TOUCHJUMPPAD171,6064
#define SE_TOUCHTELEPORTER	SE_TOUCHTELEPORTER172,6123
#define SE_ENTERAREA	SE_ENTERAREA173,6179
#define SE_HITGROUNDAREA	SE_HITGROUNDAREA174,6240
#define SE_HITBOUNDINGBOX	SE_HITBOUNDINGBOX175,6307
#define SE_TOUCHCLUSTERPORTAL	SE_TOUCHCLUSTERPORTAL176,6373
typedef struct aas_clientmove_saas_clientmove_s178,6438
	vec3_t endpos;			//position at the end of movement predictionendpos180,6472
	int endarea;			//area at end of movement predictionendarea181,6535
	vec3_t velocity;		//velocity at the end of movement predictionvelocity182,6588
	aas_trace_t trace;		//last tracetrace183,6652
	int presencetype;		//presence type at end of movement predictionpresencetype184,6686
	int stopevent;			//event that made the prediction stopstopevent185,6752
	int endcontents;		//contents at the end of movement predictionendcontents186,6808
	float time;				//time predicted aheadtime187,6872
	int frames;				//number of frames predicted aheadframes188,6911
} aas_clientmove_t;aas_clientmove_t189,6962
#define ALTROUTEGOAL_ALL	ALTROUTEGOAL_ALL192,7008
#define ALTROUTEGOAL_CLUSTERPORTALS	ALTROUTEGOAL_CLUSTERPORTALS193,7038
#define ALTROUTEGOAL_VIEWPORTALS	ALTROUTEGOAL_VIEWPORTALS194,7077
typedef struct aas_altroutegoal_saas_altroutegoal_s196,7114
	vec3_t origin;origin198,7150
	int areanum;areanum199,7166
	unsigned short starttraveltime;starttraveltime200,7180
	unsigned short goaltraveltime;goaltraveltime201,7213
	unsigned short extratraveltime;extratraveltime202,7245
} aas_altroutegoal_t;aas_altroutegoal_t203,7278
#define RSE_NONE	RSE_NONE206,7333
#define RSE_NOROUTE	RSE_NOROUTE207,7355
#define RSE_USETRAVELTYPE	RSE_USETRAVELTYPE208,7399
#define RSE_ENTERCONTENTS	RSE_ENTERCONTENTS209,7483
#define RSE_ENTERAREA	RSE_ENTERAREA210,7552
typedef struct aas_predictroute_saas_predictroute_s212,7615
	vec3_t endpos;			//position at the end of movement predictionendpos214,7651
	int endarea;			//area at end of movement predictionendarea215,7714
	int stopevent;			//event that made the prediction stopstopevent216,7767
	int endcontents;		//contents at the end of movement predictionendcontents217,7823
	int endtravelflags;		//end travel flagsendtravelflags218,7887
	int numareas;			//number of areas predicted aheadnumareas219,7928
	int time;				//time predicted ahead (in hundreth of a sec)time220,7979
} aas_predictroute_t;aas_predictroute_t221,8039

botlib/botlib.h,19060
#define	BOTLIB_API_VERSION	BOTLIB_API_VERSION32,1231
#define BOTFILESBASEFOLDER	BOTFILESBASEFOLDER46,1527
#define LINECOLOR_NONE	LINECOLOR_NONE48,1586
#define LINECOLOR_RED	LINECOLOR_RED49,1614
#define LINECOLOR_GREEN	LINECOLOR_GREEN50,1653
#define LINECOLOR_BLUE	LINECOLOR_BLUE51,1694
#define LINECOLOR_YELLOW	LINECOLOR_YELLOW52,1734
#define LINECOLOR_ORANGE	LINECOLOR_ORANGE53,1775
#define PRT_MESSAGE	PRT_MESSAGE56,1831
#define PRT_WARNING	PRT_WARNING57,1856
#define PRT_ERROR	PRT_ERROR58,1881
#define PRT_FATAL	PRT_FATAL59,1904
#define PRT_EXIT	PRT_EXIT60,1927
#define CMS_NORMAL	CMS_NORMAL63,1974
#define CMS_CHAT	CMS_CHAT64,1998
#define BLERR_NOERROR	BLERR_NOERROR67,2042
#define BLERR_LIBRARYNOTSETUP	BLERR_LIBRARYNOTSETUP68,2081
#define BLERR_INVALIDENTITYNUMBER	BLERR_INVALIDENTITYNUMBER69,2135
#define BLERR_NOAASFILE	BLERR_NOAASFILE70,2196
#define BLERR_CANNOTOPENAASFILE	BLERR_CANNOTOPENAASFILE71,2250
#define BLERR_WRONGAASFILEID	BLERR_WRONGAASFILEID72,2309
#define BLERR_WRONGAASFILEVERSION	BLERR_WRONGAASFILEVERSION73,2366
#define BLERR_CANNOTREADAASLUMP	BLERR_CANNOTREADAASLUMP74,2432
#define BLERR_CANNOTLOADICHAT	BLERR_CANNOTLOADICHAT75,2496
#define BLERR_CANNOTLOADITEMWEIGHTS	BLERR_CANNOTLOADITEMWEIGHTS76,2558
#define BLERR_CANNOTLOADITEMCONFIG	BLERR_CANNOTLOADITEMCONFIG77,2624
#define BLERR_CANNOTLOADWEAPONWEIGHTS	BLERR_CANNOTLOADWEAPONWEIGHTS78,2689
#define BLERR_CANNOTLOADWEAPONCONFIG	BLERR_CANNOTLOADWEAPONCONFIG79,2759
#define ACTION_ATTACK	ACTION_ATTACK82,2843
#define ACTION_USE	ACTION_USE83,2877
#define ACTION_RESPAWN	ACTION_RESPAWN84,2909
#define ACTION_JUMP	ACTION_JUMP85,2944
#define ACTION_MOVEUP	ACTION_MOVEUP86,2977
#define ACTION_CROUCH	ACTION_CROUCH87,3011
#define ACTION_MOVEDOWN	ACTION_MOVEDOWN88,3045
#define ACTION_MOVEFORWARD	ACTION_MOVEFORWARD89,3081
#define ACTION_MOVEBACK	ACTION_MOVEBACK90,3119
#define ACTION_MOVELEFT	ACTION_MOVELEFT91,3155
#define ACTION_MOVERIGHT	ACTION_MOVERIGHT92,3191
#define ACTION_DELAYEDJUMP	ACTION_DELAYEDJUMP93,3227
#define ACTION_TALK	ACTION_TALK94,3265
#define ACTION_GESTURE	ACTION_GESTURE95,3298
#define ACTION_WALK	ACTION_WALK96,3333
#define ACTION_AFFIRMATIVE	ACTION_AFFIRMATIVE97,3366
#define ACTION_NEGATIVE	ACTION_NEGATIVE98,3404
#define ACTION_GETFLAG	ACTION_GETFLAG99,3440
#define ACTION_GUARDBASE	ACTION_GUARDBASE100,3475
#define ACTION_PATROL	ACTION_PATROL101,3511
#define ACTION_FOLLOWME	ACTION_FOLLOWME102,3545
typedef struct bot_input_sbot_input_s105,3633
	float thinktime;		//time since last output (in seconds)thinktime107,3662
	vec3_t dir;				//movement directiondir108,3719
	float speed;			//speed in the range [0, 400]speed109,3756
	vec3_t viewangles;		//the view anglesviewangles110,3802
	int actionflags;		//one of the ACTION_? flagsactionflags111,3841
	int weapon;				//weapon to useweapon112,3888
} bot_input_t;bot_input_t113,3920
#define BSPTRACEBSPTRACE117,3954
typedef struct bsp_surface_sbsp_surface_s120,3998
	char name[16];name122,4029
	int flags;flags123,4045
	int value;value124,4057
} bsp_surface_t;bsp_surface_t125,4069
typedef struct bsp_trace_sbsp_trace_s129,4200
	qboolean		allsolid;	// if true, plane is not validallsolid131,4229
	qboolean		startsolid;	// if true, the initial point was in a solid areastartsolid132,4281
	float			fraction;	// time completed, 1.0 = didn't hit anythingfraction133,4354
	vec3_t			endpos;		// final positionendpos134,4418
	cplane_t		plane;		// surface normal at impactplane135,4455
	float			exp_dist;	// expanded plane distanceexp_dist136,4502
	int				sidenum;	// number of the brush side hitsidenum137,4548
	bsp_surface_t	surface;	// the hit point surfacesurface138,4597
	int				contents;	// contents on other side of surface hitcontents139,4646
	int				ent;		// number of entity hitent140,4705
} bsp_trace_t;bsp_trace_t141,4743
typedef struct bot_entitystate_sbot_entitystate_s146,4794
	int		type;			// entity typetype148,4829
	int		flags;			// entity flagsflags149,4858
	vec3_t	origin;			// origin of the entityorigin150,4889
	vec3_t	angles;			// angles of the modelangles151,4931
	vec3_t	old_origin;		// for lerpingold_origin152,4972
	vec3_t	mins;			// bounding box minimumsmins153,5008
	vec3_t	maxs;			// bounding box maximumsmaxs154,5049
	int		groundent;		// ground entitygroundent155,5090
	int		solid;			// solid typesolid156,5125
	int		modelindex;		// model usedmodelindex157,5154
	int		modelindex2;	// weapons, CTF flags, etcmodelindex2158,5187
	int		frame;			// model frame numberframe159,5233
	int		event;			// impulse events -- muzzle flashes, footsteps, etcevent160,5270
	int		eventParm;		// even parametereventParm161,5337
	int		powerups;		// bit flagspowerups162,5373
	int		weapon;			// determines weapon and flash model, etcweapon163,5403
	int		legsAnim;		// mask off ANIM_TOGGLEBITlegsAnim164,5461
	int		torsoAnim;		// mask off ANIM_TOGGLEBITtorsoAnim165,5505
} bot_entitystate_t;bot_entitystate_t166,5550
typedef struct botlib_import_sbotlib_import_s169,5608
	void		(QDECL *Print)(int type, char *fmt, ...);Print172,5680
	void		(*Trace)(bsp_trace_t *trace, vec3_t start, vec3_t mins, vec3_t maxs, vec3_t end, int passent, int contentmask);Trace174,5763
	void		(*EntityTrace)(bsp_trace_t *trace, vec3_t start, vec3_t mins, vec3_t maxs, vec3_t end, int entnum, int contentmask);EntityTrace176,5924
	int			(*PointContents)(vec3_t point);PointContents178,6092
	int			(*inPVS)(vec3_t p1, vec3_t p2);inPVS180,6183
	char		*(*BSPEntityData)(void);BSPEntityData182,6259
	void		(*BSPModelMinsMaxsOrigin)(int modelnum, vec3_t angles, vec3_t mins, vec3_t maxs, vec3_t origin);BSPModelMinsMaxsOrigin184,6295
	void		(*BotClientCommand)(int client, char *command);BotClientCommand186,6428
	void		*(*GetMemory)(int size);		// allocate from ZoneGetMemory188,6504
	void		(*FreeMemory)(void *ptr);		// free memory from ZoneFreeMemory189,6559
	int			(*AvailableMemory)(void);		// available Zone memoryAvailableMemory190,6618
	void		*(*HunkAlloc)(int size);		// allocate from hunkHunkAlloc191,6677
	int			(*FS_FOpenFile)( const char *qpath, fileHandle_t *file, fsMode_t mode );FS_FOpenFile193,6754
	int			(*FS_Read)( void *buffer, int len, fileHandle_t f );FS_Read194,6834
	int			(*FS_Write)( const void *buffer, int len, fileHandle_t f );FS_Write195,6894
	void		(*FS_FCloseFile)( fileHandle_t f );FS_FCloseFile196,6961
	int			(*FS_Seek)( fileHandle_t f, long offset, int origin );FS_Seek197,7004
	int			(*DebugLineCreate)(void);DebugLineCreate199,7095
	void		(*DebugLineDelete)(int line);DebugLineDelete200,7128
	void		(*DebugLineShow)(int line, vec3_t start, vec3_t end, int color);DebugLineShow201,7165
	int			(*DebugPolygonCreate)(int color, int numPoints, vec3_t *points);DebugPolygonCreate203,7241
	void		(*DebugPolygonDelete)(int id);DebugPolygonDelete204,7313
} botlib_import_t;botlib_import_t205,7351
typedef struct aas_export_saas_export_s207,7371
	void		(*AAS_EntityInfo)(int entnum, struct aas_entityinfo_s *info);AAS_EntityInfo212,7499
	int			(*AAS_Initialized)(void);AAS_Initialized216,7664
	void		(*AAS_PresenceTypeBoundingBox)(int presencetype, vec3_t mins, vec3_t maxs);AAS_PresenceTypeBoundingBox217,7697
	float		(*AAS_Time)(void);AAS_Time218,7780
	int			(*AAS_PointAreaNum)(vec3_t point);AAS_PointAreaNum222,7923
	int			(*AAS_PointReachabilityAreaIndex)( vec3_t point );AAS_PointReachabilityAreaIndex223,7965
	int			(*AAS_TraceAreas)(vec3_t start, vec3_t end, int *areas, vec3_t *points, int maxareas);AAS_TraceAreas224,8023
	int			(*AAS_BBoxAreas)(vec3_t absmins, vec3_t absmaxs, int *areas, int maxareas);AAS_BBoxAreas225,8117
	int			(*AAS_AreaInfo)( int areanum, struct aas_areainfo_s *info );AAS_AreaInfo226,8200
	int			(*AAS_PointContents)(vec3_t point);AAS_PointContents230,8383
	int			(*AAS_NextBSPEntity)(int ent);AAS_NextBSPEntity231,8426
	int			(*AAS_ValueForBSPEpairKey)(int ent, char *key, char *value, int size);AAS_ValueForBSPEpairKey232,8464
	int			(*AAS_VectorForBSPEpairKey)(int ent, char *key, vec3_t v);AAS_VectorForBSPEpairKey233,8542
	int			(*AAS_FloatForBSPEpairKey)(int ent, char *key, float *value);AAS_FloatForBSPEpairKey234,8608
	int			(*AAS_IntForBSPEpairKey)(int ent, char *key, int *value);AAS_IntForBSPEpairKey235,8677
	int			(*AAS_AreaReachability)(int areanum);AAS_AreaReachability239,8857
	int			(*AAS_AreaTravelTimeToGoalArea)(int areanum, vec3_t origin, int goalareanum, int travelflags);AAS_AreaTravelTimeToGoalArea243,9017
	int			(*AAS_EnableRoutingArea)(int areanum, int enable);AAS_EnableRoutingArea244,9119
	int			(*AAS_PredictRoute)(struct aas_predictroute_s *route, int areanum, vec3_t origin,AAS_PredictRoute245,9177
	int			(*AAS_AlternativeRouteGoals)(vec3_t start, int startareanum, vec3_t goal, int goalareanum, int travelflags,AAS_AlternativeRouteGoals251,9523
	int			(*AAS_Swimming)(vec3_t origin);AAS_Swimming257,9847
	int			(*AAS_PredictClientMovement)(struct aas_clientmove_s *move,AAS_PredictClientMovement258,9886
} aas_export_t;aas_export_t265,10206
typedef struct ea_export_sea_export_s267,10223
	void	(*EA_Command)(int client, char *command );EA_Command270,10288
	void	(*EA_Say)(int client, char *str);EA_Say271,10337
	void	(*EA_SayTeam)(int client, char *str);EA_SayTeam272,10377
	void	(*EA_Action)(int client, int action);EA_Action274,10425
	void	(*EA_Gesture)(int client);EA_Gesture275,10469
	void	(*EA_Talk)(int client);EA_Talk276,10502
	void	(*EA_Attack)(int client);EA_Attack277,10532
	void	(*EA_Use)(int client);EA_Use278,10564
	void	(*EA_Respawn)(int client);EA_Respawn279,10593
	void	(*EA_MoveUp)(int client);EA_MoveUp280,10626
	void	(*EA_MoveDown)(int client);EA_MoveDown281,10658
	void	(*EA_MoveForward)(int client);EA_MoveForward282,10692
	void	(*EA_MoveBack)(int client);EA_MoveBack283,10729
	void	(*EA_MoveLeft)(int client);EA_MoveLeft284,10763
	void	(*EA_MoveRight)(int client);EA_MoveRight285,10797
	void	(*EA_Crouch)(int client);EA_Crouch286,10832
	void	(*EA_SelectWeapon)(int client, int weapon);EA_SelectWeapon288,10865
	void	(*EA_Jump)(int client);EA_Jump289,10915
	void	(*EA_DelayedJump)(int client);EA_DelayedJump290,10945
	void	(*EA_Move)(int client, vec3_t dir, float speed);EA_Move291,10982
	void	(*EA_View)(int client, vec3_t viewangles);EA_View292,11037
	void	(*EA_EndRegular)(int client, float thinktime);EA_EndRegular294,11122
	void	(*EA_GetInput)(int client, float thinktime, bot_input_t *input);EA_GetInput295,11175
	void	(*EA_ResetInput)(int client);EA_ResetInput296,11246
} ea_export_t;ea_export_t297,11282
typedef struct ai_export_sai_export_s299,11298
	int		(*BotLoadCharacter)(char *charfile, float skill);BotLoadCharacter304,11422
	void	(*BotFreeCharacter)(int character);BotFreeCharacter305,11478
	float	(*Characteristic_Float)(int character, int index);Characteristic_Float306,11520
	float	(*Characteristic_BFloat)(int character, int index, float min, float max);Characteristic_BFloat307,11578
	int		(*Characteristic_Integer)(int character, int index);Characteristic_Integer308,11659
	int		(*Characteristic_BInteger)(int character, int index, int min, int max);Characteristic_BInteger309,11718
	void	(*Characteristic_String)(int character, int index, char *buf, int size);Characteristic_String310,11796
	int		(*BotAllocChatState)(void);BotAllocChatState314,11970
	void	(*BotFreeChatState)(int handle);BotFreeChatState315,12004
	void	(*BotQueueConsoleMessage)(int chatstate, int type, char *message);BotQueueConsoleMessage316,12043
	void	(*BotRemoveConsoleMessage)(int chatstate, int handle);BotRemoveConsoleMessage317,12116
	int		(*BotNextConsoleMessage)(int chatstate, struct bot_consolemessage_s *cm);BotNextConsoleMessage318,12177
	int		(*BotNumConsoleMessages)(int chatstate);BotNumConsoleMessages319,12257
	void	(*BotInitialChat)(int chatstate, char *type, int mcontext, char *var0, char *var1, char *var2, char *var3, char *var4, char *var5, char *var6, char *var7);BotInitialChat320,12304
	int		(*BotNumInitialChats)(int chatstate, char *type);BotNumInitialChats321,12466
	int		(*BotReplyChat)(int chatstate, char *message, int mcontext, int vcontext, char *var0, char *var1, char *var2, char *var3, char *var4, char *var5, char *var6, char *var7);BotReplyChat322,12522
	int		(*BotChatLength)(int chatstate);BotChatLength323,12699
	void	(*BotEnterChat)(int chatstate, int client, int sendto);BotEnterChat324,12738
	void	(*BotGetChatMessage)(int chatstate, char *buf, int size);BotGetChatMessage325,12800
	int		(*StringContains)(char *str1, char *str2, int casesensitive);StringContains326,12864
	int		(*BotFindMatch)(char *str, struct bot_match_s *match, unsigned long int context);BotFindMatch327,12932
	void	(*BotMatchVariable)(struct bot_match_s *match, int variable, char *buf, int size);BotMatchVariable328,13020
	void	(*UnifyWhiteSpaces)(char *string);UnifyWhiteSpaces329,13109
	void	(*BotReplaceSynonyms)(char *string, unsigned long int context);BotReplaceSynonyms330,13150
	int		(*BotLoadChatFile)(int chatstate, char *chatfile, char *chatname);BotLoadChatFile331,13220
	void	(*BotSetChatGender)(int chatstate, int gender);BotSetChatGender332,13293
	void	(*BotSetChatName)(int chatstate, char *name, int client);BotSetChatName333,13347
	void	(*BotResetGoalState)(int goalstate);BotResetGoalState337,13506
	void	(*BotResetAvoidGoals)(int goalstate);BotResetAvoidGoals338,13549
	void	(*BotRemoveFromAvoidGoals)(int goalstate, int number);BotRemoveFromAvoidGoals339,13593
	void	(*BotPushGoal)(int goalstate, struct bot_goal_s *goal);BotPushGoal340,13654
	void	(*BotPopGoal)(int goalstate);BotPopGoal341,13716
	void	(*BotEmptyGoalStack)(int goalstate);BotEmptyGoalStack342,13752
	void	(*BotDumpAvoidGoals)(int goalstate);BotDumpAvoidGoals343,13795
	void	(*BotDumpGoalStack)(int goalstate);BotDumpGoalStack344,13838
	void	(*BotGoalName)(int number, char *name, int size);BotGoalName345,13880
	int		(*BotGetTopGoal)(int goalstate, struct bot_goal_s *goal);BotGetTopGoal346,13936
	int		(*BotGetSecondGoal)(int goalstate, struct bot_goal_s *goal);BotGetSecondGoal347,14000
	int		(*BotChooseLTGItem)(int goalstate, vec3_t origin, int *inventory, int travelflags);BotChooseLTGItem348,14067
	int		(*BotChooseNBGItem)(int goalstate, vec3_t origin, int *inventory, int travelflags,BotChooseNBGItem349,14157
	int		(*BotTouchingGoal)(vec3_t origin, struct bot_goal_s *goal);BotTouchingGoal351,14294
	int		(*BotItemGoalInVisButNotVisible)(int viewer, vec3_t eye, vec3_t viewangles, struct bot_goal_s *goal);BotItemGoalInVisButNotVisible352,14360
	int		(*BotGetLevelItemGoal)(int index, char *classname, struct bot_goal_s *goal);BotGetLevelItemGoal353,14468
	int		(*BotGetNextCampSpotGoal)(int num, struct bot_goal_s *goal);BotGetNextCampSpotGoal354,14551
	int		(*BotGetMapLocationGoal)(char *name, struct bot_goal_s *goal);BotGetMapLocationGoal355,14618
	float	(*BotAvoidGoalTime)(int goalstate, int number);BotAvoidGoalTime356,14687
	void	(*BotSetAvoidGoalTime)(int goalstate, int number, float avoidtime);BotSetAvoidGoalTime357,14742
	void	(*BotInitLevelItems)(void);BotInitLevelItems358,14816
	void	(*BotUpdateEntityItems)(void);BotUpdateEntityItems359,14850
	int		(*BotLoadItemWeights)(int goalstate, char *filename);BotLoadItemWeights360,14887
	void	(*BotFreeItemWeights)(int goalstate);BotFreeItemWeights361,14947
	void	(*BotInterbreedGoalFuzzyLogic)(int parent1, int parent2, int child);BotInterbreedGoalFuzzyLogic362,14991
	void	(*BotSaveGoalFuzzyLogic)(int goalstate, char *filename);BotSaveGoalFuzzyLogic363,15066
	void	(*BotMutateGoalFuzzyLogic)(int goalstate, float range);BotMutateGoalFuzzyLogic364,15129
	int		(*BotAllocGoalState)(int client);BotAllocGoalState365,15191
	void	(*BotFreeGoalState)(int handle);BotFreeGoalState366,15231
	void	(*BotResetMoveState)(int movestate);BotResetMoveState370,15365
	void	(*BotMoveToGoal)(struct bot_moveresult_s *result, int movestate, struct bot_goal_s *goal, int travelflags);BotMoveToGoal371,15408
	int		(*BotMoveInDirection)(int movestate, vec3_t dir, float speed, int type);BotMoveInDirection372,15522
	void	(*BotResetAvoidReach)(int movestate);BotResetAvoidReach373,15601
	void	(*BotResetLastAvoidReach)(int movestate);BotResetLastAvoidReach374,15645
	int		(*BotReachabilityArea)(vec3_t origin, int testground);BotReachabilityArea375,15693
	int		(*BotMovementViewTarget)(int movestate, struct bot_goal_s *goal, int travelflags, float lookahead, vec3_t target);BotMovementViewTarget376,15754
	int		(*BotPredictVisiblePosition)(vec3_t origin, int areanum, struct bot_goal_s *goal, int travelflags, vec3_t target);BotPredictVisiblePosition377,15875
	int		(*BotAllocMoveState)(void);BotAllocMoveState378,15996
	void	(*BotFreeMoveState)(int handle);BotFreeMoveState379,16030
	void	(*BotInitMoveState)(int handle, struct bot_initmove_s *initmove);BotInitMoveState380,16069
	void	(*BotAddAvoidSpot)(int movestate, vec3_t origin, float radius, int type);BotAddAvoidSpot381,16141
	int		(*BotChooseBestFightWeapon)(int weaponstate, int *inventory);BotChooseBestFightWeapon385,16316
	void	(*BotGetWeaponInfo)(int weaponstate, int weapon, struct weaponinfo_s *weaponinfo);BotGetWeaponInfo386,16384
	int		(*BotLoadWeaponWeights)(int weaponstate, char *filename);BotLoadWeaponWeights387,16473
	int		(*BotAllocWeaponState)(void);BotAllocWeaponState388,16537
	void	(*BotFreeWeaponState)(int weaponstate);BotFreeWeaponState389,16573
	void	(*BotResetWeaponState)(int weaponstate);BotResetWeaponState390,16619
	int		(*GeneticParentsAndChildSelection)(int numranks, float *ranks, int *parent1, int *parent2, int *child);GeneticParentsAndChildSelection394,16760
} ai_export_t;ai_export_t395,16870
typedef struct botlib_export_sbotlib_export_s398,16922
	aas_export_t aas;aas401,16990
	ea_export_t ea;ea403,17040
	ai_export_t ai;ai405,17073
	int (*BotLibSetup)(void);BotLibSetup407,17131
	int (*BotLibShutdown)(void);BotLibShutdown409,17202
	int (*BotLibVarSet)(char *var_name, char *value);BotLibVarSet411,17274
	int (*BotLibVarGet)(char *var_name, char *value, int size);BotLibVarGet413,17367
	int (*PC_AddGlobalDefine)(char *string);PC_AddGlobalDefine416,17468
	int (*PC_LoadSourceHandle)(const char *filename);PC_LoadSourceHandle417,17510
	int (*PC_FreeSourceHandle)(int handle);PC_FreeSourceHandle418,17561
	int (*PC_ReadTokenHandle)(int handle, pc_token_t *pc_token);PC_ReadTokenHandle419,17602
	int (*PC_SourceFileAndLine)(int handle, char *filename, int *line);PC_SourceFileAndLine420,17664
	int (*BotLibStartFrame)(float time);BotLibStartFrame423,17770
	int (*BotLibLoadMap)(const char *mapname);BotLibLoadMap425,17845
	int (*BotLibUpdateEntity)(int ent, bot_entitystate_t *state);BotLibUpdateEntity427,17907
	int (*Test)(int parm0, char *parm1, vec3_t parm2, vec3_t parm3);Test429,17990
} botlib_export_t;botlib_export_t430,18056

botlib/l_memory.h,296
#define GetMemory(GetMemory35,1275
#define GetClearedMemory(GetClearedMemory36,1351
#define GetHunkMemory(GetHunkMemory42,1704
#define GetClearedHunkMemory(GetClearedHunkMemory43,1787
#define GetHunkMemory GetHunkMemory55,2355
#define GetClearedHunkMemory GetClearedHunkMemory56,2387

botlib/be_aas_routealt.c,781
#define ENABLE_ALTROUTINGENABLE_ALTROUTING46,1544
typedef struct midrangearea_smidrangearea_s49,1596
	int valid;valid51,1628
	unsigned short starttime;starttime52,1640
	unsigned short goaltime;goaltime53,1667
} midrangearea_t;midrangearea_t54,1693
midrangearea_t *midrangeareas;midrangeareas56,1712
int *clusterareas;clusterareas57,1743
int numclusterareas;numclusterareas58,1762
void AAS_AltRoutingFloodCluster_r(int areanum)AAS_AltRoutingFloodCluster_r66,2003
int AAS_AlternativeRouteGoals(vec3_t start, int startareanum, vec3_t goal, int goalareanum, int travelflags,AAS_AlternativeRouteGoals99,3191
void AAS_InitAlternativeRouting(void)AAS_InitAlternativeRouting216,7400
void AAS_ShutdownAlternativeRouting(void)AAS_ShutdownAlternativeRouting231,7993

botlib/be_aas_optimize.h,0

botlib/l_libvar.c,855
libvar_t *libvarlist = NULL;libvarlist37,1356
float LibVarStringValue(char *string)LibVarStringValue45,1605
libvar_t *LibVarAlloc(char *var_name)LibVarAlloc83,2380
void LibVarDeAlloc(libvar_t *v)LibVarDeAlloc102,2936
void LibVarDeAllocAll(void)LibVarDeAllocAll114,3304
libvar_t *LibVarGet(char *var_name)LibVarGet131,3739
char *LibVarGetString(char *var_name)LibVarGetString150,4180
float LibVarGetValue(char *var_name)LibVarGetValue170,4599
libvar_t *LibVar(char *var_name, char *value)LibVar190,5014
char *LibVarString(char *var_name, char *value)LibVarString213,5635
float LibVarValue(char *var_name, char *value)LibVarValue226,6005
void LibVarSet(char *var_name, char *value)LibVarSet239,6372
qboolean LibVarChanged(char *var_name)LibVarChanged266,7011
void LibVarSetNotModified(char *var_name)LibVarSetNotModified286,7435

botlib/be_ai_weight.c,2077
#define MAX_INVENTORYVALUE	MAX_INVENTORYVALUE47,1570
#define EVALUATERECURSIVELYEVALUATERECURSIVELY48,1606
#define MAX_WEIGHT_FILES	MAX_WEIGHT_FILES50,1635
weightconfig_t	*weightFileList[MAX_WEIGHT_FILES];weightFileList51,1666
int ReadValue(source_t *source, float *value)ReadValue59,1936
int ReadFuzzyWeight(source_t *source, fuzzyseperator_t *fs)ReadFuzzyWeight83,2658
void FreeFuzzySeperators_r(fuzzyseperator_t *fs)FreeFuzzySeperators_r112,3682
void FreeWeightConfig2(weightconfig_t *config)FreeWeightConfig2125,4127
void FreeWeightConfig(weightconfig_t *config)FreeWeightConfig142,4651
fuzzyseperator_t *ReadFuzzySeperators_r(source_t *source)ReadFuzzySeperators_r153,5039
weightconfig_t *ReadWeightConfig(char *filename)ReadWeightConfig279,8244
int FindFuzzyWeight(weightconfig_t *wc, char *name)FindFuzzyWeight557,15718
float FuzzyWeight_r(int *inventory, fuzzyseperator_t *fs)FuzzyWeight_r576,16177
float FuzzyWeightUndecided_r(int *inventory, fuzzyseperator_t *fs)FuzzyWeightUndecided_r613,17393
float FuzzyWeight(int *inventory, weightconfig_t *wc, int weightnum)FuzzyWeight650,18810
float FuzzyWeightUndecided(int *inventory, weightconfig_t *wc, int weightnum)FuzzyWeightUndecided681,19564
void EvolveFuzzySeperator_r(fuzzyseperator_t *fs)EvolveFuzzySeperator_r712,20437
void EvolveWeightConfig(weightconfig_t *config)EvolveWeightConfig735,21320
void ScaleFuzzySeperator_r(fuzzyseperator_t *fs, float scale)ScaleFuzzySeperator_r750,21760
void ScaleWeight(weightconfig_t *config, char *name, float scale)ScaleWeight772,22504
void ScaleFuzzySeperatorBalanceRange_r(fuzzyseperator_t *fs, float scale)ScaleFuzzySeperatorBalanceRange_r793,23094
void ScaleFuzzyBalanceRange(weightconfig_t *config, float scale)ScaleFuzzyBalanceRange818,23939
int InterbreedFuzzySeperator_r(fuzzyseperator_t *fs1, fuzzyseperator_t *fs2,InterbreedFuzzySeperator_r835,24481
void InterbreedWeightConfigs(weightconfig_t *config1, weightconfig_t *config2,InterbreedWeightConfigs882,25960
void BotShutdownWeights(void)BotShutdownWeights906,26779

botlib/be_aas_entity.c,1301
#define MASK_SOLID	MASK_SOLID46,1549
	ET_GENERAL,ET_GENERAL50,1625
	ET_PLAYER,ET_PLAYER51,1638
	ET_ITEM,ET_ITEM52,1650
	ET_MISSILE,ET_MISSILE53,1660
	ET_MOVERET_MOVER54,1673
int AAS_UpdateEntity(int entnum, bot_entitystate_t *state)AAS_UpdateEntity63,1906
void AAS_EntityInfo(int entnum, aas_entityinfo_t *info)AAS_EntityInfo171,5105
void AAS_EntityOrigin(int entnum, vec3_t origin)AAS_EntityOrigin195,5883
int AAS_EntityModelindex(int entnum)AAS_EntityModelindex212,6435
int AAS_EntityType(int entnum)AAS_EntityType227,6952
int AAS_EntityModelNum(int entnum)AAS_EntityModelNum244,7475
int AAS_OriginOfMoverWithModelNum(int modelnum, vec3_t origin)AAS_OriginOfMoverWithModelNum261,8025
void AAS_EntitySize(int entnum, vec3_t mins, vec3_t maxs)AAS_EntitySize286,8661
void AAS_EntityBSPData(int entnum, bsp_entdata_t *entdata)AAS_EntityBSPData308,9295
void AAS_ResetEntityLinks(void)AAS_ResetEntityLinks326,9955
void AAS_InvalidateEntities(void)AAS_InvalidateEntities341,10396
void AAS_UnlinkInvalidEntities(void)AAS_UnlinkInvalidEntities356,10844
int AAS_NearestEntity(vec3_t origin, int modelindex)AAS_NearestEntity379,11437
int AAS_BestReachableEntityArea(int entnum)AAS_BestReachableEntityArea414,12276
int AAS_NextEntity(int entnum)AAS_NextEntity427,12694

botlib/be_interface.h,580
#define RANDOMIZE	RANDOMIZE33,1277
typedef struct botlib_globals_sbotlib_globals_s36,1365
	int botlibsetup;						//true when the bot library has been setupbotlibsetup38,1399
	int maxentities;						//maximum number of entitiesmaxentities39,1465
	int maxclients;							//maximum number of clientsmaxclients40,1517
	float time;								//the global timetime41,1568
	qboolean debug;							//true if debug is ondebug43,1619
	int goalareanum;goalareanum44,1664
	vec3_t goalorigin;goalorigin45,1682
	int runai;runai46,1702
} botlib_globals_t;botlib_globals_t48,1721

botlib/be_ai_chat.c,10492
#define ESCAPE_CHAR	ESCAPE_CHAR50,1603
#define MT_VARIABLE	MT_VARIABLE58,1761
#define MT_STRING	MT_STRING59,1811
#define RCKFL_AND	RCKFL_AND61,1880
#define RCKFL_NOT	RCKFL_NOT62,1927
#define RCKFL_NAME	RCKFL_NAME63,1973
#define RCKFL_STRING	RCKFL_STRING64,2029
#define RCKFL_VARIABLES	RCKFL_VARIABLES65,2074
#define RCKFL_BOTNAMES	RCKFL_BOTNAMES66,2131
#define RCKFL_GENDERFEMALE	RCKFL_GENDERFEMALE67,2191
#define RCKFL_GENDERMALE	RCKFL_GENDERMALE68,2245
#define RCKFL_GENDERLESS	RCKFL_GENDERLESS69,2296
#define CHATMESSAGE_RECENTTIME	CHATMESSAGE_RECENTTIME71,2400
typedef struct bot_chatmessage_sbot_chatmessage_s74,2463
	char *chatmessage;					//chat message stringchatmessage76,2498
	float time;							//last time usedtime77,2544
	struct bot_chatmessage_s *next;		//next chat message in a listnext78,2580
} bot_chatmessage_t;bot_chatmessage_t79,2644
typedef struct bot_chattype_sbot_chattype_s81,2697
	char name[MAX_CHATTYPE_NAME];name83,2729
	int numchatmessages;numchatmessages84,2760
	bot_chatmessage_t *firstchatmessage;firstchatmessage85,2782
	struct bot_chattype_s *next;next86,2820
} bot_chattype_t;bot_chattype_t87,2850
typedef struct bot_chat_sbot_chat_s89,2885
	bot_chattype_t *types;types91,2913
} bot_chat_t;bot_chat_t92,2937
typedef struct bot_randomstring_sbot_randomstring_s95,2968
	char *string;string97,3004
	struct bot_randomstring_s *next;next98,3019
} bot_randomstring_t;bot_randomstring_t99,3053
typedef struct bot_randomlist_sbot_randomlist_s101,3102
	char *string;string103,3136
	int numstrings;numstrings104,3151
	bot_randomstring_t *firstrandomstring;firstrandomstring105,3168
	struct bot_randomlist_s *next;next106,3208
} bot_randomlist_t;bot_randomlist_t107,3240
typedef struct bot_synonym_sbot_synonym_s110,3271
	char *string;string112,3302
	float weight;weight113,3317
	struct bot_synonym_s *next;next114,3332
} bot_synonym_t;bot_synonym_t115,3361
typedef struct bot_synonymlist_sbot_synonymlist_s117,3399
	unsigned long int context;context119,3434
	float totalweight;totalweight120,3462
	bot_synonym_t *firstsynonym;firstsynonym121,3482
	struct bot_synonymlist_s *next;next122,3512
} bot_synonymlist_t;bot_synonymlist_t123,3545
typedef struct bot_matchstring_sbot_matchstring_s126,3588
	char *string;string128,3623
	struct bot_matchstring_s *next;next129,3638
} bot_matchstring_t;bot_matchstring_t130,3671
typedef struct bot_matchpiece_sbot_matchpiece_s133,3721
	int type;type135,3755
	bot_matchstring_t *firststring;firststring136,3766
	int variable;variable137,3799
	struct bot_matchpiece_s *next;next138,3814
} bot_matchpiece_t;bot_matchpiece_t139,3846
typedef struct bot_matchtemplate_sbot_matchtemplate_s141,3883
	unsigned long int context;context143,3920
	int type;type144,3948
	int subtype;subtype145,3959
	bot_matchpiece_t *first;first146,3973
	struct bot_matchtemplate_s *next;next147,3999
} bot_matchtemplate_t;bot_matchtemplate_t148,4034
typedef struct bot_replychatkey_sbot_replychatkey_s151,4075
	int flags;flags153,4111
	char *string;string154,4123
	bot_matchpiece_t *match;match155,4138
	struct bot_replychatkey_s *next;next156,4164
} bot_replychatkey_t;bot_replychatkey_t157,4198
typedef struct bot_replychat_sbot_replychat_s159,4233
	bot_replychatkey_t *keys;keys161,4266
	float priority;priority162,4293
	int numchatmessages;numchatmessages163,4310
	bot_chatmessage_t *firstchatmessage;firstchatmessage164,4332
	struct bot_replychat_s *next;next165,4370
} bot_replychat_t;bot_replychat_t166,4401
typedef struct bot_stringlist_sbot_stringlist_s169,4435
	char *string;string171,4469
	struct bot_stringlist_s *next;next172,4484
} bot_stringlist_t;bot_stringlist_t173,4516
typedef struct bot_chatstate_sbot_chatstate_s176,4559
	int gender;											//0=it, 1=female, 2=malegender178,4592
	int client;											//client numberclient179,4640
	char name[32];										//name of the botname180,4679
	char chatmessage[MAX_MESSAGE_SIZE];chatmessage181,4722
	int handle;handle182,4759
	bot_consolemessage_t *firstmessage;			//first message is the first typed messagefirstmessage184,4815
	bot_consolemessage_t *lastmessage;			//last message is the last typed message, bottom of consolelastmessage185,4897
	int numconsolemessages;numconsolemessages187,5045
	bot_chat_t *chat;chat189,5092
} bot_chatstate_t;bot_chatstate_t190,5111
	bot_chat_t	*chat;chat193,5148
	char		filename[MAX_QPATH];filename194,5167
	char		chatname[MAX_QPATH];chatname195,5195
} bot_ichatdata_t;bot_ichatdata_t196,5223
bot_ichatdata_t	*ichatdata[MAX_CLIENTS];ichatdata198,5243
bot_chatstate_t *botchatstates[MAX_CLIENTS+1];botchatstates200,5285
bot_consolemessage_t *consolemessageheap = NULL;consolemessageheap202,5355
bot_consolemessage_t *freeconsolemessages = NULL;freeconsolemessages203,5404
bot_matchtemplate_t *matchtemplates = NULL;matchtemplates205,5480
bot_synonymlist_t *synonyms = NULL;synonyms207,5545
bot_randomlist_t *randomstrings = NULL;randomstrings209,5608
bot_replychat_t *replychats = NULL;replychats211,5662
bot_chatstate_t *BotChatStateFromHandle(int handle)BotChatStateFromHandle219,5912
void InitConsoleMessageHeap(void)InitConsoleMessageHeap240,6588
bot_consolemessage_t *AllocConsoleMessage(void)AllocConsoleMessage268,7679
void FreeConsoleMessage(bot_consolemessage_t *message)FreeConsoleMessage283,8256
void BotRemoveConsoleMessage(int chatstate, int handle)BotRemoveConsoleMessage296,8731
void BotQueueConsoleMessage(int chatstate, int type, char *message)BotQueueConsoleMessage326,9513
int BotNextConsoleMessage(int chatstate, bot_consolemessage_t *cm)BotNextConsoleMessage367,10518
int BotNumConsoleMessages(int chatstate)BotNumConsoleMessages400,11546
int IsWhiteSpace(char c)IsWhiteSpace414,11970
void BotRemoveTildes(char *message)BotRemoveTildes434,12548
void UnifyWhiteSpaces(char *string)UnifyWhiteSpaces453,13050
int StringContains(char *str1, char *str2, int casesensitive)StringContains477,13787
char *StringContainsWord(char *str1, char *str2, int casesensitive)StringContainsWord508,14535
void StringReplaceWords(char *string, char *synonym, char *replacement)StringReplaceWords550,15646
void BotDumpSynonymList(bot_synonymlist_t *synlist)BotDumpSynonymList583,16799
bot_synonymlist_t *BotLoadSynonyms(char *filename)BotLoadSynonyms608,17546
void BotReplaceSynonyms(char *string, unsigned long int context)BotReplaceSynonyms777,21943
void BotReplaceWeightedSynonyms(char *string, unsigned long int context)BotReplaceWeightedSynonyms797,22595
void BotReplaceReplySynonyms(char *string, unsigned long int context)BotReplaceReplySynonyms830,23714
int BotLoadChatMessage(source_t *source, char *chatmessagestring)BotLoadChatMessage878,25275
void BotDumpRandomStringList(bot_randomlist_t *randomlist)BotDumpRandomStringList937,26903
bot_randomlist_t *BotLoadRandomStrings(char *filename)BotLoadRandomStrings962,27631
char *RandomString(char *name)RandomString1070,30512
void BotDumpMatchTemplates(bot_matchtemplate_t *matches)BotDumpMatchTemplates1099,31202
void BotFreeMatchPieces(bot_matchpiece_t *matchpieces)BotFreeMatchPieces1136,32187
bot_matchpiece_t *BotLoadMatchPieces(source_t *source, char *endtoken)BotLoadMatchPieces1161,32824
void BotFreeMatchTemplates(bot_matchtemplate_t *mt)BotFreeMatchTemplates1263,35974
bot_matchtemplate_t *BotLoadMatchTemplates(char *matchfile)BotLoadMatchTemplates1280,36437
int StringsMatch(bot_matchpiece_t *pieces, bot_match_t *match)StringsMatch1379,39191
int BotFindMatch(char *str, bot_match_t *match, unsigned long int context)BotFindMatch1456,41360
void BotMatchVariable(bot_match_t *match, int variable, char *buf, int size)BotMatchVariable1490,42375
bot_stringlist_t *BotFindStringInList(bot_stringlist_t *list, char *string)BotFindStringInList1519,43249
bot_stringlist_t *BotCheckChatMessageIntegrety(char *message, bot_stringlist_t *stringlist)BotCheckChatMessageIntegrety1535,43719
void BotCheckInitialChatIntegrety(bot_chat_t *chat)BotCheckInitialChatIntegrety1606,45512
void BotCheckReplyChatIntegrety(bot_replychat_t *replychat)BotCheckReplyChatIntegrety1632,46234
void BotDumpReplyChat(bot_replychat_t *replychat)BotDumpReplyChat1658,46967
void BotFreeReplyChat(bot_replychat_t *replychat)BotFreeReplyChat1713,48643
void BotCheckValidReplyChatKeySet(source_t *source, bot_replychatkey_t *keys)BotCheckValidReplyChatKeySet1743,49459
bot_replychat_t *BotLoadReplyChat(char *filename)BotLoadReplyChat1850,52534
void BotDumpInitialChat(bot_chat_t *chat)BotDumpInitialChat2010,57547
bot_chat_t *BotLoadInitialChat(char *chatfile, char *chatname)BotLoadInitialChat2035,58229
void BotFreeChatFile(int chatstate)BotFreeChatFile2210,63040
int BotLoadChatFile(int chatstate, char *chatfile, char *chatname)BotLoadChatFile2225,63474
int BotExpandChatMessage(char *outmessage, char *message, unsigned long mcontext,BotExpandChatMessage2283,65189
void BotConstructChatMessage(bot_chatstate_t *chatstate, char *message, unsigned long mcontext,BotConstructChatMessage2404,68542
char *BotChooseInitialChatMessage(bot_chatstate_t *cs, char *type)BotChooseInitialChatMessage2432,69487
int BotNumInitialChats(int chatstate, char *type)BotNumInitialChats2490,70988
void BotInitialChat(int chatstate, char *type, int mcontext, char *var0, char *var1, char *var2, char *var3, char *var4, char *var5, char *var6, char *var7)BotInitialChat2517,71749
void BotPrintReplyChatKeys(bot_replychat_t *replychat)BotPrintReplyChatKeys2598,73985
int BotReplyChat(int chatstate, char *message, int mcontext, int vcontext, char *var0, char *var1, char *var2, char *var3, char *var4, char *var5, char *var6, char *var7)BotReplyChat2639,75593
int BotChatLength(int chatstate)BotChatLength2796,80307
void BotEnterChat(int chatstate, int clientto, int sendto)BotEnterChat2810,80714
void BotGetChatMessage(int chatstate, char *buf, int size)BotGetChatMessage2846,81706
void BotSetChatGender(int chatstate, int gender)BotSetChatGender2865,82276
void BotSetChatName(int chatstate, char *name, int client)BotSetChatName2884,82878
void BotResetChatAI(void)BotResetChatAI2901,83427
int BotAllocChatState(void)BotAllocChatState2920,83912
void BotFreeChatState(int handle)BotFreeChatState2940,84389
int BotSetupChatAI(void)BotSetupChatAI2976,85415
void BotShutdownChatAI(void)BotShutdownChatAI3010,86346

botlib/be_aas_main.c,1258
aas_t aasworld;aasworld47,1558
libvar_t *saveroutingcache;saveroutingcache49,1575
void QDECL AAS_Error(char *fmt, ...)AAS_Error57,1823
char *AAS_StringFromIndex(char *indexname, char *stringindex[], int numindexes, int index)AAS_StringFromIndex73,2280
int AAS_IndexFromString(char *indexname, char *stringindex[], int numindexes, char *string)AAS_IndexFromString101,3114
char *AAS_ModelFromIndex(int index)AAS_ModelFromIndex122,3762
int AAS_IndexFromModel(char *modelname)AAS_IndexFromModel132,4164
void AAS_UpdateStringIndexes(int numconfigstrings, char *configstrings[])AAS_UpdateStringIndexes142,4574
int AAS_Loaded(void)AAS_Loaded163,5310
int AAS_Initialized(void)AAS_Initialized173,5612
void AAS_SetInitialized(void)AAS_SetInitialized183,5929
void AAS_ContinueInit(float time)AAS_ContinueInit200,6417
int AAS_StartFrame(float time)AAS_StartFrame238,7683
float AAS_Time(void)AAS_Time284,8772
void AAS_ProjectPointOntoVector( vec3_t point, vec3_t vStart, vec3_t vEnd, vec3_t vProj )AAS_ProjectPointOntoVector294,9068
int AAS_LoadFiles(const char *mapname)AAS_LoadFiles310,9668
int AAS_LoadMap(const char *mapname)AAS_LoadMap341,10636
int AAS_Setup(void)AAS_Setup383,11836
void AAS_Shutdown(void)AAS_Shutdown406,12830

botlib/be_ea.h,0

botlib/be_ai_move.c,9748
typedef struct bot_movestate_sbot_movestate_s57,1813
	vec3_t origin;								//origin of the botorigin60,1896
	vec3_t velocity;							//velocity of the botvelocity61,1939
	vec3_t viewoffset;							//view offsetviewoffset62,1985
	int entitynum;								//entity number of the botentitynum63,2025
	int client;									//client number of the botclient64,2075
	float thinktime;							//time the bot thinksthinktime65,2123
	int presencetype;							//presencetype of the botpresencetype66,2169
	vec3_t viewangles;							//view angles of the botviewangles67,2220
	int areanum;								//area the bot is inareanum69,2285
	int lastareanum;							//last area the bot was inlastareanum70,2327
	int lastgoalareanum;						//last goal area numberlastgoalareanum71,2378
	int lastreachnum;							//last reachability numberlastreachnum72,2429
	vec3_t lastorigin;							//origin previous cyclelastorigin73,2481
	int reachareanum;							//area number of the reachabiltyreachareanum74,2531
	int moveflags;								//movement flagsmoveflags75,2589
	int jumpreach;								//set when jumpedjumpreach76,2629
	float grapplevisible_time;					//last time the grapple was visiblegrapplevisible_time77,2670
	float lastgrappledist;						//last distance to the grapple endlastgrappledist78,2738
	float reachability_time;					//time to use current reachabilityreachability_time79,2802
	int avoidreach[MAX_AVOIDREACH];				//reachabilities to avoidavoidreach80,2867
	float avoidreachtimes[MAX_AVOIDREACH];		//times to avoid the reachabilitiesavoidreachtimes81,2929
	int avoidreachtries[MAX_AVOIDREACH];		//number of tries before avoidingavoidreachtries82,3006
	bot_avoidspot_t avoidspots[MAX_AVOIDSPOTS];	//spots to avoidavoidspots84,3083
	int numavoidspots;numavoidspots85,3145
} bot_movestate_t;bot_movestate_t86,3165
#define AVOIDREACHAVOIDREACH89,3251
#define AVOIDREACH_TIME	AVOIDREACH_TIME90,3270
#define AVOIDREACH_TRIES	AVOIDREACH_TRIES91,3337
#define PREDICTIONTIME_JUMP	PREDICTIONTIME_JUMP93,3384
#define PREDICTIONTIME_MOVE	PREDICTIONTIME_MOVE94,3428
#define WEAPONINDEX_ROCKET_LAUNCHER	WEAPONINDEX_ROCKET_LAUNCHER96,3508
#define WEAPONINDEX_BFG	WEAPONINDEX_BFG97,3547
#define MODELTYPE_FUNC_PLAT	MODELTYPE_FUNC_PLAT99,3578
#define MODELTYPE_FUNC_BOB	MODELTYPE_FUNC_BOB100,3609
#define MODELTYPE_FUNC_DOOR	MODELTYPE_FUNC_DOOR101,3639
#define MODELTYPE_FUNC_STATIC	MODELTYPE_FUNC_STATIC102,3670
libvar_t *sv_maxstep;sv_maxstep104,3703
libvar_t *sv_maxbarrier;sv_maxbarrier105,3725
libvar_t *sv_gravity;sv_gravity106,3750
libvar_t *weapindex_rocketlauncher;weapindex_rocketlauncher107,3772
libvar_t *weapindex_bfg10k;weapindex_bfg10k108,3808
libvar_t *weapindex_grapple;weapindex_grapple109,3836
libvar_t *entitytypemissile;entitytypemissile110,3865
libvar_t *offhandgrapple;offhandgrapple111,3894
libvar_t *cmd_grappleoff;cmd_grappleoff112,3920
libvar_t *cmd_grappleon;cmd_grappleon113,3946
int modeltypes[MAX_MODELS];modeltypes115,4014
bot_movestate_t *botmovestates[MAX_CLIENTS+1];botmovestates117,4043
int BotAllocMoveState(void)BotAllocMoveState125,4302
void BotFreeMoveState(int handle)BotFreeMoveState145,4777
bot_movestate_t *BotMoveStateFromHandle(int handle)BotMoveStateFromHandle166,5397
void BotInitMoveState(int handle, bot_initmove_t *initmove)BotInitMoveState186,6013
float AngleDiff(float ang1, float ang2)AngleDiff218,7301
int BotFuzzyPointReachabilityArea(vec3_t origin)BotFuzzyPointReachabilityArea239,7770
int BotReachabilityArea(vec3_t origin, int client)BotReachabilityArea299,9343
int BotOnMover(vec3_t origin, int entnum, aas_reachability_t *reach)BotOnMover440,13420
int MoverDown(aas_reachability_t *reach)MoverDown486,14828
void BotSetBrushModelTypes(void)BotSetBrushModelTypes511,15623
int BotOnTopOfEntity(bot_movestate_t *ms)BotOnTopOfEntity547,16901
int BotValidTravel(vec3_t origin, aas_reachability_t *reach, int travelflags)BotValidTravel567,17598
void BotAddToAvoidReach(bot_movestate_t *ms, int number, float avoidtime)BotAddToAvoidReach581,18205
float DistanceFromLineSquared(vec3_t p, vec3_t lp1, vec3_t lp2)DistanceFromLineSquared613,19131
float VectorDistanceSquared(vec3_t p1, vec3_t p2)VectorDistanceSquared639,19907
int BotAvoidSpots(vec3_t origin, aas_reachability_t *reach, bot_avoidspot_t *avoidspots, int numavoidspots)BotAvoidSpots651,20299
void BotAddAvoidSpot(int movestate, vec3_t origin, float radius, int type)BotAddAvoidSpot717,22731
int BotGetReachabilityToGoal(vec3_t origin, int areanum,BotGetReachabilityToGoal742,23461
int BotAddToTarget(vec3_t start, vec3_t end, float maxdist, float *dist, vec3_t target)BotAddToTarget820,26240
int BotMovementViewTarget(int movestate, bot_goal_t *goal, int travelflags, float lookahead, vec3_t target)BotMovementViewTarget841,26685
int BotVisible(int ent, vec3_t eye, vec3_t target)BotVisible896,28704
int BotPredictVisiblePosition(vec3_t origin, int areanum, bot_goal_t *goal, int travelflags, vec3_t target)BotPredictVisiblePosition910,29172
void MoverBottomCenter(aas_reachability_t *reach, vec3_t bottomcenter)MoverBottomCenter973,30968
float BotGapDistance(vec3_t origin, vec3_t hordir, int entnum)BotGapDistance998,31826
int BotCheckBarrierJump(bot_movestate_t *ms, vec3_t dir, float speed)BotCheckBarrierJump1047,33241
int BotSwimInDirection(bot_movestate_t *ms, vec3_t dir, float speed, int type)BotSwimInDirection1097,35017
int BotWalkInDirection(bot_movestate_t *ms, vec3_t dir, float speed, int type)BotWalkInDirection1112,35483
int BotMoveInDirection(int movestate, vec3_t dir, float speed, int type)BotMoveInDirection1229,39422
int Intersection(vec2_t p1, vec2_t p2, vec2_t p3, vec2_t p4, vec2_t out)Intersection1251,40032
void BotCheckBlocked(bot_movestate_t *ms, vec3_t dir, int checkbottom, bot_moveresult_t *result)BotCheckBlocked1280,40805
bot_moveresult_t BotTravel_Walk(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_Walk1328,42684
bot_moveresult_t BotFinishTravel_Walk(bot_movestate_t *ms, aas_reachability_t *reach)BotFinishTravel_Walk1382,44177
bot_moveresult_t BotTravel_Crouch(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_Crouch1418,45272
bot_moveresult_t BotTravel_BarrierJump(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_BarrierJump1447,46063
bot_moveresult_t BotFinishTravel_BarrierJump(bot_movestate_t *ms, aas_reachability_t *reach)BotFinishTravel_BarrierJump1481,46988
bot_moveresult_t BotTravel_Swim(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_Swim1509,47789
bot_moveresult_t BotTravel_WaterJump(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_WaterJump1534,48531
bot_moveresult_t BotFinishTravel_WaterJump(bot_movestate_t *ms, aas_reachability_t *reach)BotFinishTravel_WaterJump1567,49601
bot_moveresult_t BotTravel_WalkOffLedge(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_WalkOffLedge1603,50902
int BotAirControl(vec3_t origin, vec3_t velocity, vec3_t goal, vec3_t dir, float *speed)BotAirControl1665,52594
bot_moveresult_t BotFinishTravel_WalkOffLedge(bot_movestate_t *ms, aas_reachability_t *reach)BotFinishTravel_WalkOffLedge1702,53592
bot_moveresult_t BotTravel_Jump(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_Jump1859,58327
bot_moveresult_t BotFinishTravel_Jump(bot_movestate_t *ms, aas_reachability_t *reach)BotFinishTravel_Jump1929,60450
bot_moveresult_t BotTravel_Ladder(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_Ladder1963,61500
bot_moveresult_t BotTravel_Teleport(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_Teleport2018,63220
bot_moveresult_t BotTravel_Elevator(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_Elevator2048,64172
bot_moveresult_t BotFinishTravel_Elevator(bot_movestate_t *ms, aas_reachability_t *reach)BotFinishTravel_Elevator2198,68740
void BotFuncBobStartEnd(aas_reachability_t *reach, vec3_t start, vec3_t end, vec3_t origin)BotFuncBobStartEnd2227,69562
bot_moveresult_t BotTravel_FuncBobbing(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_FuncBobbing2285,71065
bot_moveresult_t BotFinishTravel_FuncBobbing(bot_movestate_t *ms, aas_reachability_t *reach)BotFinishTravel_FuncBobbing2442,75887
int GrappleState(bot_movestate_t *ms, aas_reachability_t *reach)GrappleState2496,77516
void BotResetGrapple(bot_movestate_t *ms)BotResetGrapple2526,78341
bot_moveresult_t BotTravel_Grapple(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_Grapple2552,79193
bot_moveresult_t BotTravel_RocketJump(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_RocketJump2705,83697
bot_moveresult_t BotTravel_BFGJump(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_BFGJump2769,85741
bot_moveresult_t BotFinishTravel_WeaponJump(bot_movestate_t *ms, aas_reachability_t *reach)BotFinishTravel_WeaponJump2829,87617
bot_moveresult_t BotTravel_JumpPad(bot_movestate_t *ms, aas_reachability_t *reach)BotTravel_JumpPad2868,88751
bot_moveresult_t BotFinishTravel_JumpPad(bot_movestate_t *ms, aas_reachability_t *reach)BotFinishTravel_JumpPad2894,89556
int BotReachabilityTime(aas_reachability_t *reach)BotReachabilityTime2922,90442
bot_moveresult_t BotMoveInGoalArea(bot_movestate_t *ms, bot_goal_t *goal)BotMoveInGoalArea2954,91462
void BotMoveToGoal(bot_moveresult_t *result, int movestate, bot_goal_t *goal, int travelflags)BotMoveToGoal3010,93110
void BotResetAvoidReach(int movestate)BotResetAvoidReach3475,109243
void BotResetLastAvoidReach(int movestate)BotResetLastAvoidReach3491,109826
void BotResetMoveState(int movestate)BotResetMoveState3521,110583
int BotSetupMoveAI(void)BotSetupMoveAI3535,111009
void BotShutdownMoveAI(void)BotShutdownMoveAI3556,111866

botlib/be_ai_goal.h,764
#define MAX_AVOIDGOALS	MAX_AVOIDGOALS32,1235
#define MAX_GOALSTACK	MAX_GOALSTACK33,1264
#define GFL_NONE	GFL_NONE35,1291
#define GFL_ITEM	GFL_ITEM36,1313
#define GFL_ROAM	GFL_ROAM37,1335
#define GFL_DROPPED	GFL_DROPPED38,1357
typedef struct bot_goal_sbot_goal_s41,1396
	vec3_t origin;				//origin of the goalorigin43,1424
	int areanum;				//area number of the goalareanum44,1464
	vec3_t mins, maxs;			//mins and maxs of the goalmins45,1507
	vec3_t mins, maxs;			//mins and maxs of the goalmaxs45,1507
	int entitynum;				//number of the goal entityentitynum46,1557
	int number;					//goal numbernumber47,1604
	int flags;					//goal flagsflags48,1635
	int iteminfo;				//item informationiteminfo49,1664
} bot_goal_t;bot_goal_t50,1701

botlib/be_aas_route.h,0

botlib/l_precomp.c,8224
typedef enum {qfalse, qtrue}	qboolean;qfalse52,1565
typedef enum {qfalse, qtrue}	qboolean;qtrue52,1565
typedef enum {qfalse, qtrue}	qboolean;qboolean52,1565
#define qtrue	qtrue74,1997
#define qfalse	qfalse75,2016
#define qtrue	qtrue85,2216
#define qfalse	qfalse86,2235
#define Q_stricmp	Q_stricmp87,2256
#define MAX_DEFINEPARMS	MAX_DEFINEPARMS97,2394
#define DEFINEHASHING	DEFINEHASHING99,2425
typedef struct directive_sdirective_s102,2489
	char *name;name104,2518
	int (*func)(source_t *source);func105,2531
} directive_t;directive_t106,2563
#define DEFINEHASHSIZE	DEFINEHASHSIZE108,2579
#define TOKEN_HEAP_SIZE	TOKEN_HEAP_SIZE110,2609
int numtokens;numtokens112,2640
define_t *globaldefines;globaldefines120,2898
void QDECL SourceError(source_t *source, char *str, ...)SourceError128,3145
void QDECL SourceWarning(source_t *source, char *str, ...)SourceWarning152,3985
void PC_PushIndent(source_t *source, int type, int skip)PC_PushIndent176,4837
void PC_PopIndent(source_t *source, int *type, int *skip)PC_PopIndent194,5416
void PC_PushScript(source_t *source, script_t *script)PC_PushScript219,6092
void PC_InitTokenHeap(void)PC_InitTokenHeap241,6737
token_t *PC_CopyToken(token_t *token)PC_CopyToken262,7251
void PC_FreeToken(token_t *token)PC_FreeToken290,7932
int PC_ReadSourceToken(source_t *source, token_t *token)PC_ReadSourceToken304,8328
int PC_UnreadSourceToken(source_t *source, token_t *token)PC_UnreadSourceToken347,9657
int PC_ReadDefineParms(source_t *source, define_t *define, token_t **parms, int maxparms)PC_ReadDefineParms362,10087
int PC_StringizeTokens(token_t *tokens, token_t *token)PC_StringizeTokens461,12428
int PC_MergeTokens(token_t *t1, token_t *t2)PC_MergeTokens483,13118
void PC_PrintDefineHashTable(define_t **definehash)PC_PrintDefineHashTable527,14640
int PC_NameHash(char *name)PC_NameHash550,15260
void PC_AddDefineToHash(define_t *define, define_t **definehash)PC_AddDefineToHash570,15812
define_t *PC_FindHashedDefine(define_t **definehash, char *name)PC_FindHashedDefine584,16256
define_t *PC_FindDefine(define_t *defines, char *name)PC_FindDefine603,16782
int PC_FindDefineParm(define_t *define, char *name)PC_FindDefineParm620,17297
void PC_FreeDefine(define_t *define)PC_FreeDefine639,17762
void PC_AddBuiltinDefines(source_t *source)PC_AddBuiltinDefines665,18387
int PC_ExpandBuiltinDefine(source_t *source, token_t *deftoken, define_t *define,PC_ExpandBuiltinDefine705,19499
int PC_ExpandDefine(source_t *source, token_t *deftoken, define_t *define,PC_ExpandDefine783,21416
int PC_ExpandDefineIntoSource(source_t *source, token_t *deftoken, define_t *define)PC_ExpandDefineIntoSource921,24864
void PC_ConvertPath(char *path)PC_ConvertPath941,25491
int PC_Directive_include(source_t *source)PC_Directive_include971,26182
int PC_ReadLine(source_t *source, token_t *token)PC_ReadLine1063,28498
int PC_WhiteSpaceBeforeToken(token_t *token)PC_WhiteSpaceBeforeToken1087,29093
void PC_ClearTokenWhiteSpace(token_t *token)PC_ClearTokenWhiteSpace1097,29468
int PC_Directive_undef(source_t *source)PC_Directive_undef1109,29871
int PC_Directive_define(source_t *source)PC_Directive_define1177,31615
define_t *PC_DefineFromString(char *string)PC_DefineFromString1320,35604
int PC_AddDefine(source_t *source, char *string)PC_AddDefine1378,37000
int PC_AddGlobalDefine(char *string)PC_AddGlobalDefine1399,37649
int PC_RemoveGlobalDefine(char *name)PC_RemoveGlobalDefine1416,38145
void PC_RemoveAllGlobalDefines(void)PC_RemoveAllGlobalDefines1435,38633
define_t *PC_CopyDefine(source_t *source, define_t *define)PC_CopyDefine1451,39105
void PC_AddGlobalDefinesToSource(source_t *source)PC_AddGlobalDefinesToSource1494,40510
int PC_Directive_if_def(source_t *source, int type)PC_Directive_if_def1515,41174
int PC_Directive_ifdef(source_t *source)PC_Directive_ifdef1547,42080
int PC_Directive_ifndef(source_t *source)PC_Directive_ifndef1557,42438
int PC_Directive_else(source_t *source)PC_Directive_else1567,42799
int PC_Directive_endif(source_t *source)PC_Directive_endif1591,43406
typedef struct operator_soperator_s1609,43870
	int operator;operator1611,43898
	int priority;priority1612,43913
	int parentheses;parentheses1613,43928
	struct operator_s *prev, *next;prev1614,43946
	struct operator_s *prev, *next;next1614,43946
} operator_t;operator_t1615,43979
typedef struct value_svalue_s1617,43994
	signed long int intvalue;intvalue1619,44019
	float floatvalue;floatvalue1620,44046
	int parentheses;parentheses1621,44065
	struct value_s *prev, *next;prev1622,44083
	struct value_s *prev, *next;next1622,44083
} value_t;value_t1623,44113
int PC_OperatorPriority(int op)PC_OperatorPriority1625,44125
#define MAX_VALUES	MAX_VALUES1665,45124
#define MAX_OPERATORS	MAX_OPERATORS1666,45147
#define AllocValue(AllocValue1667,45172
#define FreeValue(FreeValue1675,45410
#define AllocOperator(AllocOperator1677,45436
#define FreeOperator(FreeOperator1685,45686
int PC_EvaluateTokens(source_t *source, token_t *tokens, signed long int *intvalue,PC_EvaluateTokens1687,45712
int PC_Evaluate(source_t *source, signed long int *intvalue,PC_Evaluate2141,57863
int PC_DollarEvaluate(source_t *source, signed long int *intvalue,PC_DollarEvaluate2240,60410
int PC_Directive_elif(source_t *source)PC_Directive_elif2348,63251
int PC_Directive_if(source_t *source)PC_Directive_if2370,63887
int PC_Directive_line(source_t *source)PC_Directive_line2386,64362
int PC_Directive_error(source_t *source)PC_Directive_error2397,64738
int PC_Directive_pragma(source_t *source)PC_Directive_pragma2412,65202
void UnreadSignToken(source_t *source)UnreadSignToken2426,65640
int PC_Directive_eval(source_t *source)PC_Directive_eval2445,66255
int PC_Directive_evalfloat(source_t *source)PC_Directive_evalfloat2469,67053
directive_t directives[20] =directives2492,67850
int PC_ReadDirective(source_t *source)PC_ReadDirective2511,68351
int PC_DollarDirective_evalint(source_t *source)PC_DollarDirective_evalint2550,69370
int PC_DollarDirective_evalfloat(source_t *source)PC_DollarDirective_evalfloat2578,70284
directive_t dollardirectives[20] =dollardirectives2605,71207
int PC_ReadDollarDirective(source_t *source)PC_ReadDollarDirective2612,71350
int BuiltinFunction(source_t *source)BuiltinFunction2654,72447
int QuakeCMacro(source_t *source)QuakeCMacro2676,73003
int PC_ReadToken(source_t *source, token_t *token)PC_ReadToken2706,73771
int PC_ExpectTokenString(source_t *source, char *string)PC_ExpectTokenString2789,76028
int PC_ExpectTokenType(source_t *source, int type, int subtype, token_t *token)PC_ExpectTokenType2812,76651
int PC_ExpectAnyToken(source_t *source, token_t *token)PC_ExpectAnyToken2865,78334
int PC_CheckTokenString(source_t *source, char *string)PC_CheckTokenString2883,78816
int PC_CheckTokenType(source_t *source, int type, int subtype, token_t *token)PC_CheckTokenType2900,79337
int PC_SkipUntilString(source_t *source, char *string)PC_SkipUntilString2922,79964
void PC_UnreadLastToken(source_t *source)PC_UnreadLastToken2938,80424
void PC_UnreadToken(source_t *source, token_t *token)PC_UnreadToken2948,80779
void PC_SetIncludePath(source_t *source, char *path)PC_SetIncludePath2958,81133
void PC_SetPunctuations(source_t *source, punctuation_t *p)PC_SetPunctuations2974,81722
source_t *LoadSourceFile(const char *filename)LoadSourceFile2984,82073
source_t *LoadSourceMemory(char *ptr, int length, char *name)LoadSourceMemory3018,82974
void FreeSource(source_t *source)FreeSource3051,83898
#define MAX_SOURCEFILES	MAX_SOURCEFILES3114,85408
source_t *sourceFiles[MAX_SOURCEFILES];sourceFiles3116,85437
int PC_LoadSourceHandle(const char *filename)PC_LoadSourceHandle3118,85478
int PC_FreeSourceHandle(int handle)PC_FreeSourceHandle3143,86066
int PC_ReadTokenHandle(int handle, pc_token_t *pc_token)PC_ReadTokenHandle3160,86553
int PC_SourceFileAndLine(int handle, char *filename, int *line)PC_SourceFileAndLine3186,87322
void PC_SetBaseFolder(char *path)PC_SetBaseFolder3206,87933
void PC_CheckOpenSourceHandles(void)PC_CheckOpenSourceHandles3216,88254

botlib/be_aas_def.h,9722
#define AAS_DEBUGAAS_DEBUG33,1244
#define MAX_CLIENTS	MAX_CLIENTS35,1263
#define	MAX_MODELS	MAX_MODELS36,1288
#define	MAX_SOUNDS	MAX_SOUNDS37,1355
#define	MAX_CONFIGSTRINGS	MAX_CONFIGSTRINGS38,1420
#define	CS_SCORES	CS_SCORES40,1452
#define	CS_MODELS	CS_MODELS41,1475
#define	CS_SOUNDS	CS_SOUNDS42,1519
#define DF_AASENTNUMBER(DF_AASENTNUMBER44,1563
#define DF_NUMBERAASENT(DF_NUMBERAASENT45,1615
#define DF_AASENTCLIENT(DF_AASENTCLIENT46,1667
#define DF_CLIENTAASENT(DF_CLIENTAASENT47,1723
	#define MAX_PATH	MAX_PATH50,1797
typedef struct aas_stringindex_saas_stringindex_s54,1886
	int numindexes;numindexes56,1921
	char **index;index57,1938
} aas_stringindex_t;aas_stringindex_t58,1953
typedef struct aas_link_saas_link_s61,2035
	int entnum;entnum63,2063
	int areanum;areanum64,2076
	struct aas_link_s *next_ent, *prev_ent;next_ent65,2090
	struct aas_link_s *next_ent, *prev_ent;prev_ent65,2090
	struct aas_link_s *next_area, *prev_area;next_area66,2131
	struct aas_link_s *next_area, *prev_area;prev_area66,2131
} aas_link_t;aas_link_t67,2174
typedef struct bsp_link_sbsp_link_s70,2251
	int entnum;entnum72,2279
	int leafnum;leafnum73,2292
	struct bsp_link_s *next_ent, *prev_ent;next_ent74,2306
	struct bsp_link_s *next_ent, *prev_ent;prev_ent74,2306
	struct bsp_link_s *next_leaf, *prev_leaf;next_leaf75,2347
	struct bsp_link_s *next_leaf, *prev_leaf;prev_leaf75,2347
} bsp_link_t;bsp_link_t76,2390
typedef struct bsp_entdata_sbsp_entdata_s78,2405
	vec3_t origin;origin80,2436
	vec3_t angles;angles81,2452
	vec3_t absmins;absmins82,2468
	vec3_t absmaxs;absmaxs83,2485
	int solid;solid84,2502
	int modelnum;modelnum85,2514
} bsp_entdata_t;bsp_entdata_t86,2529
typedef struct aas_entity_saas_entity_s89,2556
	aas_entityinfo_t i;i92,2601
	aas_link_t *areas;areas94,2650
	bsp_link_t *leaves;leaves96,2699
} aas_entity_t;aas_entity_t97,2720
typedef struct aas_settings_saas_settings_s99,2737
	vec3_t phys_gravitydirection;phys_gravitydirection101,2769
	float phys_friction;phys_friction102,2800
	float phys_stopspeed;phys_stopspeed103,2822
	float phys_gravity;phys_gravity104,2845
	float phys_waterfriction;phys_waterfriction105,2866
	float phys_watergravity;phys_watergravity106,2893
	float phys_maxvelocity;phys_maxvelocity107,2919
	float phys_maxwalkvelocity;phys_maxwalkvelocity108,2944
	float phys_maxcrouchvelocity;phys_maxcrouchvelocity109,2973
	float phys_maxswimvelocity;phys_maxswimvelocity110,3004
	float phys_walkaccelerate;phys_walkaccelerate111,3033
	float phys_airaccelerate;phys_airaccelerate112,3061
	float phys_swimaccelerate;phys_swimaccelerate113,3088
	float phys_maxstep;phys_maxstep114,3116
	float phys_maxsteepness;phys_maxsteepness115,3137
	float phys_maxwaterjump;phys_maxwaterjump116,3163
	float phys_maxbarrier;phys_maxbarrier117,3189
	float phys_jumpvel;phys_jumpvel118,3213
	float phys_falldelta5;phys_falldelta5119,3234
	float phys_falldelta10;phys_falldelta10120,3258
	float rs_waterjump;rs_waterjump121,3283
	float rs_teleport;rs_teleport122,3304
	float rs_barrierjump;rs_barrierjump123,3324
	float rs_startcrouch;rs_startcrouch124,3347
	float rs_startgrapple;rs_startgrapple125,3370
	float rs_startwalkoffledge;rs_startwalkoffledge126,3394
	float rs_startjump;rs_startjump127,3423
	float rs_rocketjump;rs_rocketjump128,3444
	float rs_bfgjump;rs_bfgjump129,3466
	float rs_jumppad;rs_jumppad130,3485
	float rs_aircontrolledjumppad;rs_aircontrolledjumppad131,3504
	float rs_funcbob;rs_funcbob132,3536
	float rs_startelevator;rs_startelevator133,3555
	float rs_falldamage5;rs_falldamage5134,3580
	float rs_falldamage10;rs_falldamage10135,3603
	float rs_maxfallheight;rs_maxfallheight136,3627
	float rs_maxjumpfallheight;rs_maxjumpfallheight137,3652
} aas_settings_t;aas_settings_t138,3681
#define CACHETYPE_PORTAL	CACHETYPE_PORTAL140,3700
#define CACHETYPE_AREA	CACHETYPE_AREA141,3728
typedef struct aas_routingcache_saas_routingcache_s144,3772
	byte type;									//portal or area cachetype146,3808
	float time;									//last time accessed or updatedtime147,3851
	int size;									//size of the routing cachesize148,3904
	int cluster;								//cluster the cache is forcluster149,3951
	int areanum;								//area the cache is created forareanum150,3999
	vec3_t origin;								//origin within the areaorigin151,4052
	float starttraveltime;						//travel time to start withstarttraveltime152,4100
	int travelflags;							//combinations of the travel flagstravelflags153,4157
	struct aas_routingcache_s *prev, *next;prev154,4216
	struct aas_routingcache_s *prev, *next;next154,4216
	struct aas_routingcache_s *time_prev, *time_next;time_prev155,4257
	struct aas_routingcache_s *time_prev, *time_next;time_next155,4257
	unsigned char *reachabilities;				//reachabilities used for routingreachabilities156,4308
	unsigned short int traveltimes[1];			//travel time for every area (variable sized)traveltimes157,4377
} aas_routingcache_t;aas_routingcache_t158,4461
typedef struct aas_routingupdate_saas_routingupdate_s161,4519
	int cluster;cluster163,4556
	int areanum;								//area number of the updateareanum164,4570
	vec3_t start;								//start point the area was enteredstart165,4619
	unsigned short int tmptraveltime;			//temporary travel timetmptraveltime166,4676
	unsigned short int *areatraveltimes;		//travel times within the areaareatraveltimes167,4737
	qboolean inlist;							//true if the update is in the listinlist168,4807
	struct aas_routingupdate_s *next;next169,4867
	struct aas_routingupdate_s *prev;prev170,4902
} aas_routingupdate_t;aas_routingupdate_t171,4937
typedef struct aas_reversedlink_saas_reversedlink_s174,4990
	int linknum;								//the aas_areareachability_tlinknum176,5026
	int areanum;								//reachable from this areaareanum177,5076
	struct aas_reversedlink_s *next;			//next linknext178,5124
} aas_reversedlink_t;aas_reversedlink_t179,5172
typedef struct aas_reversedreachability_saas_reversedreachability_s182,5224
	int numlinks;numlinks184,5268
	aas_reversedlink_t *first;first185,5283
} aas_reversedreachability_t;aas_reversedreachability_t186,5311
typedef struct aas_reachabilityareas_saas_reachabilityareas_s189,5378
	int firstarea, numareas;firstarea191,5419
	int firstarea, numareas;numareas191,5419
} aas_reachabilityareas_t;aas_reachabilityareas_t192,5445
typedef struct aas_saas_s194,5473
	int loaded;									//true when an AAS file is loadedloaded196,5496
	int initialized;							//true when AAS has been initializedinitialized197,5551
	int savefile;								//set true when file should be savedsavefile198,5612
	int bspchecksum;bspchecksum199,5671
	float time;time201,5705
	int numframes;numframes202,5718
	char filename[MAX_PATH];filename204,5758
	char mapname[MAX_PATH];mapname205,5784
	int numbboxes;numbboxes207,5827
	aas_bbox_t *bboxes;bboxes208,5843
	int numvertexes;numvertexes210,5876
	aas_vertex_t *vertexes;vertexes211,5894
	int numplanes;numplanes213,5929
	aas_plane_t *planes;planes214,5945
	int numedges;numedges216,5976
	aas_edge_t *edges;edges217,5991
	int edgeindexsize;edgeindexsize219,6025
	aas_edgeindex_t *edgeindex;edgeindex220,6045
	int numfaces;numfaces222,6083
	aas_face_t *faces;faces223,6098
	int faceindexsize;faceindexsize225,6132
	aas_faceindex_t *faceindex;faceindex226,6152
	int numareas;numareas228,6197
	aas_area_t *areas;areas229,6212
	int numareasettings;numareasettings231,6256
	aas_areasettings_t *areasettings;areasettings232,6278
	int reachabilitysize;reachabilitysize234,6333
	aas_reachability_t *reachability;reachability235,6356
	int numnodes;numnodes237,6416
	aas_node_t *nodes;nodes238,6431
	int numportals;numportals240,6470
	aas_portal_t *portals;portals241,6487
	int portalindexsize;portalindexsize243,6535
	aas_portalindex_t *portalindex;portalindex244,6557
	int numclusters;numclusters246,6602
	aas_cluster_t *clusters;clusters247,6620
	int numreachabilityareas;numreachabilityareas249,6650
	float reachabilitytime;reachabilitytime250,6677
	aas_link_t *linkheap;						//heap with link structureslinkheap252,6733
	int linkheapsize;							//size of the link heaplinkheapsize253,6789
	aas_link_t *freelinks;						//first free linkfreelinks254,6838
	aas_link_t **arealinkedentities;			//entities linked into areasarealinkedentities255,6885
	int maxentities;maxentities257,6962
	int maxclients;maxclients258,6980
	aas_entity_t *entities;entities259,6997
	char *configstrings[MAX_CONFIGSTRINGS];configstrings261,7040
	int indexessetup;indexessetup262,7081
	int travelflagfortype[MAX_TRAVELTYPES];travelflagfortype264,7151
	int *areacontentstravelflags;areacontentstravelflags266,7240
	aas_routingupdate_t *areaupdate;areaupdate268,7289
	aas_routingupdate_t *portalupdate;portalupdate269,7323
	int frameroutingupdates;frameroutingupdates271,7423
	aas_reversedreachability_t *reversedreachability;reversedreachability273,7480
	unsigned short ***areatraveltimes;areatraveltimes275,7564
	aas_routingcache_t ***clusterareacache;clusterareacache277,7648
	aas_routingcache_t **portalcache;portalcache278,7689
	aas_routingcache_t *oldestcache;		// start of cache list sorted on timeoldestcache280,7753
	aas_routingcache_t *newestcache;		// end of cache list sorted on timenewestcache281,7826
	int *portalmaxtraveltimes;portalmaxtraveltimes283,7941
	int *reachabilityareaindex;reachabilityareaindex285,8008
	aas_reachabilityareas_t *reachabilityareas;reachabilityareas286,8037
} aas_t;aas_t287,8082
#define AASINTERNAASINTERN289,8092

botlib/be_aas_bsp.h,43
#define MAX_EPAIRKEY	MAX_EPAIRKEY58,1958

botlib/be_aas_file.h,0

botlib/be_aas_reach.h,0

botlib/be_ai_gen.h,0

botlib/l_log.c,642
#define MAX_LOGFILENAMESIZE	MAX_LOGFILENAMESIZE41,1415
typedef struct logfile_slogfile_s43,1450
	char filename[MAX_LOGFILENAMESIZE];filename45,1477
	FILE *fp;fp46,1514
	int numwrites;numwrites47,1525
} logfile_t;logfile_t48,1541
static logfile_t logfile;logfile50,1555
void Log_Open(char *filename)Log_Open58,1801
void Log_Close(void)Log_Close86,2648
void Log_Shutdown(void)Log_Shutdown103,3165
void QDECL Log_Write(char *fmt, ...)Log_Write113,3477
void QDECL Log_WriteTimeStamped(char *fmt, ...)Log_WriteTimeStamped130,3927
FILE *Log_FilePointer(void)Log_FilePointer155,4688
void Log_Flush(void)Log_Flush165,4997

botlib/be_ai_char.h,0

botlib/be_aas_sample.h,0

botlib/be_aas_optimize.c,1254
typedef struct optimized_soptimized_s46,1649
	int numvertexes;numvertexes49,1690
	aas_vertex_t *vertexes;vertexes50,1708
	int numedges;numedges52,1742
	aas_edge_t *edges;edges53,1757
	int edgeindexsize;edgeindexsize55,1791
	aas_edgeindex_t *edgeindex;edgeindex56,1811
	int numfaces;numfaces58,1849
	aas_face_t *faces;faces59,1864
	int faceindexsize;faceindexsize61,1898
	aas_faceindex_t *faceindex;faceindex62,1918
	int numareas;numareas64,1963
	aas_area_t *areas;areas65,1978
	int *vertexoptimizeindex;vertexoptimizeindex67,2002
	int *edgeoptimizeindex;edgeoptimizeindex68,2029
	int *faceoptimizeindex;faceoptimizeindex69,2054
} optimized_t;optimized_t70,2079
int AAS_KeepEdge(aas_edge_t *edge)AAS_KeepEdge78,2314
int AAS_OptimizeEdge(optimized_t *optimized, int edgenum)AAS_OptimizeEdge88,2618
int AAS_KeepFace(aas_face_t *face)AAS_KeepFace133,3956
int AAS_OptimizeFace(optimized_t *optimized, int facenum)AAS_OptimizeFace144,4314
void AAS_OptimizeArea(optimized_t *optimized, int areanum)AAS_OptimizeArea189,5681
void AAS_OptimizeAlloc(optimized_t *optimized)AAS_OptimizeAlloc218,6583
void AAS_OptimizeStore(optimized_t *optimized)AAS_OptimizeStore243,8012
void AAS_Optimize(void)AAS_Optimize280,9497

botlib/l_libvar.h,295
typedef struct libvar_slibvar_s33,1252
	char		*name;name35,1278
	char		*string;string36,1292
	int		flags;flags37,1308
	qboolean	modified;	// set each time the cvar is changedmodified38,1321
	float		value;value39,1378
	struct	libvar_s *next;next40,1393
} libvar_t;libvar_t41,1417

botlib/be_ai_weight.h,836
#define WT_BALANCE	WT_BALANCE32,1243
#define MAX_WEIGHTS	MAX_WEIGHTS33,1266
typedef struct fuzzyseperator_sfuzzyseperator_s36,1311
	int index;index38,1345
	int value;value39,1357
	int type;type40,1369
	float weight;weight41,1380
	float minweight;minweight42,1395
	float maxweight;maxweight43,1413
	struct fuzzyseperator_s *child;child44,1431
	struct fuzzyseperator_s *next;next45,1464
} fuzzyseperator_t;fuzzyseperator_t46,1496
typedef struct weight_sweight_s49,1532
	char *name;name51,1558
	struct fuzzyseperator_s *firstseperator;firstseperator52,1571
} weight_t;weight_t53,1613
typedef struct weightconfig_sweightconfig_s56,1649
	int numweights;numweights58,1681
	weight_t weights[MAX_WEIGHTS];weights59,1698
	char		filename[MAX_QPATH];filename60,1730
} weightconfig_t;weightconfig_t61,1758

botlib/be_aas_entity.h,0

botlib/be_aas_move.c,2049
aas_settings_t aassettings;aassettings46,1527
int AAS_DropToFloor(vec3_t origin, vec3_t mins, vec3_t maxs)AAS_DropToFloor56,1799
void AAS_InitSettings(void)AAS_InitSettings74,2347
int AAS_AgainstLadder(vec3_t origin)AAS_AgainstLadder123,5437
int AAS_OnGround(vec3_t origin, int presencetype, int passent)AAS_OnGround185,7173
int AAS_Swimming(vec3_t origin)AAS_Swimming215,8149
static vec3_t VEC_UP			= {0, -1,  0};VEC_UP230,8614
static vec3_t MOVEDIR_UP		= {0,  0,  1};MOVEDIR_UP231,8652
static vec3_t VEC_DOWN		= {0, -2,  0};VEC_DOWN232,8693
static vec3_t MOVEDIR_DOWN	= {0,  0, -1};MOVEDIR_DOWN233,8732
void AAS_SetMovedir(vec3_t angles, vec3_t movedir)AAS_SetMovedir235,8775
void AAS_JumpReachRunStart(aas_reachability_t *reach, vec3_t runstart)AAS_JumpReachRunStart256,9340
float AAS_WeaponJumpZVelocity(vec3_t origin, float radiusdamage)AAS_WeaponJumpZVelocity290,10479
float AAS_RocketJumpZVelocity(vec3_t origin)AAS_RocketJumpZVelocity341,12440
float AAS_BFGJumpZVelocity(vec3_t origin)AAS_BFGJumpZVelocity352,12870
void AAS_Accelerate(vec3_t velocity, float frametime, vec3_t wishdir, float wishspeed, float accel)AAS_Accelerate364,13330
void AAS_AirControl(vec3_t start, vec3_t end, vec3_t velocity, vec3_t cmdmove)AAS_AirControl390,14046
void AAS_ApplyFriction(vec3_t vel, float friction, float stopspeed,AAS_ApplyFriction403,14480
int AAS_ClipToBBox(aas_trace_t *trace, vec3_t start, vec3_t end, int presencetype, vec3_t mins, vec3_t maxs)AAS_ClipToBBox426,15173
int AAS_ClientMovementPrediction(struct aas_clientmove_s *move,AAS_ClientMovementPrediction505,17807
int AAS_PredictClientMovement(struct aas_clientmove_s *move,AAS_PredictClientMovement994,33689
int AAS_ClientMovementHitBBox(struct aas_clientmove_s *move,AAS_ClientMovementHitBBox1014,34486
void AAS_TestMovementPrediction(int entnum, vec3_t origin, vec3_t dir)AAS_TestMovementPrediction1033,35255
int AAS_HorizontalVelocityForJump(float zvel, vec3_t start, vec3_t end, float *velocity)AAS_HorizontalVelocityForJump1062,36345

botlib/l_memory.c,2209
#define MEM_ID	MEM_ID40,1387
#define HUNK_ID	HUNK_ID41,1415
int allocatedmemory;allocatedmemory43,1445
int totalmemorysize;totalmemorysize44,1466
int numblocks;numblocks45,1487
typedef struct memoryblock_smemoryblock_s49,1525
	unsigned long int id;id51,1556
	void *ptr;ptr52,1579
	int size;size53,1591
	char *label;label55,1618
	char *file;file56,1632
	int line;line57,1645
	struct memoryblock_s *prev, *next;prev59,1674
	struct memoryblock_s *prev, *next;next59,1674
} memoryblock_t;memoryblock_t60,1710
memoryblock_t *memory;memory62,1728
void LinkMemoryBlock(memoryblock_t *block)LinkMemoryBlock70,1969
void UnlinkMemoryBlock(memoryblock_t *block)UnlinkMemoryBlock83,2367
void *GetMemoryDebug(unsigned long size, char *label, char *file, int line)GetMemoryDebug96,2819
void *GetClearedMemoryDebug(unsigned long size, char *label, char *file, int line)GetClearedMemoryDebug127,3750
void *GetHunkMemoryDebug(unsigned long size, char *label, char *file, int line)GetHunkMemoryDebug148,4340
void *GetClearedHunkMemoryDebug(unsigned long size, char *label, char *file, int line)GetClearedHunkMemoryDebug179,5255
memoryblock_t *BlockFromPointer(void *ptr, char *str)BlockFromPointer199,5849
void FreeMemory(void *ptr)FreeMemory231,6725
int AvailableMemory(void)AvailableMemory253,7304
int MemoryByteSize(void *ptr)MemoryByteSize263,7626
void PrintUsedMemorySize(void)PrintUsedMemorySize277,8032
void PrintMemoryLabels(void)PrintMemoryLabels289,8572
void DumpMemory(void)DumpMemory319,9442
void *GetMemoryDebug(unsigned long size, char *label, char *file, int line)GetMemoryDebug340,9897
void *GetClearedMemoryDebug(unsigned long size, char *label, char *file, int line)GetClearedMemoryDebug361,10556
void *GetHunkMemoryDebug(unsigned long size, char *label, char *file, int line)GetHunkMemoryDebug382,11146
void *GetClearedHunkMemoryDebug(unsigned long size, char *label, char *file, int line)GetClearedHunkMemoryDebug403,11818
void FreeMemory(void *ptr)FreeMemory423,12412
int AvailableMemory(void)AvailableMemory440,12866
void PrintUsedMemorySize(void)PrintUsedMemorySize450,13188
void PrintMemoryLabels(void)PrintMemoryLabels459,13482

botlib/be_aas_routealt.h,0

botlib/be_aas_funcs.h,0

botlib/l_crc.h,43
typedef unsigned short crc_t;crc_t23,975

botlib/be_aas_debug.c,1892
#define MAX_DEBUGLINES	MAX_DEBUGLINES45,1531
#define MAX_DEBUGPOLYGONS	MAX_DEBUGPOLYGONS46,1562
int debuglines[MAX_DEBUGLINES];debuglines48,1596
int debuglinevisible[MAX_DEBUGLINES];debuglinevisible49,1628
int numdebuglines;numdebuglines50,1666
static int debugpolygons[MAX_DEBUGPOLYGONS];debugpolygons52,1686
void AAS_ClearShownPolygons(void)AAS_ClearShownPolygons60,1951
void AAS_ShowPolygon(int color, int numpoints, vec3_t *points)AAS_ShowPolygon84,2545
void AAS_ClearShownDebugLines(void)AAS_ClearShownDebugLines103,3065
void AAS_DebugLine(vec3_t start, vec3_t end, int color)AAS_DebugLine125,3673
void AAS_PermanentLine(vec3_t start, vec3_t end, int color)AAS_PermanentLine151,4371
void AAS_DrawPermanentCross(vec3_t origin, float size, int color)AAS_DrawPermanentCross164,4792
void AAS_DrawPlaneCross(vec3_t point, vec3_t normal, float dist, int type, int color)AAS_DrawPlaneCross186,5437
void AAS_ShowBoundingBox(vec3_t origin, vec3_t mins, vec3_t maxs)AAS_ShowBoundingBox242,7076
void AAS_ShowFace(int facenum)AAS_ShowFace302,8960
void AAS_ShowFacePolygon(int facenum, int color, int flip)AAS_ShowFacePolygon349,10508
void AAS_ShowArea(int areanum, int groundfacesonly)AAS_ShowArea394,11778
void AAS_ShowAreaPolygons(int areanum, int color, int groundfacesonly)AAS_ShowAreaPolygons486,14428
void AAS_DrawCross(vec3_t origin, float size, int color)AAS_DrawCross525,15604
void AAS_PrintTravelType(int traveltype)AAS_PrintTravelType545,16120
void AAS_DrawArrow(vec3_t start, vec3_t end, int linecolor, int arrowcolor)AAS_DrawArrow579,17490
void AAS_ShowReachability(aas_reachability_t *reach)AAS_ShowReachability605,18286
void AAS_ShowReachableAreas(int areanum)AAS_ShowReachableAreas684,21056
void AAS_FloodAreas_r(int areanum, int cluster, int *done)AAS_FloodAreas_r713,21826
void AAS_FloodAreas(vec3_t origin)AAS_FloodAreas769,23352

botlib/be_ai_weap.h,1920
#define PFL_WINDOWDAMAGE	PFL_WINDOWDAMAGE34,1257
#define PFL_RETURN	PFL_RETURN35,1323
#define WFL_FIRERELEASED	WFL_FIRERELEASED37,1403
#define DAMAGETYPE_IMPACT	DAMAGETYPE_IMPACT39,1497
#define DAMAGETYPE_RADIAL	DAMAGETYPE_RADIAL40,1547
#define DAMAGETYPE_VISIBLE	DAMAGETYPE_VISIBLE41,1594
typedef struct projectileinfo_sprojectileinfo_s43,1678
	char name[MAX_STRINGFIELD];name45,1712
	char model[MAX_STRINGFIELD];model46,1741
	int flags;flags47,1771
	float gravity;gravity48,1783
	int damage;damage49,1799
	float radius;radius50,1812
	int visdamage;visdamage51,1827
	int damagetype;damagetype52,1843
	int healthinc;healthinc53,1860
	float push;push54,1876
	float detonation;detonation55,1889
	float bounce;bounce56,1908
	float bouncefric;bouncefric57,1923
	float bouncestop;bouncestop58,1942
} projectileinfo_t;projectileinfo_t59,1961
typedef struct weaponinfo_sweaponinfo_s61,1982
	int valid;					//true if the weapon info is validvalid63,2012
	int number;									//number of the weaponnumber64,2063
	char name[MAX_STRINGFIELD];name65,2107
	char model[MAX_STRINGFIELD];model66,2136
	int level;level67,2166
	int weaponindex;weaponindex68,2178
	int flags;flags69,2196
	char projectile[MAX_STRINGFIELD];projectile70,2208
	int numprojectiles;numprojectiles71,2243
	float hspread;hspread72,2264
	float vspread;vspread73,2280
	float speed;speed74,2296
	float acceleration;acceleration75,2310
	vec3_t recoil;recoil76,2331
	vec3_t offset;offset77,2347
	vec3_t angleoffset;angleoffset78,2363
	float extrazvelocity;extrazvelocity79,2384
	int ammoamount;ammoamount80,2407
	int ammoindex;ammoindex81,2424
	float activate;activate82,2440
	float reload;reload83,2457
	float spinup;spinup84,2472
	float spindown;spindown85,2487
	projectileinfo_t proj;						//pointer to the used projectileproj86,2504
} weaponinfo_t;weaponinfo_t87,2566

botlib/l_script.h,5307
#define BINARYNUMBERSBINARYNUMBERS33,1313
#define NUMBERVALUENUMBERVALUE35,1396
#define DOLLARDOLLAR37,1454
#define MAX_TOKEN	MAX_TOKEN40,1493
#define QDECLQDECL43,1558
#define SCFL_NOERRORS	SCFL_NOERRORS48,1596
#define SCFL_NOWARNINGS	SCFL_NOWARNINGS49,1628
#define SCFL_NOSTRINGWHITESPACES	SCFL_NOSTRINGWHITESPACES50,1662
#define SCFL_NOSTRINGESCAPECHARS	SCFL_NOSTRINGESCAPECHARS51,1702
#define SCFL_PRIMITIVE	SCFL_PRIMITIVE52,1742
#define SCFL_NOBINARYNUMBERS	SCFL_NOBINARYNUMBERS53,1775
#define SCFL_NONUMBERVALUES	SCFL_NONUMBERVALUES54,1812
#define TT_STRING	TT_STRING57,1863
#define TT_LITERAL	TT_LITERAL58,1900
#define TT_NUMBER	TT_NUMBER59,1938
#define TT_NAME	TT_NAME60,1975
#define TT_PUNCTUATION	TT_PUNCTUATION61,2008
#define TT_DECIMAL	TT_DECIMAL71,2227
#define TT_HEX	TT_HEX72,2275
#define TT_OCTAL	TT_OCTAL73,2325
#define TT_BINARY	TT_BINARY75,2391
#define TT_FLOAT	TT_FLOAT77,2461
#define TT_INTEGER	TT_INTEGER78,2515
#define TT_LONG	TT_LONG79,2563
#define TT_UNSIGNED	TT_UNSIGNED80,2606
#define P_RSHIFT_ASSIGN	P_RSHIFT_ASSIGN83,2702
#define P_LSHIFT_ASSIGN	P_LSHIFT_ASSIGN84,2731
#define P_PARMS	P_PARMS85,2760
#define P_PRECOMPMERGE	P_PRECOMPMERGE86,2783
#define P_LOGIC_AND	P_LOGIC_AND88,2812
#define P_LOGIC_OR	P_LOGIC_OR89,2838
#define P_LOGIC_GEQ	P_LOGIC_GEQ90,2863
#define P_LOGIC_LEQ	P_LOGIC_LEQ91,2889
#define P_LOGIC_EQ	P_LOGIC_EQ92,2915
#define P_LOGIC_UNEQ	P_LOGIC_UNEQ93,2940
#define P_MUL_ASSIGN	P_MUL_ASSIGN95,2969
#define P_DIV_ASSIGN	P_DIV_ASSIGN96,2997
#define P_MOD_ASSIGN	P_MOD_ASSIGN97,3025
#define P_ADD_ASSIGN	P_ADD_ASSIGN98,3053
#define P_SUB_ASSIGN	P_SUB_ASSIGN99,3081
#define P_INC	P_INC100,3109
#define P_DEC	P_DEC101,3132
#define P_BIN_AND_ASSIGN	P_BIN_AND_ASSIGN103,3156
#define P_BIN_OR_ASSIGN	P_BIN_OR_ASSIGN104,3186
#define P_BIN_XOR_ASSIGN	P_BIN_XOR_ASSIGN105,3216
#define P_RSHIFT	P_RSHIFT106,3246
#define P_LSHIFT	P_LSHIFT107,3271
#define P_POINTERREF	P_POINTERREF109,3297
#define P_CPP1	P_CPP1110,3325
#define P_CPP2	P_CPP2111,3349
#define P_MUL	P_MUL112,3373
#define P_DIV	P_DIV113,3396
#define P_MOD	P_MOD114,3419
#define P_ADD	P_ADD115,3442
#define P_SUB	P_SUB116,3465
#define P_ASSIGN	P_ASSIGN117,3488
#define P_BIN_AND	P_BIN_AND119,3514
#define P_BIN_OR	P_BIN_OR120,3540
#define P_BIN_XOR	P_BIN_XOR121,3565
#define P_BIN_NOT	P_BIN_NOT122,3591
#define P_LOGIC_NOT	P_LOGIC_NOT124,3618
#define P_LOGIC_GREATER	P_LOGIC_GREATER125,3645
#define P_LOGIC_LESS	P_LOGIC_LESS126,3675
#define P_REF	P_REF128,3704
#define P_COMMA	P_COMMA129,3727
#define P_SEMICOLON	P_SEMICOLON130,3751
#define P_COLON	P_COLON131,3778
#define P_QUESTIONMARK	P_QUESTIONMARK132,3802
#define P_PARENTHESESOPEN	P_PARENTHESESOPEN134,3832
#define P_PARENTHESESCLOSE	P_PARENTHESESCLOSE135,3863
#define P_BRACEOPEN	P_BRACEOPEN136,3895
#define P_BRACECLOSE	P_BRACECLOSE137,3922
#define P_SQBRACKETOPEN	P_SQBRACKETOPEN138,3950
#define P_SQBRACKETCLOSE	P_SQBRACKETCLOSE139,3980
#define P_BACKSLASH	P_BACKSLASH140,4010
#define P_PRECOMP	P_PRECOMP142,4038
#define P_DOLLAR	P_DOLLAR143,4064
typedef struct punctuation_spunctuation_s149,4163
	char *p;						//punctuation character(s)p151,4194
	int n;							//punctuation indicationn152,4236
	struct punctuation_s *next;		//next punctuationnext153,4275
} punctuation_t;punctuation_t154,4324
typedef struct token_stoken_s157,4350
	char string[MAX_TOKEN];			//available tokenstring159,4375
	int type;						//last read token typetype160,4420
	int subtype;					//last read token sub typesubtype161,4459
	unsigned long int intvalue;	//integer valueintvalue163,4523
	float floatvalue;			//floating point valuefloatvalue164,4568
	char *whitespace_p;				//start of white space before tokenwhitespace_p166,4633
	char *endwhitespace_p;			//start of white space before tokenendwhitespace_p167,4693
	int line;						//line the token was online168,4755
	int linescrossed;				//lines crossed in white spacelinescrossed169,4795
	struct token_s *next;			//next token in chainnext170,4848
} token_t;token_t171,4895
typedef struct script_sscript_s174,4921
	char filename[1024];			//file name of the scriptfilename176,4947
	char *buffer;					//buffer containing the scriptbuffer177,4997
	char *script_p;					//current pointer in the scriptscript_p178,5047
	char *end_p;					//pointer to the end of the scriptend_p179,5100
	char *lastscript_p;				//script pointer before reading tokenlastscript_p180,5153
	char *whitespace_p;				//begin of the white spacewhitespace_p181,5215
	char *endwhitespace_p;			//end of the white spaceendwhitespace_p182,5266
	int length;						//length of the script in byteslength183,5317
	int line;						//current line in scriptline184,5367
	int lastline;					//line before reading tokenlastline185,5408
	int tokenavailable;				//set by UnreadLastTokentokenavailable186,5455
	int flags;						//several script flagsflags187,5504
	punctuation_t *punctuations;	//the punctuations used in the scriptpunctuations188,5544
	punctuation_t **punctuationtable;punctuationtable189,5612
	token_t token;					//available tokentoken190,5647
	struct script_s *next;			//next script in a chainnext191,5685
} script_t;script_t192,5736

botlib/be_aas_cluster.c,1957
#define AAS_MAX_PORTALS	AAS_MAX_PORTALS48,1586
#define AAS_MAX_PORTALINDEXSIZE	AAS_MAX_PORTALINDEXSIZE49,1620
#define AAS_MAX_CLUSTERS	AAS_MAX_CLUSTERS50,1660
#define MAX_PORTALAREAS	MAX_PORTALAREAS52,1697
int nofaceflood = qtrue;nofaceflood55,1789
void AAS_RemoveClusterAreas(void)AAS_RemoveClusterAreas63,2034
void AAS_ClearCluster(int clusternum)AAS_ClearCluster78,2442
void AAS_RemovePortalsClusterReference(int clusternum)AAS_RemovePortalsClusterReference96,2920
int AAS_UpdatePortal(int areanum, int clusternum)AAS_UpdatePortal118,3608
int AAS_FloodClusterAreas_r(int areanum, int clusternum)AAS_FloodClusterAreas_r177,5455
int AAS_FloodClusterAreasUsingReachabilities(int clusternum)AAS_FloodClusterAreasUsingReachabilities250,7908
void AAS_NumberClusterPortals(int clusternum)AAS_NumberClusterPortals288,9135
void AAS_NumberClusterAreas(int clusternum)AAS_NumberClusterAreas315,9911
int AAS_FindClusters(void)AAS_FindClusters389,12373
void AAS_CreatePortals(void)AAS_CreatePortals439,13946
void AAS_ConnectedAreas_r(int *areanums, int numareas, int *connectedareas, int curarea)AAS_ConnectedAreas_r687,21806
qboolean AAS_ConnectedAreas(int *areanums, int numareas)AAS_ConnectedAreas723,23116
int AAS_GetAdjacentAreasWithLessPresenceTypes_r(int *areanums, int numareas, int curareanum)AAS_GetAdjacentAreasWithLessPresenceTypes_r744,23829
int AAS_CheckAreaForPossiblePortals(int areanum)AAS_CheckAreaForPossiblePortals793,25519
void AAS_FindPossiblePortals(void)AAS_FindPossiblePortals920,30226
void AAS_RemoveAllPortals(void)AAS_RemoveAllPortals937,30785
int AAS_TestPortals(void)AAS_TestPortals1372,45250
void AAS_CountForcedClusterPortals(void)AAS_CountForcedClusterPortals1401,46100
void AAS_CreateViewPortals(void)AAS_CreateViewPortals1422,46713
void AAS_SetViewPortalsAsClusterPortals(void)AAS_SetViewPortalsAsClusterPortals1440,47231
void AAS_InitClustering(void)AAS_InitClustering1458,47775

botlib/l_struct.h,1026
#define MAX_STRINGFIELD	MAX_STRINGFIELD33,1248
#define FT_CHAR	FT_CHAR35,1292
#define FT_INT	FT_INT36,1325
#define FT_FLOAT	FT_FLOAT37,1357
#define FT_STRING	FT_STRING38,1392
#define FT_STRUCT	FT_STRUCT39,1445
#define FT_TYPE	FT_TYPE41,1515
#define FT_ARRAY	FT_ARRAY43,1583
#define FT_BOUNDED	FT_BOUNDED44,1629
#define FT_UNSIGNED	FT_UNSIGNED45,1676
typedef struct fielddef_sfielddef_s48,1737
	char *name;										//name of the fieldname50,1765
	int offset;										//offset in the structureoffset51,1807
	int type;										//type of the fieldtype52,1855
	int maxarray;									//maximum array sizemaxarray54,1919
	float floatmin, floatmax;					//float min and maxfloatmin55,1963
	float floatmin, floatmax;					//float min and maxfloatmax55,1963
	struct structdef_s *substruct;			//sub structuresubstruct56,2014
} fielddef_t;fielddef_t57,2064
typedef struct structdef_sstructdef_s60,2102
	int size;size62,2131
	fielddef_t *fields;fields63,2142
} structdef_t;structdef_t64,2163

botlib/be_aas_reach.c,6909
#define AAS_MAX_REACHABILITYSIZE	AAS_MAX_REACHABILITYSIZE54,1722
#define REACHABILITYAREASPERCYCLE	REACHABILITYAREASPERCYCLE56,1823
#define INSIDEUNITS	INSIDEUNITS58,1928
#define INSIDEUNITS_WALKEND	INSIDEUNITS_WALKEND59,1956
#define INSIDEUNITS_WALKSTART	INSIDEUNITS_WALKSTART60,1990
#define INSIDEUNITS_WATERJUMP	INSIDEUNITS_WATERJUMP61,2027
#define AREA_WEAPONJUMP	AREA_WEAPONJUMP63,2099
int reach_swim;			//swimreach_swim65,2204
int reach_equalfloor;	//walk on floors with equal heightreach_equalfloor66,2229
int reach_step;			//step upreach_step67,2286
int reach_walk;			//walk of stepreach_walk68,2314
int reach_barrier;		//jump up to a barrierreach_barrier69,2347
int reach_waterjump;	//jump out of waterreach_waterjump70,2390
int reach_walkoffledge;	//walk of a ledgereach_walkoffledge71,2431
int reach_jump;			//jumpreach_jump72,2473
int reach_ladder;		//climb or descent a ladderreach_ladder73,2498
int reach_teleport;		//teleportreach_teleport74,2545
int reach_elevator;		//use an elevatorreach_elevator75,2577
int reach_funcbob;		//use a func bobreach_funcbob76,2616
int reach_grapple;		//grapple hookreach_grapple77,2653
int reach_doublejump;	//double jumpreach_doublejump78,2688
int reach_rampjump;		//ramp jumpreach_rampjump79,2724
int reach_strafejump;	//strafe jump (just normal jump but further)reach_strafejump80,2757
int reach_rocketjump;	//rocket jumpreach_rocketjump81,2824
int reach_bfgjump;		//bfg jumpreach_bfgjump82,2860
int reach_jumppad;		//jump padsreach_jumppad83,2891
int calcgrapplereach;calcgrapplereach85,2968
typedef struct aas_lreachability_saas_lreachability_s87,3012
	int areanum;					//number of the reachable areaareanum89,3049
	int facenum;					//number of the face towards the other areafacenum90,3098
	int edgenum;					//number of the edge towards the other areaedgenum91,3160
	vec3_t start;					//start point of inter area movementstart92,3222
	vec3_t end;						//end point of inter area movementend93,3278
	int traveltype;					//type of travel required to get to the areatraveltype94,3331
	unsigned short int traveltime;	//travel time of the inter area movementtraveltime95,3397
	struct aas_lreachability_s *next;next97,3474
} aas_lreachability_t;aas_lreachability_t98,3509
aas_lreachability_t *reachabilityheap;	//heap with reachabilitiesreachabilityheap100,3559
aas_lreachability_t *nextreachability;	//next free reachability from the heapnextreachability101,3625
aas_lreachability_t **areareachability;	//reachability links for every areaareareachability102,3703
int numlreachabilities;numlreachabilities103,3779
float AAS_FaceArea(aas_face_t *face)AAS_FaceArea112,4069
float AAS_AreaVolume(int areanum)AAS_AreaVolume145,5024
int AAS_BestReachableLinkArea(aas_link_t *areas)AAS_BestReachableLinkArea185,6153
int AAS_GetJumpPadInfo(int ent, vec3_t areastart, vec3_t absmins, vec3_t absmaxs, vec3_t velocity)AAS_GetJumpPadInfo213,6972
int AAS_BestReachableFromJumpPadArea(vec3_t origin, vec3_t mins, vec3_t maxs)AAS_BestReachableFromJumpPadArea290,9461
int AAS_BestReachableArea(vec3_t origin, vec3_t mins, vec3_t maxs, vec3_t goalorigin)AAS_BestReachableArea360,11806
void AAS_SetupReachabilityHeap(void)AAS_SetupReachabilityHeap456,14846
void AAS_ShutDownReachabilityHeap(void)AAS_ShutDownReachabilityHeap476,15528
aas_lreachability_t *AAS_AllocReachability(void)AAS_AllocReachability488,15929
void AAS_FreeReachability(aas_lreachability_t *lreach)AAS_FreeReachability508,16561
int AAS_AreaReachability(int areanum)AAS_AreaReachability523,17073
float AAS_AreaGroundFaceArea(int areanum)AAS_AreaGroundFaceArea539,17652
void AAS_FaceCenter(int facenum, vec3_t center)AAS_FaceCenter564,18328
int AAS_FallDamageDistance(void)AAS_FallDamageDistance591,19189
float AAS_FallDelta(float distance)AAS_FallDelta609,19741
float AAS_MaxJumpHeight(float phys_jumpvel)AAS_MaxJumpHeight624,20193
float AAS_MaxJumpDistance(float phys_jumpvel)AAS_MaxJumpDistance639,20778
int AAS_AreaCrouch(int areanum)AAS_AreaCrouch657,21474
int AAS_AreaSwim(int areanum)AAS_AreaSwim669,21927
int AAS_AreaLiquid(int areanum)AAS_AreaLiquid681,22358
int AAS_AreaLava(int areanum)AAS_AreaLava692,22744
int AAS_AreaSlime(int areanum)AAS_AreaSlime702,23101
int AAS_AreaGrounded(int areanum)AAS_AreaGrounded713,23514
int AAS_AreaLadder(int areanum)AAS_AreaLadder724,23926
int AAS_AreaJumpPad(int areanum)AAS_AreaJumpPad734,24284
int AAS_AreaTeleporter(int areanum)AAS_AreaTeleporter744,24652
int AAS_AreaClusterPortal(int areanum)AAS_AreaClusterPortal754,25029
int AAS_AreaDoNotEnter(int areanum)AAS_AreaDoNotEnter764,25415
unsigned short int AAS_BarrierJumpTravelTime(void)AAS_BarrierJumpTravelTime775,25844
qboolean AAS_ReachabilityExists(int area1num, int area2num)AAS_ReachabilityExists786,26310
int AAS_NearbySolidOrGap(vec3_t start, vec3_t end)AAS_NearbySolidOrGap804,26887
int AAS_Reachability_Swim(int area1num, int area2num)AAS_Reachability_Swim836,27763
int AAS_Reachability_EqualFloorHeight(int area1num, int area2num)AAS_Reachability_EqualFloorHeight913,30274
int AAS_Reachability_Step_Barrier_WaterJump_WalkOffLedge(int area1num, int area2num)AAS_Reachability_Step_Barrier_WaterJump_WalkOffLedge1059,35435
float VectorDistance(vec3_t v1, vec3_t v2)VectorDistance1610,54483
int VectorBetweenVectors(vec3_t v, vec3_t v1, vec3_t v2)VectorBetweenVectors1624,54925
void VectorMiddle(vec3_t v1, vec3_t v2, vec3_t middle)VectorMiddle1639,55417
float AAS_ClosestEdgePoints(vec3_t v1, vec3_t v2, vec3_t v3, vec3_t v4,AAS_ClosestEdgePoints1831,60801
int AAS_Reachability_Jump(int area1num, int area2num)AAS_Reachability_Jump2109,68888
int AAS_Reachability_Ladder(int area1num, int area2num)AAS_Reachability_Ladder2380,77805
int AAS_TravelFlagsForTeam(int ent)AAS_TravelFlagsForTeam2714,89179
void AAS_Reachability_Teleport(void)AAS_Reachability_Teleport2744,89967
void AAS_Reachability_Elevator(void)AAS_Reachability_Elevator2938,96413
aas_lreachability_t *AAS_FindFaceReachabilities(vec3_t *facepoints, int numpoints, aas_plane_t *plane, int towardsface)AAS_FindFaceReachabilities3153,103859
void AAS_Reachability_FuncBobbing(void)AAS_Reachability_FuncBobbing3276,107708
void AAS_Reachability_JumpPad(void)AAS_Reachability_JumpPad3490,115317
int AAS_Reachability_Grapple(int area1num, int area2num)AAS_Reachability_Grapple3784,125471
void AAS_SetWeaponJumpAreaFlags(void)AAS_SetWeaponJumpAreaFlags3925,130730
int AAS_Reachability_WeaponJump(int area1num, int area2num)AAS_Reachability_WeaponJump3997,133242
void AAS_Reachability_WalkOffLedge(int areanum)AAS_Reachability_WalkOffLedge4122,137682
void AAS_StoreReachability(void)AAS_StoreReachability4303,144014
int AAS_ContinueInitReachability(float time)AAS_ContinueInitReachability4360,146093
void AAS_InitReachability(void)AAS_InitReachability4507,151796

botlib/be_ai_gen.c,221
int GeneticSelection(int numranks, float *rankings)GeneticSelection52,1762
int GeneticParentsAndChildSelection(int numranks, float *ranks, int *parent1, int *parent2, int *child)GeneticParentsAndChildSelection90,2707

botlib/l_log.h,0

botlib/be_ai_char.c,2551
#define MAX_CHARACTERISTICS	MAX_CHARACTERISTICS47,1567
#define CT_INTEGER	CT_INTEGER49,1600
#define CT_FLOAT	CT_FLOAT50,1624
#define CT_STRING	CT_STRING51,1646
#define DEFAULT_CHARACTER	DEFAULT_CHARACTER53,1670
union cvaluecvalue56,1740
	int integer;integer58,1755
	float _float;_float59,1769
	char *string;string60,1784
typedef struct bot_characteristic_sbot_characteristic_s63,1821
	char type;						//characteristic typetype65,1859
	union cvalue value;				//characteristic valuevalue66,1898
} bot_characteristic_t;bot_characteristic_t67,1945
typedef struct bot_character_sbot_character_s70,1988
	char filename[MAX_QPATH];filename72,2021
	float skill;skill73,2048
	bot_characteristic_t c[1];		//variable sizedc74,2062
} bot_character_t;bot_character_t75,2108
bot_character_t *botcharacters[MAX_CLIENTS + 1];botcharacters77,2128
bot_character_t *BotCharacterFromHandle(int handle)BotCharacterFromHandle85,2389
void BotDumpCharacter(bot_character_t *ch)BotDumpCharacter105,3009
void BotFreeCharacterStrings(bot_character_t *ch)BotFreeCharacterStrings129,3753
void BotFreeCharacter2(int handle)BotFreeCharacter2147,4221
void BotFreeCharacter(int handle)BotFreeCharacter169,4888
void BotDefaultCharacteristics(bot_character_t *ch, bot_character_t *defaultch)BotDefaultCharacteristics180,5264
bot_character_t *BotLoadCharacterFromFile(char *charfile, int skill)BotLoadCharacterFromFile212,6268
int BotFindCachedCharacter(char *charfile, float skill)BotFindCachedCharacter362,10300
int BotLoadCachedCharacter(char *charfile, float skill, int reload)BotLoadCachedCharacter383,10928
int BotLoadCharacterSkill(char *charfile, float skill)BotLoadCharacterSkill496,14320
int BotInterpolateCharacters(int handle1, int handle2, float desiredskill)BotInterpolateCharacters516,14944
int BotLoadCharacter(char *charfile, float skill)BotLoadCharacter568,16635
int CheckCharacteristicIndex(int character, int index)CheckCharacteristicIndex617,18165
float Characteristic_Float(int character, int index)Characteristic_Float641,18883
float Characteristic_BFloat(int character, int index, float min, float max)Characteristic_BFloat673,19818
int Characteristic_Integer(int character, int index)Characteristic_Integer696,20525
int Characteristic_BInteger(int character, int index, int min, int max)Characteristic_BInteger727,21412
void Characteristic_String(int character, int index, char *buf, int size)Characteristic_String750,22117
void BotShutdownCharacters(void)BotShutdownCharacters778,22929

botlib/be_aas_sample.c,3246
#define BBOX_NORMAL_EPSILON	BBOX_NORMAL_EPSILON50,1592
#define ON_EPSILON	ON_EPSILON52,1628
#define TRACEPLANE_EPSILON	TRACEPLANE_EPSILON54,1663
typedef struct aas_tracestack_saas_tracestack_s56,1699
	vec3_t start;		//start point of the piece of line to tracestart58,1733
	vec3_t end;			//end point of the piece of line to traceend59,1793
	int planenum;		//last plane used as splitterplanenum60,1850
	int nodenum;		//node found after splitting with planenumnodenum61,1896
} aas_tracestack_t;aas_tracestack_t62,1954
int numaaslinks;numaaslinks64,1975
void AAS_PresenceTypeBoundingBox(int presencetype, vec3_t mins, vec3_t maxs)AAS_PresenceTypeBoundingBox72,2212
void AAS_InitAASLinkHeap(void)AAS_InitAASLinkHeap95,3048
void AAS_FreeAASLinkHeap(void)AAS_FreeAASLinkHeap133,4305
aas_link_t *AAS_AllocAASLink(void)AAS_AllocAASLink145,4711
void AAS_DeAllocAASLink(aas_link_t *link)AAS_DeAllocAASLink171,5380
void AAS_InitAASLinkedEntities(void)AAS_InitAASLinkedEntities187,5904
void AAS_FreeAASLinkedEntities(void)AAS_FreeAASLinkedEntities200,6436
int AAS_PointAreaNum(vec3_t point)AAS_PointAreaNum212,6896
int AAS_PointReachabilityAreaIndex( vec3_t origin )AAS_PointReachabilityAreaIndex265,8410
int AAS_AreaCluster(int areanum)AAS_AreaCluster307,9495
int AAS_AreaPresenceType(int areanum)AAS_AreaPresenceType323,10035
int AAS_PointPresenceType(vec3_t point)AAS_PointPresenceType340,10628
vec_t AAS_BoxOriginDistanceFromPlane(vec3_t normal, vec3_t mins, vec3_t maxs, int side)AAS_BoxOriginDistanceFromPlane365,11537
qboolean AAS_AreaEntityCollision(int areanum, vec3_t start, vec3_t end,AAS_AreaEntityCollision405,12681
aas_trace_t AAS_TraceClientBBox(vec3_t start, vec3_t end, int presencetype,AAS_TraceClientBBox448,13984
int AAS_TraceAreas(vec3_t start, vec3_t end, int *areas, vec3_t *points, int maxareas)AAS_TraceAreas725,23086
#define AAS_OrthogonalToVectors(AAS_OrthogonalToVectors912,29024
qboolean AAS_InsideFace(aas_face_t *face, vec3_t pnormal, vec3_t point, float epsilon)AAS_InsideFace925,29722
qboolean AAS_PointInsideFace(int facenum, vec3_t point, float epsilon)AAS_PointInsideFace977,31693
aas_face_t *AAS_AreaGroundFace(int areanum, vec3_t point)AAS_AreaGroundFace1017,32964
void AAS_FacePlane(int facenum, vec3_t normal, float *dist)AAS_FacePlane1051,34001
aas_face_t *AAS_TraceEndFace(aas_trace_t *trace)AAS_TraceEndFace1066,34519
int AAS_BoxOnPlaneSide2(vec3_t absmins, vec3_t absmaxs, aas_plane_t *p)AAS_BoxOnPlaneSide21126,36277
#define AAS_BoxOnPlaneSide(AAS_BoxOnPlaneSide1160,37168
void AAS_UnlinkFromAreas(aas_link_t *areas)AAS_UnlinkFromAreas1191,37782
	int nodenum;		//node found after splittingnodenum1219,38761
} aas_linkstack_t;aas_linkstack_t1220,38805
aas_link_t *AAS_AASLinkEntity(vec3_t absmins, vec3_t absmaxs, int entnum)AAS_AASLinkEntity1222,38825
aas_link_t *AAS_LinkEntityClientBBox(vec3_t absmins, vec3_t absmaxs, int entnum, int presencetype)AAS_LinkEntityClientBBox1322,41756
int AAS_BBoxAreas(vec3_t absmins, vec3_t absmaxs, int *areas, int maxareas)AAS_BBoxAreas1339,42402
int AAS_AreaInfo( int areanum, aas_areainfo_t *info )AAS_AreaInfo1362,43039
aas_plane_t *AAS_PlaneFromNum(int planenum)AAS_PlaneFromNum1388,43968

botlib/be_aas_route.c,5594
#define ROUTING_DEBUGROUTING_DEBUG48,1579
#define DISTANCEFACTOR_CROUCH	DISTANCEFACTOR_CROUCH51,1666
#define DISTANCEFACTOR_SWIM	DISTANCEFACTOR_SWIM52,1724
#define DISTANCEFACTOR_WALK	DISTANCEFACTOR_WALK53,1792
#define CACHE_REFRESHTIME	CACHE_REFRESHTIME56,1869
#define MAX_FRAMEROUTINGUPDATES	MAX_FRAMEROUTINGUPDATES59,1976
int numareacacheupdates;numareacacheupdates80,2664
int numportalcacheupdates;numportalcacheupdates81,2689
int routingcachesize;routingcachesize84,2740
int max_routingcachesize;max_routingcachesize85,2762
void AAS_RoutingInfo(void)AAS_RoutingInfo94,3027
ID_INLINE int AAS_ClusterAreaNum(int cluster, int areanum)AAS_ClusterAreaNum109,3701
void AAS_InitTravelFlagFromType(void)AAS_InitTravelFlagFromType135,4628
ID_INLINE int AAS_TravelFlagForType_inline(int traveltype)AAS_TravelFlagForType_inline169,6200
int AAS_TravelFlagForType(int traveltype)AAS_TravelFlagForType190,6831
void AAS_UnlinkCache(aas_routingcache_t *cache)AAS_UnlinkCache200,7195
void AAS_LinkCache(aas_routingcache_t *cache)AAS_LinkCache215,7790
void AAS_FreeRoutingCache(aas_routingcache_t *cache)AAS_FreeRoutingCache236,8360
void AAS_RemoveRoutingCacheInCluster( int clusternum )AAS_RemoveRoutingCacheInCluster248,8756
void AAS_RemoveRoutingCacheUsingArea( int areanum )AAS_RemoveRoutingCacheUsingArea273,9515
int AAS_EnableRoutingArea(int areanum, int enable)AAS_EnableRoutingArea308,10646
ID_INLINE float AAS_RoutingTime(void)AAS_RoutingTime342,11685
int AAS_GetAreaContentsTravelFlags(int areanum)AAS_GetAreaContentsTravelFlags352,12004
ID_INLINE int AAS_AreaContentsTravelFlags_inline(int areanum)AAS_AreaContentsTravelFlags_inline382,12895
int AAS_AreaContentsTravelFlags(int areanum)AAS_AreaContentsTravelFlags392,13279
void AAS_InitAreaContentsTravelFlags(void)AAS_InitAreaContentsTravelFlags402,13646
void AAS_CreateReversedReachability(void)AAS_CreateReversedReachability419,14278
unsigned short int AAS_AreaTravelTime(int areanum, vec3_t start, vec3_t end)AAS_AreaTravelTime474,16306
void AAS_CalculateAreaTravelTimes(void)AAS_CalculateAreaTravelTimes500,17077
int AAS_PortalMaxTravelTime(int portalnum)AAS_PortalMaxTravelTime567,19454
void AAS_InitPortalMaxTravelTimes(void)AAS_InitPortalMaxTravelTimes601,20440
int AAS_FreeOldestCache(void)AAS_FreeOldestCache696,23119
aas_routingcache_t *AAS_AllocRoutingCache(int numtraveltimes)AAS_AllocRoutingCache735,24396
void AAS_FreeAllClusterAreaCache(void)AAS_FreeAllClusterAreaCache759,25162
void AAS_InitClusterAreaCache(void)AAS_InitClusterAreaCache791,26105
void AAS_FreeAllPortalCache(void)AAS_FreeAllPortalCache820,27108
void AAS_InitPortalCache(void)AAS_InitPortalCache846,27854
void AAS_InitRoutingUpdate(void)AAS_InitRoutingUpdate858,28279
void AAS_CreateAllRoutingCache(void)AAS_CreateAllRoutingCache888,29389
typedef struct routecacheheader_sroutecacheheader_s917,30345
	int ident;ident919,30381
	int version;version920,30393
	int numareas;numareas921,30407
	int numclusters;numclusters922,30422
	int areacrc;areacrc923,30440
	int clustercrc;clustercrc924,30454
	int numportalcache;numportalcache925,30471
	int numareacache;numareacache926,30492
} routecacheheader_t;routecacheheader_t927,30511
#define RCID	RCID929,30534
#define RCVERSION	RCVERSION930,30587
void AAS_WriteRouteCache(void)AAS_WriteRouteCache935,30743
aas_routingcache_t *AAS_ReadCache(fileHandle_t fp)AAS_ReadCache1032,33851
int AAS_ReadRouteCache(void)AAS_ReadRouteCache1051,34590
#define MAX_REACHABILITYPASSAREAS	MAX_REACHABILITYPASSAREAS1142,37663
void AAS_InitReachabilityAreas(void)AAS_InitReachabilityAreas1144,37702
void AAS_InitRouting(void)AAS_InitRouting1216,40091
void AAS_FreeRoutingCaches(void)AAS_FreeRoutingCaches1252,41235
void AAS_UpdateAreaRoutingCache(aas_routingcache_t *areacache)AAS_UpdateAreaRoutingCache1289,42939
aas_routingcache_t *AAS_GetAreaRoutingCache(int clusternum, int areanum, int travelflags)AAS_GetAreaRoutingCache1400,47557
void AAS_UpdatePortalRoutingCache(aas_routingcache_t *portalcache)AAS_UpdatePortalRoutingCache1446,49142
aas_routingcache_t *AAS_GetPortalRoutingCache(int clusternum, int areanum, int travelflags)AAS_GetPortalRoutingCache1544,52702
int AAS_AreaRouteToGoalArea(int areanum, vec3_t origin, int goalareanum, int travelflags, int *traveltime, int *reachnum)AAS_AreaRouteToGoalArea1586,54054
int AAS_AreaTravelTimeToGoalArea(int areanum, vec3_t origin, int goalareanum, int travelflags)AAS_AreaTravelTimeToGoalArea1768,60365
int AAS_AreaReachabilityToGoalArea(int areanum, vec3_t origin, int goalareanum, int travelflags)AAS_AreaReachabilityToGoalArea1784,60895
int AAS_PredictRoute(struct aas_predictroute_s *route, int areanum, vec3_t origin,AAS_PredictRoute1801,61483
int AAS_BridgeWalkable(int areanum)AAS_BridgeWalkable1910,65178
void AAS_ReachabilityFromNum(int num, struct aas_reachability_s *reach)AAS_ReachabilityFromNum1920,65492
int AAS_NextAreaReachability(int areanum, int reachnum)AAS_NextAreaReachability1940,66141
int AAS_NextModelReachability(int num, int modelnum)AAS_NextModelReachability1975,67130
int AAS_RandomGoalArea(int areanum, int travelflags, int *goalareanum, vec3_t goalorigin)AAS_RandomGoalArea2002,67977
int AAS_AreaVisible(int srcarea, int destarea)AAS_AreaVisible2057,69707
float DistancePointToLine(vec3_t v1, vec3_t v2, vec3_t point)DistancePointToLine2067,70029
int AAS_NearestHideArea(int srcnum, vec3_t origin, int areanum, int enemynum, vec3_t enemyorigin, int enemyareanum, int travelflags)AAS_NearestHideArea2081,70480

botlib/l_precomp.h,2734
	#define MAX_PATH	MAX_PATH33,1253
		#define PATHSEPERATOR_STR	PATHSEPERATOR_STR38,1415
		#define PATHSEPERATOR_STR	PATHSEPERATOR_STR40,1456
		#define PATHSEPERATOR_CHAR	PATHSEPERATOR_CHAR45,1629
		#define PATHSEPERATOR_CHAR	PATHSEPERATOR_CHAR47,1671
#define QDECLQDECL52,1758
#define DEFINE_FIXED	DEFINE_FIXED56,1781
#define BUILTIN_LINE	BUILTIN_LINE58,1812
#define BUILTIN_FILE	BUILTIN_FILE59,1837
#define BUILTIN_DATE	BUILTIN_DATE60,1862
#define BUILTIN_TIME	BUILTIN_TIME61,1887
#define BUILTIN_STDC	BUILTIN_STDC62,1912
#define INDENT_IF	INDENT_IF64,1938
#define INDENT_ELSE	INDENT_ELSE65,1966
#define INDENT_ELIF	INDENT_ELIF66,1996
#define INDENT_IFDEF	INDENT_IFDEF67,2026
#define INDENT_IFNDEF	INDENT_IFNDEF68,2056
typedef struct define_sdefine_s71,2108
	char *name;							//define namename73,2134
	int flags;							//define flagsflags74,2167
	int builtin;						// > 0 if builtin definebuiltin75,2200
	int numparms;						//number of define parametersnumparms76,2244
	token_t *parms;						//define parametersparms77,2294
	token_t *tokens;					//macro tokens (possibly containing parm tokens)tokens78,2336
	struct define_s *next;				//next defined macro in a listnext79,2407
	struct define_s *hashnext;			//next define in the hash chainhashnext80,2465
} define_t;define_t81,2527
typedef struct indent_sindent_s86,2634
	int type;								//indent typetype88,2660
	int skip;								//true if skipping current indentskip89,2692
	script_t *script;						//script the indent was inscript90,2744
	struct indent_s *next;					//next indent on the indent stacknext91,2795
} indent_t;indent_t92,2857
typedef struct source_ssource_s95,2884
	char filename[1024];					//file name of the scriptfilename97,2910
	char includepath[1024];					//path to include filesincludepath98,2962
	punctuation_t *punctuations;			//punctuations to usepunctuations99,3015
	script_t *scriptstack;					//stack with scripts of the sourcescriptstack100,3069
	token_t *tokens;						//tokens to read firsttokens101,3132
	define_t *defines;						//list with macro definitionsdefines102,3178
	define_t **definehash;					//hash chain with definesdefinehash103,3233
	indent_t *indentstack;					//stack with indentsindentstack104,3287
	int skip;								// > 0 if skipping conditional codeskip105,3336
	token_t token;							//last read tokentoken106,3390
} source_t;source_t107,3430
#define MAX_TOKENLENGTH	MAX_TOKENLENGTH163,5750
typedef struct pc_token_spc_token_s164,5780
	int type;type166,5808
	int subtype;subtype167,5819
	int intvalue;intvalue168,5833
	float floatvalue;floatvalue169,5848
	char string[MAX_TOKENLENGTH];string170,5867
} pc_token_t;pc_token_t171,5898

botlib/be_aas_bspq3.c,2692
#define ON_EPSILON	ON_EPSILON47,1552
#define MAX_BSPENTITIES	MAX_BSPENTITIES50,1626
typedef struct rgb_srgb_s52,1657
	int red;red54,1680
	int green;green55,1690
	int blue;blue56,1702
} rgb_t;rgb_t57,1713
typedef struct bsp_epair_sbsp_epair_s60,1742
	char *key;key62,1771
	char *value;value63,1783
	struct bsp_epair_s *next;next64,1797
} bsp_epair_t;bsp_epair_t65,1824
typedef struct bsp_entity_sbsp_entity_s68,1858
	bsp_epair_t *epairs;epairs70,1888
} bsp_entity_t;bsp_entity_t71,1910
typedef struct bsp_sbsp_s74,1949
	int loaded;loaded77,2004
	int entdatasize;entdatasize79,2032
	char *dentdata;dentdata80,2050
	int numentities;numentities82,2083
	bsp_entity_t entities[MAX_BSPENTITIES];entities83,2101
} bsp_t;bsp_t84,2142
bsp_t bspworld;bspworld87,2165
typedef struct cname_scname_s91,2200
	int value;value93,2225
	char *name;name94,2237
} cname_t;cname_t95,2250
cname_t contentnames[] =contentnames97,2262
void PrintContents(int contents)PrintContents126,3270
bsp_trace_t AAS_Trace(vec3_t start, vec3_t mins, vec3_t maxs, vec3_t end, int passent, int contentmask)AAS_Trace147,3821
int AAS_PointContents(vec3_t point)AAS_PointContents160,4339
qboolean AAS_EntityCollision(int entnum,AAS_EntityCollision170,4678
qboolean AAS_inPVS(vec3_t p1, vec3_t p2)AAS_inPVS191,5391
qboolean AAS_inPHS(vec3_t p1, vec3_t p2)AAS_inPHS202,5766
void AAS_BSPModelMinsMaxsOrigin(int modelnum, vec3_t angles, vec3_t mins, vec3_t maxs, vec3_t origin)AAS_BSPModelMinsMaxsOrigin212,6077
void AAS_UnlinkFromBSPLeaves(bsp_link_t *leaves)AAS_UnlinkFromBSPLeaves223,6556
bsp_link_t *AAS_BSPLinkEntity(vec3_t absmins, vec3_t absmaxs, int entnum, int modelnum)AAS_BSPLinkEntity232,6874
int AAS_BoxEntities(vec3_t absmins, vec3_t absmaxs, int *list, int maxcount)AAS_BoxEntities242,7239
int AAS_NextBSPEntity(int ent)AAS_NextBSPEntity252,7586
int AAS_BSPEntityInRange(int ent)AAS_BSPEntityInRange264,7954
int AAS_ValueForBSPEpairKey(int ent, char *key, char *value, int size)AAS_ValueForBSPEpairKey279,8406
int AAS_VectorForBSPEpairKey(int ent, char *key, vec3_t v)AAS_VectorForBSPEpairKey302,9064
int AAS_FloatForBSPEpairKey(int ent, char *key, float *value)AAS_FloatForBSPEpairKey323,9713
int AAS_IntForBSPEpairKey(int ent, char *key, int *value)AAS_IntForBSPEpairKey338,10195
void AAS_FreeBSPEntities(void)AAS_FreeBSPEntities353,10669
void AAS_ParseBSPEntities(void)AAS_ParseBSPEntities379,11361
int AAS_BSPTraceLight(vec3_t start, vec3_t end, vec3_t endpos, int *red, int *green, int *blue)AAS_BSPTraceLight450,13383
void AAS_DumpBSPData(void)AAS_DumpBSPData460,13753
int AAS_LoadBSPFile(void)AAS_LoadBSPFile478,14273

botlib/be_aas_file.c,651
void AAS_SwapAASData(void)AAS_SwapAASData54,1803
void AAS_DumpAASData(void)AAS_DumpAASData183,7347
void AAS_FileInfo(void)AAS_FileInfo240,9287
char *AAS_LoadAASLump(fileHandle_t fp, int offset, int length, int *lastoffset, int size)AAS_LoadAASLump290,12089
void AAS_DData(unsigned char *data, int size)AAS_DData327,13053
int AAS_LoadAASFile(char *filename)AAS_LoadAASFile343,13463
static int AAS_WriteAASLump_offset;AAS_WriteAASLump_offset496,20813
int AAS_WriteAASLump(fileHandle_t fp, aas_header_t *h, int lumpnum, void *data, int length)AAS_WriteAASLump498,20850
qboolean AAS_WriteAASFile(char *filename)AAS_WriteAASFile523,21569

botlib/be_ai_goal.c,7918
#define UNDECIDEDFUZZYUNDECIDEDFUZZY51,1651
#define DROPPEDWEIGHTDROPPEDWEIGHT53,1693
#define AVOID_MINIMUM_TIME	AVOID_MINIMUM_TIME55,1741
#define AVOID_DEFAULT_TIME	AVOID_DEFAULT_TIME57,1798
#define AVOID_DROPPED_TIME	AVOID_DROPPED_TIME59,1855
#define TRAVELTIME_SCALE	TRAVELTIME_SCALE61,1889
#define IFL_NOTFREE	IFL_NOTFREE63,1933
#define IFL_NOTTEAM	IFL_NOTTEAM64,1981
#define IFL_NOTSINGLE	IFL_NOTSINGLE65,2026
#define IFL_NOTBOT	IFL_NOTBOT66,2076
#define IFL_ROAM	IFL_ROAM67,2132
typedef struct maplocation_smaplocation_s70,2213
	vec3_t origin;origin72,2244
	int areanum;areanum73,2260
	char name[MAX_EPAIRKEY];name74,2274
	struct maplocation_s *next;next75,2300
} maplocation_t;maplocation_t76,2329
typedef struct campspot_scampspot_s79,2372
	vec3_t origin;origin81,2400
	int areanum;areanum82,2416
	char name[MAX_EPAIRKEY];name83,2430
	float range;range84,2456
	float weight;weight85,2470
	float wait;wait86,2485
	float random;random87,2498
	struct campspot_s *next;next88,2513
} campspot_t;campspot_t89,2539
	GT_FFA,				// free for allGT_FFA93,2602
	GT_TOURNAMENT,		// one on one tournamentGT_TOURNAMENT94,2630
	GT_SINGLE_PLAYER,	// single player tournamentGT_SINGLE_PLAYER95,2672
	GT_TEAM,			// team deathmatchGT_TEAM99,2755
	GT_CTF,				// capture the flagGT_CTF100,2786
	GT_1FCTF,GT_1FCTF102,2837
	GT_OBELISK,GT_OBELISK103,2848
	GT_HARVESTER,GT_HARVESTER104,2861
	GT_MAX_GAME_TYPEGT_MAX_GAME_TYPE106,2883
} gametype_t;gametype_t107,2901
typedef struct levelitem_slevelitem_s109,2916
	int number;							//number of the level itemnumber111,2945
	int iteminfo;						//index into the item infoiteminfo112,2991
	int flags;							//item flagsflags113,3038
	float weight;						//fixed roam weightweight114,3069
	vec3_t origin;						//origin of the itemorigin115,3109
	int goalareanum;					//area the item is ingoalareanum116,3151
	vec3_t goalorigin;					//goal origin within the areagoalorigin117,3195
	int entitynum;						//entity numberentitynum118,3249
	float timeout;						//item is removed after this timetimeout119,3286
	struct levelitem_s *prev, *next;prev120,3341
	struct levelitem_s *prev, *next;next120,3341
} levelitem_t;levelitem_t121,3375
typedef struct iteminfo_siteminfo_s123,3391
	char classname[32];					//classname of the itemclassname125,3419
	char name[MAX_STRINGFIELD];			//name of the itemname126,3468
	char model[MAX_STRINGFIELD];		//model of the itemmodel127,3518
	int modelindex;						//model indexmodelindex128,3569
	int type;							//item typetype129,3605
	int index;							//index in the inventoryindex130,3634
	float respawntime;					//respawn timerespawntime131,3677
	vec3_t mins;						//mins of the itemmins132,3716
	vec3_t maxs;						//maxs of the itemmaxs133,3754
	int number;							//number of the item infonumber134,3792
} iteminfo_t;iteminfo_t135,3837
#define ITEMINFO_OFS(ITEMINFO_OFS137,3852
fielddef_t iteminfo_fields[] =iteminfo_fields139,3909
structdef_t iteminfo_struct =iteminfo_struct152,4329
typedef struct itemconfig_sitemconfig_s157,4402
	int numiteminfo;numiteminfo159,4432
	iteminfo_t *iteminfo;iteminfo160,4450
} itemconfig_t;itemconfig_t161,4473
typedef struct bot_goalstate_sbot_goalstate_s164,4503
	struct weightconfig_s *itemweightconfig;	//weight configitemweightconfig166,4536
	int *itemweightindex;						//index from item to weightitemweightindex167,4594
	int client;									//client using this goal stateclient169,4654
	int lastreachabilityarea;					//last area with reachabilities the bot was inlastreachabilityarea170,4706
	bot_goal_t goalstack[MAX_GOALSTACK];		//goal stackgoalstack172,4788
	int goalstacktop;							//the top of the goal stackgoalstacktop173,4840
	int avoidgoals[MAX_AVOIDGOALS];				//goals to avoidavoidgoals175,4897
	float avoidgoaltimes[MAX_AVOIDGOALS];		//times to avoid the goalsavoidgoaltimes176,4950
} bot_goalstate_t;bot_goalstate_t177,5017
bot_goalstate_t *botgoalstates[MAX_CLIENTS + 1]; // FIXME: init?botgoalstates179,5037
itemconfig_t *itemconfig = NULL;itemconfig181,5123
levelitem_t *levelitemheap = NULL;levelitemheap183,5170
levelitem_t *freelevelitems = NULL;freelevelitems184,5205
levelitem_t *levelitems = NULL;levelitems185,5241
int numlevelitems = 0;numlevelitems186,5273
maplocation_t *maplocations = NULL;maplocations188,5312
campspot_t *campspots = NULL;campspots190,5361
int g_gametype = 0;g_gametype192,5407
libvar_t *droppedweight = NULL;droppedweight194,5460
bot_goalstate_t *BotGoalStateFromHandle(int handle)BotGoalStateFromHandle202,5706
void BotInterbreedGoalFuzzyLogic(int parent1, int parent2, int child)BotInterbreedGoalFuzzyLogic222,6330
void BotSaveGoalFuzzyLogic(int goalstate, char *filename)BotSaveGoalFuzzyLogic239,6923
void BotMutateGoalFuzzyLogic(int goalstate, float range)BotMutateGoalFuzzyLogic253,7367
itemconfig_t *LoadItemConfig(char *filename)LoadItemConfig267,7801
int *ItemWeightIndex(weightconfig_t *iwc, itemconfig_t *ic)ItemWeightIndex348,10109
void InitLevelItemHeap(void)InitLevelItemHeap371,10806
levelitem_t *AllocLevelItem(void)AllocLevelItem394,11511
void FreeLevelItem(levelitem_t *li)FreeLevelItem415,12037
void AddLevelItemToList(levelitem_t *li)AddLevelItemToList426,12382
void RemoveLevelItemFromList(levelitem_t *li)RemoveLevelItemFromList439,12787
void BotFreeInfoEntities(void)BotFreeInfoEntities451,13213
void BotInitInfoEntities(void)BotInitInfoEntities475,13795
void BotInitLevelItems(void)BotInitLevelItems537,15876
void BotGoalName(int number, char *name, int size)BotGoalName679,20094
void BotResetAvoidGoals(int goalstate)BotResetAvoidGoals703,20685
void BotDumpAvoidGoals(int goalstate)BotDumpAvoidGoals718,21200
void BotAddToAvoidGoals(bot_goalstate_t *gs, int number, float avoidtime)BotAddToAvoidGoals742,21888
void BotRemoveFromAvoidGoals(int goalstate, int number)BotRemoveFromAvoidGoals774,22714
float BotAvoidGoalTime(int goalstate, int number)BotAvoidGoalTime797,23361
void BotSetAvoidGoalTime(int goalstate, int number, float avoidtime)BotSetAvoidGoalTime820,24011
int BotGetLevelItemGoal(int index, char *name, bot_goal_t *goal)BotGetLevelItemGoal859,24960
int BotGetMapLocationGoal(char *name, bot_goal_t *goal)BotGetMapLocationGoal912,26395
int BotGetNextCampSpotGoal(int num, bot_goal_t *goal)BotGetNextCampSpotGoal937,27091
void BotFindEntityForLevelItem(levelitem_t *li)BotFindEntityForLevelItem965,27797
#define ET_ITEM	ET_ITEM1007,29030
void BotUpdateEntityItems(void)BotUpdateEntityItems1009,29051
void BotDumpGoalStack(int goalstate)BotDumpGoalStack1182,34153
void BotPushGoal(int goalstate, bot_goal_t *goal)BotPushGoal1202,34697
void BotPopGoal(int goalstate)BotPopGoal1223,35332
void BotEmptyGoalStack(int goalstate)BotEmptyGoalStack1237,35748
int BotGetTopGoal(int goalstate, bot_goal_t *goal)BotGetTopGoal1251,36154
int BotGetSecondGoal(int goalstate, bot_goal_t *goal)BotGetSecondGoal1267,36680
int BotChooseLTGItem(int goalstate, vec3_t origin, int *inventory, int travelflags)BotChooseLTGItem1284,37282
int BotChooseNBGItem(int goalstate, vec3_t origin, int *inventory, int travelflags,BotChooseNBGItem1451,41984
int BotTouchingGoal(vec3_t origin, bot_goal_t *goal)BotTouchingGoal1608,46626
int BotItemGoalInVisButNotVisible(int viewer, vec3_t eye, vec3_t viewangles, bot_goal_t *goal)BotItemGoalInVisButNotVisible1637,47611
void BotResetGoalState(int goalstate)BotResetGoalState1674,48763
int BotLoadItemWeights(int goalstate, char *filename)BotLoadItemWeights1690,49268
void BotFreeItemWeights(int goalstate)BotFreeItemWeights1716,50160
int BotAllocGoalState(int client)BotAllocGoalState1731,50671
void BotFreeGoalState(int handle)BotFreeGoalState1752,51192
int BotSetupGoalAI(void)BotSetupGoalAI1774,51854
void BotShutdownGoalAI(void)BotShutdownGoalAI1800,52607

botlib/be_interface.c,1453
botlib_globals_t botlibglobals;botlibglobals56,1779
botlib_export_t be_botlib_export;be_botlib_export58,1812
botlib_import_t botimport;botimport59,1846
int bot_developer;bot_developer61,1876
int botlibsetup = qfalse;botlibsetup63,1927
int Sys_MilliSeconds(void)Sys_MilliSeconds77,2388
qboolean ValidClientNumber(int num, char *str)ValidClientNumber87,2718
qboolean ValidEntityNumber(int num, char *str)ValidEntityNumber104,3297
qboolean BotLibSetup(char *str)BotLibSetup120,3829
int Export_BotLibSetup(void)Export_BotLibSetup136,4279
int Export_BotLibShutdown(void)Export_BotLibShutdown189,6096
int Export_BotLibVarSet(char *var_name, char *value)Export_BotLibVarSet232,7244
int Export_BotLibVarGet(char *var_name, char *value, int size)Export_BotLibVarGet243,7614
int Export_BotLibStartFrame(float time)Export_BotLibStartFrame258,8080
int Export_BotLibLoadMap(const char *mapname)Export_BotLibLoadMap269,8485
int Export_BotLibUpdateEntity(int ent, bot_entitystate_t *state)Export_BotLibUpdateEntity299,9475
int BotExportTest(int parm0, char *parm1, vec3_t parm2, vec3_t parm3)BotExportTest332,10848
static void Init_AAS_Export( aas_export_t *aas ) {Init_AAS_Export669,21129
static void Init_EA_Export( ea_export_t *ea ) {Init_EA_Export724,23240
static void Init_AI_Export( ai_export_t *ai ) {Init_AI_Export760,24099
botlib_export_t *GetBotLibAPI(int apiVersion, botlib_import_t *import) {GetBotLibAPI862,28213

botlib/be_ai_chat.h,1307
#define MAX_MESSAGE_SIZE	MAX_MESSAGE_SIZE32,1235
#define MAX_CHATTYPE_NAME	MAX_CHATTYPE_NAME33,1265
#define MAX_MATCHVARIABLES	MAX_MATCHVARIABLES34,1295
#define CHAT_GENDERLESS	CHAT_GENDERLESS36,1326
#define CHAT_GENDERFEMALE	CHAT_GENDERFEMALE37,1354
#define CHAT_GENDERMALE	CHAT_GENDERMALE38,1383
#define CHAT_ALL	CHAT_ALL40,1412
#define CHAT_TEAM	CHAT_TEAM41,1435
#define CHAT_TELL	CHAT_TELL42,1459
typedef struct bot_consolemessage_sbot_consolemessage_s45,1504
	int handle;handle47,1542
	float time;									//message timetime48,1555
	int type;									//message typetype49,1591
	char message[MAX_MESSAGE_SIZE];				//messagemessage50,1625
	struct bot_consolemessage_s *prev, *next;	//prev and next in listprev51,1671
	struct bot_consolemessage_s *prev, *next;	//prev and next in listnext51,1671
} bot_consolemessage_t;bot_consolemessage_t52,1738
typedef struct bot_matchvariable_sbot_matchvariable_s55,1780
	char offset;offset57,1817
	int length;length58,1831
} bot_matchvariable_t;bot_matchvariable_t59,1844
typedef struct bot_match_sbot_match_s61,1906
	char string[MAX_MESSAGE_SIZE];string63,1935
	int type;type64,1967
	int subtype;subtype65,1978
	bot_matchvariable_t variables[MAX_MATCHVARIABLES];variables66,1992
} bot_match_t;bot_match_t67,2044

botlib/l_utils.h,146
#define Vector2Angles(Vector2Angles32,1223
#define MAX_PATH	MAX_PATH34,1285
#define Maximum(Maximum36,1322
#define Minimum(Minimum37,1361

botlib/be_aas_main.h,0

botlib/be_ea.c,1948
#define MAX_USERMOVE	MAX_USERMOVE40,1408
#define MAX_COMMANDARGUMENTS	MAX_COMMANDARGUMENTS41,1436
#define ACTION_JUMPEDLASTFRAME	ACTION_JUMPEDLASTFRAME42,1469
bot_input_t *botinputs;botinputs44,1506
void EA_Say(int client, char *str)EA_Say52,1750
void EA_SayTeam(int client, char *str)EA_SayTeam62,2094
void EA_Tell(int client, int clientto, char *str)EA_Tell72,2450
void EA_UseItem(int client, char *it)EA_UseItem82,2827
void EA_DropItem(int client, char *it)EA_DropItem92,3176
void EA_UseInv(int client, char *inv)EA_UseInv102,3528
void EA_DropInv(int client, char *inv)EA_DropInv112,3878
void EA_Gesture(int client)EA_Gesture122,4231
void EA_Command(int client, char *command)EA_Command136,4597
void EA_SelectWeapon(int client, int weapon)EA_SelectWeapon146,4940
void EA_Attack(int client)EA_Attack160,5312
void EA_Talk(int client)EA_Talk174,5673
void EA_Use(int client)EA_Use188,6028
void EA_Respawn(int client)EA_Respawn202,6380
void EA_Jump(int client)EA_Jump216,6744
void EA_DelayedJump(int client)EA_DelayedJump237,7218
void EA_Crouch(int client)EA_Crouch258,7720
void EA_Walk(int client)EA_Walk272,8081
void EA_Action(int client, int action)EA_Action286,8436
void EA_MoveUp(int client)EA_MoveUp300,8798
void EA_MoveDown(int client)EA_MoveDown314,9159
void EA_MoveForward(int client)EA_MoveForward328,9526
void EA_MoveBack(int client)EA_MoveBack342,9902
void EA_MoveLeft(int client)EA_MoveLeft356,10269
void EA_MoveRight(int client)EA_MoveRight370,10636
void EA_Move(int client, vec3_t dir, float speed)EA_Move384,11006
void EA_View(int client, vec3_t viewangles)EA_View402,11518
void EA_EndRegular(int client, float thinktime)EA_EndRegular416,11900
void EA_GetInput(int client, float thinktime, bot_input_t *input)EA_GetInput443,12565
void EA_ResetInput(int client)EA_ResetInput470,13264
int EA_Setup(void)EA_Setup491,13843
void EA_Shutdown(void)EA_Shutdown504,14275

botlib/be_ai_move.h,3412
#define MOVE_WALK	MOVE_WALK34,1257
#define MOVE_CROUCH	MOVE_CROUCH35,1282
#define MOVE_JUMP	MOVE_JUMP36,1309
#define MOVE_GRAPPLE	MOVE_GRAPPLE37,1334
#define MOVE_ROCKETJUMP	MOVE_ROCKETJUMP38,1361
#define MOVE_BFGJUMP	MOVE_BFGJUMP39,1392
#define MFL_BARRIERJUMP	MFL_BARRIERJUMP41,1433
#define MFL_ONGROUND	MFL_ONGROUND42,1499
#define MFL_SWIMMING	MFL_SWIMMING43,1550
#define MFL_AGAINSTLADDER	MFL_AGAINSTLADDER44,1596
#define MFL_WATERJUMP	MFL_WATERJUMP45,1654
#define MFL_TELEPORTED	MFL_TELEPORTED46,1706
#define MFL_GRAPPLEPULL	MFL_GRAPPLEPULL47,1763
#define MFL_ACTIVEGRAPPLE	MFL_ACTIVEGRAPPLE48,1832
#define MFL_GRAPPLERESET	MFL_GRAPPLERESET49,1898
#define MFL_WALK	MFL_WALK50,1959
#define MOVERESULT_MOVEMENTVIEW	MOVERESULT_MOVEMENTVIEW52,2032
#define MOVERESULT_SWIMVIEW	MOVERESULT_SWIMVIEW53,2098
#define MOVERESULT_WAITING	MOVERESULT_WAITING54,2161
#define MOVERESULT_MOVEMENTVIEWSET	MOVERESULT_MOVEMENTVIEWSET55,2225
#define MOVERESULT_MOVEMENTWEAPON	MOVERESULT_MOVEMENTWEAPON56,2304
#define MOVERESULT_ONTOPOFOBSTACLE	MOVERESULT_ONTOPOFOBSTACLE57,2374
#define MOVERESULT_ONTOPOF_FUNCBOB	MOVERESULT_ONTOPOF_FUNCBOB58,2441
#define MOVERESULT_ONTOPOF_ELEVATOR	MOVERESULT_ONTOPOF_ELEVATOR59,2514
#define MOVERESULT_BLOCKEDBYAVOIDSPOT	MOVERESULT_BLOCKEDBYAVOIDSPOT60,2598
#define MAX_AVOIDREACH	MAX_AVOIDREACH62,2678
#define MAX_AVOIDSPOTS	MAX_AVOIDSPOTS63,2707
#define AVOID_CLEAR	AVOID_CLEAR65,2757
#define AVOID_ALWAYS	AVOID_ALWAYS66,2809
#define AVOID_DONTBLOCK	AVOID_DONTBLOCK67,2852
#define RESULTTYPE_ELEVATORUP	RESULTTYPE_ELEVATORUP69,2922
#define RESULTTYPE_WAITFORFUNCBOBBING	RESULTTYPE_WAITFORFUNCBOBBING70,2974
#define RESULTTYPE_BADGRAPPLEPATH	RESULTTYPE_BADGRAPPLEPATH71,3052
#define RESULTTYPE_INSOLIDAREA	RESULTTYPE_INSOLIDAREA72,3119
typedef struct bot_initmove_sbot_initmove_s76,3333
	vec3_t origin;				//origin of the botorigin78,3365
	vec3_t velocity;			//velocity of the botvelocity79,3404
	vec3_t viewoffset;			//view offsetviewoffset80,3446
	int entitynum;				//entity number of the botentitynum81,3482
	int client;					//client number of the botclient82,3528
	float thinktime;			//time the bot thinksthinktime83,3572
	int presencetype;			//presencetype of the botpresencetype84,3614
	vec3_t viewangles;			//view angles of the botviewangles85,3661
	int or_moveflags;			//values ored to the movement flagsor_moveflags86,3708
} bot_initmove_t;bot_initmove_t87,3765
typedef struct bot_moveresult_sbot_moveresult_s90,3855
	int failure;				//true if movement failed all togetherfailure92,3889
	int type;					//failure or blocked typetype93,3945
	int blocked;				//true if blocked by an entityblocked94,3986
	int blockentity;			//entity blocking the botblockentity95,4034
	int traveltype;				//last executed travel typetraveltype96,4080
	int flags;					//result flagsflags97,4128
	int weapon;					//weapon used for movementweapon98,4159
	vec3_t movedir;				//movement directionmovedir99,4203
	vec3_t ideal_viewangles;	//ideal viewangles for the movementideal_viewangles100,4244
} bot_moveresult_t;bot_moveresult_t101,4306
#define bot_moveresult_t_cleared(bot_moveresult_t_cleared103,4327
typedef struct bot_avoidspot_sbot_avoidspot_s105,4431
	vec3_t origin;origin107,4464
	float radius;radius108,4480
	int type;type109,4495
} bot_avoidspot_t;bot_avoidspot_t110,4506

q3_ui/ui_connect.c,636
qboolean	passwordNeeded = qtrue;passwordNeeded33,1187
menufield_s passwordField;passwordField34,1220
static connstate_t	lastConnState;lastConnState36,1248
static char			lastLoadingText[MAX_INFO_VALUE];lastLoadingText37,1282
static void UI_ReadableSize ( char *buf, int bufsize, int value )UI_ReadableSize39,1330
static void UI_PrintTime ( char *buf, int bufsize, int time ) {UI_PrintTime57,2029
static void UI_DisplayDownloadInfo( const char *downloadName ) {UI_DisplayDownloadInfo69,2428
void UI_DrawConnectScreen( qboolean overlay ) {UI_DrawConnectScreen162,5844
void UI_KeyConnect( int key ) {UI_KeyConnect261,8784

q3_ui/ui_loadconfig.c,1494
#define ART_BACK0	ART_BACK034,1183
#define ART_BACK1	ART_BACK135,1221
#define ART_FIGHT0	ART_FIGHT036,1260
#define ART_FIGHT1	ART_FIGHT137,1299
#define ART_FRAMEL	ART_FRAMEL38,1338
#define ART_FRAMER	ART_FRAMER39,1379
#define ART_ARROWS	ART_ARROWS40,1420
#define ART_ARROWLEFT	ART_ARROWLEFT41,1466
#define ART_ARROWRIGHT	ART_ARROWRIGHT42,1517
#define MAX_CONFIGS	MAX_CONFIGS44,1571
#define NAMEBUFSIZE	NAMEBUFSIZE45,1597
#define ID_BACK	ID_BACK47,1641
#define ID_GO	ID_GO48,1663
#define ID_LIST	ID_LIST49,1683
#define ID_LEFT	ID_LEFT50,1705
#define ID_RIGHT	ID_RIGHT51,1727
#define ARROWS_WIDTH	ARROWS_WIDTH53,1750
#define ARROWS_HEIGHT	ARROWS_HEIGHT54,1776
	menuframework_s	menu;menu58,1821
	menutext_s		banner;banner60,1845
	menubitmap_s	framel;framel61,1866
	menubitmap_s	framer;framer62,1888
	menulist_s		list;list64,1911
	menubitmap_s	arrows;arrows66,1931
	menubitmap_s	left;left67,1953
	menubitmap_s	right;right68,1973
	menubitmap_s	back;back69,1994
	menubitmap_s	go;go70,2014
	char			names[NAMEBUFSIZE];names72,2033
	char*			configlist[MAX_CONFIGS];configlist73,2061
} configs_t;configs_t74,2095
static configs_t	s_configs;s_configs76,2109
static void LoadConfig_MenuEvent( void *ptr, int event ) {LoadConfig_MenuEvent84,2198
static void LoadConfig_MenuInit( void ) {LoadConfig_MenuInit115,2746
void UI_LoadConfig_Cache( void ) {UI_LoadConfig_Cache252,7466
void UI_LoadConfigMenu( void ) {UI_LoadConfigMenu270,7953

q3_ui/ui_local.h,8331
#define __UI_LOCAL_H____UI_LOCAL_H__24,1000
#undef UI_API_VERSIONUI_API_VERSION31,1198
#define UI_API_VERSION	UI_API_VERSION32,1220
typedef void (*voidfunc_f)(void);voidfunc_f36,1309
#define RCOLUMN_OFFSET	RCOLUMN_OFFSET102,2902
#define LCOLUMN_OFFSET	LCOLUMN_OFFSET103,2945
#define SLIDER_RANGE	SLIDER_RANGE105,2989
#define	MAX_EDIT_LINE	MAX_EDIT_LINE106,3015
#define MAX_MENUDEPTH	MAX_MENUDEPTH108,3044
#define MAX_MENUITEMS	MAX_MENUITEMS109,3070
#define MTYPE_NULL	MTYPE_NULL111,3098
#define MTYPE_SLIDER	MTYPE_SLIDER112,3122
#define MTYPE_ACTION	MTYPE_ACTION113,3148
#define MTYPE_SPINCONTROL	MTYPE_SPINCONTROL114,3173
#define MTYPE_FIELD	MTYPE_FIELD115,3202
#define MTYPE_RADIOBUTTON	MTYPE_RADIOBUTTON116,3227
#define MTYPE_BITMAP	MTYPE_BITMAP117,3256
#define MTYPE_TEXT	MTYPE_TEXT118,3282
#define MTYPE_SCROLLLIST	MTYPE_SCROLLLIST119,3306
#define MTYPE_PTEXT	MTYPE_PTEXT120,3334
#define MTYPE_BTEXT	MTYPE_BTEXT121,3359
#define QMF_BLINK	QMF_BLINK123,3386
#define QMF_SMALLFONT	QMF_SMALLFONT124,3418
#define QMF_LEFT_JUSTIFY	QMF_LEFT_JUSTIFY125,3453
#define QMF_CENTER_JUSTIFY	QMF_CENTER_JUSTIFY126,3490
#define QMF_RIGHT_JUSTIFY	QMF_RIGHT_JUSTIFY127,3529
#define QMF_NUMBERSONLY	QMF_NUMBERSONLY128,3567
#define QMF_HIGHLIGHT	QMF_HIGHLIGHT129,3634
#define QMF_HIGHLIGHT_IF_FOCUS	QMF_HIGHLIGHT_IF_FOCUS130,3669
#define QMF_PULSEIFFOCUS	QMF_PULSEIFFOCUS131,3727
#define QMF_HASMOUSEFOCUS	QMF_HASMOUSEFOCUS132,3782
#define QMF_NOONOFFTEXT	QMF_NOONOFFTEXT133,3820
#define QMF_MOUSEONLY	QMF_MOUSEONLY134,3857
#define QMF_HIDDEN	QMF_HIDDEN135,3920
#define QMF_GRAYED	QMF_GRAYED136,3970
#define QMF_INACTIVE	QMF_INACTIVE137,4025
#define QMF_NODEFAULTINIT	QMF_NODEFAULTINIT138,4081
#define QMF_OWNERDRAW	QMF_OWNERDRAW139,4150
#define QMF_PULSE	QMF_PULSE140,4185
#define QMF_LOWERCASE	QMF_LOWERCASE141,4217
#define QMF_UPPERCASE	QMF_UPPERCASE142,4284
#define QMF_SILENT	QMF_SILENT143,4351
#define QM_GOTFOCUS	QM_GOTFOCUS146,4411
#define QM_LOSTFOCUS	QM_LOSTFOCUS147,4436
#define QM_ACTIVATED	QM_ACTIVATED148,4461
typedef struct _tag_menuframework_tag_menuframework150,4487
	int	cursor;cursor152,4523
	int cursor_prev;cursor_prev153,4536
	int	nitems;nitems155,4555
	void *items[MAX_MENUITEMS];items156,4568
	void (*draw) (void);draw158,4598
	sfxHandle_t (*key) (int key);key159,4620
	qboolean	wrapAround;wrapAround161,4652
	qboolean	fullscreen;fullscreen162,4674
	qboolean	showlogo;showlogo163,4696
} menuframework_s;menuframework_s164,4716
	int type;type168,4753
	const char *name;name169,4764
	int	id;id170,4783
	int x, y;x171,4792
	int x, y;y171,4792
	int left;left172,4803
	int	top;top173,4814
	int	right;right174,4824
	int	bottom;bottom175,4836
	menuframework_s *parent;parent176,4849
	int menuPosition;menuPosition177,4875
	unsigned flags;flags178,4894
	void (*callback)( void *self, int event );callback180,4912
	void (*statusbar)( void *self );statusbar181,4956
	void (*ownerdraw)( void *self );ownerdraw182,4990
} menucommon_s;menucommon_s183,5024
	int		cursor;cursor186,5058
	int		scroll;scroll187,5072
	int		widthInChars;widthInChars188,5086
	char	buffer[MAX_EDIT_LINE];buffer189,5106
	int		maxchars;maxchars190,5135
} mfield_t;mfield_t191,5151
	menucommon_s	generic;generic195,5181
	mfield_t		field;field196,5204
} menufield_s;menufield_s197,5222
	menucommon_s generic;generic201,5256
	float minvalue;minvalue203,5280
	float maxvalue;maxvalue204,5297
	float curvalue;curvalue205,5314
	float range;range207,5332
} menuslider_s;menuslider_s208,5346
	menucommon_s generic;generic212,5380
	int	oldvalue;oldvalue214,5404
	int curvalue;curvalue215,5419
	int	numitems;numitems216,5434
	int	top;top217,5449
	const char **itemnames;itemnames219,5462
	int width;width221,5488
	int height;height222,5500
	int	columns;columns223,5513
	int	seperation;seperation224,5527
} menulist_s;menulist_s225,5544
	menucommon_s generic;generic229,5576
} menuaction_s;menuaction_s230,5599
	menucommon_s generic;generic234,5633
	int curvalue;curvalue235,5656
} menuradiobutton_s;menuradiobutton_s236,5671
	menucommon_s	generic;generic240,5710
	char*			focuspic;	focuspic241,5733
	char*			errorpic;errorpic242,5753
	qhandle_t		shader;shader243,5772
	qhandle_t		focusshader;focusshader244,5792
	int				width;width245,5817
	int				height;height246,5832
	float*			focuscolor;focuscolor247,5848
} menubitmap_s;menubitmap_s248,5870
	menucommon_s	generic;generic252,5904
	char*			string;string253,5927
	int				style;style254,5944
	float*			color;color255,5959
} menutext_s;menutext_s256,5976
#define MAX_FAVORITESERVERS MAX_FAVORITESERVERS423,10193
	int			oldFrame;oldFrame456,10877
	int			oldFrameTime;		// time when ->oldFrame was exactly onoldFrameTime457,10894
	int			frame;frame459,10956
	int			frameTime;			// time when ->frame will be exactly onframeTime460,10970
	float		backlerp;backlerp462,11031
	float		yawAngle;yawAngle464,11050
	qboolean	yawing;yawing465,11068
	float		pitchAngle;pitchAngle466,11086
	qboolean	pitching;pitching467,11106
	int			animationNumber;	// may include ANIM_TOGGLEBITanimationNumber469,11127
	animation_t	*animation;animation470,11181
	int			animationTime;		// time when the first frame of the animation will be exactanimationTime471,11206
} lerpFrame_t;lerpFrame_t472,11289
	qhandle_t		legsModel;legsModel476,11337
	qhandle_t		legsSkin;legsSkin477,11360
	lerpFrame_t		legs;legs478,11382
	qhandle_t		torsoModel;torsoModel480,11403
	qhandle_t		torsoSkin;torsoSkin481,11427
	lerpFrame_t		torso;torso482,11450
	qhandle_t		headModel;headModel484,11472
	qhandle_t		headSkin;headSkin485,11495
	animation_t		animations[MAX_ANIMATIONS];animations487,11518
	qhandle_t		weaponModel;weaponModel489,11561
	qhandle_t		barrelModel;barrelModel490,11586
	qhandle_t		flashModel;flashModel491,11611
	vec3_t			flashDlightColor;flashDlightColor492,11635
	int				muzzleFlashTime;muzzleFlashTime493,11663
	vec3_t			viewAngles;viewAngles496,11724
	vec3_t			moveAngles;moveAngles497,11746
	weapon_t		currentWeapon;currentWeapon498,11768
	int				legsAnim;legsAnim499,11794
	int				torsoAnim;torsoAnim500,11812
	weapon_t		weapon;weapon503,11851
	weapon_t		lastWeapon;lastWeapon504,11870
	weapon_t		pendingWeapon;pendingWeapon505,11893
	int				weaponTimer;weaponTimer506,11919
	int				pendingLegsAnim;pendingLegsAnim507,11940
	int				torsoAnimationTimer;torsoAnimationTimer508,11965
	int				pendingTorsoAnim;pendingTorsoAnim510,11995
	int				legsAnimationTimer;legsAnimationTimer511,12021
	qboolean		chat;chat513,12050
	qboolean		newModel;newModel514,12067
	qboolean		barrelSpinning;barrelSpinning516,12089
	float			barrelAngle;barrelAngle517,12116
	int				barrelTime;barrelTime518,12138
	int				realWeapon;realWeapon520,12159
} playerInfo_t;playerInfo_t521,12179
	int					frametime;frametime532,12622
	int					realtime;realtime533,12642
	int					cursorx;cursorx534,12661
	int					cursory;cursory535,12679
	int					menusp;menusp536,12697
	menuframework_s*	activemenu;activemenu537,12714
	menuframework_s*	stack[MAX_MENUDEPTH];stack538,12744
	glconfig_t			glconfig;glconfig539,12784
	qboolean			debug;debug540,12808
	qhandle_t			whiteShader;whiteShader541,12827
	qhandle_t			menuBackShader;menuBackShader542,12853
	qhandle_t			menuBackNoLogoShader;menuBackNoLogoShader543,12882
	qhandle_t			charset;charset544,12917
	qhandle_t			charsetProp;charsetProp545,12939
	qhandle_t			charsetPropGlow;charsetPropGlow546,12965
	qhandle_t			charsetPropB;charsetPropB547,12995
	qhandle_t			cursor;cursor548,13022
	qhandle_t			rb_on;rb_on549,13043
	qhandle_t			rb_off;rb_off550,13063
	float				xscale;xscale551,13084
	float				yscale;yscale552,13102
	float				bias;bias553,13120
	qboolean			demoversion;demoversion554,13136
	qboolean			firstdraw;firstdraw555,13161
} uiStatic_t;uiStatic_t556,13184
	AWARD_ACCURACY,AWARD_ACCURACY739,20372
	AWARD_IMPRESSIVE,AWARD_IMPRESSIVE740,20389
	AWARD_EXCELLENT,AWARD_EXCELLENT741,20408
	AWARD_GAUNTLET,AWARD_GAUNTLET742,20426
	AWARD_FRAGS,AWARD_FRAGS743,20443
	AWARD_PERFECTAWARD_PERFECT744,20457
} awardType_t;awardType_t745,20472

q3_ui/ui_addbots.c,2696
#define ART_BACK0	ART_BACK035,1169
#define ART_BACK1	ART_BACK136,1207
#define ART_FIGHT0	ART_FIGHT037,1246
#define ART_FIGHT1	ART_FIGHT138,1287
#define ART_BACKGROUND	ART_BACKGROUND39,1328
#define ART_ARROWS	ART_ARROWS40,1375
#define ART_ARROWUP	ART_ARROWUP41,1421
#define ART_ARROWDOWN	ART_ARROWDOWN42,1470
#define ID_BACK	ID_BACK44,1521
#define ID_GO	ID_GO45,1543
#define ID_LIST	ID_LIST46,1563
#define ID_UP	ID_UP47,1585
#define ID_DOWN	ID_DOWN48,1605
#define ID_SKILL	ID_SKILL49,1627
#define ID_TEAM	ID_TEAM50,1649
#define ID_BOTNAME0	ID_BOTNAME051,1671
#define ID_BOTNAME1	ID_BOTNAME152,1696
#define ID_BOTNAME2	ID_BOTNAME253,1721
#define ID_BOTNAME3	ID_BOTNAME354,1746
#define ID_BOTNAME4	ID_BOTNAME455,1771
#define ID_BOTNAME5	ID_BOTNAME556,1796
#define ID_BOTNAME6	ID_BOTNAME657,1821
	menuframework_s	menu;menu61,1865
	menubitmap_s	arrows;arrows62,1888
	menubitmap_s	up;up63,1910
	menubitmap_s	down;down64,1928
	menutext_s		bots[7];bots65,1948
	menulist_s		skill;skill66,1970
	menulist_s		team;team67,1990
	menubitmap_s	go;go68,2009
	menubitmap_s	back;back69,2027
	int				numBots;numBots71,2048
	int				delay;delay72,2065
	int				baseBotNum;baseBotNum73,2080
	int				selectedBotNum;selectedBotNum74,2100
	int				sortedBotNums[MAX_BOTS];sortedBotNums75,2124
	char			botnames[7][32];botnames76,2157
} addBotsMenuInfo_t;addBotsMenuInfo_t77,2182
static addBotsMenuInfo_t	addBotsMenuInfo;addBotsMenuInfo79,2204
static void UI_AddBotsMenu_FightEvent( void* ptr, int event ) {UI_AddBotsMenu_FightEvent87,2316
static void UI_AddBotsMenu_BotEvent( void* ptr, int event ) {UI_AddBotsMenu_BotEvent110,2840
static void UI_AddBotsMenu_BackEvent( void* ptr, int event ) {UI_AddBotsMenu_BackEvent126,3242
static void UI_AddBotsMenu_SetBotNames( void ) {UI_AddBotsMenu_SetBotNames139,3436
static void UI_AddBotsMenu_UpEvent( void* ptr, int event ) {UI_AddBotsMenu_UpEvent156,3830
static void UI_AddBotsMenu_DownEvent( void* ptr, int event ) {UI_AddBotsMenu_DownEvent173,4113
static int QDECL UI_AddBotsMenu_SortCompare( const void *arg1, const void *arg2 ) {UI_AddBotsMenu_SortCompare190,4431
static void UI_AddBotsMenu_GetSortedBotNums( void ) {UI_AddBotsMenu_GetSortedBotNums207,4844
static void UI_AddBotsMenu_Draw( void ) {UI_AddBotsMenu_Draw224,5229
static const char *skillNames[] = {skillNames238,5535
static const char *teamNames1[] = {teamNames1247,5658
static const char *teamNames2[] = {teamNames2252,5713
static void UI_AddBotsMenu_Init( void ) {UI_AddBotsMenu_Init258,5776
void UI_AddBots_Cache( void ) {UI_AddBots_Cache392,10988
void UI_AddBotsMenu( void ) {UI_AddBotsMenu409,11431

q3_ui/ui_sparena.c,74
void UI_SPArena_Start( const char *arenaInfo ) {UI_SPArena_Start25,1000

q3_ui/ui_video.c,4787
#define DRIVERINFO_FRAMEL	DRIVERINFO_FRAMEL36,1218
#define DRIVERINFO_FRAMER	DRIVERINFO_FRAMER37,1264
#define DRIVERINFO_BACK0	DRIVERINFO_BACK038,1310
#define DRIVERINFO_BACK1	DRIVERINFO_BACK139,1353
static char* driverinfo_artlist[] = driverinfo_artlist41,1397
#define ID_DRIVERINFOBACK	ID_DRIVERINFOBACK50,1525
	menuframework_s	menu;menu54,1573
	menutext_s		banner;banner55,1596
	menubitmap_s	back;back56,1617
	menubitmap_s	framel;framel57,1637
	menubitmap_s	framer;framer58,1659
	char			stringbuff[1024];stringbuff59,1681
	char*			strings[64];strings60,1707
	int				numstrings;numstrings61,1729
} driverinfo_t;driverinfo_t62,1749
static driverinfo_t	s_driverinfo;s_driverinfo64,1766
static void DriverInfo_Event( void* ptr, int event )DriverInfo_Event71,1860
static void DriverInfo_MenuDraw( void )DriverInfo_MenuDraw89,2113
void DriverInfo_Cache( void )DriverInfo_Cache122,3461
static void UI_DriverInfo_Menu( void )UI_DriverInfo_Menu140,3705
#define GRAPHICSOPTIONS_FRAMEL	GRAPHICSOPTIONS_FRAMEL234,6775
#define GRAPHICSOPTIONS_FRAMER	GRAPHICSOPTIONS_FRAMER235,6826
#define GRAPHICSOPTIONS_BACK0	GRAPHICSOPTIONS_BACK0236,6877
#define GRAPHICSOPTIONS_BACK1	GRAPHICSOPTIONS_BACK1237,6925
#define GRAPHICSOPTIONS_ACCEPT0	GRAPHICSOPTIONS_ACCEPT0238,6973
#define GRAPHICSOPTIONS_ACCEPT1	GRAPHICSOPTIONS_ACCEPT1239,7025
#define ID_BACK2	ID_BACK2241,7078
#define ID_FULLSCREEN	ID_FULLSCREEN242,7100
#define ID_LIST	ID_LIST243,7126
#define ID_MODE	ID_MODE244,7148
#define ID_DRIVERINFO	ID_DRIVERINFO245,7170
#define ID_GRAPHICS	ID_GRAPHICS246,7196
#define ID_DISPLAY	ID_DISPLAY247,7221
#define ID_SOUND	ID_SOUND248,7245
#define ID_NETWORK	ID_NETWORK249,7267
	menuframework_s	menu;menu252,7309
	menutext_s		banner;banner254,7333
	menubitmap_s	framel;framel255,7354
	menubitmap_s	framer;framer256,7376
	menutext_s		graphics;graphics258,7399
	menutext_s		display;display259,7422
	menutext_s		sound;sound260,7444
	menutext_s		network;network261,7464
	menulist_s		list;list263,7487
	menulist_s		mode;mode264,7506
	menulist_s		driver;driver265,7525
	menuslider_s	tq;tq266,7546
	menulist_s  	fs;fs267,7564
	menulist_s  	lighting;lighting268,7582
	menulist_s  	allow_extensions;allow_extensions269,7606
	menulist_s  	texturebits;texturebits270,7638
	menulist_s  	colordepth;colordepth271,7665
	menulist_s  	geometry;geometry272,7691
	menulist_s  	filter;filter273,7715
	menutext_s		driverinfo;driverinfo274,7737
	menubitmap_s	apply;apply276,7763
	menubitmap_s	back;back277,7784
} graphicsoptions_t;graphicsoptions_t278,7804
	int mode;mode282,7843
	qboolean fullscreen;fullscreen283,7854
	int tq;tq284,7876
	int lighting;lighting285,7885
	int colordepth;colordepth286,7900
	int texturebits;texturebits287,7917
	int geometry;geometry288,7935
	int filter;filter289,7950
	int driver;driver290,7963
	qboolean extensions;extensions291,7976
} InitialVideoOptions_s;InitialVideoOptions_s292,7998
static InitialVideoOptions_s	s_ivo;s_ivo294,8024
static graphicsoptions_t		s_graphicsoptions;	s_graphicsoptions295,8060
static InitialVideoOptions_s s_ivo_templates[] =s_ivo_templates297,8107
#define NUM_IVO_TEMPLATES NUM_IVO_TEMPLATES319,8459
static const char *builtinResolutions[ ] =builtinResolutions321,8547
static char resbuf[ MAX_STRING_CHARS ];resbuf338,8766
static const char* detectedResolutions[ 32 ];detectedResolutions339,8806
static const char** resolutions = builtinResolutions;resolutions341,8853
static qboolean resolutionsDetected = qfalse;resolutionsDetected342,8907
static int GraphicsOptions_FindBuiltinResolution( int mode )GraphicsOptions_FindBuiltinResolution349,9034
static int GraphicsOptions_FindDetectedResolution( int mode )GraphicsOptions_FindDetectedResolution373,9412
static void GraphicsOptions_GetInitialVideo( void )GraphicsOptions_GetInitialVideo397,9785
static void GraphicsOptions_CheckConfig( void )GraphicsOptions_CheckConfig416,10485
static void GraphicsOptions_UpdateMenuItems( void )GraphicsOptions_UpdateMenuItems453,11636
static void GraphicsOptions_ApplyChanges( void *unused, int notification )GraphicsOptions_ApplyChanges535,13939
static void GraphicsOptions_Event( void* ptr, int event ) {GraphicsOptions_Event619,16289
static void GraphicsOptions_TQEvent( void *ptr, int event ) {GraphicsOptions_TQEvent685,17740
void GraphicsOptions_MenuDraw (void)GraphicsOptions_MenuDraw698,17993
static void GraphicsOptions_SetMenuItems( void )GraphicsOptions_SetMenuItems711,18205
void GraphicsOptions_MenuInit( void )GraphicsOptions_MenuInit824,20811
void GraphicsOptions_Cache( void ) {GraphicsOptions_Cache1161,34062
void UI_GraphicsOptionsMenu( void ) {UI_GraphicsOptionsMenu1176,34498

q3_ui/ui_saveconfig.c,1118
#define ART_BACK0	ART_BACK034,1183
#define ART_BACK1	ART_BACK135,1221
#define ART_SAVE0	ART_SAVE036,1260
#define ART_SAVE1	ART_SAVE137,1298
#define ART_BACKGROUND	ART_BACKGROUND38,1336
#define ID_NAME	ID_NAME40,1382
#define ID_BACK	ID_BACK41,1403
#define ID_SAVE	ID_SAVE42,1424
	menuframework_s	menu;menu46,1464
	menutext_s		banner;banner48,1488
	menubitmap_s	background;background49,1509
	menufield_s		savename;savename50,1535
	menubitmap_s	back;back51,1559
	menubitmap_s	save;save52,1579
} saveConfig_t;saveConfig_t53,1599
static saveConfig_t		saveConfig;saveConfig55,1616
static void UI_SaveConfigMenu_BackEvent( void *ptr, int event ) {UI_SaveConfigMenu_BackEvent63,1717
static void UI_SaveConfigMenu_SaveEvent( void *ptr, int event ) {UI_SaveConfigMenu_SaveEvent77,1913
static void UI_SaveConfigMenu_SavenameDraw( void *self ) {UI_SaveConfigMenu_SavenameDraw99,2369
static void UI_SaveConfigMenu_Init( void ) {UI_SaveConfigMenu_Init126,3046
void UI_SaveConfigMenu_Cache( void ) {UI_SaveConfigMenu_Cache195,5656
void UI_SaveConfigMenu( void ) {UI_SaveConfigMenu209,5970

q3_ui/ui_network.c,1251
#define ART_FRAMEL	ART_FRAMEL34,1175
#define ART_FRAMER	ART_FRAMER35,1216
#define ART_BACK0	ART_BACK036,1257
#define ART_BACK1	ART_BACK137,1295
#define ID_GRAPHICS	ID_GRAPHICS39,1334
#define ID_DISPLAY	ID_DISPLAY40,1359
#define ID_SOUND	ID_SOUND41,1383
#define ID_NETWORK	ID_NETWORK42,1405
#define ID_RATE	ID_RATE43,1429
#define ID_BACK	ID_BACK44,1451
static const char *rate_items[] = {rate_items47,1475
	menuframework_s	menu;menu57,1597
	menutext_s		banner;banner59,1621
	menubitmap_s	framel;framel60,1642
	menubitmap_s	framer;framer61,1664
	menutext_s		graphics;graphics63,1687
	menutext_s		display;display64,1710
	menutext_s		sound;sound65,1732
	menutext_s		network;network66,1752
	menulist_s		rate;rate68,1775
	menubitmap_s	back;back70,1795
} networkOptionsInfo_t;networkOptionsInfo_t71,1815
static networkOptionsInfo_t	networkOptionsInfo;networkOptionsInfo73,1840
static void UI_NetworkOptionsMenu_Event( void* ptr, int event ) {UI_NetworkOptionsMenu_Event81,1960
static void UI_NetworkOptionsMenu_Init( void ) {UI_NetworkOptionsMenu_Init135,2961
void UI_NetworkOptionsMenu_Cache( void ) {UI_NetworkOptionsMenu_Cache264,8556
void UI_NetworkOptionsMenu( void ) {UI_NetworkOptionsMenu277,8833

q3_ui/ui_spreset.c,595
#define ART_FRAME	ART_FRAME33,1162
#define ID_NO	ID_NO35,1206
#define ID_YES	ID_YES36,1225
	menuframework_s menu;menu40,1263
	menutext_s		no;no41,1286
	menutext_s		yes;yes42,1303
	int				slashX;slashX43,1321
} resetMenu_t;resetMenu_t44,1337
static resetMenu_t	s_reset;s_reset46,1353
void Reset_MenuEvent(void* ptr, int event) {Reset_MenuEvent54,1441
static sfxHandle_t Reset_MenuKey( int key ) {Reset_MenuKey78,1825
static void Reset_MenuDraw( void ) {Reset_MenuDraw107,2270
void Reset_Cache( void ) {Reset_Cache125,3187
void UI_ResetMenu(void) {UI_ResetMenu135,3315

q3_ui/ui_mfield.c,578
void MField_Draw( mfield_t *edit, int x, int y, int style, vec4_t color ) {MField_Draw33,1128
void MField_Paste( mfield_t *edit ) {MField_Paste116,2636
void MField_KeyDownEvent( mfield_t *edit, int key ) {MField_KeyDownEvent139,3183
void MField_CharEvent( mfield_t *edit, int ch ) {MField_CharEvent207,4601
void MField_Clear( mfield_t *edit ) {MField_Clear285,6214
void MenuField_Init( menufield_s* m ) {MenuField_Init296,6374
void MenuField_Draw( menufield_s *f )MenuField_Draw332,6948
sfxHandle_t MenuField_Key( menufield_s* m, int* key )MenuField_Key392,8025

q3_ui/ui_demo2.c,1526
#define ART_BACK0	ART_BACK035,1166
#define ART_BACK1	ART_BACK136,1204
#define ART_GO0	ART_GO037,1243
#define ART_GO1	ART_GO138,1280
#define ART_FRAMEL	ART_FRAMEL39,1317
#define ART_FRAMER	ART_FRAMER40,1358
#define ART_ARROWS	ART_ARROWS41,1399
#define ART_ARROWLEFT	ART_ARROWLEFT42,1445
#define ART_ARROWRIGHT	ART_ARROWRIGHT43,1496
#define MAX_DEMOS	MAX_DEMOS45,1550
#define NAMEBUFSIZE	NAMEBUFSIZE46,1574
#define ID_BACK	ID_BACK48,1616
#define ID_GO	ID_GO49,1638
#define ID_LIST	ID_LIST50,1658
#define ID_RIGHT	ID_RIGHT51,1680
#define ID_LEFT	ID_LEFT52,1702
#define ARROWS_WIDTH	ARROWS_WIDTH54,1725
#define ARROWS_HEIGHT	ARROWS_HEIGHT55,1751
	menuframework_s	menu;menu59,1796
	menutext_s		banner;banner61,1820
	menubitmap_s	framel;framel62,1841
	menubitmap_s	framer;framer63,1863
	menulist_s		list;list65,1886
	menubitmap_s	arrows;arrows67,1906
	menubitmap_s	left;left68,1928
	menubitmap_s	right;right69,1948
	menubitmap_s	back;back70,1969
	menubitmap_s	go;go71,1989
	int				numDemos;numDemos73,2008
	char			names[NAMEBUFSIZE];names74,2026
	char			*demolist[MAX_DEMOS];demolist75,2054
} demos_t;demos_t76,2084
static demos_t	s_demos;s_demos78,2096
static void Demos_MenuEvent( void *ptr, int event ) {Demos_MenuEvent86,2176
static sfxHandle_t UI_DemosMenu_Key( int key ) {UI_DemosMenu_Key118,2724
static void Demos_MenuInit( void ) {Demos_MenuInit132,2944
void Demos_Cache( void ) {Demos_Cache271,7546
void UI_DemosMenu( void ) {UI_DemosMenu288,8013

q3_ui/ui_players.c,3161
#define UI_TIMER_GESTURE	UI_TIMER_GESTURE28,1018
#define UI_TIMER_JUMP	UI_TIMER_JUMP29,1049
#define UI_TIMER_LAND	UI_TIMER_LAND30,1078
#define UI_TIMER_WEAPON_SWITCH	UI_TIMER_WEAPON_SWITCH31,1106
#define UI_TIMER_ATTACK	UI_TIMER_ATTACK32,1141
#define	UI_TIMER_MUZZLE_FLASH	UI_TIMER_MUZZLE_FLASH33,1171
#define	UI_TIMER_WEAPON_DELAY	UI_TIMER_WEAPON_DELAY34,1204
#define JUMP_HEIGHT	JUMP_HEIGHT36,1239
#define SWINGSPEED	SWINGSPEED38,1266
#define SPIN_SPEED	SPIN_SPEED40,1294
#define COAST_TIME	COAST_TIME41,1321
static int			dp_realtime;dp_realtime44,1350
static float		jumpHeight;jumpHeight45,1376
static void UI_PlayerInfo_SetWeapon( playerInfo_t *pi, weapon_t weaponNum ) {UI_PlayerInfo_SetWeapon53,1466
static void UI_ForceLegsAnim( playerInfo_t *pi, int anim ) {UI_ForceLegsAnim155,3564
static void UI_SetLegsAnim( playerInfo_t *pi, int anim ) {UI_SetLegsAnim169,3835
static void UI_ForceTorsoAnim( playerInfo_t *pi, int anim ) {UI_ForceTorsoAnim183,4075
static void UI_SetTorsoAnim( playerInfo_t *pi, int anim ) {UI_SetTorsoAnim201,4463
static void UI_TorsoSequencing( playerInfo_t *pi ) {UI_TorsoSequencing216,4710
static void UI_LegsSequencing( playerInfo_t *pi ) {UI_LegsSequencing261,5610
static void UI_PositionEntityOnTag( refEntity_t *entity, const refEntity_t *parent, UI_PositionEntityOnTag292,6233
static void UI_PositionRotatedEntityOnTag( refEntity_t *entity, const refEntity_t *parent, UI_PositionRotatedEntityOnTag318,6988
static void UI_SetLerpFrameAnimation( playerInfo_t *ci, lerpFrame_t *lf, int newAnimation ) {UI_SetLerpFrameAnimation345,7769
static void UI_RunLerpFrame( playerInfo_t *ci, lerpFrame_t *lf, int newAnimation ) {UI_RunLerpFrame367,8262
static void UI_PlayerAnimation( playerInfo_t *pi, int *legsOld, int *legs, float *legsBackLerp,UI_PlayerAnimation429,9933
static void UI_SwingAngles( float destination, float swingTolerance, float clampTolerance,UI_SwingAngles469,10903
static float UI_MovedirAdjustment( playerInfo_t *pi ) {UI_MovedirAdjustment531,12353
static void UI_PlayerAngles( playerInfo_t *pi, vec3_t legs[3], vec3_t torso[3], vec3_t head[3] ) {UI_PlayerAngles575,13247
static void UI_PlayerFloatSprite( playerInfo_t *pi, vec3_t origin, qhandle_t shader ) {UI_PlayerFloatSprite634,15092
float	UI_MachinegunSpinAngle( playerInfo_t *pi ) {UI_MachinegunSpinAngle653,15498
void UI_DrawPlayer( float x, float y, float w, float h, playerInfo_t *pi, int time ) {UI_DrawPlayer690,16291
static qboolean UI_RegisterClientSkin( playerInfo_t *pi, const char *modelName, const char *skinName ) {UI_RegisterClientSkin902,21419
static qboolean UI_ParseAnimationFile( const char *filename, animation_t *animations ) {UI_ParseAnimationFile927,22182
qboolean UI_RegisterClientModelname( playerInfo_t *pi, const char *modelSkinName ) {UI_RegisterClientModelname1049,24740
void UI_PlayerInfo_SetModel( playerInfo_t *pi, const char *model ) {UI_PlayerInfo_SetModel1121,26749
void UI_PlayerInfo_SetInfo( playerInfo_t *pi, int legsAnim, int torsoAnim, vec3_t viewAngles, vec3_t moveAngles, weapon_t weaponNumber, qboolean chat ) {UI_PlayerInfo_SetInfo1140,27181

q3_ui/ui_mods.c,1455
#define ART_BACK0	ART_BACK025,1000
#define ART_BACK1	ART_BACK126,1038
#define ART_FIGHT0	ART_FIGHT027,1077
#define ART_FIGHT1	ART_FIGHT128,1116
#define ART_FRAMEL	ART_FRAMEL29,1155
#define ART_FRAMER	ART_FRAMER30,1196
#define MAX_MODS	MAX_MODS32,1238
#define NAMEBUFSIZE	NAMEBUFSIZE33,1260
#define GAMEBUFSIZE	GAMEBUFSIZE34,1300
#define ID_BACK	ID_BACK36,1341
#define ID_GO	ID_GO37,1363
#define ID_LIST	ID_LIST38,1383
	menuframework_s	menu;menu42,1424
	menutext_s		banner;banner44,1448
	menubitmap_s	framel;framel45,1469
	menubitmap_s	framer;framer46,1491
	menulist_s		list;list48,1514
	menubitmap_s	back;back50,1534
	menubitmap_s	go;go51,1554
	char			description[NAMEBUFSIZE];description53,1573
	char			fs_game[GAMEBUFSIZE];fs_game54,1607
	char			*descriptionPtr;descriptionPtr56,1638
	char			*fs_gamePtr;fs_gamePtr57,1663
	char			*descriptionList[MAX_MODS];descriptionList59,1685
	char			*fs_gameList[MAX_MODS];fs_gameList60,1721
} mods_t;mods_t61,1753
static mods_t	s_mods;s_mods63,1764
static void UI_Mods_MenuEvent( void *ptr, int event ) {UI_Mods_MenuEvent71,1844
static void UI_Mods_ParseInfos( char *modDir, char *modDesc ) {UI_Mods_ParseInfos95,2254
static void UI_Mods_LoadMods( void ) {UI_Mods_LoadMods114,2823
static void UI_Mods_MenuInit( void ) {UI_Mods_MenuInit152,3750
void UI_ModsMenu_Cache( void ) {UI_ModsMenu_Cache229,6150
void UI_ModsMenu( void ) {UI_ModsMenu244,6493

q3_ui/ui_display.c,1311
#define ART_FRAMEL	ART_FRAMEL34,1175
#define ART_FRAMER	ART_FRAMER35,1216
#define ART_BACK0	ART_BACK036,1257
#define ART_BACK1	ART_BACK137,1295
#define ID_GRAPHICS	ID_GRAPHICS39,1334
#define ID_DISPLAY	ID_DISPLAY40,1359
#define ID_SOUND	ID_SOUND41,1383
#define ID_NETWORK	ID_NETWORK42,1405
#define ID_BRIGHTNESS	ID_BRIGHTNESS43,1429
#define ID_SCREENSIZE	ID_SCREENSIZE44,1455
#define ID_BACK	ID_BACK45,1481
	menuframework_s	menu;menu49,1522
	menutext_s		banner;banner51,1546
	menubitmap_s	framel;framel52,1567
	menubitmap_s	framer;framer53,1589
	menutext_s		graphics;graphics55,1612
	menutext_s		display;display56,1635
	menutext_s		sound;sound57,1657
	menutext_s		network;network58,1677
	menuslider_s	brightness;brightness60,1700
	menuslider_s	screensize;screensize61,1726
	menubitmap_s	back;back63,1753
} displayOptionsInfo_t;displayOptionsInfo_t64,1773
static displayOptionsInfo_t	displayOptionsInfo;displayOptionsInfo66,1798
static void UI_DisplayOptionsMenu_Event( void* ptr, int event ) {UI_DisplayOptionsMenu_Event74,1918
static void UI_DisplayOptionsMenu_Init( void ) {UI_DisplayOptionsMenu_Init118,2648
void UI_DisplayOptionsMenu_Cache( void ) {UI_DisplayOptionsMenu_Cache248,8883
void UI_DisplayOptionsMenu( void ) {UI_DisplayOptionsMenu261,9160

q3_ui/ui_servers2.c,8105
#define MAX_GLOBALSERVERS	MAX_GLOBALSERVERS35,1189
#define MAX_PINGREQUESTS	MAX_PINGREQUESTS36,1220
#define MAX_ADDRESSLENGTH	MAX_ADDRESSLENGTH37,1249
#define MAX_HOSTNAMELENGTH	MAX_HOSTNAMELENGTH38,1279
#define MAX_MAPNAMELENGTH	MAX_MAPNAMELENGTH39,1310
#define MAX_LISTBOXITEMS	MAX_LISTBOXITEMS40,1340
#define MAX_LOCALSERVERS	MAX_LOCALSERVERS41,1370
#define MAX_STATUSLENGTH	MAX_STATUSLENGTH42,1400
#define MAX_LEAGUELENGTH	MAX_LEAGUELENGTH43,1429
#define MAX_LISTBOXWIDTH	MAX_LISTBOXWIDTH44,1458
#define ART_BACK0	ART_BACK046,1488
#define ART_BACK1	ART_BACK147,1527
#define ART_CREATE0	ART_CREATE048,1566
#define ART_CREATE1	ART_CREATE149,1609
#define ART_SPECIFY0	ART_SPECIFY050,1652
#define ART_SPECIFY1	ART_SPECIFY151,1696
#define ART_REFRESH0	ART_REFRESH052,1740
#define ART_REFRESH1	ART_REFRESH153,1784
#define ART_CONNECT0	ART_CONNECT054,1828
#define ART_CONNECT1	ART_CONNECT155,1870
#define ART_ARROWS0	ART_ARROWS056,1912
#define ART_ARROWS_UP	ART_ARROWS_UP57,1960
#define ART_ARROWS_DOWN	ART_ARROWS_DOWN58,2011
#define ART_UNKNOWNMAP	ART_UNKNOWNMAP59,2064
#define ART_REMOVE0	ART_REMOVE060,2111
#define ART_REMOVE1	ART_REMOVE161,2154
#define ART_PUNKBUSTER	ART_PUNKBUSTER62,2197
#define ID_MASTER	ID_MASTER64,2240
#define ID_GAMETYPE	ID_GAMETYPE65,2263
#define ID_SORTKEY	ID_SORTKEY66,2288
#define ID_SHOW_FULL	ID_SHOW_FULL67,2312
#define ID_SHOW_EMPTY	ID_SHOW_EMPTY68,2337
#define ID_LIST	ID_LIST69,2363
#define ID_SCROLL_UP	ID_SCROLL_UP70,2385
#define ID_SCROLL_DOWN	ID_SCROLL_DOWN71,2410
#define ID_BACK	ID_BACK72,2437
#define ID_REFRESH	ID_REFRESH73,2459
#define ID_SPECIFY	ID_SPECIFY74,2483
#define ID_CREATE	ID_CREATE75,2507
#define ID_CONNECT	ID_CONNECT76,2530
#define ID_REMOVE	ID_REMOVE77,2554
#define ID_PUNKBUSTER ID_PUNKBUSTER78,2577
#define GR_LOGO	GR_LOGO80,2603
#define GR_LETTERS	GR_LETTERS81,2625
#define UIAS_LOCAL	UIAS_LOCAL83,2650
#define UIAS_GLOBAL1	UIAS_GLOBAL184,2673
#define UIAS_GLOBAL2	UIAS_GLOBAL285,2698
#define UIAS_GLOBAL3	UIAS_GLOBAL386,2723
#define UIAS_GLOBAL4	UIAS_GLOBAL487,2748
#define UIAS_GLOBAL5	UIAS_GLOBAL588,2773
#define UIAS_FAVORITES	UIAS_FAVORITES89,2798
#define SORT_HOST	SORT_HOST91,2826
#define SORT_MAP	SORT_MAP92,2848
#define SORT_CLIENTS	SORT_CLIENTS93,2869
#define SORT_GAME	SORT_GAME94,2893
#define SORT_PING	SORT_PING95,2915
#define GAMES_ALL	GAMES_ALL97,2938
#define GAMES_FFA	GAMES_FFA98,2960
#define GAMES_TEAMPLAY	GAMES_TEAMPLAY99,2982
#define GAMES_TOURNEY	GAMES_TOURNEY100,3008
#define GAMES_CTF	GAMES_CTF101,3033
static const char *master_items[] = {master_items103,3056
static const char *servertype_items[] = {servertype_items114,3198
static const char *sortkey_items[] = {sortkey_items123,3331
static char* gamenames[] = {gamenames132,3459
static char* netnames[] = {netnames149,3873
static char quake3worldMessage[] = "Visit www.quake3world.com - News, Community, Events, Files";quake3worldMessage156,3936
const char* punkbuster_items[] = {punkbuster_items158,4034
const char* punkbuster_msg[] = {punkbuster_msg164,4104
	char	adrstr[MAX_ADDRESSLENGTH];adrstr173,4250
	int		start;start174,4283
} pinglist_t;pinglist_t175,4296
typedef struct servernode_s {servernode_s177,4311
	char	adrstr[MAX_ADDRESSLENGTH];adrstr178,4341
	char	hostname[MAX_HOSTNAMELENGTH+3];hostname179,4374
	char	mapname[MAX_MAPNAMELENGTH];mapname180,4412
	int		numclients;numclients181,4446
	int		maxclients;maxclients182,4464
	int		pingtime;pingtime183,4482
	int		gametype;gametype184,4498
	char	gamename[12];gamename185,4514
	int		nettype;nettype186,4534
	int		minPing;minPing187,4549
	int		maxPing;maxPing188,4564
	qboolean bPB;bPB189,4579
} servernode_t; servernode_t191,4595
	char			buff[MAX_LISTBOXWIDTH];buff194,4630
	servernode_t*	servernode;servernode195,4662
} table_t;table_t196,4689
	menuframework_s		menu;menu199,4718
	menutext_s			banner;banner201,4743
	menulist_s			master;master203,4766
	menulist_s			gametype;gametype204,4788
	menulist_s			sortkey;sortkey205,4812
	menuradiobutton_s	showfull;showfull206,4835
	menuradiobutton_s	showempty;showempty207,4864
	menulist_s			list;list209,4895
	menubitmap_s		mappic;mappic210,4915
	menubitmap_s		arrows;arrows211,4938
	menubitmap_s		up;up212,4961
	menubitmap_s		down;down213,4980
	menutext_s			status;status214,5001
	menutext_s			statusbar;statusbar215,5023
	menubitmap_s		remove;remove217,5049
	menubitmap_s		back;back218,5072
	menubitmap_s		refresh;refresh219,5093
	menubitmap_s		specify;specify220,5117
	menubitmap_s		create;create221,5141
	menubitmap_s		go;go222,5164
	pinglist_t			pinglist[MAX_PINGREQUESTS];pinglist224,5184
	table_t				table[MAX_LISTBOXITEMS];table225,5226
	char*				items[MAX_LISTBOXITEMS];items226,5263
	int					numqueriedservers;numqueriedservers227,5298
	int					*numservers;numservers228,5326
	servernode_t		*serverlist;	serverlist229,5348
	int					currentping;currentping230,5377
	qboolean			refreshservers;refreshservers231,5399
	int					nextpingtime;nextpingtime232,5427
	int					maxservers;maxservers233,5450
	int					refreshtime;refreshtime234,5471
	char				favoriteaddresses[MAX_FAVORITESERVERS][MAX_ADDRESSLENGTH];favoriteaddresses235,5493
	int					numfavoriteaddresses;numfavoriteaddresses236,5561
	menulist_s		punkbuster;punkbuster238,5593
	menubitmap_s	pblogo;pblogo239,5618
} arenaservers_t;arenaservers_t240,5640
static arenaservers_t	g_arenaservers;g_arenaservers242,5659
static servernode_t		g_globalserverlist[MAX_GLOBALSERVERS];g_globalserverlist245,5699
static int				g_numglobalservers;g_numglobalservers246,5759
static servernode_t		g_localserverlist[MAX_LOCALSERVERS];g_localserverlist247,5793
static int				g_numlocalservers;g_numlocalservers248,5851
static servernode_t		g_favoriteserverlist[MAX_FAVORITESERVERS];g_favoriteserverlist249,5884
static int				g_numfavoriteservers;g_numfavoriteservers250,5948
static int				g_servertype;g_servertype251,5984
static int				g_gametype;g_gametype252,6012
static int				g_sortkey;g_sortkey253,6038
static int				g_emptyservers;g_emptyservers254,6063
static int				g_fullservers;g_fullservers255,6093
static int ArenaServers_MaxPing( void ) {ArenaServers_MaxPing263,6187
static int QDECL ArenaServers_Compare( const void *arg1, const void *arg2 ) {ArenaServers_Compare279,6429
static void ArenaServers_Go( void ) {ArenaServers_Go342,7433
static void ArenaServers_UpdatePicture( void ) {ArenaServers_UpdatePicture357,7753
static void ArenaServers_UpdateMenu( void ) {ArenaServers_UpdateMenu381,8319
static void ArenaServers_Remove( void )ArenaServers_Remove558,13679
static void ArenaServers_Insert( char* adrstr, char* info, int pingtime )ArenaServers_Insert619,15410
void ArenaServers_InsertFavorites( void )ArenaServers_InsertFavorites702,17648
void ArenaServers_LoadFavorites( void )ArenaServers_LoadFavorites734,18396
static void ArenaServers_StopRefresh( void )ArenaServers_StopRefresh809,20402
static void ArenaServers_DoRefresh( void )ArenaServers_DoRefresh842,21106
static void ArenaServers_StartRefresh( void )ArenaServers_StartRefresh990,24444
void ArenaServers_SaveChanges( void )ArenaServers_SaveChanges1070,26205
void ArenaServers_Sort( int type ) {ArenaServers_Sort1087,26529
int ArenaServers_SetType( int type )ArenaServers_SetType1102,26803
static void Punkbuster_ConfirmEnable( qboolean result ) {Punkbuster_ConfirmEnable1169,28493
static void Punkbuster_ConfirmDisable( qboolean result ) {Punkbuster_ConfirmDisable1177,28701
static void ArenaServers_Event( void* ptr, int event ) {ArenaServers_Event1191,29001
static void ArenaServers_MenuDraw( void )ArenaServers_MenuDraw1290,31200
static sfxHandle_t ArenaServers_MenuKey( int key ) {ArenaServers_MenuKey1304,31412
static void ArenaServers_MenuInit( void ) {ArenaServers_MenuInit1332,32056
void ArenaServers_Cache( void ) {ArenaServers_Cache1616,44406
void UI_ArenaServersMenu( void ) {UI_ArenaServersMenu1640,45181

q3_ui/ui_confirm.c,1233
#define ART_CONFIRM_FRAME	ART_CONFIRM_FRAME35,1173
#define ID_CONFIRM_NO	ID_CONFIRM_NO37,1221
#define ID_CONFIRM_YES	ID_CONFIRM_YES38,1247
	menuframework_s menu;menu42,1293
	menutext_s		no;no44,1317
	menutext_s		yes;yes45,1334
	int				slashX;slashX47,1353
	const char *	question;question48,1369
	void			(*draw)( void );draw49,1393
	void			(*action)( qboolean result );action50,1418
	int style;style52,1458
	const char **lines;lines53,1470
} confirmMenu_t;confirmMenu_t54,1491
static confirmMenu_t	s_confirm;s_confirm57,1510
static void ConfirmMenu_Event( void* ptr, int event ) {ConfirmMenu_Event65,1604
static sfxHandle_t ConfirmMenu_Key( int key ) {ConfirmMenu_Key92,1964
static void MessageMenu_Draw( void ) {MessageMenu_Draw121,2423
static void ConfirmMenu_Draw( void ) {ConfirmMenu_Draw145,2826
void ConfirmMenu_Cache( void ) {ConfirmMenu_Cache163,3245
void UI_ConfirmMenu_Style( const char *question, int style, void (*draw)( void ), void (*action)( qboolean result ) ) {UI_ConfirmMenu_Style173,3395
void UI_ConfirmMenu( const char *question, void (*draw)( void ), void (*action)( qboolean result ) ) {UI_ConfirmMenu241,5369
void UI_Message( const char **lines ) {UI_Message251,5628

q3_ui/ui_cinematics.c,1910
#define ART_BACK0	ART_BACK026,1001
#define ART_BACK1	ART_BACK127,1038
#define ART_FRAMEL	ART_FRAMEL28,1076
#define ART_FRAMER	ART_FRAMER29,1116
#define VERTICAL_SPACING	VERTICAL_SPACING31,1157
#define ID_BACK	ID_BACK33,1186
#define ID_CIN_IDLOGO	ID_CIN_IDLOGO34,1207
#define ID_CIN_INTRO	ID_CIN_INTRO35,1232
#define ID_CIN_TIER1	ID_CIN_TIER136,1256
#define ID_CIN_TIER2	ID_CIN_TIER237,1280
#define ID_CIN_TIER3	ID_CIN_TIER338,1304
#define ID_CIN_TIER4	ID_CIN_TIER439,1328
#define ID_CIN_TIER5	ID_CIN_TIER540,1352
#define ID_CIN_TIER6	ID_CIN_TIER641,1376
#define ID_CIN_TIER7	ID_CIN_TIER742,1400
#define ID_CIN_END	ID_CIN_END43,1424
	menuframework_s	menu;menu47,1466
	menutext_s		banner;banner48,1489
	menubitmap_s	framel;framel49,1510
	menubitmap_s	framer;framer50,1532
	menutext_s		cin_idlogo;cin_idlogo51,1554
	menutext_s		cin_intro;cin_intro52,1579
	menutext_s		cin_tier1;cin_tier153,1603
	menutext_s		cin_tier2;cin_tier254,1627
	menutext_s		cin_tier3;cin_tier355,1651
	menutext_s		cin_tier4;cin_tier456,1675
	menutext_s		cin_tier5;cin_tier557,1699
	menutext_s		cin_tier6;cin_tier658,1723
	menutext_s		cin_tier7;cin_tier759,1747
	menutext_s		cin_end;cin_end60,1771
	menubitmap_s	back;back61,1793
} cinematicsMenuInfo_t;cinematicsMenuInfo_t62,1813
static cinematicsMenuInfo_t	cinematicsMenuInfo;cinematicsMenuInfo64,1838
static char *cinematics[] = {cinematics66,1887
static void UI_CinematicsMenu_BackEvent( void *ptr, int event ) {UI_CinematicsMenu_BackEvent84,2085
static void UI_CinematicsMenu_Event( void *ptr, int event ) {UI_CinematicsMenu_Event97,2276
static void UI_CinematicsMenu_Init( void ) {UI_CinematicsMenu_Init119,2812
void UI_CinematicsMenu_Cache( void ) {UI_CinematicsMenu_Cache320,12008
void UI_CinematicsMenu( void ) {UI_CinematicsMenu333,12277
void UI_CinematicsMenu_f( void ) {UI_CinematicsMenu_f344,12441

q3_ui/ui_controls2.c,9112
#define ART_BACK0	ART_BACK034,1168
#define ART_BACK1	ART_BACK135,1206
#define ART_FRAMEL	ART_FRAMEL36,1244
#define ART_FRAMER	ART_FRAMER37,1285
	char	*command;command41,1345
	char	*label;label42,1361
	int		id;id43,1375
	int		anim;anim44,1385
	int		defaultbind1;defaultbind145,1397
	int		defaultbind2;defaultbind246,1417
	int		bind1;bind147,1437
	int		bind2;bind248,1450
} bind_t;bind_t49,1463
	char*	name;name53,1491
	float	defaultvalue;defaultvalue54,1504
	float	value;	value55,1525
} configcvar_t;configcvar_t56,1540
#define SAVE_NOOP	SAVE_NOOP58,1557
#define SAVE_YES	SAVE_YES59,1578
#define SAVE_NO	SAVE_NO60,1598
#define SAVE_CANCEL	SAVE_CANCEL61,1618
#define C_MOVEMENT	C_MOVEMENT64,1662
#define C_LOOKING	C_LOOKING65,1684
#define C_WEAPONS	C_WEAPONS66,1705
#define C_MISC	C_MISC67,1726
#define C_MAX	C_MAX68,1745
#define ID_MOVEMENT	ID_MOVEMENT70,1764
#define ID_LOOKING	ID_LOOKING71,1789
#define ID_WEAPONS	ID_WEAPONS72,1813
#define ID_MISC	ID_MISC73,1837
#define ID_DEFAULTS	ID_DEFAULTS74,1859
#define ID_BACK	ID_BACK75,1884
#define ID_SAVEANDEXIT	ID_SAVEANDEXIT76,1906
#define ID_EXIT	ID_EXIT77,1933
#define ID_SHOWSCORES	ID_SHOWSCORES80,1976
#define ID_USEITEM	ID_USEITEM81,2000
#define ID_SPEED	ID_SPEED82,2023
#define ID_FORWARD	ID_FORWARD83,2044
#define ID_BACKPEDAL	ID_BACKPEDAL84,2067
#define ID_MOVELEFT	ID_MOVELEFT85,2090
#define ID_MOVERIGHT	ID_MOVERIGHT86,2113
#define ID_MOVEUP	ID_MOVEUP87,2136
#define ID_MOVEDOWN	ID_MOVEDOWN88,2158
#define ID_LEFT	ID_LEFT89,2181
#define ID_RIGHT	ID_RIGHT90,2202
#define ID_STRAFE	ID_STRAFE91,2224
#define ID_LOOKUP	ID_LOOKUP92,2247
#define ID_LOOKDOWN	ID_LOOKDOWN93,2270
#define ID_MOUSELOOK	ID_MOUSELOOK94,2294
#define ID_CENTERVIEW	ID_CENTERVIEW95,2318
#define ID_ZOOMVIEW	ID_ZOOMVIEW96,2343
#define ID_WEAPON1	ID_WEAPON197,2367
#define ID_WEAPON2	ID_WEAPON298,2391
#define ID_WEAPON3	ID_WEAPON399,2415
#define ID_WEAPON4	ID_WEAPON4100,2439
#define ID_WEAPON5	ID_WEAPON5101,2463
#define ID_WEAPON6	ID_WEAPON6102,2487
#define ID_WEAPON7	ID_WEAPON7103,2511
#define ID_WEAPON8	ID_WEAPON8104,2535
#define ID_WEAPON9	ID_WEAPON9105,2559
#define ID_ATTACK	ID_ATTACK106,2583
#define ID_WEAPPREV	ID_WEAPPREV107,2605
#define ID_WEAPNEXT	ID_WEAPNEXT108,2629
#define ID_GESTURE	ID_GESTURE109,2653
#define ID_CHAT	ID_CHAT110,2676
#define ID_CHAT2	ID_CHAT2111,2697
#define ID_CHAT3	ID_CHAT3112,2718
#define ID_CHAT4	ID_CHAT4113,2739
#define ID_FREELOOK	ID_FREELOOK116,2775
#define ID_INVERTMOUSE	ID_INVERTMOUSE117,2799
#define ID_ALWAYSRUN	ID_ALWAYSRUN118,2825
#define ID_AUTOSWITCH	ID_AUTOSWITCH119,2849
#define ID_MOUSESPEED	ID_MOUSESPEED120,2874
#define ID_JOYENABLE	ID_JOYENABLE121,2899
#define ID_JOYTHRESHOLD	ID_JOYTHRESHOLD122,2923
#define ID_SMOOTHMOUSE	ID_SMOOTHMOUSE123,2950
#define ANIM_IDLE	ANIM_IDLE125,2977
#define ANIM_RUN	ANIM_RUN126,2998
#define ANIM_WALK	ANIM_WALK127,3018
#define ANIM_BACK	ANIM_BACK128,3039
#define ANIM_JUMP	ANIM_JUMP129,3060
#define ANIM_CROUCH	ANIM_CROUCH130,3081
#define ANIM_STEPLEFT	ANIM_STEPLEFT131,3104
#define ANIM_STEPRIGHT	ANIM_STEPRIGHT132,3128
#define ANIM_TURNLEFT	ANIM_TURNLEFT133,3153
#define ANIM_TURNRIGHT	ANIM_TURNRIGHT134,3177
#define ANIM_LOOKUP	ANIM_LOOKUP135,3202
#define ANIM_LOOKDOWN	ANIM_LOOKDOWN136,3226
#define ANIM_WEAPON1	ANIM_WEAPON1137,3251
#define ANIM_WEAPON2	ANIM_WEAPON2138,3275
#define ANIM_WEAPON3	ANIM_WEAPON3139,3299
#define ANIM_WEAPON4	ANIM_WEAPON4140,3323
#define ANIM_WEAPON5	ANIM_WEAPON5141,3347
#define ANIM_WEAPON6	ANIM_WEAPON6142,3371
#define ANIM_WEAPON7	ANIM_WEAPON7143,3395
#define ANIM_WEAPON8	ANIM_WEAPON8144,3419
#define ANIM_WEAPON9	ANIM_WEAPON9145,3443
#define ANIM_WEAPON10	ANIM_WEAPON10146,3467
#define ANIM_ATTACK	ANIM_ATTACK147,3492
#define ANIM_GESTURE	ANIM_GESTURE148,3516
#define ANIM_DIE	ANIM_DIE149,3540
#define ANIM_CHAT	ANIM_CHAT150,3561
	menuframework_s		menu;menu154,3601
	menutext_s			banner;banner156,3626
	menubitmap_s		framel;framel157,3648
	menubitmap_s		framer;framer158,3671
	menubitmap_s		player;player159,3694
	menutext_s			movement;movement161,3718
	menutext_s			looking;looking162,3742
	menutext_s			weapons;weapons163,3765
	menutext_s			misc;misc164,3788
	menuaction_s		walkforward;walkforward166,3809
	menuaction_s		backpedal;backpedal167,3837
	menuaction_s		stepleft;stepleft168,3863
	menuaction_s		stepright;stepright169,3888
	menuaction_s		moveup;moveup170,3914
	menuaction_s		movedown;movedown171,3937
	menuaction_s		turnleft;turnleft172,3962
	menuaction_s		turnright;turnright173,3987
	menuaction_s		sidestep;sidestep174,4013
	menuaction_s		run;run175,4038
	menuaction_s		machinegun;machinegun176,4058
	menuaction_s		chainsaw;chainsaw177,4085
	menuaction_s		shotgun;shotgun178,4110
	menuaction_s		grenadelauncher;grenadelauncher179,4134
	menuaction_s		rocketlauncher;rocketlauncher180,4166
	menuaction_s		lightning;lightning181,4197
	menuaction_s		railgun;railgun182,4223
	menuaction_s		plasma;plasma183,4247
	menuaction_s		bfg;bfg184,4270
	menuaction_s		attack;attack185,4290
	menuaction_s		prevweapon;prevweapon186,4313
	menuaction_s		nextweapon;nextweapon187,4340
	menuaction_s		lookup;lookup188,4367
	menuaction_s		lookdown;lookdown189,4390
	menuaction_s		mouselook;mouselook190,4415
	menuradiobutton_s	freelook;freelook191,4441
	menuaction_s		centerview;centerview192,4470
	menuaction_s		zoomview;zoomview193,4497
	menuaction_s		gesture;gesture194,4522
	menuradiobutton_s	invertmouse;invertmouse195,4546
	menuslider_s		sensitivity;sensitivity196,4578
	menuradiobutton_s	smoothmouse;smoothmouse197,4606
	menuradiobutton_s	alwaysrun;alwaysrun198,4638
	menuaction_s		showscores;showscores199,4668
	menuradiobutton_s	autoswitch;autoswitch200,4695
	menuaction_s		useitem;useitem201,4726
	playerInfo_t		playerinfo;playerinfo202,4750
	qboolean			changesmade;changesmade203,4777
	menuaction_s		chat;chat204,4802
	menuaction_s		chat2;chat2205,4823
	menuaction_s		chat3;chat3206,4845
	menuaction_s		chat4;chat4207,4867
	menuradiobutton_s	joyenable;joyenable208,4889
	menuslider_s		joythreshold;joythreshold209,4919
	int					section;section210,4948
	qboolean			waitingforkey;waitingforkey211,4966
	char				playerModel[64];playerModel212,4993
	vec3_t				playerViewangles;playerViewangles213,5019
	vec3_t				playerMoveangles;playerMoveangles214,5048
	int					playerLegs;playerLegs215,5077
	int					playerTorso;playerTorso216,5098
	int					playerWeapon;playerWeapon217,5120
	qboolean			playerChat;playerChat218,5143
	menubitmap_s		back;back220,5168
	menutext_s			name;name221,5189
} controls_t; 	controls_t222,5209
static controls_t s_controls;s_controls224,5226
static vec4_t controls_binding_color  = {1.00f, 0.43f, 0.00f, 1.00f};controls_binding_color226,5257
static bind_t g_bindings[] = g_bindings228,5328
static configcvar_t g_configcvars[] =g_configcvars267,8113
static menucommon_s *g_movement_controls[] =g_movement_controls280,8402
static menucommon_s *g_weapons_controls[] = {g_weapons_controls296,8941
static menucommon_s *g_looking_controls[] = {g_looking_controls313,9591
static menucommon_s *g_misc_controls[] = {g_misc_controls328,10092
static menucommon_s **g_controls[] = {g_controls339,10407
static void Controls_InitCvars( void )Controls_InitCvars351,10593
static float Controls_GetCvarDefault( char* name )Controls_GetCvarDefault379,11126
static float Controls_GetCvarValue( char* name )Controls_GetCvarValue402,11458
static void Controls_UpdateModel( int anim ) {Controls_UpdateModel426,11781
static void Controls_Update( void ) {Controls_Update554,14478
static void Controls_DrawKeyBinding( void *self )Controls_DrawKeyBinding648,17344
static void Controls_StatusBar( void *self )Controls_StatusBar724,19548
static void Controls_DrawPlayer( void *self ) {Controls_DrawPlayer735,19794
static void Controls_GetKeyAssignment (char *command, int *twokeys)Controls_GetKeyAssignment756,20347
static void Controls_GetConfig( void )Controls_GetConfig785,20777
static void Controls_SetConfig( void )Controls_SetConfig821,21996
static void Controls_SetDefaults( void )Controls_SetDefaults864,23253
static sfxHandle_t Controls_MenuKey( int key )Controls_MenuKey897,24273
static void Controls_ResetDefaults_Action( qboolean result ) {Controls_ResetDefaults_Action1020,26355
static void Controls_ResetDefaults_Draw( void ) {Controls_ResetDefaults_Draw1035,26600
static void Controls_MenuEvent( void* ptr, int event )Controls_MenuEvent1045,26997
static void Controls_ActionEvent( void* ptr, int event )Controls_ActionEvent1133,28461
static void Controls_InitModel( void )Controls_InitModel1155,28885
static void Controls_InitWeapons( void ) {Controls_InitWeapons1169,29176
static void Controls_MenuInit( void )Controls_MenuInit1185,29466
void Controls_Cache( void ) {Controls_Cache1648,51881
void UI_ControlsMenu( void ) {UI_ControlsMenu1661,52143

q3_ui/ui_specifyleague.c,2215
#define MAX_LISTBOXITEMS	MAX_LISTBOXITEMS29,1183
#define MAX_LISTBOXWIDTH	MAX_LISTBOXWIDTH30,1213
#define MAX_LEAGUENAME	MAX_LEAGUENAME31,1242
#define SPECIFYLEAGUE_FRAMEL	SPECIFYLEAGUE_FRAMEL33,1271
#define SPECIFYLEAGUE_FRAMER	SPECIFYLEAGUE_FRAMER34,1320
#define SPECIFYLEAGUE_BACK0	SPECIFYLEAGUE_BACK035,1369
#define SPECIFYLEAGUE_BACK1	SPECIFYLEAGUE_BACK136,1416
#define SPECIFYLEAGUE_ARROWS0	SPECIFYLEAGUE_ARROWS037,1463
#define SPECIFYLEAGUE_UP	SPECIFYLEAGUE_UP38,1518
#define SPECIFYLEAGUE_DOWN	SPECIFYLEAGUE_DOWN39,1571
#define GLOBALRANKINGS_LOGO	GLOBALRANKINGS_LOGO40,1626
#define GLOBALRANKINGS_LETTERS	GLOBALRANKINGS_LETTERS41,1676
#define ID_SPECIFYLEAGUENAME	ID_SPECIFYLEAGUENAME43,1732
#define ID_SPECIFYLEAGUELIST	ID_SPECIFYLEAGUELIST44,1765
#define ID_SPECIFYLEAGUEUP	ID_SPECIFYLEAGUEUP45,1798
#define ID_SPECIFYLEAGUEDOWN	ID_SPECIFYLEAGUEDOWN46,1830
#define ID_SPECIFYLEAGUEBACK	ID_SPECIFYLEAGUEBACK47,1863
static char* specifyleague_artlist[] =specifyleague_artlist49,1897
static char playername[80];playername63,2153
	menuframework_s	menu;menu67,2199
	menutext_s		banner;banner68,2222
	menubitmap_s	framel;framel69,2243
	menubitmap_s	framer;framer70,2265
	menufield_s		rankname;rankname71,2287
	menulist_s		list;list72,2311
	menubitmap_s	arrows;arrows73,2330
	menubitmap_s	up;up74,2352
	menubitmap_s	down;down75,2370
	menubitmap_s	back;back76,2390
	menubitmap_s	grlogo;grlogo77,2410
	menubitmap_s	grletters;grletters78,2432
} specifyleague_t;specifyleague_t79,2457
static specifyleague_t	s_specifyleague;s_specifyleague81,2477
	char			buff[MAX_LISTBOXWIDTH];buff85,2536
	char			leaguename[MAX_LEAGUENAME];leaguename86,2568
} table_t;table_t87,2604
table_t league_table[MAX_LISTBOXITEMS];league_table89,2616
char *leaguename_items[MAX_LISTBOXITEMS];leaguename_items90,2656
static void SpecifyLeague_GetList()SpecifyLeague_GetList93,2700
static void SpecifyLeague_Event( void* ptr, int event )SpecifyLeague_Event122,3427
void SpecifyLeague_MenuInit( void )SpecifyLeague_MenuInit173,4500
void SpecifyLeague_Cache( void )SpecifyLeague_Cache310,10215
void UI_SpecifyLeagueMenu( void )UI_SpecifyLeagueMenu328,10470

q3_ui/ui_setup.c,1567
#define SETUP_MENU_VERTICAL_SPACING	SETUP_MENU_VERTICAL_SPACING35,1166
#define ART_BACK0	ART_BACK037,1207
#define ART_BACK1	ART_BACK138,1244
#define ART_FRAMEL	ART_FRAMEL39,1282
#define ART_FRAMER	ART_FRAMER40,1322
#define ID_CUSTOMIZEPLAYER	ID_CUSTOMIZEPLAYER42,1363
#define ID_CUSTOMIZECONTROLS	ID_CUSTOMIZECONTROLS43,1394
#define ID_SYSTEMCONFIG	ID_SYSTEMCONFIG44,1426
#define ID_GAME	ID_GAME45,1455
#define ID_CDKEY	ID_CDKEY46,1478
#define ID_LOAD	ID_LOAD47,1501
#define ID_SAVE	ID_SAVE48,1524
#define ID_DEFAULTS	ID_DEFAULTS49,1547
#define ID_BACK	ID_BACK50,1573
	menuframework_s	menu;menu54,1615
	menutext_s		banner;banner56,1639
	menubitmap_s	framel;framel57,1660
	menubitmap_s	framer;framer58,1682
	menutext_s		setupplayer;setupplayer59,1704
	menutext_s		setupcontrols;setupcontrols60,1730
	menutext_s		setupsystem;setupsystem61,1758
	menutext_s		game;game62,1784
	menutext_s		cdkey;cdkey63,1803
	menutext_s		defaults;defaults66,1865
	menubitmap_s	back;back67,1888
} setupMenuInfo_t;setupMenuInfo_t68,1908
static setupMenuInfo_t	setupMenuInfo;setupMenuInfo70,1928
static void Setup_ResetDefaults_Action( qboolean result ) {Setup_ResetDefaults_Action78,2037
static void Setup_ResetDefaults_Draw( void ) {Setup_ResetDefaults_Draw93,2367
static void UI_SetupMenu_Event( void *ptr, int event ) {UI_SetupMenu_Event104,2759
static void UI_SetupMenu_Init( void ) {UI_SetupMenu_Init154,3509
void UI_SetupMenu_Cache( void ) {UI_SetupMenu_Cache311,10201
void UI_SetupMenu( void ) {UI_SetupMenu324,10460

q3_ui/ui_sound.c,1445
#define ART_FRAMEL	ART_FRAMEL34,1173
#define ART_FRAMER	ART_FRAMER35,1214
#define ART_BACK0	ART_BACK036,1255
#define ART_BACK1	ART_BACK137,1293
#define ID_GRAPHICS	ID_GRAPHICS39,1332
#define ID_DISPLAY	ID_DISPLAY40,1357
#define ID_SOUND	ID_SOUND41,1381
#define ID_NETWORK	ID_NETWORK42,1403
#define ID_EFFECTSVOLUME	ID_EFFECTSVOLUME43,1427
#define ID_MUSICVOLUME	ID_MUSICVOLUME44,1455
#define ID_QUALITY	ID_QUALITY45,1482
#define ID_BACK	ID_BACK47,1529
static const char *quality_items[] = {quality_items50,1553
	menuframework_s		menu;menu55,1634
	menutext_s			banner;banner57,1659
	menubitmap_s		framel;framel58,1681
	menubitmap_s		framer;framer59,1704
	menutext_s			graphics;graphics61,1728
	menutext_s			display;display62,1752
	menutext_s			sound;sound63,1775
	menutext_s			network;network64,1796
	menuslider_s		sfxvolume;sfxvolume66,1820
	menuslider_s		musicvolume;musicvolume67,1846
	menulist_s			quality;quality68,1874
	menubitmap_s		back;back71,1924
} soundOptionsInfo_t;soundOptionsInfo_t72,1945
static soundOptionsInfo_t	soundOptionsInfo;soundOptionsInfo74,1968
static void UI_SoundOptionsMenu_Event( void* ptr, int event ) {UI_SoundOptionsMenu_Event82,2082
static void UI_SoundOptionsMenu_Init( void ) {UI_SoundOptionsMenu_Init149,3417
void UI_SoundOptionsMenu_Cache( void ) {UI_SoundOptionsMenu_Cache299,10528
void UI_SoundOptionsMenu( void ) {UI_SoundOptionsMenu312,10801

q3_ui/ui_cdkey.c,1105
#define ART_FRAME	ART_FRAME35,1167
#define ART_ACCEPT0	ART_ACCEPT036,1207
#define ART_ACCEPT1	ART_ACCEPT137,1248
#define ART_BACK0	ART_BACK038,1290
#define ART_BACK1	ART_BACK139,1327
#define ID_CDKEY	ID_CDKEY41,1366
#define ID_ACCEPT	ID_ACCEPT42,1387
#define ID_BACK	ID_BACK43,1409
	menuframework_s	menu;menu47,1449
	menutext_s		banner;banner49,1473
	menubitmap_s	frame;frame50,1494
	menufield_s		cdkey;cdkey52,1516
	menubitmap_s	accept;accept54,1538
	menubitmap_s	back;back55,1560
} cdkeyMenuInfo_t;cdkeyMenuInfo_t56,1580
static cdkeyMenuInfo_t	cdkeyMenuInfo;cdkeyMenuInfo58,1600
static void UI_CDKeyMenu_Event( void *ptr, int event ) {UI_CDKeyMenu_Event66,1697
static int UI_CDKeyMenu_PreValidateKey( const char *key ) {UI_CDKeyMenu_PreValidateKey91,2101
static void UI_CDKeyMenu_DrawKey( void *self ) {UI_CDKeyMenu_DrawKey131,2578
static void UI_CDKeyMenu_Init( void ) {UI_CDKeyMenu_Init189,3874
void UI_CDKeyMenu_Cache( void ) {UI_CDKeyMenu_Cache264,6777
void UI_CDKeyMenu( void ) {UI_CDKeyMenu278,7080
void UI_CDKeyMenu_f( void ) {UI_CDKeyMenu_f289,7224

q3_ui/ui_atoms.c,3683
uiStatic_t		uis;uis30,1212
qboolean		m_entersound;		// after a frame, so caching won't disrupt the soundm_entersound31,1229
void QDECL Com_Error( int level, const char *error, ... ) {Com_Error33,1308
void QDECL Com_Printf( const char *msg, ... ) {Com_Printf44,1536
float UI_ClampCvar( float min, float max, float value )UI_ClampCvar60,1803
void UI_StartDemoLoop( void ) {UI_StartDemoLoop72,2002
void UI_PushMenu( menuframework_s *menu )UI_PushMenu81,2137
void UI_PopMenu (void)UI_PopMenu134,3020
void UI_ForceMenuOff (void)UI_ForceMenuOff152,3323
void UI_LerpColor(vec4_t a, vec4_t b, vec4_t c, float t)UI_LerpColor167,3580
static int	propMap[128][3] = {propMap187,3879
static int propMapB[26][3] = {propMapB297,6181
#define PROPB_GAP_WIDTH	PROPB_GAP_WIDTH329,6602
#define PROPB_SPACE_WIDTH	PROPB_SPACE_WIDTH330,6629
#define PROPB_HEIGHT	PROPB_HEIGHT331,6658
static void UI_DrawBannerString2( int x, int y, const char* str, vec4_t color )UI_DrawBannerString2338,6746
void UI_DrawBannerString( int x, int y, const char* str, int style, vec4_t color ) {UI_DrawBannerString381,7731
int UI_ProportionalStringWidth( const char* str ) {UI_ProportionalStringWidth426,8537
static void UI_DrawProportionalString2( int x, int y, const char* str, vec4_t color, float sizeScale, qhandle_t charset )UI_DrawProportionalString2448,8875
float UI_ProportionalSizeScale( int style ) {UI_ProportionalSizeScale496,9961
void UI_DrawProportionalString( int x, int y, const char* str, int style, vec4_t color ) {UI_DrawProportionalString510,10160
void UI_DrawProportionalString_AutoWrapped( int x, int y, int xmax, int ystep, const char* str, int style, vec4_t color ) {UI_DrawProportionalString_AutoWrapped571,11719
static void UI_DrawString2( int x, int y, const char* str, vec4_t color, int charw, int charh )UI_DrawString2635,13104
void UI_DrawString( int x, int y, const char* str, int style, vec4_t color )UI_DrawString695,14128
void UI_DrawChar( int x, int y, int ch, int style, vec4_t color )UI_DrawChar774,15512
qboolean UI_IsFullscreen( void ) {UI_IsFullscreen784,15676
static void NeedCDAction( qboolean result ) {NeedCDAction792,15839
static void NeedCDKeyAction( qboolean result ) {NeedCDKeyAction798,15958
void UI_SetActiveMenu( uiMenuCommand_t menu ) {UI_SetActiveMenu804,16080
void UI_KeyEvent( int key, int down ) {UI_KeyEvent847,16878
void UI_MouseEvent( int dx, int dy )UI_MouseEvent872,17263
char *UI_Argv( int arg ) {UI_Argv931,18691
char *UI_Cvar_VariableString( const char *var_name ) {UI_Cvar_VariableString940,18824
void UI_Cache_f( void ) {UI_Cache_f954,19062
qboolean UI_ConsoleCommand( int realTime ) {UI_ConsoleCommand995,19891
void UI_Shutdown( void ) {UI_Shutdown1051,20801
void UI_Init( void ) {UI_Init1059,20881
void UI_AdjustFrom640( float *x, float *y, float *w, float *h ) {UI_AdjustFrom6401094,21610
void UI_DrawNamedPic( float x, float y, float width, float height, const char *picname ) {UI_DrawNamedPic1102,21796
void UI_DrawHandlePic( float x, float y, float w, float h, qhandle_t hShader ) {UI_DrawHandlePic1110,22075
void UI_FillRect( float x, float y, float width, float height, const float *color ) {UI_FillRect1147,22608
void UI_DrawRect( float x, float y, float width, float height, const float *color ) {UI_DrawRect1163,22967
void UI_SetColor( const float *rgba ) {UI_SetColor1176,23469
void UI_UpdateScreen( void ) {UI_UpdateScreen1180,23538
void UI_Refresh( int realtime )UI_Refresh1189,23647
void UI_DrawTextBox (int x, int y, int width, int lines)UI_DrawTextBox1246,24836
qboolean UI_CursorInRect (int x, int y, int width, int height)UI_CursorInRect1252,25166

q3_ui/ui_preferences.c,2256
#define ART_FRAMEL	ART_FRAMEL35,1173
#define ART_FRAMER	ART_FRAMER36,1215
#define ART_BACK0	ART_BACK037,1257
#define ART_BACK1	ART_BACK138,1296
#define PREFERENCES_X_POS	PREFERENCES_X_POS40,1336
#define ID_CROSSHAIR	ID_CROSSHAIR42,1368
#define ID_SIMPLEITEMS	ID_SIMPLEITEMS43,1395
#define ID_HIGHQUALITYSKY	ID_HIGHQUALITYSKY44,1424
#define ID_EJECTINGBRASS	ID_EJECTINGBRASS45,1455
#define ID_WALLMARKS	ID_WALLMARKS46,1485
#define ID_DYNAMICLIGHTS	ID_DYNAMICLIGHTS47,1512
#define ID_IDENTIFYTARGET	ID_IDENTIFYTARGET48,1542
#define ID_SYNCEVERYFRAME	ID_SYNCEVERYFRAME49,1573
#define ID_FORCEMODEL	ID_FORCEMODEL50,1604
#define ID_DRAWTEAMOVERLAY	ID_DRAWTEAMOVERLAY51,1632
#define ID_ALLOWDOWNLOAD	ID_ALLOWDOWNLOAD52,1664
#define ID_BACK	ID_BACK53,1695
#define	NUM_CROSSHAIRS	NUM_CROSSHAIRS55,1720
	menuframework_s		menu;menu59,1767
	menutext_s			banner;banner61,1792
	menubitmap_s		framel;framel62,1814
	menubitmap_s		framer;framer63,1837
	menulist_s			crosshair;crosshair65,1861
	menuradiobutton_s	simpleitems;simpleitems66,1886
	menuradiobutton_s	brass;brass67,1918
	menuradiobutton_s	wallmarks;wallmarks68,1944
	menuradiobutton_s	dynamiclights;dynamiclights69,1974
	menuradiobutton_s	identifytarget;identifytarget70,2008
	menuradiobutton_s	highqualitysky;highqualitysky71,2043
	menuradiobutton_s	synceveryframe;synceveryframe72,2078
	menuradiobutton_s	forcemodel;forcemodel73,2113
	menulist_s			drawteamoverlay;drawteamoverlay74,2144
	menuradiobutton_s	allowdownload;allowdownload75,2175
	menubitmap_s		back;back76,2209
	qhandle_t			crosshairShader[NUM_CROSSHAIRS];crosshairShader78,2231
} preferences_t;preferences_t79,2277
static preferences_t s_preferences;s_preferences81,2295
static const char *teamoverlay_names[] =teamoverlay_names83,2332
static void Preferences_SetMenuItems( void ) {Preferences_SetMenuItems92,2440
static void Preferences_Event( void* ptr, int notification ) {Preferences_Event107,3498
static void Crosshair_Draw( void *self ) {Crosshair_Draw177,5266
static void Preferences_MenuInit( void ) {Preferences_MenuInit221,6287
void Preferences_Cache( void ) {Preferences_Cache398,14779
void UI_PreferencesMenu( void ) {UI_PreferencesMenu416,15200

q3_ui/ui_rankings.c,1547
#define RANKINGS_FRAME	RANKINGS_FRAME30,1025
#define ID_LOGIN	ID_LOGIN32,1070
#define ID_LOGOUT	ID_LOGOUT33,1092
#define ID_CREATE	ID_CREATE34,1115
#define ID_SPECTATE	ID_SPECTATE35,1138
#define ID_SETUP	ID_SETUP36,1163
#define ID_LEAVE	ID_LEAVE37,1185
	menuframework_s	menu;menu42,1226
	menubitmap_s	frame;frame43,1249
	menutext_s		login;login44,1270
	menutext_s		logout;logout45,1290
	menutext_s		create;create46,1311
	menutext_s		spectate;spectate47,1332
	menutext_s		setup;setup48,1355
	menutext_s		leave;leave49,1375
} rankings_t;rankings_t50,1395
static rankings_t	s_rankings;s_rankings52,1410
static menuframework_s	s_rankings_menu;s_rankings_menu54,1441
static menuaction_s		s_rankings_login;s_rankings_login55,1481
static menuaction_s		s_rankings_logout;s_rankings_logout56,1520
static menuaction_s		s_rankings_create;s_rankings_create57,1560
static menuaction_s		s_rankings_spectate;s_rankings_spectate58,1600
static menuaction_s		s_rankings_setup;s_rankings_setup59,1642
static menuaction_s		s_rankings_leave;s_rankings_leave60,1681
void Rankings_DrawText( void* self )Rankings_DrawText68,1778
void Rankings_DrawName( void* self )Rankings_DrawName120,2734
void Rankings_DrawPassword( void* self )Rankings_DrawPassword191,3860
static void Rankings_MenuEvent( void* ptr, int event ) {Rankings_MenuEvent239,4732
void Rankings_MenuInit( void ) {Rankings_MenuInit282,5422
void Rankings_Cache( void ) {Rankings_Cache405,9897
void UI_RankingsMenu( void ) {UI_RankingsMenu415,10032

q3_ui/ui_playermodel.c,3495
#define MODEL_BACK0	MODEL_BACK025,1000
#define MODEL_BACK1	MODEL_BACK126,1040
#define MODEL_SELECT	MODEL_SELECT27,1080
#define MODEL_SELECTED	MODEL_SELECTED28,1130
#define MODEL_FRAMEL	MODEL_FRAMEL29,1184
#define MODEL_FRAMER	MODEL_FRAMER30,1226
#define MODEL_PORTS	MODEL_PORTS31,1268
#define MODEL_ARROWS	MODEL_ARROWS32,1321
#define MODEL_ARROWSL	MODEL_ARROWSL33,1366
#define MODEL_ARROWSR	MODEL_ARROWSR34,1412
#define LOW_MEMORY	LOW_MEMORY36,1459
static char* playermodel_artlist[] =playermodel_artlist38,1499
#define PLAYERGRID_COLS	PLAYERGRID_COLS53,1702
#define PLAYERGRID_ROWS	PLAYERGRID_ROWS54,1729
#define MAX_MODELSPERPAGE	MAX_MODELSPERPAGE55,1756
#define MAX_PLAYERMODELS	MAX_PLAYERMODELS57,1817
#define ID_PLAYERPIC0	ID_PLAYERPIC059,1847
#define ID_PLAYERPIC1	ID_PLAYERPIC160,1872
#define ID_PLAYERPIC2	ID_PLAYERPIC261,1897
#define ID_PLAYERPIC3	ID_PLAYERPIC362,1922
#define ID_PLAYERPIC4	ID_PLAYERPIC463,1947
#define ID_PLAYERPIC5	ID_PLAYERPIC564,1972
#define ID_PLAYERPIC6	ID_PLAYERPIC665,1997
#define ID_PLAYERPIC7	ID_PLAYERPIC766,2022
#define ID_PLAYERPIC8	ID_PLAYERPIC867,2047
#define ID_PLAYERPIC9	ID_PLAYERPIC968,2072
#define ID_PLAYERPIC10	ID_PLAYERPIC1069,2097
#define ID_PLAYERPIC11	ID_PLAYERPIC1170,2124
#define ID_PLAYERPIC12	ID_PLAYERPIC1271,2151
#define ID_PLAYERPIC13	ID_PLAYERPIC1372,2178
#define ID_PLAYERPIC14	ID_PLAYERPIC1473,2205
#define ID_PLAYERPIC15	ID_PLAYERPIC1574,2232
#define ID_PREVPAGE	ID_PREVPAGE75,2259
#define ID_NEXTPAGE	ID_NEXTPAGE76,2285
#define ID_BACK	ID_BACK77,2311
	menuframework_s	menu;menu81,2352
	menubitmap_s	pics[MAX_MODELSPERPAGE];pics82,2375
	menubitmap_s	picbuttons[MAX_MODELSPERPAGE];picbuttons83,2414
	menubitmap_s	framel;framel84,2459
	menubitmap_s	framer;framer85,2481
	menubitmap_s	ports;ports86,2503
	menutext_s		banner;banner87,2524
	menubitmap_s	back;back88,2545
	menubitmap_s	player;player89,2565
	menubitmap_s	arrows;arrows90,2587
	menubitmap_s	left;left91,2609
	menubitmap_s	right;right92,2629
	menutext_s		modelname;modelname93,2650
	menutext_s		skinname;skinname94,2674
	menutext_s		playername;playername95,2697
	playerInfo_t	playerinfo;playerinfo96,2722
	int				nummodels;nummodels97,2748
	char			modelnames[MAX_PLAYERMODELS][128];modelnames98,2767
	int				modelpage;modelpage99,2810
	int				numpages;numpages100,2829
	char			modelskin[64];modelskin101,2847
	int				selectedmodel;selectedmodel102,2870
} playermodel_t;playermodel_t103,2893
static playermodel_t s_playermodel;s_playermodel105,2911
static void PlayerModel_UpdateGrid( void )PlayerModel_UpdateGrid112,3013
static void PlayerModel_UpdateModel( void )PlayerModel_UpdateModel172,4603
static void PlayerModel_SaveChanges( void )PlayerModel_SaveChanges193,5135
static void PlayerModel_MenuEvent( void* ptr, int event )PlayerModel_MenuEvent206,5474
static sfxHandle_t PlayerModel_MenuKey( int key )PlayerModel_MenuKey241,6051
static void PlayerModel_PicEvent( void* ptr, int event )PlayerModel_PicEvent309,7650
static void PlayerModel_DrawPlayer( void *self )PlayerModel_DrawPlayer369,9180
static void PlayerModel_BuildList( void )PlayerModel_BuildList388,9624
static void PlayerModel_SetMenuItems( void )PlayerModel_SetMenuItems457,11428
static void PlayerModel_MenuInit( void )PlayerModel_MenuInit515,12793
void PlayerModel_Cache( void )PlayerModel_Cache708,20302
void UI_PlayerModelMenu(void)UI_PlayerModelMenu722,20592

q3_ui/ui_playersettings.c,2662
#define ART_FRAMEL	ART_FRAMEL25,1000
#define ART_FRAMER	ART_FRAMER26,1041
#define ART_MODEL0	ART_MODEL027,1082
#define ART_MODEL1	ART_MODEL128,1122
#define ART_BACK0	ART_BACK029,1162
#define ART_BACK1	ART_BACK130,1200
#define ART_FX_BASE	ART_FX_BASE31,1238
#define ART_FX_BLUE	ART_FX_BLUE32,1279
#define ART_FX_CYAN	ART_FX_CYAN33,1320
#define ART_FX_GREEN	ART_FX_GREEN34,1361
#define ART_FX_RED	ART_FX_RED35,1401
#define ART_FX_TEAL	ART_FX_TEAL36,1440
#define ART_FX_WHITE	ART_FX_WHITE37,1481
#define ART_FX_YELLOW	ART_FX_YELLOW38,1523
#define ID_NAME	ID_NAME40,1565
#define ID_HANDICAP	ID_HANDICAP41,1586
#define ID_EFFECTS	ID_EFFECTS42,1610
#define ID_BACK	ID_BACK43,1633
#define ID_MODEL	ID_MODEL44,1654
#define MAX_NAMELENGTH	MAX_NAMELENGTH46,1676
	menuframework_s		menu;menu50,1721
	menutext_s			banner;banner52,1746
	menubitmap_s		framel;framel53,1768
	menubitmap_s		framer;framer54,1791
	menubitmap_s		player;player55,1814
	menufield_s			name;name57,1838
	menulist_s			handicap;handicap58,1859
	menulist_s			effects;effects59,1883
	menubitmap_s		back;back61,1907
	menubitmap_s		model;model62,1928
	menubitmap_s		item_null;item_null63,1950
	qhandle_t			fxBasePic;fxBasePic65,1977
	qhandle_t			fxPic[7];fxPic66,2001
	playerInfo_t		playerinfo;playerinfo67,2024
	int					current_fx;current_fx68,2051
	char				playerModel[MAX_QPATH];playerModel69,2072
} playersettings_t;playersettings_t70,2105
static playersettings_t	s_playersettings;s_playersettings72,2126
static int gamecodetoui[] = {4,2,3,0,5,1,6};gamecodetoui74,2169
static int uitogamecode[] = {4,6,2,3,1,5,7};uitogamecode75,2214
static const char *handicap_items[] = {handicap_items77,2260
static void PlayerSettings_DrawName( void *self ) {PlayerSettings_DrawName107,2518
static void PlayerSettings_DrawHandicap( void *self ) {PlayerSettings_DrawHandicap179,4000
static void PlayerSettings_DrawEffects( void *self ) {PlayerSettings_DrawEffects205,4650
static void PlayerSettings_DrawPlayer( void *self ) {PlayerSettings_DrawPlayer233,5435
static void PlayerSettings_SaveChanges( void ) {PlayerSettings_SaveChanges259,6216
static sfxHandle_t PlayerSettings_MenuKey( int key ) {PlayerSettings_MenuKey276,6601
static void PlayerSettings_SetMenuItems( void ) {PlayerSettings_SetMenuItems289,6865
static void PlayerSettings_MenuEvent( void* ptr, int event ) {PlayerSettings_MenuEvent325,7827
static void PlayerSettings_MenuInit( void ) {PlayerSettings_MenuInit353,8319
void PlayerSettings_Cache( void ) {PlayerSettings_Cache486,13990
void UI_PlayerSettingsMenu( void ) {UI_PlayerSettingsMenu510,14931

q3_ui/ui_sppostgame.c,2965
#define MAX_SCOREBOARD_CLIENTS	MAX_SCOREBOARD_CLIENTS33,1193
#define AWARD_PRESENTATION_TIME	AWARD_PRESENTATION_TIME35,1228
#define ART_MENU0	ART_MENU037,1267
#define ART_MENU1	ART_MENU138,1304
#define ART_REPLAY0	ART_REPLAY039,1341
#define ART_REPLAY1	ART_REPLAY140,1382
#define ART_NEXT0	ART_NEXT041,1423
#define ART_NEXT1	ART_NEXT142,1460
#define ID_AGAIN	ID_AGAIN44,1498
#define ID_NEXT	ID_NEXT45,1519
#define ID_MENU	ID_MENU46,1540
	menuframework_s	menu;menu49,1579
	menubitmap_s	item_again;item_again50,1602
	menubitmap_s	item_next;item_next51,1628
	menubitmap_s	item_menu;item_menu52,1653
	int				phase;phase54,1679
	int				ignoreKeysTime;ignoreKeysTime55,1694
	int				starttime;starttime56,1718
	int				scoreboardtime;scoreboardtime57,1737
	int				serverId;serverId58,1761
	int				clientNums[MAX_SCOREBOARD_CLIENTS];clientNums60,1780
	int				ranks[MAX_SCOREBOARD_CLIENTS];ranks61,1824
	int				scores[MAX_SCOREBOARD_CLIENTS];scores62,1863
	char			placeNames[3][64];placeNames64,1904
	int				level;level66,1932
	int				numClients;numClients67,1947
	int				won;won68,1967
	int				numAwards;numAwards69,1980
	int				awardsEarned[6];awardsEarned70,1999
	int				awardsLevels[6];awardsLevels71,2024
	qboolean		playedSound[6];playedSound72,2049
	int				lastTier;lastTier73,2076
	sfxHandle_t		winnerSound;winnerSound74,2094
} postgameMenuInfo_t;postgameMenuInfo_t75,2121
static postgameMenuInfo_t	postgameMenuInfo;postgameMenuInfo77,2144
static char					arenainfo[MAX_INFO_VALUE];arenainfo78,2188
char	*ui_medalNames[] = {"Accuracy", "Impressive", "Excellent", "Gauntlet", "Frags", "Perfect"};ui_medalNames80,2232
char	*ui_medalPicNames[] = {ui_medalPicNames81,2329
char	*ui_medalSounds[] = {ui_medalSounds89,2545
static void UI_SPPostgameMenu_AgainEvent( void* ptr, int event )UI_SPPostgameMenu_AgainEvent104,2842
static void UI_SPPostgameMenu_NextEvent( void* ptr, int event ) {UI_SPPostgameMenu_NextEvent119,3098
static void UI_SPPostgameMenu_MenuEvent( void* ptr, int event )UI_SPPostgameMenu_MenuEvent164,3947
static sfxHandle_t UI_SPPostgameMenu_MenuKey( int key ) {UI_SPPostgameMenu_MenuKey179,4210
static int medalLocations[6] = {144, 448, 88, 504, 32, 560};medalLocations207,4886
static void UI_SPPostgameMenu_DrawAwardsMedals( int max ) {UI_SPPostgameMenu_DrawAwardsMedals209,4948
static void UI_SPPostgameMenu_DrawAwardsPresentation( int timer ) {UI_SPPostgameMenu_DrawAwardsPresentation239,5556
static void UI_SPPostgameMenu_MenuDrawScoreLine( int n, int y ) {UI_SPPostgameMenu_MenuDrawScoreLine265,6374
static void UI_SPPostgameMenu_MenuDraw( void ) {UI_SPPostgameMenu_MenuDraw296,7243
void UI_SPPostgameMenu_Cache( void ) {UI_SPPostgameMenu_Cache402,10353
static void UI_SPPostgameMenu_Init( void ) {UI_SPPostgameMenu_Init432,11146
static void Prepname( int index ) {Prepname479,13425
void UI_SPPostgameMenu_f( void ) {UI_SPPostgameMenu_f503,13983

q3_ui/ui_serverinfo.c,1103
#define SERVERINFO_FRAMEL	SERVERINFO_FRAMEL25,1000
#define SERVERINFO_FRAMER	SERVERINFO_FRAMER26,1046
#define SERVERINFO_BACK0	SERVERINFO_BACK027,1092
#define SERVERINFO_BACK1	SERVERINFO_BACK128,1135
static char* serverinfo_artlist[] =serverinfo_artlist30,1179
#define ID_ADD	ID_ADD39,1306
#define ID_BACK	ID_BACK40,1326
	menuframework_s	menu;menu44,1365
	menutext_s		banner;banner45,1388
	menubitmap_s	framel;framel46,1409
	menubitmap_s	framer;framer47,1431
	menubitmap_s	back;back48,1453
	menutext_s		add;add49,1473
	char			info[MAX_INFO_STRING];info50,1491
	int				numlines;numlines51,1522
} serverinfo_t;serverinfo_t52,1540
static serverinfo_t	s_serverinfo;s_serverinfo54,1557
void Favorites_Add( void )Favorites_Add64,1682
static void ServerInfo_Event( void* ptr, int event )ServerInfo_Event100,2365
static void ServerInfo_MenuDraw( void )ServerInfo_MenuDraw126,2718
static sfxHandle_t ServerInfo_MenuKey( int key )ServerInfo_MenuKey158,3403
void ServerInfo_Cache( void )ServerInfo_Cache168,3572
void UI_ServerInfoMenu( void )UI_ServerInfoMenu186,3815

q3_ui/ui_teamorders.c,1896
#define ART_FRAME	ART_FRAME35,1172
#define ART_BACK0	ART_BACK036,1214
#define ART_BACK1	ART_BACK137,1251
#define ID_LIST_BOTS	ID_LIST_BOTS39,1290
#define ID_LIST_CTF_ORDERS	ID_LIST_CTF_ORDERS40,1315
#define ID_LIST_TEAM_ORDERS	ID_LIST_TEAM_ORDERS41,1345
	menuframework_s	menu;menu45,1395
	menutext_s		banner;banner47,1419
	menubitmap_s	frame;frame48,1440
	menulist_s		list;list50,1462
	menubitmap_s	back;back52,1482
	int				gametype;gametype54,1503
	int				numBots;numBots55,1521
	int				selectedBot;selectedBot56,1538
	char			*bots[9];bots57,1559
	char			botNames[9][16];botNames58,1577
} teamOrdersMenuInfo_t;teamOrdersMenuInfo_t59,1602
static teamOrdersMenuInfo_t	teamOrdersMenuInfo;teamOrdersMenuInfo61,1627
#define NUM_CTF_ORDERS	NUM_CTF_ORDERS63,1676
static const char *ctfOrders[] = {ctfOrders64,1702
static const char *ctfMessages[] = {ctfMessages74,1869
#define NUM_TEAM_ORDERS	NUM_TEAM_ORDERS85,2057
static const char *teamOrders[] = {teamOrders86,2084
static const char *teamMessages[] = {teamMessages95,2222
static void UI_TeamOrdersMenu_BackEvent( void *ptr, int event ) {UI_TeamOrdersMenu_BackEvent111,2445
static void UI_TeamOrdersMenu_SetList( int id ) {UI_TeamOrdersMenu_SetList124,2638
sfxHandle_t UI_TeamOrdersMenu_Key( int key ) {UI_TeamOrdersMenu_Key155,3495
static void UI_TeamOrdersMenu_ListDraw( void *self ) {UI_TeamOrdersMenu_ListDraw216,4702
static void UI_TeamOrdersMenu_ListEvent( void *ptr, int event ) {UI_TeamOrdersMenu_ListEvent254,5377
static void UI_TeamOrdersMenu_BuildBotList( void ) {UI_TeamOrdersMenu_BuildBotList293,6340
static void UI_TeamOrdersMenu_Init( void ) {UI_TeamOrdersMenu_Init345,7644
void UI_TeamOrdersMenu_Cache( void ) {UI_TeamOrdersMenu_Cache403,9963
void UI_TeamOrdersMenu( void ) {UI_TeamOrdersMenu415,10188
void UI_TeamOrdersMenu_f( void ) {UI_TeamOrdersMenu_f426,10352

q3_ui/ui_qmenu.c,4194
sfxHandle_t menu_in_sound;menu_in_sound30,1189
sfxHandle_t menu_move_sound;menu_move_sound31,1216
sfxHandle_t menu_out_sound;menu_out_sound32,1245
sfxHandle_t menu_buzz_sound;menu_buzz_sound33,1273
sfxHandle_t menu_null_sound;menu_null_sound34,1302
sfxHandle_t weaponChangeSound;weaponChangeSound35,1331
static qhandle_t	sliderBar;sliderBar37,1363
static qhandle_t	sliderButton_0;sliderButton_038,1391
static qhandle_t	sliderButton_1;sliderButton_139,1424
vec4_t menu_text_color	    = {1.0f, 1.0f, 1.0f, 1.0f};menu_text_color41,1458
vec4_t menu_dim_color       = {0.0f, 0.0f, 0.0f, 0.75f};menu_dim_color42,1513
vec4_t color_black	    = {0.00f, 0.00f, 0.00f, 1.00f};color_black43,1570
vec4_t color_white	    = {1.00f, 1.00f, 1.00f, 1.00f};color_white44,1625
vec4_t color_yellow	    = {1.00f, 1.00f, 0.00f, 1.00f};color_yellow45,1680
vec4_t color_blue	    = {0.00f, 0.00f, 1.00f, 1.00f};color_blue46,1736
vec4_t color_lightOrange    = {1.00f, 0.68f, 0.00f, 1.00f };color_lightOrange47,1790
vec4_t color_orange	    = {1.00f, 0.43f, 0.00f, 1.00f};color_orange48,1851
vec4_t color_red	    = {1.00f, 0.00f, 0.00f, 1.00f};color_red49,1907
vec4_t color_dim	    = {0.00f, 0.00f, 0.00f, 0.25f};color_dim50,1960
vec4_t pulse_color          = {1.00f, 1.00f, 1.00f, 1.00f};pulse_color53,2038
vec4_t text_color_disabled  = {0.50f, 0.50f, 0.50f, 1.00f};	// light graytext_color_disabled54,2098
vec4_t text_color_normal    = {1.00f, 0.43f, 0.00f, 1.00f};	// light orangetext_color_normal55,2172
vec4_t text_color_highlight = {1.00f, 1.00f, 0.00f, 1.00f};	// bright yellowtext_color_highlight56,2248
vec4_t listbar_color        = {1.00f, 0.43f, 0.00f, 0.30f};	// transluscent orangelistbar_color57,2325
vec4_t text_color_status    = {1.00f, 1.00f, 1.00f, 1.00f};	// bright white	text_color_status58,2408
static void Text_Init( menutext_s *t )Text_Init100,3640
static void Text_Draw( menutext_s *t )Text_Draw110,3771
static void BText_Init( menutext_s *t )BText_Init143,4256
static void BText_Draw( menutext_s *t )BText_Draw153,4389
static void PText_Init( menutext_s *t )PText_Init175,4712
static void PText_Draw( menutext_s *t )PText_Draw208,5331
void Bitmap_Init( menubitmap_s *b )Bitmap_Init241,5857
void Bitmap_Draw( menubitmap_s *b )Bitmap_Draw282,6391
static void Action_Init( menuaction_s *a )Action_Init368,8232
static void Action_Draw( menuaction_s *a )Action_Draw390,8639
static void RadioButton_Init( menuradiobutton_s *rb )RadioButton_Init434,9579
static sfxHandle_t RadioButton_Key( menuradiobutton_s *rb, int key )RadioButton_Key455,10016
static void RadioButton_Draw( menuradiobutton_s *rb )RadioButton_Draw489,10602
static void Slider_Init( menuslider_s *s )Slider_Init545,11845
static sfxHandle_t Slider_Key( menuslider_s *s, int key )Slider_Key566,12274
static void Slider_Draw( menuslider_s *s ) {Slider_Draw629,13439
static void Slider_Draw( menuslider_s *s )Slider_Draw692,14705
static void SpinControl_Init( menulist_s *s ) {SpinControl_Init762,16268
static sfxHandle_t SpinControl_Key( menulist_s *s, int key )SpinControl_Key794,16859
static void SpinControl_Draw( menulist_s *s )SpinControl_Draw842,17626
static void ScrollList_Init( menulist_s *l )ScrollList_Init886,18617
sfxHandle_t ScrollList_Key( menulist_s *l, int key )ScrollList_Key920,19274
void ScrollList_Draw( menulist_s *l )ScrollList_Draw1201,24733
void Menu_AddItem( menuframework_s *menu, void *item )Menu_AddItem1265,25932
void Menu_CursorMoved( menuframework_s *m )Menu_CursorMoved1336,27414
void Menu_SetCursor( menuframework_s *m, int cursor )Menu_SetCursor1363,27995
void Menu_SetCursorToItem( menuframework_s *m, void* ptr )Menu_SetCursorToItem1382,28318
void Menu_AdjustCursor( menuframework_s *m, int dir ) {Menu_AdjustCursor1403,28670
void Menu_Draw( menuframework_s *menu )Menu_Draw1453,29559
void *Menu_ItemAtCursor( menuframework_s *m )Menu_ItemAtCursor1553,31471
sfxHandle_t Menu_ActivateItem( menuframework_s *s, menucommon_s* item ) {Menu_ActivateItem1566,31675
sfxHandle_t Menu_DefaultKey( menuframework_s *m, int key )Menu_DefaultKey1582,31961
void Menu_Cache( void )Menu_Cache1713,34383

q3_ui/ui_main.c,2896
intptr_t vmMain( int command, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11  ) {vmMain43,1341
	vmCvar_t	*vmCvar;vmCvar96,2295
	char		*cvarName;cvarName97,2314
	char		*defaultString;defaultString98,2332
	int			cvarFlags;cvarFlags99,2355
} cvarTable_t;cvarTable_t100,2373
vmCvar_t	ui_ffa_fraglimit;ui_ffa_fraglimit102,2389
vmCvar_t	ui_ffa_timelimit;ui_ffa_timelimit103,2416
vmCvar_t	ui_tourney_fraglimit;ui_tourney_fraglimit105,2444
vmCvar_t	ui_tourney_timelimit;ui_tourney_timelimit106,2475
vmCvar_t	ui_team_fraglimit;ui_team_fraglimit108,2507
vmCvar_t	ui_team_timelimit;ui_team_timelimit109,2535
vmCvar_t	ui_team_friendly;ui_team_friendly110,2563
vmCvar_t	ui_ctf_capturelimit;ui_ctf_capturelimit112,2591
vmCvar_t	ui_ctf_timelimit;ui_ctf_timelimit113,2621
vmCvar_t	ui_ctf_friendly;ui_ctf_friendly114,2648
vmCvar_t	ui_arenasFile;ui_arenasFile116,2675
vmCvar_t	ui_botsFile;ui_botsFile117,2699
vmCvar_t	ui_spScores1;ui_spScores1118,2721
vmCvar_t	ui_spScores2;ui_spScores2119,2744
vmCvar_t	ui_spScores3;ui_spScores3120,2767
vmCvar_t	ui_spScores4;ui_spScores4121,2790
vmCvar_t	ui_spScores5;ui_spScores5122,2813
vmCvar_t	ui_spAwards;ui_spAwards123,2836
vmCvar_t	ui_spVideos;ui_spVideos124,2858
vmCvar_t	ui_spSkill;ui_spSkill125,2880
vmCvar_t	ui_spSelection;ui_spSelection127,2902
vmCvar_t	ui_browserMaster;ui_browserMaster129,2928
vmCvar_t	ui_browserGameType;ui_browserGameType130,2955
vmCvar_t	ui_browserSortKey;ui_browserSortKey131,2984
vmCvar_t	ui_browserShowFull;ui_browserShowFull132,3012
vmCvar_t	ui_browserShowEmpty;ui_browserShowEmpty133,3041
vmCvar_t	ui_brassTime;ui_brassTime135,3072
vmCvar_t	ui_drawCrosshair;ui_drawCrosshair136,3095
vmCvar_t	ui_drawCrosshairNames;ui_drawCrosshairNames137,3122
vmCvar_t	ui_marks;ui_marks138,3154
vmCvar_t	ui_server1;ui_server1140,3174
vmCvar_t	ui_server2;ui_server2141,3195
vmCvar_t	ui_server3;ui_server3142,3216
vmCvar_t	ui_server4;ui_server4143,3237
vmCvar_t	ui_server5;ui_server5144,3258
vmCvar_t	ui_server6;ui_server6145,3279
vmCvar_t	ui_server7;ui_server7146,3300
vmCvar_t	ui_server8;ui_server8147,3321
vmCvar_t	ui_server9;ui_server9148,3342
vmCvar_t	ui_server10;ui_server10149,3363
vmCvar_t	ui_server11;ui_server11150,3385
vmCvar_t	ui_server12;ui_server12151,3407
vmCvar_t	ui_server13;ui_server13152,3429
vmCvar_t	ui_server14;ui_server14153,3451
vmCvar_t	ui_server15;ui_server15154,3473
vmCvar_t	ui_server16;ui_server16155,3495
vmCvar_t	ui_cdkeychecked;ui_cdkeychecked157,3518
vmCvar_t	ui_ioq3;ui_ioq3158,3544
static cvarTable_t		cvarTable[] = {cvarTable160,3563
static int cvarTableSize = sizeof(cvarTable) / sizeof(cvarTable[0]);cvarTableSize220,6386
void UI_RegisterCvars( void ) {UI_RegisterCvars228,6516
void UI_UpdateCvars( void ) {UI_UpdateCvars242,6789

q3_ui/ui_credits.c,426
	menuframework_s	menu;menu36,1180
	int frame;frame37,1203
} creditsmenu_t;creditsmenu_t38,1215
static creditsmenu_t	s_credits;s_credits40,1233
static void UI_CreditMenu_Draw_ioq3( void ) {UI_CreditMenu_Draw_ioq348,1329
static sfxHandle_t UI_CreditMenu_Key( int key ) {UI_CreditMenu_Key88,2342
static void UI_CreditMenu_Draw( void ) {UI_CreditMenu_Draw108,2667
void UI_CreditMenu( void ) {UI_CreditMenu168,5693

q3_ui/ui_removebots.c,2300
#define ART_BACKGROUND	ART_BACKGROUND35,1172
#define ART_BACK0	ART_BACK036,1219
#define ART_BACK1	ART_BACK137,1257
#define ART_DELETE0	ART_DELETE038,1296
#define ART_DELETE1	ART_DELETE139,1338
#define ART_ARROWS	ART_ARROWS40,1380
#define ART_ARROWUP	ART_ARROWUP41,1426
#define ART_ARROWDOWN	ART_ARROWDOWN42,1475
#define ID_UP	ID_UP44,1526
#define ID_DOWN	ID_DOWN45,1546
#define ID_DELETE	ID_DELETE46,1568
#define ID_BACK	ID_BACK47,1591
#define ID_BOTNAME0	ID_BOTNAME048,1613
#define ID_BOTNAME1	ID_BOTNAME149,1638
#define ID_BOTNAME2	ID_BOTNAME250,1663
#define ID_BOTNAME3	ID_BOTNAME351,1688
#define ID_BOTNAME4	ID_BOTNAME452,1713
#define ID_BOTNAME5	ID_BOTNAME553,1738
#define ID_BOTNAME6	ID_BOTNAME654,1763
	menuframework_s	menu;menu58,1807
	menutext_s		banner;banner60,1831
	menubitmap_s	background;background61,1852
	menubitmap_s	arrows;arrows63,1879
	menubitmap_s	up;up64,1901
	menubitmap_s	down;down65,1919
	menutext_s		bots[7];bots67,1940
	menubitmap_s	delete;delete69,1963
	menubitmap_s	back;back70,1985
	int				numBots;numBots72,2006
	int				baseBotNum;baseBotNum73,2023
	int				selectedBotNum;selectedBotNum74,2043
	char			botnames[7][32];botnames75,2067
	int				botClientNums[MAX_BOTS];botClientNums76,2092
} removeBotsMenuInfo_t;removeBotsMenuInfo_t77,2125
static removeBotsMenuInfo_t	removeBotsMenuInfo;removeBotsMenuInfo79,2150
static void UI_RemoveBotsMenu_SetBotNames( void ) {UI_RemoveBotsMenu_SetBotNames87,2272
static void UI_RemoveBotsMenu_DeleteEvent( void* ptr, int event ) {UI_RemoveBotsMenu_DeleteEvent105,2840
static void UI_RemoveBotsMenu_BotEvent( void* ptr, int event ) {UI_RemoveBotsMenu_BotEvent119,3187
static void UI_RemoveBotsMenu_BackEvent( void* ptr, int event ) {UI_RemoveBotsMenu_BackEvent135,3613
static void UI_RemoveBotsMenu_UpEvent( void* ptr, int event ) {UI_RemoveBotsMenu_UpEvent148,3809
static void UI_RemoveBotsMenu_DownEvent( void* ptr, int event ) {UI_RemoveBotsMenu_DownEvent165,4107
static void UI_RemoveBotsMenu_GetBots( void ) {UI_RemoveBotsMenu_GetBots182,4434
void UI_RemoveBots_Cache( void ) {UI_RemoveBots_Cache211,5071
static void UI_RemoveBotsMenu_Init( void ) {UI_RemoveBotsMenu_Init225,5394
void UI_RemoveBotsMenu( void ) {UI_RemoveBotsMenu339,10270

q3_ui/ui_gameinfo.c,2429
#define POOLSIZE	POOLSIZE34,1051
int				ui_numBots;ui_numBots36,1080
static char		*ui_botInfos[MAX_BOTS];ui_botInfos37,1099
static int		ui_numArenas;ui_numArenas39,1137
static char		*ui_arenaInfos[MAX_ARENAS];ui_arenaInfos40,1163
static int		ui_numSinglePlayerArenas;ui_numSinglePlayerArenas42,1205
static int		ui_numSpecialSinglePlayerArenas;ui_numSpecialSinglePlayerArenas43,1243
static char		memoryPool[POOLSIZE];memoryPool45,1289
static int		allocPoint, outOfMemory;allocPoint46,1324
static int		allocPoint, outOfMemory;outOfMemory46,1324
void *UI_Alloc( int size ) {UI_Alloc54,1410
void UI_InitMemory( void ) {UI_InitMemory74,1665
int UI_ParseInfos( char *buf, int max, char *infos[] ) {UI_ParseInfos84,1789
static void UI_LoadArenasFromFile( char *filename ) {UI_LoadArenasFromFile140,2885
static void UI_LoadArenas( void ) {UI_LoadArenas168,3555
const char *UI_GetArenaInfoByNumber( int num ) {UI_GetArenaInfoByNumber269,6313
const char *UI_GetArenaInfoByMap( const char *map ) {UI_GetArenaInfoByMap294,6763
const char *UI_GetSpecialArenaInfo( const char *tag ) {UI_GetSpecialArenaInfo312,7059
static void UI_LoadBotsFromFile( char *filename ) {UI_LoadBotsFromFile329,7357
static void UI_LoadBots( void ) {UI_LoadBots358,8108
char *UI_GetBotInfoByNumber( int num ) {UI_GetBotInfoByNumber395,8891
char *UI_GetBotInfoByName( const char *name ) {UI_GetBotInfoByName409,9143
void UI_GetBestScore( int level, int *score, int *skill ) {UI_GetBestScore435,9572
void UI_SetBestScore( int level, int score ) {UI_SetBestScore482,10436
void UI_LogAwardData( int award, int data ) {UI_LogAwardData520,11240
int UI_GetAwardLevel( int award ) {UI_GetAwardLevel549,11863
int UI_TierCompleted( int levelWon ) {UI_TierCompleted565,12187
qboolean UI_ShowTierVideo( int tier ) {UI_ShowTierVideo603,12914
qboolean UI_CanShowTierVideo( int tier ) {UI_CanShowTierVideo630,13404
int UI_GetCurrentGame( void ) {UI_GetCurrentGame660,13904
void UI_NewGame( void ) {UI_NewGame697,14587
int UI_GetNumArenas( void ) {UI_GetNumArenas713,14928
int UI_GetNumSPArenas( void ) {UI_GetNumSPArenas723,15040
int UI_GetNumSPTiers( void ) {UI_GetNumSPTiers733,15165
int UI_GetNumBots( void ) {UI_GetNumBots743,15304
void UI_SPUnlock_f( void ) {UI_SPUnlock_f753,15408
void UI_SPUnlockMedals_f( void ) {UI_SPUnlockMedals_f785,16122
void UI_InitGameinfo( void ) {UI_InitGameinfo808,16566

q3_ui/ui_options.c,1066
#define ART_FRAMEL	ART_FRAMEL33,1177
#define ART_FRAMER	ART_FRAMER34,1218
#define ART_BACK0	ART_BACK035,1259
#define ART_BACK1	ART_BACK136,1297
#define ID_GRAPHICS	ID_GRAPHICS38,1336
#define ID_DISPLAY	ID_DISPLAY39,1361
#define ID_SOUND	ID_SOUND40,1385
#define ID_NETWORK	ID_NETWORK41,1407
#define ID_BACK	ID_BACK42,1431
#define VERTICAL_SPACING	VERTICAL_SPACING44,1454
	menuframework_s	menu;menu47,1500
	menutext_s		banner;banner49,1524
	menubitmap_s	framel;framel50,1545
	menubitmap_s	framer;framer51,1567
	menutext_s		graphics;graphics53,1590
	menutext_s		display;display54,1613
	menutext_s		sound;sound55,1635
	menutext_s		network;network56,1655
	menubitmap_s	back;back57,1677
} optionsmenu_t;optionsmenu_t58,1697
static optionsmenu_t	s_options;s_options60,1715
static void Options_Event( void* ptr, int event ) {Options_Event68,1805
void SystemConfig_Cache( void ) {SystemConfig_Cache102,2262
void Options_MenuInit( void ) {Options_MenuInit114,2524
void UI_SystemConfigMenu( void ) {UI_SystemConfigMenu226,6507

q3_ui/ui_specifyserver.c,1196
#define SPECIFYSERVER_FRAMEL	SPECIFYSERVER_FRAMEL29,1183
#define SPECIFYSERVER_FRAMER	SPECIFYSERVER_FRAMER30,1232
#define SPECIFYSERVER_BACK0	SPECIFYSERVER_BACK031,1281
#define SPECIFYSERVER_BACK1	SPECIFYSERVER_BACK132,1328
#define SPECIFYSERVER_FIGHT0	SPECIFYSERVER_FIGHT033,1375
#define SPECIFYSERVER_FIGHT1	SPECIFYSERVER_FIGHT134,1423
#define ID_SPECIFYSERVERBACK	ID_SPECIFYSERVERBACK36,1472
#define ID_SPECIFYSERVERGO	ID_SPECIFYSERVERGO37,1505
static char* specifyserver_artlist[] =specifyserver_artlist39,1538
	menuframework_s	menu;menu52,1744
	menutext_s		banner;banner53,1767
	menubitmap_s	framel;framel54,1788
	menubitmap_s	framer;framer55,1810
	menufield_s		domain;domain56,1832
	menufield_s		port;port57,1854
	menubitmap_s	go;go58,1874
	menubitmap_s	back;back59,1892
} specifyserver_t;specifyserver_t60,1912
static specifyserver_t	s_specifyserver;s_specifyserver62,1932
static void SpecifyServer_Event( void* ptr, int event )SpecifyServer_Event69,2035
void SpecifyServer_MenuInit( void )SpecifyServer_MenuInit103,2711
void SpecifyServer_Cache( void )SpecifyServer_Cache190,6343
void UI_SpecifyServerMenu( void )UI_SpecifyServerMenu208,6598

q3_ui/ui_signup.c,1485
#define SIGNUP_FRAME	SIGNUP_FRAME30,1023
#define ID_NAME	ID_NAME32,1067
#define ID_NAME_BOX	ID_NAME_BOX33,1089
#define ID_PASSWORD	ID_PASSWORD34,1114
#define ID_PASSWORD_BOX	ID_PASSWORD_BOX35,1139
#define ID_AGAIN	ID_AGAIN36,1167
#define ID_AGAIN_BOX	ID_AGAIN_BOX37,1189
#define ID_EMAIL	ID_EMAIL38,1214
#define ID_EMAIL_BOX	ID_EMAIL_BOX39,1236
#define ID_SIGNUP	ID_SIGNUP40,1261
#define ID_CANCEL	ID_CANCEL41,1284
	menuframework_s	menu;menu46,1326
	menubitmap_s	frame;frame47,1349
	menutext_s		name;name48,1370
	menufield_s		name_box;name_box49,1389
	menutext_s		password;password50,1413
	menufield_s		password_box;password_box51,1436
	menutext_s		again;again52,1464
	menufield_s		again_box;again_box53,1484
	menutext_s		email;email54,1509
	menufield_s		email_box;email_box55,1529
	menutext_s		signup;signup56,1554
	menutext_s		cancel;cancel57,1575
} signup_t;signup_t58,1596
static signup_t	s_signup;s_signup60,1609
static menuframework_s	s_signup_menu;s_signup_menu62,1636
static menuaction_s		s_signup_signup;s_signup_signup63,1674
static menuaction_s		s_signup_cancel;s_signup_cancel64,1712
static vec4_t s_signup_color_prompt  = {1.00, 0.43, 0.00, 1.00};s_signup_color_prompt66,1751
static void Signup_MenuEvent( void* ptr, int event ) {Signup_MenuEvent73,1872
void Signup_MenuInit( void ) {Signup_MenuInit122,2940
void Signup_Cache( void ) {Signup_Cache271,8477
void UI_SignupMenu( void ) {UI_SignupMenu281,8606

q3_ui/ui_login.c,1145
#define LOGIN_FRAME	LOGIN_FRAME30,1022
#define ID_NAME	ID_NAME32,1065
#define ID_NAME_BOX	ID_NAME_BOX33,1087
#define ID_PASSWORD	ID_PASSWORD34,1112
#define ID_PASSWORD_BOX	ID_PASSWORD_BOX35,1137
#define ID_LOGIN	ID_LOGIN36,1165
#define ID_CANCEL	ID_CANCEL37,1187
	menuframework_s	menu;menu42,1229
	menubitmap_s	frame;frame43,1252
	menutext_s		name;name44,1273
	menufield_s		name_box;name_box45,1292
	menutext_s		password;password46,1316
	menufield_s		password_box;password_box47,1339
	menutext_s		login;login48,1367
	menutext_s		cancel;cancel49,1387
} login_t;login_t50,1408
static login_t	s_login;s_login52,1420
static menuframework_s	s_login_menu;s_login_menu54,1445
static menuaction_s		s_login_login;s_login_login55,1482
static menuaction_s		s_login_cancel;s_login_cancel56,1518
static vec4_t s_login_color_prompt  = {1.00, 0.43, 0.00, 1.00};s_login_color_prompt58,1556
static void Login_MenuEvent( void* ptr, int event ) {Login_MenuEvent65,1675
void Login_MenuInit( void ) {Login_MenuInit99,2302
void Login_Cache( void ) {Login_Cache193,5533
void UI_LoginMenu( void ) {UI_LoginMenu203,5659

q3_ui/ui_ingame.c,1428
#define INGAME_FRAME	INGAME_FRAME35,1167
#define INGAME_MENU_VERTICAL_SPACING	INGAME_MENU_VERTICAL_SPACING37,1263
#define ID_TEAM	ID_TEAM39,1304
#define ID_ADDBOTS	ID_ADDBOTS40,1327
#define ID_REMOVEBOTS	ID_REMOVEBOTS41,1352
#define ID_SETUP	ID_SETUP42,1379
#define ID_SERVERINFO	ID_SERVERINFO43,1402
#define ID_LEAVEARENA	ID_LEAVEARENA44,1429
#define ID_RESTART	ID_RESTART45,1456
#define ID_QUIT	ID_QUIT46,1481
#define ID_RESUME	ID_RESUME47,1504
#define ID_TEAMORDERS	ID_TEAMORDERS48,1528
	menuframework_s	menu;menu52,1574
	menubitmap_s	frame;frame54,1598
	menutext_s		team;team55,1619
	menutext_s		setup;setup56,1638
	menutext_s		server;server57,1658
	menutext_s		leave;leave58,1679
	menutext_s		restart;restart59,1699
	menutext_s		addbots;addbots60,1721
	menutext_s		removebots;removebots61,1743
	menutext_s		teamorders;teamorders62,1768
	menutext_s		quit;quit63,1793
	menutext_s		resume;resume64,1812
} ingamemenu_t;ingamemenu_t65,1833
static ingamemenu_t	s_ingame;s_ingame67,1850
static void InGame_RestartAction( qboolean result ) {InGame_RestartAction75,1945
static void InGame_QuitAction( qboolean result ) {InGame_QuitAction90,2166
void InGame_Event( void *ptr, int notification ) {InGame_Event104,2339
void InGame_MenuInit( void ) {InGame_MenuInit158,3146
void InGame_Cache( void ) {InGame_Cache329,9787
void UI_InGameMenu( void ) {UI_InGameMenu339,9920

q3_ui/ui_team.c,773
#define TEAMMAIN_FRAME	TEAMMAIN_FRAME30,1021
#define ID_JOINRED	ID_JOINRED32,1066
#define ID_JOINBLUE	ID_JOINBLUE33,1090
#define ID_JOINGAME	ID_JOINGAME34,1115
#define ID_SPECTATE	ID_SPECTATE35,1140
	menuframework_s	menu;menu40,1184
	menubitmap_s	frame;frame41,1207
	menutext_s		joinred;joinred42,1228
	menutext_s		joinblue;joinblue43,1250
	menutext_s		joingame;joingame44,1273
	menutext_s		spectate;spectate45,1296
} teammain_t;teammain_t46,1319
static teammain_t	s_teammain;s_teammain48,1334
static void TeamMain_MenuEvent( void* ptr, int event ) {TeamMain_MenuEvent55,1422
void TeamMain_MenuInit( void ) {TeamMain_MenuInit89,2059
void TeamMain_Cache( void ) {TeamMain_Cache187,5444
void UI_TeamMainMenu( void ) {UI_TeamMainMenu197,5579

q3_ui/ui_rankstatus.c,983
#define RANKSTATUS_FRAME	RANKSTATUS_FRAME30,1027
#define ID_MESSAGE	ID_MESSAGE32,1075
#define ID_OK	ID_OK33,1099
	menuframework_s	menu;menu38,1138
	menubitmap_s	frame;frame39,1161
	menutext_s		message;message40,1182
	menutext_s		ok;ok41,1204
} rankstatus_t;rankstatus_t42,1221
static rankstatus_t	s_rankstatus;s_rankstatus44,1238
static menuframework_s	s_rankstatus_menu;s_rankstatus_menu46,1273
static menuaction_s		s_rankstatus_ok;s_rankstatus_ok47,1315
static grank_status_t	s_status = 0;s_status49,1354
static char*			s_rankstatus_message = NULL;s_rankstatus_message50,1390
static vec4_t s_rankingstatus_color_prompt  = {1.00, 0.43, 0.00, 1.00};s_rankingstatus_color_prompt52,1435
static void RankStatus_MenuEvent( void* ptr, int event ) {RankStatus_MenuEvent59,1567
void RankStatus_MenuInit( void ) {RankStatus_MenuInit107,2335
void RankStatus_Cache( void ) {RankStatus_Cache158,4021
void UI_RankStatusMenu( void ) {UI_RankStatusMenu168,4162

q3_ui/ui_startserver.c,9140
#define GAMESERVER_BACK0	GAMESERVER_BACK035,1191
#define GAMESERVER_BACK1	GAMESERVER_BACK136,1235
#define GAMESERVER_NEXT0	GAMESERVER_NEXT037,1279
#define GAMESERVER_NEXT1	GAMESERVER_NEXT138,1323
#define GAMESERVER_FRAMEL	GAMESERVER_FRAMEL39,1367
#define GAMESERVER_FRAMER	GAMESERVER_FRAMER40,1414
#define GAMESERVER_SELECT	GAMESERVER_SELECT41,1461
#define GAMESERVER_SELECTED	GAMESERVER_SELECTED42,1511
#define GAMESERVER_FIGHT0	GAMESERVER_FIGHT043,1565
#define GAMESERVER_FIGHT1	GAMESERVER_FIGHT144,1611
#define GAMESERVER_UNKNOWNMAP	GAMESERVER_UNKNOWNMAP45,1657
#define GAMESERVER_ARROWS	GAMESERVER_ARROWS46,1709
#define GAMESERVER_ARROWSL	GAMESERVER_ARROWSL47,1759
#define GAMESERVER_ARROWSR	GAMESERVER_ARROWSR48,1810
#define MAX_MAPROWS	MAX_MAPROWS50,1862
#define MAX_MAPCOLS	MAX_MAPCOLS51,1885
#define MAX_MAPSPERPAGE	MAX_MAPSPERPAGE52,1908
#define	MAX_SERVERSTEXT	MAX_SERVERSTEXT54,1935
#define MAX_SERVERMAPS	MAX_SERVERMAPS56,1965
#define MAX_NAMELENGTH	MAX_NAMELENGTH57,1991
#define ID_GAMETYPE	ID_GAMETYPE59,2018
#define ID_PICTURES	ID_PICTURES60,2044
#define ID_PREVPAGE	ID_PREVPAGE61,2084
#define ID_NEXTPAGE	ID_NEXTPAGE62,2110
#define ID_STARTSERVERBACK	ID_STARTSERVERBACK63,2136
#define ID_STARTSERVERNEXT	ID_STARTSERVERNEXT64,2167
	menuframework_s	menu;menu67,2216
	menutext_s		banner;banner69,2240
	menubitmap_s	framel;framel70,2261
	menubitmap_s	framer;framer71,2283
	menulist_s		gametype;gametype73,2306
	menubitmap_s	mappics[MAX_MAPSPERPAGE];mappics74,2329
	menubitmap_s	mapbuttons[MAX_MAPSPERPAGE];mapbuttons75,2369
	menubitmap_s	arrows;arrows76,2412
	menubitmap_s	prevpage;prevpage77,2434
	menubitmap_s	nextpage;nextpage78,2458
	menubitmap_s	back;back79,2482
	menubitmap_s	next;next80,2502
	menutext_s		mapname;mapname82,2523
	menubitmap_s	item_null;item_null83,2545
	qboolean		multiplayer;multiplayer85,2571
	int				currentmap;currentmap86,2595
	int				nummaps;nummaps87,2615
	int				page;page88,2632
	int				maxpages;maxpages89,2646
	char			maplist[MAX_SERVERMAPS][MAX_NAMELENGTH];maplist90,2664
	int				mapGamebits[MAX_SERVERMAPS];mapGamebits91,2713
} startserver_t;startserver_t92,2750
static startserver_t s_startserver;s_startserver94,2768
static const char *gametype_items[] = {gametype_items96,2805
static int gametype_remap[] = {GT_FFA, GT_TEAM, GT_TOURNAMENT, GT_CTF};gametype_remap104,2928
static int gametype_remap2[] = {0, 2, 0, 1, 3};gametype_remap2105,3000
static int GametypeBits( char *string ) {GametypeBits118,3236
static void StartServer_Update( void ) {StartServer_Update166,3953
static void StartServer_MapEvent( void* ptr, int event ) {StartServer_MapEvent231,5655
static void StartServer_GametypeEvent( void* ptr, int event ) {StartServer_GametypeEvent246,5962
static void StartServer_MenuEvent( void* ptr, int event ) {StartServer_MenuEvent289,7070
static void StartServer_LevelshotDraw( void *self ) {StartServer_LevelshotDraw326,7768
static void StartServer_MenuInit( void ) {StartServer_MenuInit383,8936
void StartServer_Cache( void )StartServer_Cache553,16114
void UI_StartServerMenu( qboolean multiplayer ) {UI_StartServerMenu599,17543
#define ID_PLAYER_TYPE	ID_PLAYER_TYPE615,17893
#define ID_MAXCLIENTS	ID_MAXCLIENTS616,17921
#define ID_DEDICATED	ID_DEDICATED617,17948
#define ID_GO	ID_GO618,17974
#define ID_BACK	ID_BACK619,17995
#define PLAYER_SLOTS	PLAYER_SLOTS621,18019
	menuframework_s		menu;menu625,18064
	menutext_s			banner;banner627,18089
	menubitmap_s		mappic;mappic629,18112
	menubitmap_s		picframe;picframe630,18135
	menulist_s			dedicated;dedicated632,18161
	menufield_s			timelimit;timelimit633,18186
	menufield_s			fraglimit;fraglimit634,18212
	menufield_s			flaglimit;flaglimit635,18238
	menuradiobutton_s	friendlyfire;friendlyfire636,18264
	menufield_s			hostname;hostname637,18297
	menuradiobutton_s	pure;pure638,18322
	menulist_s			botSkill;botSkill639,18347
	menutext_s			player0;player0641,18372
	menulist_s			playerType[PLAYER_SLOTS];playerType642,18395
	menutext_s			playerName[PLAYER_SLOTS];playerName643,18435
	menulist_s			playerTeam[PLAYER_SLOTS];playerTeam644,18475
	menubitmap_s		go;go646,18516
	menubitmap_s		next;next647,18535
	menubitmap_s		back;back648,18556
	qboolean			multiplayer;multiplayer650,18578
	int					gametype;gametype651,18603
	char				mapnamebuffer[32];mapnamebuffer652,18622
	char				playerNameBuffers[PLAYER_SLOTS][16];playerNameBuffers653,18650
	qboolean			newBot;newBot655,18697
	int					newBotIndex;newBotIndex656,18717
	char				newBotName[16];newBotName657,18739
	menulist_s		punkbuster;punkbuster659,18766
} serveroptions_t;serveroptions_t660,18791
static serveroptions_t s_serveroptions;s_serveroptions662,18811
static const char *dedicated_list[] = {dedicated_list664,18852
static const char *playerType_list[] = {playerType_list671,18930
static const char *playerTeam_list[] = {playerTeam_list678,19007
static const char *botSkill_list[] = {botSkill_list684,19075
static qboolean BotAlreadySelected( const char *checkName ) {BotAlreadySelected699,19263
static void ServerOptions_Start( void ) {ServerOptions_Start724,19809
static void ServerOptions_InitPlayerItems( void ) {ServerOptions_InitPlayerItems829,23168
static void ServerOptions_SetPlayerItems( void ) {ServerOptions_SetPlayerItems882,24491
static void ServerOptions_Event( void* ptr, int event ) {ServerOptions_Event933,25707
static void ServerOptions_PlayerNameEvent( void* ptr, int event ) {ServerOptions_PlayerNameEvent972,26343
static void ServerOptions_StatusBar( void* ptr ) {ServerOptions_StatusBar989,26665
static void ServerOptions_LevelshotDraw( void *self ) {ServerOptions_LevelshotDraw1003,26927
static void ServerOptions_InitBotNames( void ) {ServerOptions_InitBotNames1031,27667
static void ServerOptions_SetMenuItems( void ) {ServerOptions_SetMenuItems1126,30094
static void PlayerName_Draw( void *item ) {PlayerName_Draw1179,32466
#define OPTIONS_X	OPTIONS_X1226,33493
static void ServerOptions_MenuInit( qboolean multiplayer ) {ServerOptions_MenuInit1228,33516
void ServerOptions_Cache( void ) {ServerOptions_Cache1479,44923
static void UI_ServerOptionsMenu( qboolean multiplayer ) {UI_ServerOptionsMenu1494,45327
#define BOTSELECT_BACK0	BOTSELECT_BACK01510,45658
#define BOTSELECT_BACK1	BOTSELECT_BACK11511,45702
#define BOTSELECT_ACCEPT0	BOTSELECT_ACCEPT01512,45746
#define BOTSELECT_ACCEPT1	BOTSELECT_ACCEPT11513,45793
#define BOTSELECT_SELECT	BOTSELECT_SELECT1514,45840
#define BOTSELECT_SELECTED	BOTSELECT_SELECTED1515,45894
#define BOTSELECT_ARROWS	BOTSELECT_ARROWS1516,45952
#define BOTSELECT_ARROWSL	BOTSELECT_ARROWSL1517,46001
#define BOTSELECT_ARROWSR	BOTSELECT_ARROWSR1518,46051
#define PLAYERGRID_COLS	PLAYERGRID_COLS1520,46102
#define PLAYERGRID_ROWS	PLAYERGRID_ROWS1521,46130
#define MAX_MODELSPERPAGE	MAX_MODELSPERPAGE1522,46158
	menuframework_s	menu;menu1526,46240
	menutext_s		banner;banner1528,46264
	menubitmap_s	pics[MAX_MODELSPERPAGE];pics1530,46286
	menubitmap_s	picbuttons[MAX_MODELSPERPAGE];picbuttons1531,46325
	menutext_s		picnames[MAX_MODELSPERPAGE];picnames1532,46370
	menubitmap_s	arrows;arrows1534,46413
	menubitmap_s	left;left1535,46435
	menubitmap_s	right;right1536,46455
	menubitmap_s	go;go1538,46477
	menubitmap_s	back;back1539,46495
	int				numBots;numBots1541,46516
	int				modelpage;modelpage1542,46533
	int				numpages;numpages1543,46552
	int				selectedmodel;selectedmodel1544,46570
	int				sortedBotNums[MAX_BOTS];sortedBotNums1545,46593
	char			boticons[MAX_MODELSPERPAGE][MAX_QPATH];boticons1546,46626
	char			botnames[MAX_MODELSPERPAGE][16];botnames1547,46674
} botSelectInfo_t;botSelectInfo_t1548,46715
static botSelectInfo_t	botSelectInfo;botSelectInfo1550,46735
static int QDECL UI_BotSelectMenu_SortCompare( const void *arg1, const void *arg2 ) {UI_BotSelectMenu_SortCompare1558,46846
static void UI_BotSelectMenu_BuildList( void ) {UI_BotSelectMenu_BuildList1581,47331
static void ServerPlayerIcon( const char *modelAndSkin, char *iconName, int iconNameMaxSize ) {ServerPlayerIcon1606,47940
static void UI_BotSelectMenu_UpdateGrid( void ) {UI_BotSelectMenu_UpdateGrid1632,48565
static void UI_BotSelectMenu_Default( char *bot ) {UI_BotSelectMenu_Default1698,50591
static void UI_BotSelectMenu_LeftEvent( void* ptr, int event ) {UI_BotSelectMenu_LeftEvent1735,51282
static void UI_BotSelectMenu_RightEvent( void* ptr, int event ) {UI_BotSelectMenu_RightEvent1752,51644
static void UI_BotSelectMenu_BotEvent( void* ptr, int event ) {UI_BotSelectMenu_BotEvent1769,52030
static void UI_BotSelectMenu_BackEvent( void* ptr, int event ) {UI_BotSelectMenu_BackEvent1794,52660
static void UI_BotSelectMenu_SelectEvent( void* ptr, int event ) {UI_BotSelectMenu_SelectEvent1807,52859
void UI_BotSelectMenu_Cache( void ) {UI_BotSelectMenu_Cache1823,53208
static void UI_BotSelectMenu_Init( char *bot ) {UI_BotSelectMenu_Init1836,53695
void UI_BotSelectMenu( char *bot ) {UI_BotSelectMenu1965,58939

q3_ui/ui_menu.c,1544
#define ID_SINGLEPLAYER	ID_SINGLEPLAYER35,1165
#define ID_MULTIPLAYER	ID_MULTIPLAYER36,1194
#define ID_SETUP	ID_SETUP37,1222
#define ID_DEMOS	ID_DEMOS38,1245
#define ID_CINEMATICS	ID_CINEMATICS39,1268
#define ID_TEAMARENA	ID_TEAMARENA40,1295
#define ID_MODS	ID_MODS41,1320
#define ID_EXIT	ID_EXIT42,1343
#define MAIN_BANNER_MODEL	MAIN_BANNER_MODEL44,1367
#define MAIN_MENU_VERTICAL_SPACING	MAIN_MENU_VERTICAL_SPACING45,1435
	menuframework_s	menu;menu49,1493
	menutext_s		singleplayer;singleplayer51,1517
	menutext_s		multiplayer;multiplayer52,1544
	menutext_s		setup;setup53,1570
	menutext_s		demos;demos54,1590
	menutext_s		cinematics;cinematics55,1610
	menutext_s		teamArena;teamArena56,1635
	menutext_s		mods;mods57,1659
	menutext_s		exit;exit58,1678
	qhandle_t		bannerModel;bannerModel60,1698
} mainmenu_t;mainmenu_t61,1723
static mainmenu_t s_main;s_main64,1739
	menuframework_s menu;	menu67,1783
	char errorMessage[4096];errorMessage68,1807
} errorMessage_t;errorMessage_t69,1833
static errorMessage_t s_errorMessage;s_errorMessage71,1852
static void MainMenu_ExitAction( qboolean result ) {MainMenu_ExitAction78,1953
void Main_MenuEvent (void* ptr, int event) {Main_MenuEvent93,2131
void MainMenu_Cache( void ) {MainMenu_Cache140,2824
sfxHandle_t ErrorMessage_Key(int key)ErrorMessage_Key144,2922
static void Main_MenuDraw( void ) {Main_MenuDraw158,3173
static qboolean UI_TeamArenaExists( void ) {UI_TeamArenaExists238,5095
void UI_MainMenu( void ) {UI_MainMenu269,5748

q3_ui/ui_splevel.c,5493
#define ART_LEVELFRAME_FOCUS	ART_LEVELFRAME_FOCUS34,1198
#define ART_LEVELFRAME_SELECTED	ART_LEVELFRAME_SELECTED35,1251
#define ART_ARROW	ART_ARROW36,1309
#define ART_ARROW_FOCUS	ART_ARROW_FOCUS37,1351
#define ART_MAP_UNKNOWN	ART_MAP_UNKNOWN38,1398
#define ART_MAP_COMPLETE1	ART_MAP_COMPLETE139,1447
#define ART_MAP_COMPLETE2	ART_MAP_COMPLETE240,1502
#define ART_MAP_COMPLETE3	ART_MAP_COMPLETE341,1557
#define ART_MAP_COMPLETE4	ART_MAP_COMPLETE442,1612
#define ART_MAP_COMPLETE5	ART_MAP_COMPLETE543,1667
#define ART_BACK0	ART_BACK044,1722
#define ART_BACK1	ART_BACK145,1762
#define ART_FIGHT0	ART_FIGHT046,1803
#define ART_FIGHT1	ART_FIGHT147,1845
#define ART_RESET0	ART_RESET048,1887
#define ART_RESET1	ART_RESET149,1929
#define ART_CUSTOM0	ART_CUSTOM050,1972
#define ART_CUSTOM1	ART_CUSTOM151,2018
#define ID_LEFTARROW	ID_LEFTARROW53,2065
#define ID_PICTURE0	ID_PICTURE054,2090
#define ID_PICTURE1	ID_PICTURE155,2115
#define ID_PICTURE2	ID_PICTURE256,2140
#define ID_PICTURE3	ID_PICTURE357,2165
#define ID_RIGHTARROW	ID_RIGHTARROW58,2190
#define ID_PLAYERPIC	ID_PLAYERPIC59,2216
#define ID_AWARD1	ID_AWARD160,2241
#define ID_AWARD2	ID_AWARD261,2264
#define ID_AWARD3	ID_AWARD362,2287
#define ID_AWARD4	ID_AWARD463,2310
#define ID_AWARD5	ID_AWARD564,2333
#define ID_AWARD6	ID_AWARD665,2356
#define ID_BACK	ID_BACK66,2379
#define ID_RESET	ID_RESET67,2401
#define ID_CUSTOM	ID_CUSTOM68,2423
#define ID_NEXT	ID_NEXT69,2446
#define PLAYER_Y	PLAYER_Y71,2469
#define AWARDS_Y	AWARDS_Y72,2492
	menuframework_s	menu;menu76,2546
	menutext_s		item_banner;item_banner77,2569
	menubitmap_s	item_leftarrow;item_leftarrow78,2595
	menubitmap_s	item_maps[4];item_maps79,2625
	menubitmap_s	item_rightarrow;item_rightarrow80,2653
	menubitmap_s	item_player;item_player81,2684
	menubitmap_s	item_awards[6];item_awards82,2711
	menubitmap_s	item_back;item_back83,2741
	menubitmap_s	item_reset;item_reset84,2766
	menubitmap_s	item_custom;item_custom85,2792
	menubitmap_s	item_next;item_next86,2819
	menubitmap_s	item_null;item_null87,2844
	qboolean		reinit;reinit89,2870
	const char *	selectedArenaInfo;selectedArenaInfo91,2890
	int				numMaps;numMaps92,2923
	char			levelPicNames[4][MAX_QPATH];levelPicNames93,2940
	char			levelNames[4][16];levelNames94,2977
	int				levelScores[4];levelScores95,3004
	int				levelScoresSkill[4];levelScoresSkill96,3028
	qhandle_t		levelSelectedPic;levelSelectedPic97,3057
	qhandle_t		levelFocusPic;levelFocusPic98,3087
	qhandle_t		levelCompletePic[5];levelCompletePic99,3114
	char			playerModel[MAX_QPATH];playerModel101,3148
	char			playerPicName[MAX_QPATH];playerPicName102,3180
	int				awardLevels[6];awardLevels103,3214
	sfxHandle_t		awardSounds[6];awardSounds104,3238
	int				numBots;numBots106,3269
	qhandle_t		botPics[7];botPics107,3286
	char			botNames[7][10];botNames108,3310
} levelMenuInfo_t;levelMenuInfo_t109,3335
static levelMenuInfo_t	levelMenuInfo;levelMenuInfo111,3355
static int	selectedArenaSet;selectedArenaSet113,3394
static int	selectedArena;selectedArena114,3423
static int	currentSet;currentSet115,3449
static int	currentGame;currentGame116,3472
static int	trainingTier;trainingTier117,3496
static int	finalTier;finalTier118,3521
static int	minTier;minTier119,3543
static int	maxTier;maxTier120,3563
static void PlayerIcon( const char *modelAndSkin, char *iconName, int iconNameMaxSize ) {PlayerIcon128,3638
static qhandle_t PlayerIconHandle( const char *modelAndSkin ) {PlayerIconHandle154,4246
static void UI_SPLevelMenu_SetBots( void ) {UI_SPLevelMenu_SetBots167,4512
static void UI_SPLevelMenu_SetMenuArena( int n, int level, const char *arenaInfo ) {UI_SPLevelMenu_SetMenuArena221,5671
static void UI_SPLevelMenu_SetMenuItems( void ) {UI_SPLevelMenu_SetMenuItems249,6642
static void UI_SPLevelMenu_ResetDraw( void ) {UI_SPLevelMenu_ResetDraw352,9903
static void UI_SPLevelMenu_ResetAction( qboolean result ) {UI_SPLevelMenu_ResetAction359,10514
static void UI_SPLevelMenu_ResetEvent( void* ptr, int event )UI_SPLevelMenu_ResetEvent373,10773
static void UI_SPLevelMenu_LevelEvent( void* ptr, int notification ) {UI_SPLevelMenu_LevelEvent388,11041
static void UI_SPLevelMenu_LeftArrowEvent( void* ptr, int notification ) {UI_SPLevelMenu_LeftArrowEvent410,11621
static void UI_SPLevelMenu_RightArrowEvent( void* ptr, int notification ) {UI_SPLevelMenu_RightArrowEvent429,11929
static void UI_SPLevelMenu_PlayerEvent( void* ptr, int notification ) {UI_SPLevelMenu_PlayerEvent448,12234
static void UI_SPLevelMenu_AwardEvent( void* ptr, int notification ) {UI_SPLevelMenu_AwardEvent462,12455
static void UI_SPLevelMenu_NextEvent( void* ptr, int notification ) {UI_SPLevelMenu_NextEvent479,12774
static void UI_SPLevelMenu_BackEvent( void* ptr, int notification ) {UI_SPLevelMenu_BackEvent501,13127
static void UI_SPLevelMenu_CustomEvent( void* ptr, int notification ) {UI_SPLevelMenu_CustomEvent519,13391
#define LEVEL_DESC_LEFT_MARGIN	LEVEL_DESC_LEFT_MARGIN533,13615
static void UI_SPLevelMenu_MenuDraw( void ) {UI_SPLevelMenu_MenuDraw535,13652
void UI_SPLevelMenu_Cache( void ) {UI_SPLevelMenu_Cache671,17796
static void UI_SPLevelMenu_Init( void ) {UI_SPLevelMenu_Init713,19523
void UI_SPLevelMenu( void ) {UI_SPLevelMenu938,29305
void UI_SPLevelMenu_f( void ) {UI_SPLevelMenu_f994,30347
void UI_SPLevelMenu_ReInit( void ) {UI_SPLevelMenu_ReInit1006,30520

q3_ui/ui_spskill.c,2174
#define ART_FRAME	ART_FRAME34,1191
#define ART_BACK	ART_BACK35,1234
#define ART_BACK_FOCUS	ART_BACK_FOCUS36,1277
#define ART_FIGHT	ART_FIGHT37,1325
#define ART_FIGHT_FOCUS	ART_FIGHT_FOCUS38,1366
#define ART_MAP_COMPLETE1	ART_MAP_COMPLETE139,1412
#define ART_MAP_COMPLETE2	ART_MAP_COMPLETE240,1467
#define ART_MAP_COMPLETE3	ART_MAP_COMPLETE341,1522
#define ART_MAP_COMPLETE4	ART_MAP_COMPLETE442,1577
#define ART_MAP_COMPLETE5	ART_MAP_COMPLETE543,1632
#define ID_BABY	ID_BABY45,1688
#define ID_EASY	ID_EASY46,1712
#define ID_MEDIUM	ID_MEDIUM47,1736
#define ID_HARD	ID_HARD48,1761
#define ID_NIGHTMARE	ID_NIGHTMARE49,1785
#define ID_BACK	ID_BACK50,1812
#define ID_FIGHT	ID_FIGHT51,1836
	menuframework_s	menu;menu55,1879
	menubitmap_s	art_frame;art_frame57,1903
	menutext_s		art_banner;art_banner58,1928
	menutext_s		item_baby;item_baby60,1954
	menutext_s		item_easy;item_easy61,1978
	menutext_s		item_medium;item_medium62,2002
	menutext_s		item_hard;item_hard63,2028
	menutext_s		item_nightmare;item_nightmare64,2052
	menubitmap_s	art_skillPic;art_skillPic66,2082
	menubitmap_s	item_back;item_back67,2110
	menubitmap_s	item_fight;item_fight68,2135
	const char		*arenaInfo;arenaInfo70,2162
	qhandle_t		skillpics[5];skillpics71,2187
	sfxHandle_t		nightmareSound;nightmareSound72,2213
	sfxHandle_t		silenceSound;silenceSound73,2243
} skillMenuInfo_t;skillMenuInfo_t74,2271
static skillMenuInfo_t	skillMenuInfo;skillMenuInfo76,2291
static void SetSkillColor( int skill, vec4_t color ) {SetSkillColor79,2331
static void UI_SPSkillMenu_SkillEvent( void *ptr, int notification ) {UI_SPSkillMenu_SkillEvent107,2801
static void UI_SPSkillMenu_FightEvent( void *ptr, int notification ) {UI_SPSkillMenu_FightEvent137,3492
static void UI_SPSkillMenu_BackEvent( void* ptr, int notification ) {UI_SPSkillMenu_BackEvent150,3726
static sfxHandle_t UI_SPSkillMenu_Key( int key ) {UI_SPSkillMenu_Key165,3998
void UI_SPSkillMenu_Cache( void ) {UI_SPSkillMenu_Cache178,4288
static void UI_SPSkillMenu_Init( void ) {UI_SPSkillMenu_Init200,5186
void UI_SPSkillMenu( const char *arenaInfo ) {UI_SPSkillMenu324,11049

renderer/tr_animation.c,1794
void R_AddAnimSurfaces( trRefEntity_t *ent ) {R_AddAnimSurfaces41,1301
void RB_SurfaceAnim( md4Surface_t *surface ) {RB_SurfaceAnim64,1905
static int R_MDRCullModel( mdrHeader_t *header, trRefEntity_t *ent ) {R_MDRCullModel181,5393
int R_MDRComputeFogNum( mdrHeader_t *header, trRefEntity_t *ent ) {R_MDRComputeFogNum274,7746
void R_MDRAddAnimSurfaces( trRefEntity_t *ent ) {R_MDRAddAnimSurfaces317,8708
void RB_MDRSurfaceAnim( md4Surface_t *surface )RB_MDRSurfaceAnim447,12115
#define MC_MASK_X MC_MASK_X561,15319
#define MC_MASK_Y MC_MASK_Y562,15358
#define MC_MASK_Z MC_MASK_Z563,15397
#define MC_MASK_VECT MC_MASK_VECT564,15436
#define MC_SCALE_VECT MC_SCALE_VECT566,15482
#define MC_POS_X MC_POS_X568,15545
#define MC_SHIFT_X MC_SHIFT_X569,15566
#define MC_POS_Y MC_POS_Y571,15590
#define MC_SHIFT_Y MC_SHIFT_Y572,15627
#define MC_POS_Z MC_POS_Z574,15667
#define MC_SHIFT_Z MC_SHIFT_Z575,15714
#define MC_POS_V11 MC_POS_V11577,15764
#define MC_SHIFT_V11 MC_SHIFT_V11578,15823
#define MC_POS_V12 MC_POS_V12580,15885
#define MC_SHIFT_V12 MC_SHIFT_V12581,15957
#define MC_POS_V13 MC_POS_V13583,16032
#define MC_SHIFT_V13 MC_SHIFT_V13584,16106
#define MC_POS_V21 MC_POS_V21586,16183
#define MC_SHIFT_V21 MC_SHIFT_V21587,16257
#define MC_POS_V22 MC_POS_V22589,16334
#define MC_SHIFT_V22 MC_SHIFT_V22590,16408
#define MC_POS_V23 MC_POS_V23592,16485
#define MC_SHIFT_V23 MC_SHIFT_V23593,16559
#define MC_POS_V31 MC_POS_V31595,16636
#define MC_SHIFT_V31 MC_SHIFT_V31596,16710
#define MC_POS_V32 MC_POS_V32598,16787
#define MC_SHIFT_V32 MC_SHIFT_V32599,16861
#define MC_POS_V33 MC_POS_V33601,16938
#define MC_SHIFT_V33 MC_SHIFT_V33602,17012
void MC_UnCompress(float mat[3][4],const unsigned char * comp)MC_UnCompress604,17089

renderer/tr_image_bmp.c,767
	char id[2];id27,1015
	unsigned fileSize;fileSize28,1028
	unsigned reserved0;reserved029,1048
	unsigned bitmapDataOffset;bitmapDataOffset30,1069
	unsigned bitmapHeaderSize;bitmapHeaderSize31,1097
	unsigned width;width32,1125
	unsigned height;height33,1142
	unsigned short planes;planes34,1160
	unsigned short bitsPerPixel;bitsPerPixel35,1184
	unsigned compression;compression36,1214
	unsigned bitmapDataSize;bitmapDataSize37,1237
	unsigned hRes;hRes38,1263
	unsigned vRes;vRes39,1279
	unsigned colors;colors40,1295
	unsigned importantColors;importantColors41,1313
	unsigned char palette[256][4];palette42,1340
} BMPHeader_t;BMPHeader_t43,1372
void R_LoadBMP( const char *name, byte **pic, int *width, int *height )R_LoadBMP45,1388

renderer/tr_mesh.c,390
static float ProjectRadius( float r, vec3_t location )ProjectRadius26,1037
static int R_CullModel( md3Header_t *header, trRefEntity_t *ent ) {R_CullModel78,2324
int R_ComputeLOD( trRefEntity_t *ent ) {R_ComputeLOD166,4376
int R_ComputeFogNum( md3Header_t *header, trRefEntity_t *ent ) {R_ComputeFogNum251,6123
void R_AddMD3Surfaces( trRefEntity_t *ent ) {R_AddMD3Surfaces288,6908

renderer/tr_types.h,5967
#define __TR_TYPES_H__TR_TYPES_H24,998
#define	MAX_DLIGHTS	MAX_DLIGHTS27,1021
#define	MAX_ENTITIES	MAX_ENTITIES28,1108
#define	RF_MINLIGHT	RF_MINLIGHT31,1215
#define	RF_THIRD_PERSON	RF_THIRD_PERSON32,1295
#define	RF_FIRST_PERSON	RF_FIRST_PERSON33,1399
#define	RF_DEPTHHACK	RF_DEPTHHACK34,1491
#define RF_CROSSHAIR	RF_CROSSHAIR36,1553
#define	RF_NOSHADOW	RF_NOSHADOW41,1836
#define RF_LIGHTING_ORIGIN	RF_LIGHTING_ORIGIN43,1895
#define	RF_SHADOW_PLANE	RF_SHADOW_PLANE48,2168
#define	RF_WRAP_FRAMES	RF_WRAP_FRAMES49,2231
#define RDF_NOWORLDMODEL	RDF_NOWORLDMODEL52,2341
#define RDF_HYPERSPACE	RDF_HYPERSPACE53,2414
	vec3_t		xyz;xyz56,2488
	float		st[2];st57,2502
	byte		modulate[4];modulate58,2517
} polyVert_t;polyVert_t59,2537
typedef struct poly_s {poly_s61,2552
	qhandle_t			hShader;hShader62,2576
	int					numVerts;numVerts63,2598
	polyVert_t			*verts;verts64,2617
} poly_t;poly_t65,2639
	RT_MODEL,RT_MODEL68,2665
	RT_POLY,RT_POLY69,2676
	RT_SPRITE,RT_SPRITE70,2686
	RT_BEAM,RT_BEAM71,2698
	RT_RAIL_CORE,RT_RAIL_CORE72,2708
	RT_RAIL_RINGS,RT_RAIL_RINGS73,2723
	RT_LIGHTNING,RT_LIGHTNING74,2739
	RT_PORTALSURFACE,		// doesn't draw anything, just info for portalsRT_PORTALSURFACE75,2754
	RT_MAX_REF_ENTITY_TYPERT_MAX_REF_ENTITY_TYPE77,2823
} refEntityType_t;refEntityType_t78,2847
	refEntityType_t	reType;reType81,2884
	int			renderfx;renderfx82,2909
	qhandle_t	hModel;				// opaque type outside refreshhModel84,2927
	vec3_t		lightingOrigin;		// so multi-part models can be lit identically (RF_LIGHTING_ORIGIN)lightingOrigin87,3002
	float		shadowPlane;		// projection shadows go here, stencils go slightly lowershadowPlane88,3096
	vec3_t		axis[3];			// rotation vectorsaxis90,3177
	qboolean	nonNormalizedAxes;	// axis are not normalized, i.e. they have scalenonNormalizedAxes91,3217
	float		origin[3];			// also used as MODEL_BEAM's "from"origin92,3295
	int			frame;				// also used as MODEL_BEAM's diameterframe93,3352
	float		oldorigin[3];		// also used as MODEL_BEAM's "to"oldorigin96,3450
	int			oldframe;oldframe97,3507
	float		backlerp;			// 0.0 = current, 1.0 = oldbacklerp98,3524
	int			skinNum;			// inline skin indexskinNum101,3587
	qhandle_t	customSkin;			// NULL for default skincustomSkin102,3626
	qhandle_t	customShader;		// use one image for the entire thingcustomShader103,3676
	byte		shaderRGBA[4];		// colors used by rgbgen entity shadersshaderRGBA106,3750
	float		shaderTexCoord[2];	// texture coordinates used by tcMod entity modifiersshaderTexCoord107,3813
	float		shaderTime;			// subtracted from refdef time to control effect start timesshaderTime108,3894
	float		radius;radius111,4007
	float		rotation;rotation112,4023
} refEntity_t;refEntity_t113,4041
#define	MAX_RENDER_STRINGS	MAX_RENDER_STRINGS116,4058
#define	MAX_RENDER_STRING_LENGTH	MAX_RENDER_STRING_LENGTH117,4089
	int			x, y, width, height;x120,4143
	int			x, y, width, height;y120,4143
	int			x, y, width, height;width120,4143
	int			x, y, width, height;height120,4143
	float		fov_x, fov_y;fov_x121,4171
	float		fov_x, fov_y;fov_y121,4171
	vec3_t		vieworg;vieworg122,4193
	vec3_t		viewaxis[3];		// transformation matrixviewaxis123,4211
	int			time;time126,4346
	int			rdflags;			// RDF_NOWORLDMODEL, etcrdflags128,4360
	byte		areamask[MAX_MAP_AREA_BYTES];areamask131,4470
	char		text[MAX_RENDER_STRINGS][MAX_RENDER_STRING_LENGTH];text134,4550
} refdef_t;refdef_t135,4609
	STEREO_CENTER,STEREO_CENTER139,4638
	STEREO_LEFT,STEREO_LEFT140,4654
	STEREO_RIGHTSTEREO_RIGHT141,4668
} stereoFrame_t;stereoFrame_t142,4682
	TC_NONE,TC_NONE153,4887
	TC_S3TC,  // this is for the GL_S3_s3tc extension.TC_S3TC154,4897
	TC_S3TC_ARB  // this is for the GL_EXT_texture_compression_s3tc extension.TC_S3TC_ARB155,4949
} textureCompression_t;textureCompression_t156,5025
	GLDRV_ICD,					// driver is integrated with window systemGLDRV_ICD159,5065
	GLDRV_STANDALONE,			// driver is a non-3Dfx standalone driverGLDRV_STANDALONE164,5299
	GLDRV_VOODOO				// driver is a 3Dfx standalone driverGLDRV_VOODOO165,5362
} glDriverType_t;glDriverType_t166,5417
	GLHW_GENERIC,			// where everthing works the way it shouldGLHW_GENERIC169,5451
	GLHW_3DFX_2D3D,			// Voodoo Banshee or Voodoo3, relevant since if this isGLHW_3DFX_2D3D170,5511
	GLHW_RIVA128,			// where you can't interpolate alphaGLHW_RIVA128173,5677
	GLHW_RAGEPRO,			// where you can't modulate alpha on alpha texturesGLHW_RAGEPRO174,5731
	GLHW_PERMEDIA2			// where you don't have src*dstGLHW_PERMEDIA2175,5800
} glHardwareType_t;glHardwareType_t176,5850
	char					renderer_string[MAX_STRING_CHARS];renderer_string179,5888
	char					vendor_string[MAX_STRING_CHARS];vendor_string180,5933
	char					version_string[MAX_STRING_CHARS];version_string181,5976
	char					extensions_string[BIG_INFO_STRING];extensions_string182,6020
	int						maxTextureSize;			// queried from GLmaxTextureSize184,6067
	int						numTextureUnits;		// multitexture abilitynumTextureUnits185,6114
	int						colorBits, depthBits, stencilBits;colorBits187,6167
	int						colorBits, depthBits, stencilBits;depthBits187,6167
	int						colorBits, depthBits, stencilBits;stencilBits187,6167
	glDriverType_t			driverType;driverType189,6213
	glHardwareType_t		hardwareType;hardwareType190,6243
	qboolean				deviceSupportsGamma;deviceSupportsGamma192,6277
	textureCompression_t	textureCompression;textureCompression193,6311
	qboolean				textureEnvAddAvailable;textureEnvAddAvailable194,6353
	int						vidWidth, vidHeight;vidWidth196,6391
	int						vidWidth, vidHeight;vidHeight196,6391
	float					windowAspect;windowAspect200,6627
	int						displayFrequency;displayFrequency202,6653
	qboolean				isFullscreen;isFullscreen207,6848
	qboolean				stereoEnabled;stereoEnabled208,6875
	qboolean				smpActive;		// dual processorsmpActive209,6903
} glconfig_t;glconfig_t210,6946

renderer/tr_shade_calc.c,3102
#define	WAVEVALUE(WAVEVALUE30,1085
static float *TableForFunc( genFunc_t func ) TableForFunc32,1265
static float EvalWaveForm( const waveForm_t *wf ) EvalWaveForm60,1833
static float EvalWaveFormClamped( const waveForm_t *wf )EvalWaveFormClamped69,2020
void RB_CalcStretchTexCoords( const waveForm_t *wf, float *st )RB_CalcStretchTexCoords89,2237
void RB_CalcDeformVertexes( deformStage_t *ds )RB_CalcDeformVertexes121,2816
void RB_CalcDeformNormals( deformStage_t *ds ) {RB_CalcDeformNormals172,3910
void RB_CalcBulgeVertexes( deformStage_t *ds ) {RB_CalcBulgeVertexes204,4856
void RB_CalcMoveVertexes( deformStage_t *ds ) {RB_CalcMoveVertexes235,5610
void DeformText( const char *text ) {DeformText265,6199
static void GlobalVectorToLocal( const vec3_t in, vec3_t out ) {GlobalVectorToLocal338,7629
static void AutospriteDeform( void ) {AutospriteDeform352,8014
int edgeVerts[6][2] = {edgeVerts423,9945
static void Autosprite2Deform( void ) {Autosprite2Deform432,10038
void RB_DeformTessGeometry( void ) {RB_DeformTessGeometry541,12677
void RB_CalcColorFromEntity( unsigned char *dstColors )RB_CalcColorFromEntity598,13797
void RB_CalcColorFromOneMinusEntity( unsigned char *dstColors )RB_CalcColorFromOneMinusEntity618,14124
void RB_CalcAlphaFromEntity( unsigned char *dstColors )RB_CalcAlphaFromEntity644,14788
void RB_CalcAlphaFromOneMinusEntity( unsigned char *dstColors )RB_CalcAlphaFromOneMinusEntity662,15077
void RB_CalcWaveColor( const waveForm_t *wf, unsigned char *dstColors )RB_CalcWaveColor680,15367
void RB_CalcWaveAlpha( const waveForm_t *wf, unsigned char *dstColors )RB_CalcWaveAlpha715,16007
void RB_CalcModulateColorsByFog( unsigned char *colors ) {RB_CalcModulateColorsByFog734,16288
void RB_CalcModulateAlphasByFog( unsigned char *colors ) {RB_CalcModulateAlphasByFog754,16811
void RB_CalcModulateRGBAsByFog( unsigned char *colors ) {RB_CalcModulateRGBAsByFog772,17297
void RB_CalcFogTexCoords( float *st ) {RB_CalcFogTexCoords808,18183
void RB_CalcEnvironmentTexCoords( float *st ) RB_CalcEnvironmentTexCoords891,20677
void RB_CalcTurbulentTexCoords( const waveForm_t *wf, float *st )RB_CalcTurbulentTexCoords920,21287
void RB_CalcScaleTexCoords( const float scale[2], float *st )RB_CalcScaleTexCoords940,21869
void RB_CalcScrollTexCoords( const float scrollSpeed[2], float *st )RB_CalcScrollTexCoords954,22076
void RB_CalcTransformTexCoords( const texModInfo_t *tmi, float *st  )RB_CalcTransformTexCoords978,22704
void RB_CalcRotateTexCoords( float degsPerSecond, float *st )RB_CalcRotateTexCoords995,23070
long myftol( float f ) {myftol1027,23774
vec3_t lightOrigin = { -960, 1980, 96 };		// FIXME: track dynamicallylightOrigin1041,23980
void RB_CalcSpecularAlpha( unsigned char *alphas ) {RB_CalcSpecularAlpha1043,24051
static void RB_CalcDiffuseColor_altivec( unsigned char *colors )RB_CalcDiffuseColor_altivec1101,25282
static void RB_CalcDiffuseColor_scalar( unsigned char *colors )RB_CalcDiffuseColor_scalar1171,28113
void RB_CalcDiffuseColor( unsigned char *colors )RB_CalcDiffuseColor1220,29237

renderer/tr_world.c,1237
static qboolean	R_CullTriSurf( srfTriangles_t *cv ) {R_CullTriSurf34,1147
static qboolean	R_CullGrid( srfGridMesh_t *cv ) {R_CullGrid53,1472
static qboolean	R_CullSurface( surfaceType_t *surface, shader_t *shader ) {R_CullSurface114,2613
static int R_DlightFace( srfSurfaceFace_t *face, int dlightBits ) {R_DlightFace163,3612
static int R_DlightGrid( srfGridMesh_t *grid, int dlightBits ) {R_DlightGrid188,4177
static int R_DlightTrisurf( srfTriangles_t *surf, int dlightBits ) {R_DlightTrisurf217,4967
static int R_DlightSurface( msurface_t *surf, int dlightBits ) {R_DlightSurface259,6099
static void R_AddWorldSurface( msurface_t *surf, int dlightBits ) {R_AddWorldSurface284,6685
void R_AddBrushModelSurfaces ( trRefEntity_t *ent ) {R_AddBrushModelSurfaces319,7425
static void R_RecursiveWorldNode( mnode_t *node, int planeBits, int dlightBits ) {R_RecursiveWorldNode356,8072
static mnode_t *R_PointInLeaf( const vec3_t p ) {R_PointInLeaf501,11503
static const byte *R_ClusterPVS (int cluster) {R_ClusterPVS532,11991
qboolean R_inPVS( const vec3_t p1, const vec3_t p2 ) {R_inPVS545,12268
static void R_MarkLeaves (void) {R_MarkLeaves567,12670
void R_AddWorldSurfaces (void) {R_AddWorldSurfaces645,14428

renderer/tr_image_png.c,4419
#define INT_MAX INT_MAX28,1024
#define Q3IMAGE_BYTESPERPIXEL Q3IMAGE_BYTESPERPIXEL41,1154
#define PNG_Signature PNG_Signature52,1325
#define PNG_Signature_Size PNG_Signature_Size53,1379
struct PNG_ChunkHeaderPNG_ChunkHeader61,1571
	uint32_t Length;Length63,1596
	uint32_t Type;Type64,1614
#define PNG_ChunkHeader_Size PNG_ChunkHeader_Size67,1634
typedef uint32_t PNG_ChunkCRC;PNG_ChunkCRC69,1668
#define PNG_ChunkCRC_Size PNG_ChunkCRC_Size71,1700
#define MAKE_CHUNKTYPE(MAKE_CHUNKTYPE78,1804
#define PNG_ChunkType_IHDR PNG_ChunkType_IHDR80,1886
#define PNG_ChunkType_PLTE PNG_ChunkType_PLTE81,1948
#define PNG_ChunkType_IDAT PNG_ChunkType_IDAT82,2010
#define PNG_ChunkType_IEND PNG_ChunkType_IEND83,2072
#define PNG_ChunkType_tRNS PNG_ChunkType_tRNS84,2134
struct PNG_Chunk_IHDRPNG_Chunk_IHDR90,2278
	uint32_t Width;Width92,2302
	uint32_t Height;Height93,2319
	uint8_t  BitDepth;BitDepth94,2337
	uint8_t  ColourType;ColourType95,2357
	uint8_t  CompressionMethod;CompressionMethod96,2379
	uint8_t  FilterMethod;FilterMethod97,2408
	uint8_t  InterlaceMethod;InterlaceMethod98,2432
#define PNG_Chunk_IHDR_Size PNG_Chunk_IHDR_Size101,2463
#define PNG_ColourType_Grey PNG_ColourType_Grey107,2521
#define PNG_ColourType_True PNG_ColourType_True108,2558
#define PNG_ColourType_Indexed PNG_ColourType_Indexed109,2595
#define PNG_ColourType_GreyAlpha PNG_ColourType_GreyAlpha110,2632
#define PNG_ColourType_TrueAlpha PNG_ColourType_TrueAlpha111,2669
#define PNG_NumColourComponents_Grey PNG_NumColourComponents_Grey123,2898
#define PNG_NumColourComponents_True PNG_NumColourComponents_True124,2944
#define PNG_NumColourComponents_Indexed PNG_NumColourComponents_Indexed125,2990
#define PNG_NumColourComponents_GreyAlpha PNG_NumColourComponents_GreyAlpha126,3036
#define PNG_NumColourComponents_TrueAlpha PNG_NumColourComponents_TrueAlpha127,3082
#define PNG_BitDepth_1 PNG_BitDepth_1134,3210
#define PNG_BitDepth_2 PNG_BitDepth_2135,3239
#define PNG_BitDepth_4 PNG_BitDepth_4136,3268
#define PNG_BitDepth_8 PNG_BitDepth_8137,3297
#define PNG_BitDepth_16 PNG_BitDepth_16138,3326
#define PNG_CompressionMethod_0 PNG_CompressionMethod_0144,3418
#define PNG_FilterMethod_0 PNG_FilterMethod_0150,3522
#define PNG_FilterType_None PNG_FilterType_None156,3606
#define PNG_FilterType_Sub PNG_FilterType_Sub157,3641
#define PNG_FilterType_Up PNG_FilterType_Up158,3676
#define PNG_FilterType_Average PNG_FilterType_Average159,3711
#define PNG_FilterType_Paeth PNG_FilterType_Paeth160,3746
#define PNG_InterlaceMethod_NonInterlaced PNG_InterlaceMethod_NonInterlaced168,3875
#define PNG_InterlaceMethod_Interlaced PNG_InterlaceMethod_Interlaced169,3921
#define PNG_Adam7_NumPasses PNG_Adam7_NumPasses175,4022
struct PNG_ZlibHeaderPNG_ZlibHeader181,4112
	uint8_t CompressionMethod;CompressionMethod183,4136
	uint8_t Flags;Flags184,4164
#define PNG_ZlibHeader_Size PNG_ZlibHeader_Size187,4184
#define PNG_ZlibCheckValue_Size PNG_ZlibCheckValue_Size193,4266
struct BufferedFileBufferedFile203,4406
	byte *Buffer;Buffer205,4428
	int   Length;Length206,4443
	byte *Ptr;Ptr207,4458
	int   BytesLeft;BytesLeft208,4470
static struct BufferedFile *ReadBufferedFile(const char *name)ReadBufferedFile215,4531
static void CloseBufferedFile(struct BufferedFile *BF)CloseBufferedFile283,5381
static void *BufferedFileRead(struct BufferedFile *BF, unsigned Length)BufferedFileRead300,5577
static qboolean BufferedFileRewind(struct BufferedFile *BF, unsigned Offset)BufferedFileRewind342,6052
static qboolean BufferedFileSkip(struct BufferedFile *BF, unsigned Offset)BufferedFileSkip396,6764
static qboolean FindChunk(struct BufferedFile *BF, uint32_t ChunkType)FindChunk430,7169
static uint32_t DecompressIDATs(struct BufferedFile *BF, uint8_t **Buffer)DecompressIDATs507,8122
static uint8_t PredictPaeth(uint8_t a, uint8_t b, uint8_t c)PredictPaeth782,12485
static qboolean UnfilterImage(uint8_t  *DecompressedData, UnfilterImage822,12926
static qboolean ConvertPixel(struct PNG_Chunk_IHDR *IHDR,ConvertPixel999,15743
static qboolean DecodeImageNonInterlaced(struct PNG_Chunk_IHDR *IHDR,DecodeImageNonInterlaced1258,20278
static qboolean DecodeImageInterlaced(struct PNG_Chunk_IHDR *IHDR,DecodeImageInterlaced1535,24817
void R_LoadPNG(const char *name, byte **pic, int *width, int *height)R_LoadPNG1906,31527

renderer/tr_curve.c,1221
static void LerpDrawVert( drawVert_t *a, drawVert_t *b, drawVert_t *out ) {LerpDrawVert46,1457
static void Transpose( int width, int height, drawVert_t ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE] ) {Transpose68,2138
static void MakeMeshNormals( int width, int height, drawVert_t ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE] ) {MakeMeshNormals112,2982
static void InvertCtrl( int width, int height, drawVert_t ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE] ) {InvertCtrl222,5391
static void InvertErrorTable( float errorTable[2][MAX_GRID_SIZE], int width, int height ) {InvertErrorTable241,5751
static void PutPointsOnCurve( drawVert_t	ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE], PutPointsOnCurve262,6167
srfGridMesh_t *R_CreateSurfaceGridMesh(int width, int height,R_CreateSurfaceGridMesh290,6860
void R_FreeSurfaceGridMesh( srfGridMesh_t *grid ) {R_FreeSurfaceGridMesh349,8664
srfGridMesh_t *R_SubdividePatchToGrid( int width, int height,R_SubdividePatchToGrid360,8863
srfGridMesh_t *R_GridInsertColumn( srfGridMesh_t *grid, int column, int row, vec3_t point, float loderror ) {R_GridInsertColumn525,12962
srfGridMesh_t *R_GridInsertRow( srfGridMesh_t *grid, int row, int column, vec3_t point, float loderror ) {R_GridInsertRow579,14444

renderer/qgl.h,15220
#define __QGL_H____QGL_H__27,1008
#define qglAccum qglAccum45,1535
#define qglAlphaFunc qglAlphaFunc46,1560
#define qglAreTexturesResident qglAreTexturesResident47,1593
#define qglArrayElement qglArrayElement48,1646
#define qglBegin qglBegin49,1685
#define qglBindTexture qglBindTexture50,1710
#define qglBitmap qglBitmap51,1747
#define qglBlendFunc qglBlendFunc52,1774
#define qglCallList qglCallList53,1807
#define qglCallLists qglCallLists54,1838
#define qglClear qglClear55,1871
#define qglClearAccum qglClearAccum56,1896
#define qglClearColor qglClearColor57,1931
#define qglClearDepth qglClearDepth58,1966
#define qglClearIndex qglClearIndex59,2001
#define qglClearStencil qglClearStencil60,2036
#define qglClipPlane qglClipPlane61,2075
#define qglColor3b qglColor3b62,2108
#define qglColor3bv qglColor3bv63,2137
#define qglColor3d qglColor3d64,2168
#define qglColor3dv qglColor3dv65,2197
#define qglColor3f qglColor3f66,2228
#define qglColor3fv qglColor3fv67,2257
#define qglColor3i qglColor3i68,2288
#define qglColor3iv qglColor3iv69,2317
#define qglColor3s qglColor3s70,2348
#define qglColor3sv qglColor3sv71,2377
#define qglColor3ub qglColor3ub72,2408
#define qglColor3ubv qglColor3ubv73,2439
#define qglColor3ui qglColor3ui74,2472
#define qglColor3uiv qglColor3uiv75,2503
#define qglColor3us qglColor3us76,2536
#define qglColor3usv qglColor3usv77,2567
#define qglColor4b qglColor4b78,2600
#define qglColor4bv qglColor4bv79,2629
#define qglColor4d qglColor4d80,2660
#define qglColor4dv qglColor4dv81,2689
#define qglColor4f qglColor4f82,2720
#define qglColor4fv qglColor4fv83,2749
#define qglColor4i qglColor4i84,2780
#define qglColor4iv qglColor4iv85,2809
#define qglColor4s qglColor4s86,2840
#define qglColor4sv qglColor4sv87,2869
#define qglColor4ub qglColor4ub88,2900
#define qglColor4ubv qglColor4ubv89,2931
#define qglColor4ui qglColor4ui90,2964
#define qglColor4uiv qglColor4uiv91,2995
#define qglColor4us qglColor4us92,3028
#define qglColor4usv qglColor4usv93,3059
#define qglColorMask qglColorMask94,3092
#define qglColorMaterial qglColorMaterial95,3125
#define qglColorPointer qglColorPointer96,3166
#define qglCopyPixels qglCopyPixels97,3205
#define qglCopyTexImage1D qglCopyTexImage1D98,3240
#define qglCopyTexImage2D qglCopyTexImage2D99,3283
#define qglCopyTexSubImage1D qglCopyTexSubImage1D100,3326
#define qglCopyTexSubImage2D qglCopyTexSubImage2D101,3375
#define qglCullFace qglCullFace102,3424
#define qglDeleteLists qglDeleteLists103,3455
#define qglDeleteTextures qglDeleteTextures104,3492
#define qglDepthFunc qglDepthFunc105,3535
#define qglDepthMask qglDepthMask106,3568
#define qglDepthRange qglDepthRange107,3601
#define qglDisable qglDisable108,3636
#define qglDisableClientState qglDisableClientState109,3665
#define qglDrawArrays qglDrawArrays110,3716
#define qglDrawBuffer qglDrawBuffer111,3751
#define qglDrawElements qglDrawElements112,3786
#define qglDrawPixels qglDrawPixels113,3825
#define qglEdgeFlag qglEdgeFlag114,3860
#define qglEdgeFlagPointer qglEdgeFlagPointer115,3891
#define qglEdgeFlagv qglEdgeFlagv116,3936
#define qglEnable qglEnable117,3969
#define qglEnableClientState qglEnableClientState118,3996
#define qglEnd qglEnd119,4045
#define qglEndList qglEndList120,4066
#define qglEvalCoord1d qglEvalCoord1d121,4095
#define qglEvalCoord1dv qglEvalCoord1dv122,4132
#define qglEvalCoord1f qglEvalCoord1f123,4171
#define qglEvalCoord1fv qglEvalCoord1fv124,4208
#define qglEvalCoord2d qglEvalCoord2d125,4247
#define qglEvalCoord2dv qglEvalCoord2dv126,4284
#define qglEvalCoord2f qglEvalCoord2f127,4323
#define qglEvalCoord2fv qglEvalCoord2fv128,4360
#define qglEvalMesh1 qglEvalMesh1129,4399
#define qglEvalMesh2 qglEvalMesh2130,4432
#define qglEvalPoint1 qglEvalPoint1131,4465
#define qglEvalPoint2 qglEvalPoint2132,4500
#define qglFeedbackBuffer qglFeedbackBuffer133,4535
#define qglFinish qglFinish134,4578
#define qglFlush qglFlush135,4605
#define qglFogf qglFogf136,4630
#define qglFogfv qglFogfv137,4653
#define qglFogi qglFogi138,4678
#define qglFogiv qglFogiv139,4701
#define qglFrontFace qglFrontFace140,4726
#define qglFrustum qglFrustum141,4759
#define qglGenLists qglGenLists142,4788
#define qglGenTextures qglGenTextures143,4819
#define qglGetBooleanv qglGetBooleanv144,4856
#define qglGetClipPlane qglGetClipPlane145,4893
#define qglGetDoublev qglGetDoublev146,4932
#define qglGetError qglGetError147,4967
#define qglGetFloatv qglGetFloatv148,4998
#define qglGetIntegerv qglGetIntegerv149,5031
#define qglGetLightfv qglGetLightfv150,5068
#define qglGetLightiv qglGetLightiv151,5103
#define qglGetMapdv qglGetMapdv152,5138
#define qglGetMapfv qglGetMapfv153,5169
#define qglGetMapiv qglGetMapiv154,5200
#define qglGetMaterialfv qglGetMaterialfv155,5231
#define qglGetMaterialiv qglGetMaterialiv156,5272
#define qglGetPixelMapfv qglGetPixelMapfv157,5313
#define qglGetPixelMapuiv qglGetPixelMapuiv158,5354
#define qglGetPixelMapusv qglGetPixelMapusv159,5397
#define qglGetPointerv qglGetPointerv160,5440
#define qglGetPolygonStipple qglGetPolygonStipple161,5477
#define qglGetString qglGetString162,5526
#define qglGetTexGendv qglGetTexGendv163,5559
#define qglGetTexGenfv qglGetTexGenfv164,5596
#define qglGetTexGeniv qglGetTexGeniv165,5633
#define qglGetTexImage qglGetTexImage166,5670
#define qglGetTexLevelParameterfv qglGetTexLevelParameterfv167,5707
#define qglGetTexLevelParameteriv qglGetTexLevelParameteriv168,5766
#define qglGetTexParameterfv qglGetTexParameterfv169,5825
#define qglGetTexParameteriv qglGetTexParameteriv170,5874
#define qglHint qglHint171,5923
#define qglIndexMask qglIndexMask172,5946
#define qglIndexPointer qglIndexPointer173,5979
#define qglIndexd qglIndexd174,6018
#define qglIndexdv qglIndexdv175,6045
#define qglIndexf qglIndexf176,6074
#define qglIndexfv qglIndexfv177,6101
#define qglIndexi qglIndexi178,6130
#define qglIndexiv qglIndexiv179,6157
#define qglIndexs qglIndexs180,6186
#define qglIndexsv qglIndexsv181,6213
#define qglIndexub qglIndexub182,6242
#define qglIndexubv qglIndexubv183,6271
#define qglInitNames qglInitNames184,6302
#define qglInterleavedArrays qglInterleavedArrays185,6335
#define qglIsEnabled qglIsEnabled186,6384
#define qglIsList qglIsList187,6417
#define qglIsTexture qglIsTexture188,6444
#define qglLightModelf qglLightModelf189,6477
#define qglLightModelfv qglLightModelfv190,6514
#define qglLightModeli qglLightModeli191,6553
#define qglLightModeliv qglLightModeliv192,6590
#define qglLightf qglLightf193,6629
#define qglLightfv qglLightfv194,6656
#define qglLighti qglLighti195,6685
#define qglLightiv qglLightiv196,6712
#define qglLineStipple qglLineStipple197,6741
#define qglLineWidth qglLineWidth198,6778
#define qglListBase qglListBase199,6811
#define qglLoadIdentity qglLoadIdentity200,6842
#define qglLoadMatrixd qglLoadMatrixd201,6881
#define qglLoadMatrixf qglLoadMatrixf202,6918
#define qglLoadName qglLoadName203,6955
#define qglLogicOp qglLogicOp204,6986
#define qglMap1d qglMap1d205,7015
#define qglMap1f qglMap1f206,7040
#define qglMap2d qglMap2d207,7065
#define qglMap2f qglMap2f208,7090
#define qglMapGrid1d qglMapGrid1d209,7115
#define qglMapGrid1f qglMapGrid1f210,7148
#define qglMapGrid2d qglMapGrid2d211,7181
#define qglMapGrid2f qglMapGrid2f212,7214
#define qglMaterialf qglMaterialf213,7247
#define qglMaterialfv qglMaterialfv214,7280
#define qglMateriali qglMateriali215,7315
#define qglMaterialiv qglMaterialiv216,7348
#define qglMatrixMode qglMatrixMode217,7383
#define qglMultMatrixd qglMultMatrixd218,7418
#define qglMultMatrixf qglMultMatrixf219,7455
#define qglNewList qglNewList220,7492
#define qglNormal3b qglNormal3b221,7521
#define qglNormal3bv qglNormal3bv222,7552
#define qglNormal3d qglNormal3d223,7585
#define qglNormal3dv qglNormal3dv224,7616
#define qglNormal3f qglNormal3f225,7649
#define qglNormal3fv qglNormal3fv226,7680
#define qglNormal3i qglNormal3i227,7713
#define qglNormal3iv qglNormal3iv228,7744
#define qglNormal3s qglNormal3s229,7777
#define qglNormal3sv qglNormal3sv230,7808
#define qglNormalPointer qglNormalPointer231,7841
#define qglOrtho qglOrtho232,7882
#define qglPassThrough qglPassThrough233,7907
#define qglPixelMapfv qglPixelMapfv234,7944
#define qglPixelMapuiv qglPixelMapuiv235,7979
#define qglPixelMapusv qglPixelMapusv236,8016
#define qglPixelStoref qglPixelStoref237,8053
#define qglPixelStorei qglPixelStorei238,8090
#define qglPixelTransferf qglPixelTransferf239,8127
#define qglPixelTransferi qglPixelTransferi240,8170
#define qglPixelZoom qglPixelZoom241,8213
#define qglPointSize qglPointSize242,8246
#define qglPolygonMode qglPolygonMode243,8279
#define qglPolygonOffset qglPolygonOffset244,8316
#define qglPolygonStipple qglPolygonStipple245,8357
#define qglPopAttrib qglPopAttrib246,8400
#define qglPopClientAttrib qglPopClientAttrib247,8433
#define qglPopMatrix qglPopMatrix248,8478
#define qglPopName qglPopName249,8511
#define qglPrioritizeTextures qglPrioritizeTextures250,8540
#define qglPushAttrib qglPushAttrib251,8591
#define qglPushClientAttrib qglPushClientAttrib252,8626
#define qglPushMatrix qglPushMatrix253,8673
#define qglPushName qglPushName254,8708
#define qglRasterPos2d qglRasterPos2d255,8739
#define qglRasterPos2dv qglRasterPos2dv256,8776
#define qglRasterPos2f qglRasterPos2f257,8815
#define qglRasterPos2fv qglRasterPos2fv258,8852
#define qglRasterPos2i qglRasterPos2i259,8891
#define qglRasterPos2iv qglRasterPos2iv260,8928
#define qglRasterPos2s qglRasterPos2s261,8967
#define qglRasterPos2sv qglRasterPos2sv262,9004
#define qglRasterPos3d qglRasterPos3d263,9043
#define qglRasterPos3dv qglRasterPos3dv264,9080
#define qglRasterPos3f qglRasterPos3f265,9119
#define qglRasterPos3fv qglRasterPos3fv266,9156
#define qglRasterPos3i qglRasterPos3i267,9195
#define qglRasterPos3iv qglRasterPos3iv268,9232
#define qglRasterPos3s qglRasterPos3s269,9271
#define qglRasterPos3sv qglRasterPos3sv270,9308
#define qglRasterPos4d qglRasterPos4d271,9347
#define qglRasterPos4dv qglRasterPos4dv272,9384
#define qglRasterPos4f qglRasterPos4f273,9423
#define qglRasterPos4fv qglRasterPos4fv274,9460
#define qglRasterPos4i qglRasterPos4i275,9499
#define qglRasterPos4iv qglRasterPos4iv276,9536
#define qglRasterPos4s qglRasterPos4s277,9575
#define qglRasterPos4sv qglRasterPos4sv278,9612
#define qglReadBuffer qglReadBuffer279,9651
#define qglReadPixels qglReadPixels280,9686
#define qglRectd qglRectd281,9721
#define qglRectdv qglRectdv282,9746
#define qglRectf qglRectf283,9773
#define qglRectfv qglRectfv284,9798
#define qglRecti qglRecti285,9825
#define qglRectiv qglRectiv286,9850
#define qglRects qglRects287,9877
#define qglRectsv qglRectsv288,9902
#define qglRenderMode qglRenderMode289,9929
#define qglRotated qglRotated290,9964
#define qglRotatef qglRotatef291,9993
#define qglScaled qglScaled292,10022
#define qglScalef qglScalef293,10049
#define qglScissor qglScissor294,10076
#define qglSelectBuffer qglSelectBuffer295,10105
#define qglShadeModel qglShadeModel296,10144
#define qglStencilFunc qglStencilFunc297,10179
#define qglStencilMask qglStencilMask298,10216
#define qglStencilOp qglStencilOp299,10253
#define qglTexCoord1d qglTexCoord1d300,10286
#define qglTexCoord1dv qglTexCoord1dv301,10321
#define qglTexCoord1f qglTexCoord1f302,10358
#define qglTexCoord1fv qglTexCoord1fv303,10393
#define qglTexCoord1i qglTexCoord1i304,10430
#define qglTexCoord1iv qglTexCoord1iv305,10465
#define qglTexCoord1s qglTexCoord1s306,10502
#define qglTexCoord1sv qglTexCoord1sv307,10537
#define qglTexCoord2d qglTexCoord2d308,10574
#define qglTexCoord2dv qglTexCoord2dv309,10609
#define qglTexCoord2f qglTexCoord2f310,10646
#define qglTexCoord2fv qglTexCoord2fv311,10681
#define qglTexCoord2i qglTexCoord2i312,10718
#define qglTexCoord2iv qglTexCoord2iv313,10753
#define qglTexCoord2s qglTexCoord2s314,10790
#define qglTexCoord2sv qglTexCoord2sv315,10825
#define qglTexCoord3d qglTexCoord3d316,10862
#define qglTexCoord3dv qglTexCoord3dv317,10897
#define qglTexCoord3f qglTexCoord3f318,10934
#define qglTexCoord3fv qglTexCoord3fv319,10969
#define qglTexCoord3i qglTexCoord3i320,11006
#define qglTexCoord3iv qglTexCoord3iv321,11041
#define qglTexCoord3s qglTexCoord3s322,11078
#define qglTexCoord3sv qglTexCoord3sv323,11113
#define qglTexCoord4d qglTexCoord4d324,11150
#define qglTexCoord4dv qglTexCoord4dv325,11185
#define qglTexCoord4f qglTexCoord4f326,11222
#define qglTexCoord4fv qglTexCoord4fv327,11257
#define qglTexCoord4i qglTexCoord4i328,11294
#define qglTexCoord4iv qglTexCoord4iv329,11329
#define qglTexCoord4s qglTexCoord4s330,11366
#define qglTexCoord4sv qglTexCoord4sv331,11401
#define qglTexCoordPointer qglTexCoordPointer332,11438
#define qglTexEnvf qglTexEnvf333,11483
#define qglTexEnvfv qglTexEnvfv334,11512
#define qglTexEnvi qglTexEnvi335,11543
#define qglTexEnviv qglTexEnviv336,11572
#define qglTexGend qglTexGend337,11603
#define qglTexGendv qglTexGendv338,11632
#define qglTexGenf qglTexGenf339,11663
#define qglTexGenfv qglTexGenfv340,11692
#define qglTexGeni qglTexGeni341,11723
#define qglTexGeniv qglTexGeniv342,11752
#define qglTexImage1D qglTexImage1D343,11783
#define qglTexImage2D qglTexImage2D344,11818
#define qglTexParameterf qglTexParameterf345,11853
#define qglTexParameterfv qglTexParameterfv346,11894
#define qglTexParameteri qglTexParameteri347,11937
#define qglTexParameteriv qglTexParameteriv348,11978
#define qglTexSubImage1D qglTexSubImage1D349,12021
#define qglTexSubImage2D qglTexSubImage2D350,12062
#define qglTranslated qglTranslated351,12103
#define qglTranslatef qglTranslatef352,12138
#define qglVertex2d qglVertex2d353,12173
#define qglVertex2dv qglVertex2dv354,12204
#define qglVertex2f qglVertex2f355,12237
#define qglVertex2fv qglVertex2fv356,12268
#define qglVertex2i qglVertex2i357,12301
#define qglVertex2iv qglVertex2iv358,12332
#define qglVertex2s qglVertex2s359,12365
#define qglVertex2sv qglVertex2sv360,12396
#define qglVertex3d qglVertex3d361,12429
#define qglVertex3dv qglVertex3dv362,12460
#define qglVertex3f qglVertex3f363,12493
#define qglVertex3fv qglVertex3fv364,12524
#define qglVertex3i qglVertex3i365,12557
#define qglVertex3iv qglVertex3iv366,12588
#define qglVertex3s qglVertex3s367,12621
#define qglVertex3sv qglVertex3sv368,12652
#define qglVertex4d qglVertex4d369,12685
#define qglVertex4dv qglVertex4dv370,12716
#define qglVertex4f qglVertex4f371,12749
#define qglVertex4fv qglVertex4fv372,12780
#define qglVertex4i qglVertex4i373,12813
#define qglVertex4iv qglVertex4iv374,12844
#define qglVertex4s qglVertex4s375,12877
#define qglVertex4sv qglVertex4sv376,12908
#define qglVertexPointer qglVertexPointer377,12941
#define qglViewport qglViewport378,12982

renderer/tr_surface.c,2323
void RB_CheckOverflow( int verts, int indexes ) {RB_CheckOverflow51,1482
void RB_AddQuadStampExt( vec3_t origin, vec3_t left, vec3_t up, byte *color, float s1, float t1, float s2, float t2 ) {RB_AddQuadStampExt75,2053
void RB_AddQuadStamp( vec3_t origin, vec3_t left, vec3_t up, byte *color ) {RB_AddQuadStamp147,4616
static void RB_SurfaceSprite( void ) {RB_SurfaceSprite156,4809
void RB_SurfacePolychain( srfPoly_t *p ) {RB_SurfacePolychain192,5791
void RB_SurfaceTriangles( srfTriangles_t *srf ) {RB_SurfaceTriangles226,6630
void RB_SurfaceBeam( void ) RB_SurfaceBeam287,8178
#define NUM_BEAM_SEGS NUM_BEAM_SEGS289,8209
static void DoRailCore( const vec3_t start, const vec3_t end, const vec3_t up, float len, float spanWidth )DoRailCore341,9633
static void DoRailDiscs( int numSegs, const vec3_t start, const vec3_t dir, const vec3_t right, const vec3_t up )DoRailDiscs394,11866
void RB_SurfaceRailRings( void ) {RB_SurfaceRailRings457,13612
void RB_SurfaceRailCore( void ) {RB_SurfaceRailCore487,14201
void RB_SurfaceLightningBolt( void ) {RB_SurfaceLightningBolt517,14851
static void VectorArrayNormalize(vec4_t *normals, unsigned int count)VectorArrayNormalize558,15820
static void LerpMeshVertexes_altivec(md3Surface_t *surf, float backlerp)LerpMeshVertexes_altivec614,17376
static void LerpMeshVertexes_scalar(md3Surface_t *surf, float backlerp)LerpMeshVertexes_scalar743,22093
static void LerpMeshVertexes(md3Surface_t *surf, float backlerp)LerpMeshVertexes841,25410
void RB_SurfaceMesh(md3Surface_t *surface) {RB_SurfaceMesh859,25766
void RB_SurfaceFace( srfSurfaceFace_t *surf ) {RB_SurfaceFace906,26850
static float	LodErrorForVolume( vec3_t local, float radius ) {LodErrorForVolume959,28163
void RB_SurfaceGrid( srfGridMesh_t *cv ) {RB_SurfaceGrid996,29088
void RB_SurfaceAxis( void ) {RB_SurfaceAxis1163,33005
void RB_SurfaceEntity( surfaceType_t *surfType ) {RB_SurfaceEntity1189,33550
void RB_SurfaceBad( surfaceType_t *surfType ) {RB_SurfaceBad1213,33958
void RB_SurfaceFlare(srfFlare_t *surf)RB_SurfaceFlare1217,34063
void RB_SurfaceDisplayList( srfDisplayList_t *surf ) {RB_SurfaceDisplayList1223,34206
void RB_SurfaceSkip( void *surf ) {RB_SurfaceSkip1229,34385
void (*rb_surfaceTable[SF_NUM_SURFACE_TYPES])( void *) = {rb_surfaceTable1233,34425

renderer/tr_scene.c,1230
int			r_firstSceneDrawSurf;r_firstSceneDrawSurf25,998
int			r_numdlights;r_numdlights27,1027
int			r_firstSceneDlight;r_firstSceneDlight28,1047
int			r_numentities;r_numentities30,1074
int			r_firstSceneEntity;r_firstSceneEntity31,1095
int			r_numpolys;r_numpolys33,1122
int			r_firstScenePoly;r_firstScenePoly34,1140
int			r_numpolyverts;r_numpolyverts36,1165
void R_ToggleSmpFrame( void ) {R_ToggleSmpFrame45,1255
void RE_ClearScene( void ) {RE_ClearScene77,1769
void R_AddPolygonSurfaces( void ) {R_AddPolygonSurfaces98,2212
void RE_AddPolyToScene( qhandle_t hShader, int numVerts, const polyVert_t *verts, int numPolys ) {RE_AddPolyToScene118,2664
void RE_AddRefEntityToScene( const refEntity_t *ent ) {RE_AddRefEntityToScene207,5135
void RE_AddDynamicLightToScene( const vec3_t org, float intensity, float r, float g, float b, int additive ) {RE_AddDynamicLightToScene231,5672
void RE_AddLightToScene( const vec3_t org, float intensity, float r, float g, float b ) {RE_AddLightToScene262,6350
void RE_AddAdditiveLightToScene( const vec3_t org, float intensity, float r, float g, float b ) {RE_AddAdditiveLightToScene272,6584
void RE_RenderScene( const refdef_t *fd ) {RE_RenderScene287,6962

renderer/tr_cmds.c,1408
volatile renderCommandList_t	*renderCommandList;renderCommandList24,997
volatile qboolean	renderThreadActive;renderThreadActive26,1047
void R_PerformanceCounters( void ) {R_PerformanceCounters34,1159
void R_InitCommandBuffers( void ) {R_InitCommandBuffers83,3184
void R_ShutdownCommandBuffers( void ) {R_ShutdownCommandBuffers101,3601
int	c_blockedOnRender;c_blockedOnRender114,3837
int	c_blockedOnMain;c_blockedOnMain115,3860
void R_IssueRenderCommands( qboolean runPerformanceCounters ) {R_IssueRenderCommands117,3882
void R_SyncRenderThread( void ) {R_SyncRenderThread174,5305
void *R_GetCommandBuffer( int bytes ) {R_GetCommandBuffer194,5615
void	R_AddDrawSurfCmd( drawSurf_t *drawSurfs, int numDrawSurfs ) {R_AddDrawSurfCmd220,6164
void	RE_SetColor( const float *rgba ) {RE_SetColor244,6580
void RE_StretchPic ( float x, float y, float w, float h, RE_StretchPic273,7038
#define MODE_RED_CYAN	MODE_RED_CYAN296,7502
#define MODE_RED_BLUE	MODE_RED_BLUE297,7526
#define MODE_RED_GREEN	MODE_RED_GREEN298,7550
#define MODE_MAX	MODE_MAX299,7575
void R_SetColorMode(GLboolean *rgba, stereoFrame_t stereoFrame, int colormode)R_SetColorMode301,7608
void RE_BeginFrame( stereoFrame_t stereoFrame ) {RE_BeginFrame337,8332
void RE_EndFrame( int *frontEndMsec, int *backEndMsec ) {RE_EndFrame511,12272
void RE_TakeVideoFrame( int width, int height,RE_TakeVideoFrame544,12888

renderer/tr_light.c,666
#define	DLIGHT_AT_RADIUS	DLIGHT_AT_RADIUS26,1012
#define	DLIGHT_MINIMUM_RADIUS	DLIGHT_MINIMUM_RADIUS29,1117
void R_TransformDlights( int count, dlight_t *dl, orientationr_t *or) {R_TransformDlights42,1434
void R_DlightBmodel( bmodel_t *bmodel ) {R_DlightBmodel61,1899
static void R_SetupEntityLightingGrid( trRefEntity_t *ent ) {R_SetupEntityLightingGrid126,3406
static void LogLight( trRefEntity_t *ent ) {LogLight250,6785
void R_SetupEntityLighting( const trRefdef_t *refdef, trRefEntity_t *ent ) {R_SetupEntityLighting282,7475
int R_LightForPoint( vec3_t point, vec3_t ambientLight, vec3_t directedLight, vec3_t lightDir )R_LightForPoint379,10273

renderer/tr_init.c,6719
glconfig_t  glConfig;glConfig26,1056
qboolean    textureFilterAnisotropic = qfalse;textureFilterAnisotropic27,1078
int         maxAnisotropy = 0;maxAnisotropy28,1125
float       displayAspect = 0.0f;displayAspect29,1156
glstate_t	glState;glState31,1191
cvar_t	*r_flareSize;r_flareSize35,1243
cvar_t	*r_flareFade;r_flareFade36,1264
cvar_t	*r_flareCoeff;r_flareCoeff37,1285
cvar_t	*r_railWidth;r_railWidth39,1308
cvar_t	*r_railCoreWidth;r_railCoreWidth40,1329
cvar_t	*r_railSegmentLength;r_railSegmentLength41,1354
cvar_t	*r_ignoreFastPath;r_ignoreFastPath43,1384
cvar_t	*r_verbose;r_verbose45,1411
cvar_t	*r_ignore;r_ignore46,1430
cvar_t	*r_displayRefresh;r_displayRefresh48,1449
cvar_t	*r_detailTextures;r_detailTextures50,1476
cvar_t	*r_znear;r_znear52,1503
cvar_t	*r_zproj;r_zproj53,1520
cvar_t	*r_stereoSeparation;r_stereoSeparation54,1537
cvar_t	*r_smp;r_smp56,1566
cvar_t	*r_showSmp;r_showSmp57,1581
cvar_t	*r_skipBackEnd;r_skipBackEnd58,1600
cvar_t	*r_stereoEnabled;r_stereoEnabled60,1624
cvar_t	*r_anaglyphMode;r_anaglyphMode61,1649
cvar_t	*r_greyscale;r_greyscale63,1674
cvar_t	*r_ignorehwgamma;r_ignorehwgamma65,1696
cvar_t	*r_measureOverdraw;r_measureOverdraw66,1721
cvar_t	*r_inGameVideo;r_inGameVideo68,1749
cvar_t	*r_fastsky;r_fastsky69,1772
cvar_t	*r_drawSun;r_drawSun70,1791
cvar_t	*r_dynamiclight;r_dynamiclight71,1810
cvar_t	*r_dlightBacks;r_dlightBacks72,1834
cvar_t	*r_lodbias;r_lodbias74,1858
cvar_t	*r_lodscale;r_lodscale75,1877
cvar_t	*r_norefresh;r_norefresh77,1898
cvar_t	*r_drawentities;r_drawentities78,1919
cvar_t	*r_drawworld;r_drawworld79,1943
cvar_t	*r_speeds;r_speeds80,1964
cvar_t	*r_fullbright;r_fullbright81,1982
cvar_t	*r_novis;r_novis82,2004
cvar_t	*r_nocull;r_nocull83,2021
cvar_t	*r_facePlaneCull;r_facePlaneCull84,2039
cvar_t	*r_showcluster;r_showcluster85,2064
cvar_t	*r_nocurves;r_nocurves86,2087
cvar_t	*r_allowExtensions;r_allowExtensions88,2108
cvar_t	*r_ext_compressed_textures;r_ext_compressed_textures90,2136
cvar_t	*r_ext_multitexture;r_ext_multitexture91,2171
cvar_t	*r_ext_compiled_vertex_array;r_ext_compiled_vertex_array92,2199
cvar_t	*r_ext_texture_env_add;r_ext_texture_env_add93,2236
cvar_t	*r_ext_texture_filter_anisotropic;r_ext_texture_filter_anisotropic94,2267
cvar_t	*r_ext_max_anisotropy;r_ext_max_anisotropy95,2309
cvar_t	*r_ignoreGLErrors;r_ignoreGLErrors97,2340
cvar_t	*r_logFile;r_logFile98,2366
cvar_t	*r_stencilbits;r_stencilbits100,2386
cvar_t	*r_depthbits;r_depthbits101,2409
cvar_t	*r_colorbits;r_colorbits102,2430
cvar_t	*r_primitives;r_primitives103,2451
cvar_t	*r_texturebits;r_texturebits104,2473
cvar_t	*r_drawBuffer;r_drawBuffer106,2497
cvar_t	*r_lightmap;r_lightmap107,2519
cvar_t	*r_vertexLight;r_vertexLight108,2539
cvar_t	*r_uiFullScreen;r_uiFullScreen109,2562
cvar_t	*r_shadows;r_shadows110,2586
cvar_t	*r_flares;r_flares111,2605
cvar_t	*r_mode;r_mode112,2623
cvar_t	*r_nobind;r_nobind113,2639
cvar_t	*r_singleShader;r_singleShader114,2657
cvar_t	*r_roundImagesDown;r_roundImagesDown115,2681
cvar_t	*r_colorMipLevels;r_colorMipLevels116,2708
cvar_t	*r_picmip;r_picmip117,2734
cvar_t	*r_showtris;r_showtris118,2752
cvar_t	*r_showsky;r_showsky119,2772
cvar_t	*r_shownormals;r_shownormals120,2791
cvar_t	*r_finish;r_finish121,2814
cvar_t	*r_clear;r_clear122,2832
cvar_t	*r_swapInterval;r_swapInterval123,2849
cvar_t	*r_textureMode;r_textureMode124,2873
cvar_t	*r_offsetFactor;r_offsetFactor125,2896
cvar_t	*r_offsetUnits;r_offsetUnits126,2920
cvar_t	*r_gamma;r_gamma127,2943
cvar_t	*r_intensity;r_intensity128,2960
cvar_t	*r_lockpvs;r_lockpvs129,2981
cvar_t	*r_noportals;r_noportals130,3000
cvar_t	*r_portalOnly;r_portalOnly131,3021
cvar_t	*r_subdivisions;r_subdivisions133,3044
cvar_t	*r_lodCurveError;r_lodCurveError134,3068
cvar_t	*r_fullscreen;r_fullscreen136,3094
cvar_t	*r_customwidth;r_customwidth138,3117
cvar_t	*r_customheight;r_customheight139,3140
cvar_t	*r_customPixelAspect;r_customPixelAspect140,3164
cvar_t	*r_overBrightBits;r_overBrightBits142,3194
cvar_t	*r_mapOverBrightBits;r_mapOverBrightBits143,3220
cvar_t	*r_debugSurface;r_debugSurface145,3250
cvar_t	*r_simpleMipMaps;r_simpleMipMaps146,3274
cvar_t	*r_showImages;r_showImages148,3300
cvar_t	*r_ambientScale;r_ambientScale150,3323
cvar_t	*r_directedScale;r_directedScale151,3347
cvar_t	*r_debugLight;r_debugLight152,3372
cvar_t	*r_debugSort;r_debugSort153,3394
cvar_t	*r_printShaders;r_printShaders154,3415
cvar_t	*r_saveFontData;r_saveFontData155,3439
cvar_t	*r_maxpolys;r_maxpolys157,3464
int		max_polys;max_polys158,3484
cvar_t	*r_maxpolyverts;r_maxpolyverts159,3500
int		max_polyverts;max_polyverts160,3524
static void InitOpenGL( void )InitOpenGL170,3825
void GL_CheckErrors( void ) {GL_CheckErrors220,4732
typedef struct vidmode_svidmode_s262,5498
	const char *description;description264,5525
	int width, height;width265,5551
	int width, height;height265,5551
	float pixelAspect;		// pixel width / heightpixelAspect266,5571
} vidmode_t;vidmode_t267,5616
vidmode_t r_vidModes[] =r_vidModes269,5630
static int	s_numVidModes = ( sizeof( r_vidModes ) / sizeof( r_vidModes[0] ) );s_numVidModes284,6148
qboolean R_GetModeInfo( int *width, int *height, float *windowAspect, int mode ) {R_GetModeInfo286,6228
static void R_ModeList_f( void )R_ModeList_f317,6802
void RB_TakeScreenshot( int x, int y, int width, int height, char *fileName ) {RB_TakeScreenshot354,7735
void RB_TakeScreenshotJPEG( int x, int y, int width, int height, char *fileName ) {RB_TakeScreenshotJPEG393,8689
const void *RB_TakeScreenshotCmd( const void *data ) {RB_TakeScreenshotCmd416,9340
void R_TakeScreenshot( int x, int y, int width, int height, char *name, qboolean jpeg ) {R_TakeScreenshot434,9756
void R_ScreenshotFilename( int lastNumber, char *fileName ) {R_ScreenshotFilename458,10298
void R_ScreenshotFilenameJPEG( int lastNumber, char *fileName ) {R_ScreenshotFilenameJPEG483,10814
void R_LevelShot( void ) {R_LevelShot511,11439
void R_ScreenShot_f (void) {R_ScreenShot_f580,13120
void R_ScreenShotJPEG_f (void) {R_ScreenShotJPEG_f633,14292
const void *RB_TakeVideoFrameCmd( const void *data )RB_TakeVideoFrameCmd693,15618
void GL_SetDefaultState( void )GL_SetDefaultState736,16780
void GfxInfo_f( void ) GfxInfo_f784,17869
void R_Register( void ) R_Register879,21040
void R_Init( void ) {	R_Init1029,28946
void RE_Shutdown( qboolean destroyWindow ) {	RE_Shutdown1133,31609
void RE_EndRegistration( void ) {RE_EndRegistration1172,32410
refexport_t *GetRefAPI ( int apiVersion, refimport_t *rimp ) {GetRefAPI1186,32587

renderer/tr_backend.c,1906
backEndData_t	*backEndData[SMP_FRAMES];backEndData24,997
backEndState_t	backEnd;backEnd25,1037
static float	s_flipMatrix[16] = {s_flipMatrix28,1063
void GL_Bind( image_t *image ) {GL_Bind41,1280
void GL_SelectTexture( int unit )GL_SelectTexture65,1824
void GL_BindMultitexture( image_t *image0, GLuint env0, image_t *image1, GLuint env1 ) {GL_BindMultitexture96,2550
void GL_Cull( int cullType ) {GL_Cull124,3264
void GL_TexEnv( int env )GL_TexEnv167,3823
void GL_State( unsigned long stateBits )GL_State203,4540
static void RB_Hyperspace( void ) {RB_Hyperspace397,8169
static void SetViewportAndScissor( void ) {SetViewportAndScissor412,8426
void RB_BeginDrawingView (void) {RB_BeginDrawingView432,9089
#define	MAC_EVENT_PUMP_MSEC	MAC_EVENT_PUMP_MSEC512,11209
void RB_RenderDrawSurfList( drawSurf_t *drawSurfs, int numDrawSurfs ) {RB_RenderDrawSurfList519,11307
void	RB_SetGL2D (void) {RB_SetGL2D710,16579
void RE_StretchRaw (int x, int y, int w, int h, int cols, int rows, const byte *data, int client, qboolean dirty) {RE_StretchRaw744,17438
void RE_UploadCinematic (int w, int h, int cols, int rows, const byte *data, int client, qboolean dirty) {RE_UploadCinematic810,19701
const void	*RB_SetColor( const void *data ) {RB_SetColor839,20888
const void *RB_StretchPic ( const void *data ) {RB_StretchPic857,21264
const void	*RB_DrawSurfs( const void *data ) {RB_DrawSurfs934,23252
const void	*RB_DrawBuffer( const void *data ) {RB_DrawBuffer959,23676
void RB_ShowImages( void ) {RB_ShowImages985,24219
const void *RB_ColorMask(const void *data)RB_ColorMask1041,25193
const void *RB_ClearDepth(const void *data)RB_ClearDepth1056,25437
const void	*RB_SwapBuffers( const void *data ) {RB_SwapBuffers1078,25760
void RB_ExecuteRenderCommands( const void *data ) {RB_ExecuteRenderCommands1133,27077
void RB_RenderThread( void ) {RB_RenderThread1190,28150

renderer/tr_model.c,1183
#define	LL(LL26,1042
model_t	*loadmodel;loadmodel34,1345
model_t	*R_GetModelByHandle( qhandle_t index ) {R_GetModelByHandle39,1394
model_t *R_AllocModel( void ) {R_AllocModel57,1719
qhandle_t RE_RegisterModel( const char *name ) {RE_RegisterModel84,2260
static qboolean R_LoadMD3 (model_t *mod, int lod, void *buffer, const char *mod_name ) {R_LoadMD3258,5682
static qboolean R_LoadMDR( model_t *mod, void *buffer, int filesize, const char *mod_name ) R_LoadMDR417,10460
static qboolean R_LoadMD4( model_t *mod, void *buffer, const char *mod_name ) {R_LoadMD4757,20764
void RE_BeginRegistration( glconfig_t *glconfigOut ) {RE_BeginRegistration910,25554
void R_ModelInit( void ) {R_ModelInit937,26167
void R_Modellist_f( void ) {R_Modellist_f953,26367
static md3Tag_t *R_GetTag( md3Header_t *mod, int frame, const char *tagName ) {R_GetTag989,27102
void R_GetAnimTag( mdrHeader_t *mod, int framenum, const char *tagName, md3Tag_t * dest) R_GetAnimTag1009,27587
int R_LerpTag( orientation_t *tag, qhandle_t handle, int startFrame, int endFrame, R_LerpTag1059,28775
void R_ModelBounds( qhandle_t handle, vec3_t mins, vec3_t maxs ) {R_ModelBounds1122,30251

renderer/tr_local.h,37396
#define TR_LOCAL_HTR_LOCAL_H25,995
#define GL_INDEX_TYPE	GL_INDEX_TYPE33,1152
typedef unsigned int glIndex_t;glIndex_t34,1191
#define	myftol(myftol40,1318
#define	SMP_FRAMES	SMP_FRAMES47,1487
#define	MAX_SHADERS	MAX_SHADERS51,1550
#define MAX_STATES_PER_SHADER MAX_STATES_PER_SHADER54,1613
#define MAX_STATE_NAME MAX_STATE_NAME55,1646
typedef struct dlight_s {dlight_s60,1740
	vec3_t	origin;origin61,1766
	vec3_t	color;				// range from 0.0 to 1.0, should be color normalizedcolor62,1782
	float	radius;radius63,1853
	vec3_t	transformed;		// origin in local coordinate systemtransformed65,1869
	int		additive;			// texture detail is lost tho when the lightmap is darkadditive66,1928
} dlight_t;dlight_t67,2002
	refEntity_t	e;e73,2146
	float		axisLength;		// compensate for non-normalized axisaxisLength75,2163
	qboolean	needDlights;	// true for bmodels that touch a dlightneedDlights77,2223
	qboolean	lightingCalculated;lightingCalculated78,2286
	vec3_t		lightDir;		// normalized direction towards lightlightDir79,2316
	vec3_t		ambientLight;	// color normalized to 0-255ambientLight80,2374
	int			ambientLightInt;	// 32 bit rgba packedambientLightInt81,2426
	vec3_t		directedLight;directedLight82,2472
} trRefEntity_t;trRefEntity_t83,2496
	vec3_t		origin;			// in world coordinatesorigin87,2532
	vec3_t		axis[3];		// orientation in worldaxis88,2575
	vec3_t		viewOrigin;		// viewParms->or.origin in local coordinatesviewOrigin89,2618
	float		modelMatrix[16];modelMatrix90,2685
} orientationr_t;orientationr_t91,2710
typedef struct image_s {image_s93,2729
	char		imgName[MAX_QPATH];		// game path, including extensionimgName94,2754
	int			width, height;				// source imagewidth95,2816
	int			width, height;				// source imageheight95,2816
	int			uploadWidth, uploadHeight;	// after power of two and picmip but not including clamp to MAX_TEXTURE_SIZEuploadWidth96,2857
	int			uploadWidth, uploadHeight;	// after power of two and picmip but not including clamp to MAX_TEXTURE_SIZEuploadHeight96,2857
	GLuint		texnum;					// gl texture bindingtexnum97,2968
	int			frameUsed;			// for texture usage in frame statisticsframeUsed99,3012
	int			internalFormat;internalFormat101,3074
	int			TMU;				// only needed for voodoo2TMU102,3097
	qboolean	mipmap;mipmap104,3140
	qboolean	allowPicmip;allowPicmip105,3158
	int			wrapClampMode;		// GL_CLAMP_TO_EDGE or GL_REPEATwrapClampMode106,3181
	struct image_s*	next;next108,3238
} image_t;image_t109,3261
	SS_BAD,SS_BAD114,3371
	SS_PORTAL,			// mirrors, portals, viewscreensSS_PORTAL115,3380
	SS_ENVIRONMENT,		// sky boxSS_ENVIRONMENT116,3427
	SS_OPAQUE,			// opaqueSS_OPAQUE117,3456
	SS_DECAL,			// scorch marks, etc.SS_DECAL119,3481
	SS_SEE_THROUGH,		// ladders, grates, grills that may have small blended edgesSS_SEE_THROUGH120,3516
	SS_BANNER,SS_BANNER122,3630
	SS_FOG,SS_FOG124,3643
	SS_UNDERWATER,		// for items that should be drawn in front of the water planeSS_UNDERWATER126,3653
	SS_BLEND0,			// regular transparency and filtersSS_BLEND0128,3733
	SS_BLEND1,			// generally only used for additive type effectsSS_BLEND1129,3783
	SS_BLEND2,SS_BLEND2130,3846
	SS_BLEND3,SS_BLEND3131,3858
	SS_BLEND6,SS_BLEND6133,3871
	SS_STENCIL_SHADOW,SS_STENCIL_SHADOW134,3883
	SS_ALMOST_NEAREST,	// gun smoke puffsSS_ALMOST_NEAREST135,3903
	SS_NEAREST			// blood blobsSS_NEAREST137,3943
} shaderSort_t;shaderSort_t138,3972
#define MAX_SHADER_STAGES MAX_SHADER_STAGES141,3990
	GF_NONE,GF_NONE144,4034
	GF_SIN,GF_SIN146,4045
	GF_SQUARE,GF_SQUARE147,4054
	GF_TRIANGLE,GF_TRIANGLE148,4066
	GF_SAWTOOTH, GF_SAWTOOTH149,4080
	GF_INVERSE_SAWTOOTH, GF_INVERSE_SAWTOOTH150,4095
	GF_NOISEGF_NOISE152,4119
} genFunc_t;genFunc_t154,4130
	DEFORM_NONE,DEFORM_NONE158,4160
	DEFORM_WAVE,DEFORM_WAVE159,4174
	DEFORM_NORMALS,DEFORM_NORMALS160,4188
	DEFORM_BULGE,DEFORM_BULGE161,4205
	DEFORM_MOVE,DEFORM_MOVE162,4220
	DEFORM_PROJECTION_SHADOW,DEFORM_PROJECTION_SHADOW163,4234
	DEFORM_AUTOSPRITE,DEFORM_AUTOSPRITE164,4261
	DEFORM_AUTOSPRITE2,DEFORM_AUTOSPRITE2165,4281
	DEFORM_TEXT0,DEFORM_TEXT0166,4302
	DEFORM_TEXT1,DEFORM_TEXT1167,4317
	DEFORM_TEXT2,DEFORM_TEXT2168,4332
	DEFORM_TEXT3,DEFORM_TEXT3169,4347
	DEFORM_TEXT4,DEFORM_TEXT4170,4362
	DEFORM_TEXT5,DEFORM_TEXT5171,4377
	DEFORM_TEXT6,DEFORM_TEXT6172,4392
	DEFORM_TEXT7DEFORM_TEXT7173,4407
} deform_t;deform_t174,4421
	AGEN_IDENTITY,AGEN_IDENTITY177,4449
	AGEN_SKIP,AGEN_SKIP178,4465
	AGEN_ENTITY,AGEN_ENTITY179,4477
	AGEN_ONE_MINUS_ENTITY,AGEN_ONE_MINUS_ENTITY180,4491
	AGEN_VERTEX,AGEN_VERTEX181,4515
	AGEN_ONE_MINUS_VERTEX,AGEN_ONE_MINUS_VERTEX182,4529
	AGEN_LIGHTING_SPECULAR,AGEN_LIGHTING_SPECULAR183,4553
	AGEN_WAVEFORM,AGEN_WAVEFORM184,4578
	AGEN_PORTAL,AGEN_PORTAL185,4594
	AGEN_CONSTAGEN_CONST186,4608
} alphaGen_t;alphaGen_t187,4620
	CGEN_BAD,CGEN_BAD190,4650
	CGEN_IDENTITY_LIGHTING,	// tr.identityLightCGEN_IDENTITY_LIGHTING191,4661
	CGEN_IDENTITY,			// always (1,1,1,1)CGEN_IDENTITY192,4706
	CGEN_ENTITY,			// grabbed from entity's modulate fieldCGEN_ENTITY193,4744
	CGEN_ONE_MINUS_ENTITY,	// grabbed from 1 - entity.modulateCGEN_ONE_MINUS_ENTITY194,4800
	CGEN_EXACT_VERTEX,		// tess.vertexColorsCGEN_EXACT_VERTEX195,4860
	CGEN_VERTEX,			// tess.vertexColors * tr.identityLightCGEN_VERTEX196,4902
	CGEN_ONE_MINUS_VERTEX,CGEN_ONE_MINUS_VERTEX197,4958
	CGEN_WAVEFORM,			// programmatically generatedCGEN_WAVEFORM198,4982
	CGEN_LIGHTING_DIFFUSE,CGEN_LIGHTING_DIFFUSE199,5030
	CGEN_FOG,				// standard fogCGEN_FOG200,5054
	CGEN_CONST				// fixed colorCGEN_CONST201,5084
} colorGen_t;colorGen_t202,5114
	TCGEN_BAD,TCGEN_BAD205,5144
	TCGEN_IDENTITY,			// clear to 0,0TCGEN_IDENTITY206,5156
	TCGEN_LIGHTMAP,TCGEN_LIGHTMAP207,5191
	TCGEN_TEXTURE,TCGEN_TEXTURE208,5208
	TCGEN_ENVIRONMENT_MAPPED,TCGEN_ENVIRONMENT_MAPPED209,5224
	TCGEN_FOG,TCGEN_FOG210,5251
	TCGEN_VECTOR			// S and T from world coordinatesTCGEN_VECTOR211,5263
} texCoordGen_t;texCoordGen_t212,5313
	ACFF_NONE,ACFF_NONE215,5346
	ACFF_MODULATE_RGB,ACFF_MODULATE_RGB216,5358
	ACFF_MODULATE_RGBA,ACFF_MODULATE_RGBA217,5378
	ACFF_MODULATE_ALPHAACFF_MODULATE_ALPHA218,5399
} acff_t;acff_t219,5420
	genFunc_t	func;func222,5448
	float base;base224,5466
	float amplitude;amplitude225,5479
	float phase;phase226,5497
	float frequency;frequency227,5511
} waveForm_t;waveForm_t228,5529
#define TR_MAX_TEXMODS TR_MAX_TEXMODS230,5544
	TMOD_NONE,TMOD_NONE233,5585
	TMOD_TRANSFORM,TMOD_TRANSFORM234,5597
	TMOD_TURBULENT,TMOD_TURBULENT235,5614
	TMOD_SCROLL,TMOD_SCROLL236,5631
	TMOD_SCALE,TMOD_SCALE237,5645
	TMOD_STRETCH,TMOD_STRETCH238,5658
	TMOD_ROTATE,TMOD_ROTATE239,5673
	TMOD_ENTITY_TRANSLATETMOD_ENTITY_TRANSLATE240,5687
} texMod_t;texMod_t241,5710
#define	MAX_SHADER_DEFORMS	MAX_SHADER_DEFORMS243,5723
	deform_t	deformation;			// vertex coordinate modification typedeformation245,5769
	vec3_t		moveVector;moveVector247,5834
	waveForm_t	deformationWave;deformationWave248,5855
	float		deformationSpread;deformationSpread249,5884
	float		bulgeWidth;bulgeWidth251,5912
	float		bulgeHeight;bulgeHeight252,5932
	float		bulgeSpeed;bulgeSpeed253,5953
} deformStage_t;deformStage_t254,5973
	texMod_t		type;type258,6009
	waveForm_t		wave;wave261,6072
	float			matrix[2][2];		// s' = s * m[0][0] + t * m[1][0] + trans[0]matrix264,6120
	float			translate[2];		// t' = s * m[0][1] + t * m[0][1] + trans[1]translate265,6189
	float			scale[2];			// s *= scale[0]scale268,6283
	float			scroll[2];			// s' = s + scroll[0] * timescroll272,6401
	float			rotateSpeed;rotateSpeed277,6535
} texModInfo_t;texModInfo_t279,6558
#define	MAX_IMAGE_ANIMATIONS	MAX_IMAGE_ANIMATIONS282,6576
	image_t			*image[MAX_IMAGE_ANIMATIONS];image285,6625
	int				numImageAnimations;numImageAnimations286,6666
	float			imageAnimationSpeed;imageAnimationSpeed287,6694
	texCoordGen_t	tcGen;tcGen289,6725
	vec3_t			tcGenVectors[2];tcGenVectors290,6747
	int				numTexMods;numTexMods292,6775
	texModInfo_t	*texMods;texMods293,6795
	int				videoMapHandle;videoMapHandle295,6820
	qboolean		isLightmap;isLightmap296,6844
	qboolean		vertexLightmap;vertexLightmap297,6867
	qboolean		isVideoMap;isVideoMap298,6894
} textureBundle_t;textureBundle_t299,6917
#define NUM_TEXTURE_BUNDLES NUM_TEXTURE_BUNDLES301,6937
	qboolean		active;active304,6985
	textureBundle_t	bundle[NUM_TEXTURE_BUNDLES];bundle306,7006
	waveForm_t		rgbWave;rgbWave308,7053
	colorGen_t		rgbGen;rgbGen309,7075
	waveForm_t		alphaWave;alphaWave311,7097
	alphaGen_t		alphaGen;alphaGen312,7121
	byte			constantColor[4];			// for CGEN_CONST and AGEN_CONSTconstantColor314,7145
	unsigned		stateBits;					// GLS_xxxx maskstateBits316,7207
	acff_t			adjustColorsForFog;adjustColorsForFog318,7251
	qboolean		isDetail;isDetail320,7282
} shaderStage_t;shaderStage_t321,7303
#define LIGHTMAP_2D LIGHTMAP_2D327,7443
#define LIGHTMAP_BY_VERTEX LIGHTMAP_BY_VERTEX328,7504
#define LIGHTMAP_WHITEIMAGE LIGHTMAP_WHITEIMAGE329,7562
#define LIGHTMAP_NONE LIGHTMAP_NONE330,7593
	CT_FRONT_SIDED,CT_FRONT_SIDED333,7640
	CT_BACK_SIDED,CT_BACK_SIDED334,7657
	CT_TWO_SIDEDCT_TWO_SIDED335,7673
} cullType_t;cullType_t336,7687
	FP_NONE,		// surface is translucent and will just be adjusted properlyFP_NONE339,7717
	FP_EQUAL,		// surface is opaque but possibly alpha testedFP_EQUAL340,7789
	FP_LE			// surface is trnaslucent, but still needs a fog pass (fog surface)FP_LE341,7848
} fogPass_t;fogPass_t342,7925
	float		cloudHeight;cloudHeight345,7956
	image_t		*outerbox[6], *innerbox[6];outerbox346,7977
	image_t		*outerbox[6], *innerbox[6];innerbox346,7977
} skyParms_t;skyParms_t347,8015
	vec3_t	color;color350,8047
	float	depthForOpaque;depthForOpaque351,8062
} fogParms_t;fogParms_t352,8085
typedef struct shader_s {shader_s355,8101
	char		name[MAX_QPATH];		// game path, including extensionname356,8127
	int			lightmapIndex;			// for a shader to match, both name and lightmapIndex must matchlightmapIndex357,8186
	int			index;					// this shader == tr.shaders[index]index359,8276
	int			sortedIndex;			// this shader == tr.sortedShaders[sortedIndex]sortedIndex360,8330
	float		sort;					// lower numbered shaders draw before higher numberedsort362,8401
	qboolean	defaultShader;			// we want to return index 0 if the shader failed todefaultShader364,8474
	qboolean	explicitlyDefined;		// found in a .shader fileexplicitlyDefined370,8789
	int			surfaceFlags;			// if explicitlyDefined, this will have SURF_* flagssurfaceFlags372,8847
	int			contentFlags;contentFlags373,8923
	qboolean	entityMergable;			// merge across entites optimizable (smoke, blood)entityMergable375,8945
	qboolean	isSky;isSky377,9025
	skyParms_t	sky;sky378,9042
	fogParms_t	fogParms;fogParms379,9059
	float		portalRange;			// distance to fog out atportalRange381,9082
	int			multitextureEnv;		// 0, GL_MODULATE, GL_ADD (FIXME: put in stage)multitextureEnv383,9132
	cullType_t	cullType;				// CT_FRONT_SIDED, CT_BACK_SIDED, or CT_TWO_SIDEDcullType385,9206
	qboolean	polygonOffset;			// set for decals and other items that must be offset polygonOffset386,9281
	qboolean	noMipMaps;				// for console fonts, 2D elements, etc.noMipMaps387,9363
	qboolean	noPicMip;				// for images that must always be full resolutionnoPicMip388,9427
	fogPass_t	fogPass;				// draw a blended pass, possibly with depth test equalsfogPass390,9501
	qboolean	needsNormal;			// not all shaders will need all data to be gatheredneedsNormal392,9581
	qboolean	needsST1;needsST1393,9659
	qboolean	needsST2;needsST2394,9679
	qboolean	needsColor;needsColor395,9699
	int			numDeforms;numDeforms397,9722
	deformStage_t	deforms[MAX_SHADER_DEFORMS];deforms398,9741
	int			numUnfoggedPasses;numUnfoggedPasses400,9786
	shaderStage_t	*stages[MAX_SHADER_STAGES];		stages401,9812
	void		(*optimalStageIteratorFunc)( void );optimalStageIteratorFunc403,9858
  float clampTime;                                  // time this shader is clamped toclampTime405,9903
  float timeOffset;                                 // current time offset for this shadertimeOffset406,9989
  int numStates;                                    // if non-zero this is a state shadernumStates408,10081
  struct shader_s *currentShader;                   // current state if this is a state shadercurrentShader409,10171
  struct shader_s *parentShader;                    // current state if this is a state shaderparentShader410,10266
  int currentState;                                 // current state index for cycle purposescurrentState411,10361
  long expireTime;                                  // time in milliseconds this expiresexpireTime412,10455
  struct shader_s *remappedShader;                  // current shader this one is remapped tooremappedShader414,10545
  int shaderStates[MAX_STATES_PER_SHADER];          // index to valid shader statesshaderStates416,10641
	struct	shader_s	*next;next418,10726
} shader_t;shader_t419,10750
typedef struct shaderState_s {shaderState_s421,10763
  char shaderName[MAX_QPATH];     // name of shader this state belongs toshaderName422,10794
  char name[MAX_STATE_NAME];      // name of this statename423,10868
  char stateShader[MAX_QPATH];    // shader this name invokesstateShader424,10924
  int cycleTime;                  // time this cycle lasts, <= 0 is forevercycleTime425,10986
  shader_t *shader;shader426,11062
} shaderState_t;shaderState_t427,11082
	int			x, y, width, height;x433,11227
	int			x, y, width, height;y433,11227
	int			x, y, width, height;width433,11227
	int			x, y, width, height;height433,11227
	float		fov_x, fov_y;fov_x434,11255
	float		fov_x, fov_y;fov_y434,11255
	vec3_t		vieworg;vieworg435,11277
	vec3_t		viewaxis[3];		// transformation matrixviewaxis436,11295
	stereoFrame_t	stereoFrame;stereoFrame438,11344
	int			time;				// time in milliseconds for shader effects and other time dependent rendering issuestime440,11373
	int			rdflags;			// RDF_NOWORLDMODEL, etcrdflags441,11474
	byte		areamask[MAX_MAP_AREA_BYTES];areamask444,11584
	qboolean	areamaskModified;	// qtrue if areamask changed since last sceneareamaskModified445,11621
	float		floatTime;			// tr.refdef.time / 1000.0floatTime447,11696
	char		text[MAX_RENDER_STRINGS][MAX_RENDER_STRING_LENGTH];text450,11787
	int			num_entities;num_entities452,11847
	trRefEntity_t	*entities;entities453,11868
	int			num_dlights;num_dlights455,11895
	struct dlight_s	*dlights;dlights456,11915
	int			numPolys;numPolys458,11943
	struct srfPoly_s	*polys;polys459,11960
	int			numDrawSurfs;numDrawSurfs461,11987
	struct drawSurf_s	*drawSurfs;drawSurfs462,12008
} trRefdef_t;trRefdef_t465,12041
	char		name[MAX_QPATH];name472,12231
	shader_t	*shader;shader473,12255
} skinSurface_t;skinSurface_t474,12274
typedef struct skin_s {skin_s476,12292
	char		name[MAX_QPATH];		// game path, including extensionname477,12316
	int			numSurfaces;numSurfaces478,12375
	skinSurface_t	*surfaces[MD3_MAX_SURFACES];surfaces479,12395
} skin_t;skin_t480,12439
	int			originalBrushNumber;originalBrushNumber484,12468
	vec3_t		bounds[2];bounds485,12496
	unsigned	colorInt;				// in packed byte formatcolorInt487,12517
	float		tcScale;				// texture coordinate vector scalestcScale488,12565
	fogParms_t	parms;parms489,12621
	qboolean	hasSurface;hasSurface492,12687
	float		surface[4];surface493,12709
} fog_t;fog_t494,12729
	orientationr_t	or;or497,12756
	orientationr_t	world;world498,12776
	vec3_t		pvsOrigin;			// may be different than or.origin for portalspvsOrigin499,12799
	qboolean	isPortal;			// true if this view is through a portalisPortal500,12868
	qboolean	isMirror;			// the portal is a mirror, invert the face cullingisMirror501,12931
	int			frameSceneNum;		// copied from tr.frameSceneNumframeSceneNum502,13004
	int			frameCount;			// copied from tr.frameCountframeCount503,13059
	cplane_t	portalPlane;		// clip anything behind this if mirroringportalPlane504,13109
	int			viewportX, viewportY, viewportWidth, viewportHeight;viewportX505,13175
	int			viewportX, viewportY, viewportWidth, viewportHeight;viewportY505,13175
	int			viewportX, viewportY, viewportWidth, viewportHeight;viewportWidth505,13175
	int			viewportX, viewportY, viewportWidth, viewportHeight;viewportHeight505,13175
	float		fovX, fovY;fovX506,13235
	float		fovX, fovY;fovY506,13235
	float		projectionMatrix[16];projectionMatrix507,13255
	cplane_t	frustum[4];frustum508,13285
	vec3_t		visBounds[2];visBounds509,13307
	float		zFar;zFar510,13330
	stereoFrame_t	stereoFrame;stereoFrame511,13344
} viewParms_t;viewParms_t512,13372
	SF_BAD,SF_BAD525,13648
	SF_SKIP,				// ignoreSF_SKIP526,13657
	SF_FACE,SF_FACE527,13680
	SF_GRID,SF_GRID528,13690
	SF_TRIANGLES,SF_TRIANGLES529,13700
	SF_POLY,SF_POLY530,13715
	SF_MD3,SF_MD3531,13725
	SF_MD4,SF_MD4532,13734
	SF_MDR,SF_MDR534,13759
	SF_FLARE,SF_FLARE536,13775
	SF_ENTITY,				// beams, rails, lightning, etc that can be determined by entitySF_ENTITY537,13786
	SF_DISPLAY_LIST,SF_DISPLAY_LIST538,13866
	SF_NUM_SURFACE_TYPES,SF_NUM_SURFACE_TYPES540,13885
	SF_MAX = 0x7fffffff			// ensures that sizeof( surfaceType_t ) == sizeof( int )SF_MAX541,13908
} surfaceType_t;surfaceType_t542,13988
typedef struct drawSurf_s {drawSurf_s544,14006
	unsigned			sort;			// bit combination for fast comparessort545,14034
	surfaceType_t		*surface;		// any of surface*_tsurface546,14091
} drawSurf_t;drawSurf_t547,14139
#define	MAX_FACE_POINTS	MAX_FACE_POINTS549,14154
#define	MAX_PATCH_SIZE	MAX_PATCH_SIZE551,14183
#define	MAX_GRID_SIZE	MAX_GRID_SIZE552,14258
typedef struct srfPoly_s {srfPoly_s556,14424
	surfaceType_t	surfaceType;surfaceType557,14451
	qhandle_t		hShader;hShader558,14479
	int				fogIndex;fogIndex559,14500
	int				numVerts;numVerts560,14518
	polyVert_t		*verts;verts561,14536
} srfPoly_t;srfPoly_t562,14557
typedef struct srfDisplayList_s {srfDisplayList_s564,14571
	surfaceType_t	surfaceType;surfaceType565,14605
	int				listNum;listNum566,14633
} srfDisplayList_t;srfDisplayList_t567,14650
typedef struct srfFlare_s {srfFlare_s570,14672
	surfaceType_t	surfaceType;surfaceType571,14700
	vec3_t			origin;origin572,14728
	vec3_t			normal;normal573,14746
	vec3_t			color;color574,14764
} srfFlare_t;srfFlare_t575,14781
typedef struct srfGridMesh_s {srfGridMesh_s577,14796
	surfaceType_t	surfaceType;surfaceType578,14827
	int				dlightBits[SMP_FRAMES];dlightBits581,14889
	vec3_t			meshBounds[2];meshBounds584,14946
	vec3_t			localOrigin;localOrigin585,14971
	float			meshRadius;meshRadius586,14994
	vec3_t			lodOrigin;lodOrigin591,15146
	float			lodRadius;lodRadius592,15167
	int				lodFixed;lodFixed593,15187
	int				lodStitched;lodStitched594,15205
	int				width, height;width597,15240
	int				width, height;height597,15240
	float			*widthLodError;widthLodError598,15263
	float			*heightLodError;heightLodError599,15288
	drawVert_t		verts[1];		// variable sizedverts600,15314
} srfGridMesh_t;srfGridMesh_t601,15356
#define	VERTEXSIZE	VERTEXSIZE605,15376
	surfaceType_t	surfaceType;surfaceType607,15414
	cplane_t	plane;plane608,15442
	int			dlightBits[SMP_FRAMES];dlightBits611,15493
	int			numPoints;numPoints614,15573
	int			numIndices;numIndices615,15591
	int			ofsIndices;ofsIndices616,15610
	float		points[1][VERTEXSIZE];	// variable sizedpoints617,15629
} srfSurfaceFace_t;srfSurfaceFace_t619,15744
	surfaceType_t	surfaceType;surfaceType624,15847
	int				dlightBits[SMP_FRAMES];dlightBits627,15909
	vec3_t			bounds[2];bounds630,15985
	vec3_t			localOrigin;localOrigin631,16006
	float			radius;radius632,16029
	int				numIndexes;numIndexes635,16072
	int				*indexes;indexes636,16092
	int				numVerts;numVerts638,16111
	drawVert_t		*verts;verts639,16129
} srfTriangles_t;srfTriangles_t640,16150
#define	SIDE_FRONT	SIDE_FRONT658,16449
#define	SIDE_BACK	SIDE_BACK659,16470
#define	SIDE_ON	SIDE_ON660,16490
typedef struct msurface_s {msurface_s662,16510
	int					viewCount;		// if == tr.viewCount, already addedviewCount663,16538
	struct shader_s		*shader;shader664,16596
	int					fogIndex;fogIndex665,16623
	surfaceType_t		*data;			// any of srf*_tdata667,16643
} msurface_t;msurface_t668,16685
#define	CONTENTS_NODE	CONTENTS_NODE672,16702
typedef struct mnode_s {mnode_s673,16728
	int			contents;		// -1 for nodes, to differentiate from leafscontents675,16783
	int			visframe;		// node needs to be traversed if currentvisframe676,16846
	vec3_t		mins, maxs;		// for bounding box cullingmins677,16905
	vec3_t		mins, maxs;		// for bounding box cullingmaxs677,16905
	struct mnode_s	*parent;parent678,16955
	cplane_t	*plane;plane681,16999
	struct mnode_s	*children[2];	children682,17017
	int			cluster;cluster685,17067
	int			area;area686,17083
	msurface_t	**firstmarksurface;firstmarksurface688,17097
	int			nummarksurfaces;nummarksurfaces689,17129
} mnode_t;mnode_t690,17153
	vec3_t		bounds[2];		// for cullingbounds693,17182
	msurface_t	*firstSurface;firstSurface694,17218
	int			numSurfaces;numSurfaces695,17245
} bmodel_t;bmodel_t696,17265
	char		name[MAX_QPATH];		// ie: maps/tim_dm2.bspname699,17295
	char		baseName[MAX_QPATH];	// ie: tim_dm2baseName700,17344
	int			dataSize;dataSize702,17388
	int			numShaders;numShaders704,17406
	dshader_t	*shaders;shaders705,17425
	bmodel_t	*bmodels;bmodels707,17447
	int			numplanes;numplanes709,17468
	cplane_t	*planes;planes710,17486
	int			numnodes;		// includes leafsnumnodes712,17506
	int			numDecisionNodes;numDecisionNodes713,17542
	mnode_t		*nodes;nodes714,17567
	int			numsurfaces;numsurfaces716,17586
	msurface_t	*surfaces;surfaces717,17606
	int			nummarksurfaces;nummarksurfaces719,17630
	msurface_t	**marksurfaces;marksurfaces720,17654
	int			numfogs;numfogs722,17683
	fog_t		*fogs;fogs723,17699
	vec3_t		lightGridOrigin;lightGridOrigin725,17715
	vec3_t		lightGridSize;lightGridSize726,17741
	vec3_t		lightGridInverseSize;lightGridInverseSize727,17765
	int			lightGridBounds[3];lightGridBounds728,17796
	byte		*lightGridData;lightGridData729,17823
	int			numClusters;numClusters732,17848
	int			clusterBytes;clusterBytes733,17868
	const byte	*vis;			// may be passed in by CM_LoadMap to save spacevis734,17889
	byte		*novis;			// clusterBytes of 0xffnovis736,17958
	char		*entityString;entityString738,18000
	char		*entityParsePoint;entityParsePoint739,18022
} world_t;world_t740,18048
	MOD_BAD,MOD_BAD745,18149
	MOD_BRUSH,MOD_BRUSH746,18159
	MOD_MESH,MOD_MESH747,18171
	MOD_MD4,MOD_MD4748,18182
	MOD_MDRMOD_MDR750,18208
} modtype_t;modtype_t752,18224
typedef struct model_s {model_s754,18238
	char		name[MAX_QPATH];name755,18263
	modtype_t	type;type756,18287
	int			index;				// model = tr.models[model->index]index757,18304
	int			dataSize;			// just for listing purposesdataSize759,18357
	bmodel_t	*bmodel;			// only if type == MOD_BRUSHbmodel760,18405
	md3Header_t	*md3[MD3_MAX_LODS];	// only if type == MOD_MESHmd3761,18455
	void	*md4;				// only if type == (MOD_MD4 | MOD_MDR)md4762,18516
	int			 numLods;numLods764,18571
} model_t;model_t765,18588
#define	MAX_MOD_KNOWN	MAX_MOD_KNOWN768,18601
#define	MAX_DRAWIMAGES	MAX_DRAWIMAGES781,19009
#define	MAX_LIGHTMAPS	MAX_LIGHTMAPS782,19039
#define	MAX_SKINS	MAX_SKINS783,19067
#define	MAX_DRAWSURFS	MAX_DRAWSURFS786,19095
#define	DRAWSURF_MASK	DRAWSURF_MASK787,19127
#define	QSORT_SHADERNUM_SHIFT	QSORT_SHADERNUM_SHIFT808,19587
#define	QSORT_ENTITYNUM_SHIFT	QSORT_ENTITYNUM_SHIFT809,19620
#define	QSORT_FOGNUM_SHIFT	QSORT_FOGNUM_SHIFT810,19652
	int		c_sphere_cull_patch_in, c_sphere_cull_patch_clip, c_sphere_cull_patch_out;c_sphere_cull_patch_in818,19775
	int		c_sphere_cull_patch_in, c_sphere_cull_patch_clip, c_sphere_cull_patch_out;c_sphere_cull_patch_clip818,19775
	int		c_sphere_cull_patch_in, c_sphere_cull_patch_clip, c_sphere_cull_patch_out;c_sphere_cull_patch_out818,19775
	int		c_box_cull_patch_in, c_box_cull_patch_clip, c_box_cull_patch_out;c_box_cull_patch_in819,19856
	int		c_box_cull_patch_in, c_box_cull_patch_clip, c_box_cull_patch_out;c_box_cull_patch_clip819,19856
	int		c_box_cull_patch_in, c_box_cull_patch_clip, c_box_cull_patch_out;c_box_cull_patch_out819,19856
	int		c_sphere_cull_md3_in, c_sphere_cull_md3_clip, c_sphere_cull_md3_out;c_sphere_cull_md3_in820,19928
	int		c_sphere_cull_md3_in, c_sphere_cull_md3_clip, c_sphere_cull_md3_out;c_sphere_cull_md3_clip820,19928
	int		c_sphere_cull_md3_in, c_sphere_cull_md3_clip, c_sphere_cull_md3_out;c_sphere_cull_md3_out820,19928
	int		c_box_cull_md3_in, c_box_cull_md3_clip, c_box_cull_md3_out;c_box_cull_md3_in821,20003
	int		c_box_cull_md3_in, c_box_cull_md3_clip, c_box_cull_md3_out;c_box_cull_md3_clip821,20003
	int		c_box_cull_md3_in, c_box_cull_md3_clip, c_box_cull_md3_out;c_box_cull_md3_out821,20003
	int		c_leafs;c_leafs823,20070
	int		c_dlightSurfaces;c_dlightSurfaces824,20085
	int		c_dlightSurfacesCulled;c_dlightSurfacesCulled825,20109
} frontEndCounters_t;frontEndCounters_t826,20139
#define	FOG_TABLE_SIZE	FOG_TABLE_SIZE828,20162
#define FUNCTABLE_SIZE	FUNCTABLE_SIZE829,20190
#define FUNCTABLE_SIZE2	FUNCTABLE_SIZE2830,20219
#define FUNCTABLE_MASK	FUNCTABLE_MASK831,20247
	int			currenttextures[2];currenttextures836,20365
	int			currenttmu;currenttmu837,20392
	qboolean	finishCalled;finishCalled838,20411
	int			texEnv[2];texEnv839,20435
	int			faceCulling;faceCulling840,20453
	unsigned long	glStateBits;glStateBits841,20473
} glstate_t;glstate_t842,20501
	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;c_surfaces846,20533
	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;c_shaders846,20533
	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;c_vertexes846,20533
	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;c_indexes846,20533
	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;c_totalIndexes846,20533
	float	c_overDraw;c_overDraw847,20601
	int		c_dlightVertexes;c_dlightVertexes849,20622
	int		c_dlightIndexes;c_dlightIndexes850,20646
	int		c_flareAdds;c_flareAdds852,20670
	int		c_flareTests;c_flareTests853,20689
	int		c_flareRenders;c_flareRenders854,20709
	int		msec;			// total msec for backend runmsec856,20732
} backEndCounters_t;backEndCounters_t857,20776
	int			smpFrame;smpFrame862,20894
	trRefdef_t	refdef;refdef863,20911
	viewParms_t	viewParms;viewParms864,20931
	orientationr_t	or;or865,20955
	backEndCounters_t	pc;pc866,20975
	qboolean	isHyperspace;isHyperspace867,20998
	trRefEntity_t	*currentEntity;currentEntity868,21022
	qboolean	skyRenderedThisView;	// flag for drawing sunskyRenderedThisView869,21053
	qboolean	projection2D;	// if qtrue, drawstretchpic doesn't need to change modesprojection2D871,21109
	byte		color2D[4];color2D872,21190
	qboolean	vertexes2D;		// shader needs to be finishedvertexes2D873,21209
	trRefEntity_t	entity2D;	// currentEntity will point at this when doing 2D renderingentity2D874,21263
} backEndState_t;backEndState_t875,21348
	qboolean				registered;		// cleared at shutdown, set at beginRegistrationregistered886,21590
	int						visCount;		// incremented every time a new vis cluster is enteredvisCount888,21666
	int						frameCount;		// incremented every frameframeCount889,21742
	int						sceneCount;		// incremented every scenesceneCount890,21792
	int						viewCount;		// incremented every view (twice a scene if portaled)viewCount891,21842
	int						smpFrame;		// toggles from 0 to 1 every endFramesmpFrame894,21964
	int						frameSceneNum;	// zeroed at RE_BeginFrameframeSceneNum896,22024
	qboolean				worldMapLoaded;worldMapLoaded898,22077
	world_t					*world;world899,22106
	const byte				*externalVisData;	// from RE_SetWorldVisData, shared with CM_LoadexternalVisData901,22128
	image_t					*defaultImage;defaultImage903,22210
	image_t					*scratchImage[32];scratchImage904,22238
	image_t					*fogImage;fogImage905,22270
	image_t					*dlightImage;	// inverse-quare highlight for projective addingdlightImage906,22294
	image_t					*flareImage;flareImage907,22370
	image_t					*whiteImage;			// full of 0xffwhiteImage908,22396
	image_t					*identityLightImage;	// full of tr.identityLightByteidentityLightImage909,22440
	shader_t				*defaultShader;defaultShader911,22507
	shader_t				*shadowShader;shadowShader912,22536
	shader_t				*projectionShadowShader;projectionShadowShader913,22564
	shader_t				*flareShader;flareShader915,22603
	shader_t				*sunShader;sunShader916,22630
	int						numLightmaps;numLightmaps918,22656
	image_t					*lightmaps[MAX_LIGHTMAPS];lightmaps919,22680
	trRefEntity_t			*currentEntity;currentEntity921,22721
	trRefEntity_t			worldEntity;		// point currentEntity at this when rendering worldworldEntity922,22754
	int						currentEntityNum;currentEntityNum923,22837
	int						shiftedEntityNum;	// currentEntityNum << QSORT_ENTITYNUM_SHIFTshiftedEntityNum924,22865
	model_t					*currentModel;currentModel925,22938
	viewParms_t				viewParms;viewParms927,22967
	float					identityLight;		// 1.0 / ( 1 << overbrightBits )identityLight929,22995
	int						identityLightByte;	// identityLight * 255identityLightByte930,23055
	int						overbrightBits;		// r_overbrightBits->integer, but set to 0 if no hw gammaoverbrightBits931,23107
	orientationr_t			or;					// for current entityor933,23193
	trRefdef_t				refdef;refdef935,23242
	int						viewCluster;viewCluster937,23266
	vec3_t					sunLight;			// from the sky shader for this levelsunLight939,23290
	vec3_t					sunDirection;sunDirection940,23352
	frontEndCounters_t		pc;pc942,23379
	int						frontEndMsec;		// not in pc due to clearing issuefrontEndMsec943,23404
	model_t					*models[MAX_MOD_KNOWN];models949,23585
	int						numModels;numModels950,23622
	int						numImages;numImages952,23644
	image_t					*images[MAX_DRAWIMAGES];images953,23665
	int						numShaders;numShaders958,23939
	shader_t				*shaders[MAX_SHADERS];shaders959,23961
	shader_t				*sortedShaders[MAX_SHADERS];sortedShaders960,23997
	int						numSkins;numSkins962,24040
	skin_t					*skins[MAX_SKINS];skins963,24060
	float					sinTable[FUNCTABLE_SIZE];sinTable965,24092
	float					squareTable[FUNCTABLE_SIZE];squareTable966,24129
	float					triangleTable[FUNCTABLE_SIZE];triangleTable967,24169
	float					sawToothTable[FUNCTABLE_SIZE];sawToothTable968,24211
	float					inverseSawToothTable[FUNCTABLE_SIZE];inverseSawToothTable969,24253
	float					fogTable[FOG_TABLE_SIZE];fogTable970,24302
} trGlobals_t;trGlobals_t971,24339
#define FLARE_STDCOEFF FLARE_STDCOEFF992,25088
#define	CULL_IN	CULL_IN1141,30668
#define	CULL_CLIP	CULL_CLIP1142,30712
#define	CULL_OUT	CULL_OUT1143,30766
#define GLS_SRCBLEND_ZERO	GLS_SRCBLEND_ZERO1165,31592
#define GLS_SRCBLEND_ONE	GLS_SRCBLEND_ONE1166,31634
#define GLS_SRCBLEND_DST_COLOR	GLS_SRCBLEND_DST_COLOR1167,31675
#define GLS_SRCBLEND_ONE_MINUS_DST_COLOR	GLS_SRCBLEND_ONE_MINUS_DST_COLOR1168,31721
#define GLS_SRCBLEND_SRC_ALPHA	GLS_SRCBLEND_SRC_ALPHA1169,31774
#define GLS_SRCBLEND_ONE_MINUS_SRC_ALPHA	GLS_SRCBLEND_ONE_MINUS_SRC_ALPHA1170,31820
#define GLS_SRCBLEND_DST_ALPHA	GLS_SRCBLEND_DST_ALPHA1171,31873
#define GLS_SRCBLEND_ONE_MINUS_DST_ALPHA	GLS_SRCBLEND_ONE_MINUS_DST_ALPHA1172,31919
#define GLS_SRCBLEND_ALPHA_SATURATE	GLS_SRCBLEND_ALPHA_SATURATE1173,31972
#define		GLS_SRCBLEND_BITS	GLS_SRCBLEND_BITS1174,32022
#define GLS_DSTBLEND_ZERO	GLS_DSTBLEND_ZERO1176,32065
#define GLS_DSTBLEND_ONE	GLS_DSTBLEND_ONE1177,32107
#define GLS_DSTBLEND_SRC_COLOR	GLS_DSTBLEND_SRC_COLOR1178,32148
#define GLS_DSTBLEND_ONE_MINUS_SRC_COLOR	GLS_DSTBLEND_ONE_MINUS_SRC_COLOR1179,32194
#define GLS_DSTBLEND_SRC_ALPHA	GLS_DSTBLEND_SRC_ALPHA1180,32247
#define GLS_DSTBLEND_ONE_MINUS_SRC_ALPHA	GLS_DSTBLEND_ONE_MINUS_SRC_ALPHA1181,32293
#define GLS_DSTBLEND_DST_ALPHA	GLS_DSTBLEND_DST_ALPHA1182,32346
#define GLS_DSTBLEND_ONE_MINUS_DST_ALPHA	GLS_DSTBLEND_ONE_MINUS_DST_ALPHA1183,32392
#define		GLS_DSTBLEND_BITS	GLS_DSTBLEND_BITS1184,32445
#define GLS_DEPTHMASK_TRUE	GLS_DEPTHMASK_TRUE1186,32488
#define GLS_POLYMODE_LINE	GLS_POLYMODE_LINE1188,32532
#define GLS_DEPTHTEST_DISABLE	GLS_DEPTHTEST_DISABLE1190,32575
#define GLS_DEPTHFUNC_EQUAL	GLS_DEPTHFUNC_EQUAL1191,32620
#define GLS_ATEST_GT_0	GLS_ATEST_GT_01193,32665
#define GLS_ATEST_LT_80	GLS_ATEST_LT_801194,32705
#define GLS_ATEST_GE_80	GLS_ATEST_GE_801195,32746
#define		GLS_ATEST_BITS	GLS_ATEST_BITS1196,32787
#define GLS_DEFAULT	GLS_DEFAULT1198,32828
typedef byte color4ub_t[4];color4ub_t1292,36129
typedef struct stageVarsstageVars1294,36158
	color4ub_t	colors[SHADER_MAX_VERTEXES];colors1296,36185
	vec2_t		texcoords[NUM_TEXTURE_BUNDLES][SHADER_MAX_VERTEXES];texcoords1297,36226
} stageVars_t;stageVars_t1298,36288
typedef struct shaderCommands_s shaderCommands_s1301,36305
	shader_t	*shader;shader1314,36744
  float   shaderTime;shaderTime1315,36763
	int			fogNum;fogNum1316,36785
	int			dlightBits;	// or together of all vertexDlightBitsdlightBits1318,36801
	int			numIndexes;numIndexes1320,36860
	int			numVertexes;numVertexes1321,36879
	int			numPasses;numPasses1324,36939
	void		(*currentStageIteratorFunc)( void );currentStageIteratorFunc1325,36957
	shaderStage_t	**xstages;xstages1326,37001
} shaderCommands_t;shaderCommands_t1327,37027
#define RB_CHECKOVERFLOW(RB_CHECKOVERFLOW1334,37207
#define PATCH_STITCHINGPATCH_STITCHING1422,39543
#define MC_BITS_X MC_BITS_X1468,41069
#define MC_BITS_Y MC_BITS_Y1469,41092
#define MC_BITS_Z MC_BITS_Z1470,41115
#define MC_BITS_VECT MC_BITS_VECT1471,41138
#define MC_SCALE_X MC_SCALE_X1473,41165
#define MC_SCALE_Y MC_SCALE_Y1474,41194
#define MC_SCALE_Z MC_SCALE_Z1475,41223
#define	MAX_RENDER_COMMANDS	MAX_RENDER_COMMANDS1559,44353
	byte	cmds[MAX_RENDER_COMMANDS];cmds1562,44407
	int		used;used1563,44440
} renderCommandList_t;renderCommandList_t1564,44452
	int		commandId;commandId1567,44493
	float	color[4];color1568,44510
} setColorCommand_t;setColorCommand_t1569,44527
	int		commandId;commandId1572,44566
	int		buffer;buffer1573,44583
} drawBufferCommand_t;drawBufferCommand_t1574,44597
	int		commandId;commandId1577,44638
	image_t	*image;image1578,44655
	int		width;width1579,44672
	int		height;height1580,44685
	void	*data;data1581,44699
} subImageCommand_t;subImageCommand_t1582,44712
	int		commandId;commandId1585,44751
} swapBuffersCommand_t;swapBuffersCommand_t1586,44768
	int		commandId;commandId1589,44810
	int		buffer;buffer1590,44827
} endFrameCommand_t;endFrameCommand_t1591,44841
	int		commandId;commandId1594,44880
	shader_t	*shader;shader1595,44897
	float	x, y;x1596,44916
	float	x, y;y1596,44916
	float	w, h;w1597,44929
	float	w, h;h1597,44929
	float	s1, t1;s11598,44942
	float	s1, t1;t11598,44942
	float	s2, t2;s21599,44957
	float	s2, t2;t21599,44957
} stretchPicCommand_t;stretchPicCommand_t1600,44972
	int		commandId;commandId1603,45013
	trRefdef_t	refdef;refdef1604,45030
	viewParms_t	viewParms;viewParms1605,45050
	drawSurf_t *drawSurfs;drawSurfs1606,45074
	int		numDrawSurfs;numDrawSurfs1607,45098
} drawSurfsCommand_t;drawSurfsCommand_t1608,45118
	int commandId;commandId1611,45158
	int x;x1612,45174
	int y;y1613,45182
	int width;width1614,45190
	int height;height1615,45202
	char *fileName;fileName1616,45215
	qboolean jpeg;jpeg1617,45232
} screenshotCommand_t;screenshotCommand_t1618,45248
	int						commandId;commandId1621,45289
	int						width;width1622,45310
	int						height;height1623,45327
	byte					*captureBuffer;captureBuffer1624,45345
	byte					*encodeBuffer;encodeBuffer1625,45371
	qboolean			motionJpeg;motionJpeg1626,45396
} videoFrameCommand_t;videoFrameCommand_t1627,45420
	int commandId;commandId1631,45461
	GLboolean rgba[4];rgba1633,45478
} colorMaskCommand_t;colorMaskCommand_t1634,45498
	int commandId;commandId1638,45538
} clearDepthCommand_t;clearDepthCommand_t1639,45554
	RC_END_OF_LIST,RC_END_OF_LIST1642,45593
	RC_SET_COLOR,RC_SET_COLOR1643,45610
	RC_STRETCH_PIC,RC_STRETCH_PIC1644,45625
	RC_DRAW_SURFS,RC_DRAW_SURFS1645,45642
	RC_DRAW_BUFFER,RC_DRAW_BUFFER1646,45658
	RC_SWAP_BUFFERS,RC_SWAP_BUFFERS1647,45675
	RC_SCREENSHOT,RC_SCREENSHOT1648,45693
	RC_VIDEOFRAME,RC_VIDEOFRAME1649,45709
	RC_COLORMASK,RC_COLORMASK1650,45725
	RC_CLEARDEPTHRC_CLEARDEPTH1651,45740
} renderCommand_t;renderCommand_t1652,45755
#define	MAX_POLYS	MAX_POLYS1658,45914
#define	MAX_POLYVERTS	MAX_POLYVERTS1659,45937
	drawSurf_t	drawSurfs[MAX_DRAWSURFS];drawSurfs1666,46179
	dlight_t	dlights[MAX_DLIGHTS];dlights1667,46217
	trRefEntity_t	entities[MAX_ENTITIES];entities1668,46249
	srfPoly_t	*polys;//[MAX_POLYS];polys1669,46288
	polyVert_t	*polyVerts;//[MAX_POLYVERTS];polyVerts1670,46321
	renderCommandList_t	commands;commands1671,46363
} backEndData_t;backEndData_t1672,46394

renderer/tr_shadows.c,655
	int		i2;i238,1169
	int		facing;facing39,1179
} edgeDef_t;edgeDef_t40,1193
#define	MAX_EDGE_DEFS	MAX_EDGE_DEFS42,1207
static	edgeDef_t	edgeDefs[SHADER_MAX_VERTEXES][MAX_EDGE_DEFS];edgeDefs44,1233
static	int			numEdgeDefs[SHADER_MAX_VERTEXES];numEdgeDefs45,1296
static	int			facing[SHADER_MAX_INDEXES/3];facing46,1343
void R_AddEdgeDef( int i1, int i2, int facing ) {R_AddEdgeDef48,1387
void R_RenderShadowEdges( void ) {R_RenderShadowEdges61,1620
void RB_ShadowTessEnd( void ) {RB_ShadowTessEnd154,3768
void RB_ShadowFinish( void ) {RB_ShadowFinish264,6253
void RB_ProjectionShadowDeform( void ) {RB_ProjectionShadowDeform305,7067

renderer/tr_noise.c,481
#define NOISE_SIZE NOISE_SIZE25,1011
#define NOISE_MASK NOISE_MASK26,1034
#define VAL(VAL28,1073
#define INDEX(INDEX29,1128
static float s_noise_table[NOISE_SIZE];s_noise_table31,1199
static int s_noise_perm[NOISE_SIZE];s_noise_perm32,1239
#define LERP(LERP34,1277
static float GetNoiseValue( int x, int y, int z, int t )GetNoiseValue36,1331
void R_NoiseInit( void )R_NoiseInit43,1490
float R_NoiseGet4f( float x, float y, float z, float t )R_NoiseGet4f56,1749

renderer/tr_bsp.c,2755
static	world_t		s_worldData;s_worldData36,1136
static	byte		*fileBase;fileBase37,1165
int			c_subdivisions;c_subdivisions39,1190
int			c_gridVerts;c_gridVerts40,1212
static void HSVtoRGB( float h, float s, float v, float rgb[3] )HSVtoRGB44,1315
static	void R_ColorShiftLightingBytes( byte in[4], byte out[4] ) {R_ColorShiftLightingBytes100,1981
#define	LIGHTMAP_SIZE	LIGHTMAP_SIZE134,2620
static	void R_LoadLightmaps( lump_t *l ) {R_LoadLightmaps135,2646
void		RE_SetWorldVisData( const byte *vis ) {RE_SetWorldVisData225,5057
static	void R_LoadVisibility( lump_t *l ) {R_LoadVisibility235,5193
static shader_t *ShaderForShaderNum( int shaderNum, int lightmapNum ) {ShaderForShaderNum273,6054
static void ParseFace( dsurface_t *ds, drawVert_t *verts, msurface_t *surf, int *indexes  ) {ParseFace306,6812
static void ParseMesh ( dsurface_t *ds, drawVert_t *verts, msurface_t *surf ) {ParseMesh378,8884
static void ParseTriSurf( dsurface_t *ds, drawVert_t *verts, msurface_t *surf, int *indexes ) {ParseTriSurf445,10924
static void ParseFlare( dsurface_t *ds, drawVert_t *verts, msurface_t *surf, int *indexes ) {ParseFlare504,12707
int R_MergedWidthPoints(srfGridMesh_t *grid, int offset) {R_MergedWidthPoints537,13550
int R_MergedHeightPoints(srfGridMesh_t *grid, int offset) {R_MergedHeightPoints558,14155
void R_FixSharedVertexLodError_r( int start, srfGridMesh_t *grid1 ) {R_FixSharedVertexLodError_r581,14955
void R_FixSharedVertexLodError( void ) {R_FixSharedVertexLodError693,19542
int R_StitchPatches( int grid1num, int grid2num ) {R_StitchPatches719,20051
int R_TryStitchingPatch( int grid1num ) {R_TryStitchingPatch1134,32885
void R_StitchAllPatches( void ) {R_StitchAllPatches1165,33798
void R_MovePatchSurfacesToHunk(void) {R_MovePatchSurfacesToHunk1198,34456
static	void R_LoadSurfaces( lump_t *surfs, lump_t *verts, lump_t *indexLump ) {R_LoadSurfaces1230,35359
static	void R_LoadSubmodels( lump_t *l ) {R_LoadSubmodels1306,37119
static	void R_SetParent (mnode_t *node, mnode_t *parent)R_SetParent1351,38218
static	void R_LoadNodesAndLeafs (lump_t *nodeLump, lump_t *leafLump) {R_LoadNodesAndLeafs1365,38483
static	void R_LoadShaders( lump_t *l ) {	R_LoadShaders1443,40462
static	void R_LoadMarksurfaces (lump_t *l)R_LoadMarksurfaces1470,41100
static	void R_LoadPlanes( lump_t *l ) {R_LoadPlanes1498,41656
static	void R_LoadFogs( lump_t *l, lump_t *brushesLump, lump_t *sidesLump ) {R_LoadFogs1535,42423
void R_LoadLightGrid( lump_t *l ) {R_LoadLightGrid1650,45880
void R_LoadEntities( lump_t *l ) {R_LoadEntities1695,47211
qboolean R_GetEntityToken( char *buffer, int size ) {R_GetEntityToken1775,49025
void RE_LoadWorldMap( const char *name ) {RE_LoadWorldMap1795,49420

renderer/tr_sky.c,1965
#define SKY_SUBDIVISIONS	SKY_SUBDIVISIONS25,1009
#define HALF_SKY_SUBDIVISIONS	HALF_SKY_SUBDIVISIONS26,1037
static float s_cloudTexCoords[6][SKY_SUBDIVISIONS+1][SKY_SUBDIVISIONS+1][2];s_cloudTexCoords28,1089
static float s_cloudTexP[6][SKY_SUBDIVISIONS+1][SKY_SUBDIVISIONS+1];s_cloudTexP29,1166
static vec3_t sky_clip[6] = sky_clip39,1444
static float	sky_mins[2][6], sky_maxs[2][6];sky_mins49,1542
static float	sky_mins[2][6], sky_maxs[2][6];sky_maxs49,1542
static float	sky_min, sky_max;sky_min50,1587
static float	sky_min, sky_max;sky_max50,1587
static void AddSkyPolygon (int nump, vec3_t vecs) AddSkyPolygon57,1673
#define	ON_EPSILON	ON_EPSILON143,3043
#define	MAX_CLIP_VERTS	MAX_CLIP_VERTS144,3101
static void ClipSkyPolygon (int nump, vec3_t vecs, int stage) ClipSkyPolygon150,3182
static void ClearSkyBox (void) {ClearSkyBox246,4948
void RB_ClipSkyPolygons( shaderCommands_t *input )RB_ClipSkyPolygons260,5166
static void MakeSkyVec( float s, float t, int axis, float outSt[2], vec3_t outXYZ )MakeSkyVec292,5788
static int	sky_texorder[6] = {0,2,1,3,4,5};sky_texorder360,6666
static vec3_t	s_skyPoints[SKY_SUBDIVISIONS+1][SKY_SUBDIVISIONS+1];s_skyPoints361,6710
static float	s_skyTexCoords[SKY_SUBDIVISIONS+1][SKY_SUBDIVISIONS+1][2];s_skyTexCoords362,6777
static void DrawSkySide( struct image_s *image, const int mins[2], const int maxs[2] )DrawSkySide364,6850
static void DrawSkyBox( shader_t *shader )DrawSkyBox387,7370
static void FillCloudySkySide( const int mins[2], const int maxs[2], qboolean addIndexes )FillCloudySkySide457,9726
static void FillCloudBox( const shader_t *shader, int stage )FillCloudBox507,11336
void R_BuildCloudData( shaderCommands_t *input )R_BuildCloudData605,14176
#define SQR(SQR637,14704
void R_InitSkyTexCoords( float heightCloud )R_InitSkyTexCoords638,14731
void RB_DrawSun( void ) {RB_DrawSun699,16435
void RB_StageIteratorSky( void ) {RB_StageIteratorSky798,19343

renderer/tr_public.h,5258
#define __TR_PUBLIC_H__TR_PUBLIC_H23,996
#define	REF_API_VERSION	REF_API_VERSION27,1042
	void	(*Shutdown)( qboolean destroyWindow );Shutdown36,1324
	void	(*BeginRegistration)( glconfig_t *config );BeginRegistration47,1786
	qhandle_t (*RegisterModel)( const char *name );RegisterModel48,1836
	qhandle_t (*RegisterSkin)( const char *name );RegisterSkin49,1885
	qhandle_t (*RegisterShader)( const char *name );RegisterShader50,1933
	qhandle_t (*RegisterShaderNoMip)( const char *name );RegisterShaderNoMip51,1983
	void	(*LoadWorld)( const char *name );LoadWorld52,2038
	void	(*SetWorldVisData)( const byte *vis );SetWorldVisData56,2201
	void	(*EndRegistration)( void );EndRegistration60,2358
	void	(*ClearScene)( void );ClearScene64,2527
	void	(*AddRefEntityToScene)( const refEntity_t *re );AddRefEntityToScene65,2556
	void	(*AddPolyToScene)( qhandle_t hShader , int numVerts, const polyVert_t *verts, int num );AddPolyToScene66,2611
	int		(*LightForPoint)( vec3_t point, vec3_t ambientLight, vec3_t directedLight, vec3_t lightDir );LightForPoint67,2706
	void	(*AddLightToScene)( const vec3_t org, float intensity, float r, float g, float b );AddLightToScene68,2806
	void	(*AddAdditiveLightToScene)( const vec3_t org, float intensity, float r, float g, float b );AddAdditiveLightToScene69,2896
	void	(*RenderScene)( const refdef_t *fd );RenderScene70,2994
	void	(*SetColor)( const float *rgba );	// NULL = 1,1,1,1SetColor72,3039
	void	(*DrawStretchPic) ( float x, float y, float w, float h, DrawStretchPic73,3097
	void	(*DrawStretchRaw) (int x, int y, int w, int h, int cols, int rows, const byte *data, int client, qboolean dirty);DrawStretchRaw77,3298
	void	(*UploadCinematic) (int w, int h, int cols, int rows, const byte *data, int client, qboolean dirty);UploadCinematic78,3418
	void	(*BeginFrame)( stereoFrame_t stereoFrame );BeginFrame80,3526
	void	(*EndFrame)( int *frontEndMsec, int *backEndMsec );EndFrame83,3640
	int		(*MarkFragments)( int numPoints, const vec3_t *points, const vec3_t projection,MarkFragments86,3700
	int		(*LerpTag)( orientation_t *tag,  qhandle_t model, int startFrame, int endFrame, LerpTag89,3881
	void	(*ModelBounds)( qhandle_t model, vec3_t mins, vec3_t maxs );ModelBounds91,4009
	void    (*A3D_RenderGeometry) (void *pVoidA3D, void *pVoidGeom, void *pVoidMat, void *pVoidGeomStatus);A3D_RenderGeometry94,4093
	void	(*RegisterFont)(const char *fontName, int pointSize, fontInfo_t *font);RegisterFont96,4205
	void	(*RemapShader)(const char *oldShader, const char *newShader, const char *offsetTime);RemapShader97,4283
	qboolean (*GetEntityToken)( char *buffer, int size );GetEntityToken98,4375
	qboolean (*inPVS)( const vec3_t p1, const vec3_t p2 );inPVS99,4430
	void (*TakeVideoFrame)( int h, int w, byte* captureBuffer, byte *encodeBuffer, qboolean motionJpeg );TakeVideoFrame101,4487
} refexport_t;refexport_t102,4590
	void	(QDECL *Printf)( int printLevel, const char *fmt, ...);Printf109,4726
	void	(QDECL *Error)( int errorLevel, const char *fmt, ...);Error112,4808
	int		(*Milliseconds)( void );Milliseconds116,4985
	void	*(*Hunk_AllocDebug)( int size, ha_pref pref, char *label, char *file, int line );Hunk_AllocDebug121,5114
	void	*(*Hunk_Alloc)( int size, ha_pref pref );Hunk_Alloc123,5208
	void	*(*Hunk_AllocateTempMemory)( int size );Hunk_AllocateTempMemory125,5263
	void	(*Hunk_FreeTempMemory)( void *block );Hunk_FreeTempMemory126,5310
	void	*(*Malloc)( int bytes );Malloc129,5418
	void	(*Free)( void *buf );Free130,5449
	cvar_t	*(*Cvar_Get)( const char *name, const char *value, int flags );Cvar_Get132,5478
	void	(*Cvar_Set)( const char *name, const char *value );Cvar_Set133,5550
	void	(*Cvar_CheckRange)( cvar_t *cv, float minVal, float maxVal, qboolean shouldBeIntegral );Cvar_CheckRange134,5608
	void	(*Cmd_AddCommand)( const char *name, void(*cmd)(void) );Cmd_AddCommand136,5704
	void	(*Cmd_RemoveCommand)( const char *name );Cmd_RemoveCommand137,5767
	int		(*Cmd_Argc) (void);Cmd_Argc139,5816
	char	*(*Cmd_Argv) (int i);Cmd_Argv140,5842
	void	(*Cmd_ExecuteText) (int exec_when, const char *text);Cmd_ExecuteText142,5871
	void	(*CM_DrawDebugSurface)( void (*drawPoly)(int color, int numPoints, float *points) );CM_DrawDebugSurface145,5984
	int		(*FS_FileIsInPAK)( const char *name, int *pCheckSum );FS_FileIsInPAK149,6181
	int		(*FS_ReadFile)( const char *name, void **buf );FS_ReadFile150,6242
	void	(*FS_FreeFile)( void *buf );FS_FreeFile151,6296
	char **	(*FS_ListFiles)( const char *name, const char *extension, int *numfilesfound );FS_ListFiles152,6331
	void	(*FS_FreeFileList)( char **filelist );FS_FreeFileList153,6420
	void	(*FS_WriteFile)( const char *qpath, const void *buffer, int size );FS_WriteFile154,6465
	qboolean (*FS_FileExists)( const char *file );FS_FileExists155,6539
	void	(*CIN_UploadCinematic)(int handle);CIN_UploadCinematic158,6608
	int		(*CIN_PlayCinematic)( const char *arg0, int xpos, int ypos, int width, int height, int bits);CIN_PlayCinematic159,6650
	e_status (*CIN_RunCinematic) (int handle);CIN_RunCinematic160,6750
	void	(*CL_WriteAVIVideoFrame)( const byte *buffer, int size );CL_WriteAVIVideoFrame162,6795
} refimport_t;refimport_t163,6859

renderer/tr_flares.c,1379
typedef struct flare_s {flare_s60,2481
	struct		flare_s	*next;		// for active chainnext61,2506
	int			addedFrame;addedFrame63,2552
	qboolean	inPortal;				// true if in a portal view of the sceneinPortal65,2572
	int			frameSceneNum;frameSceneNum66,2636
	void		*surface;surface67,2658
	int			fogNum;fogNum68,2675
	int			fadeTime;fadeTime70,2691
	qboolean	visible;			// state of last testvisible72,2709
	float		drawIntensity;		// may be non 0 even if !visible due to fadingdrawIntensity73,2752
	int			windowX, windowY;windowX75,2824
	int			windowX, windowY;windowY75,2824
	float		eyeZ;eyeZ76,2849
	vec3_t		origin;origin78,2864
	vec3_t		color;color79,2881
} flare_t;flare_t80,2897
#define		MAX_FLARES	MAX_FLARES82,2909
flare_t		r_flareStructs[MAX_FLARES];r_flareStructs84,2935
flare_t		*r_activeFlares, *r_inactiveFlares;r_activeFlares85,2972
flare_t		*r_activeFlares, *r_inactiveFlares;r_inactiveFlares85,2972
int flareCoeff;flareCoeff87,3018
void R_ClearFlares( void ) {R_ClearFlares94,3093
void RB_AddFlare( void *surface, int fogNum, vec3_t point, vec3_t color, vec3_t normal ) {RB_AddFlare115,3476
void RB_AddDlightFlares( void ) {RB_AddDlightFlares207,5942
void RB_TestFlare( flare_t *f ) {RB_TestFlare261,6901
void RB_RenderFlare( flare_t *f ) {RB_RenderFlare311,8032
void RB_RenderFlares (void) {RB_RenderFlares443,12727

renderer/tr_shader.c,4008
static char *s_shaderText;s_shaderText26,1075
static	shaderStage_t	stages[MAX_SHADER_STAGES];		stages30,1221
static	shader_t		shader;shader31,1271
static	texModInfo_t	texMods[MAX_SHADER_STAGES][TR_MAX_TEXMODS];texMods32,1296
static	qboolean		deferLoad;deferLoad33,1360
#define FILE_HASH_SIZE	FILE_HASH_SIZE35,1389
static	shader_t*		hashTable[FILE_HASH_SIZE];hashTable36,1418
#define MAX_SHADERTEXT_HASH	MAX_SHADERTEXT_HASH38,1464
static char **shaderTextHashTable[MAX_SHADERTEXT_HASH];shaderTextHashTable39,1498
static long generateHashValue( const char *fname, const int size ) {generateHashValue49,1699
void R_RemapShader(const char *shaderName, const char *newShaderName, const char *timeOffset) {R_RemapShader69,2177
static qboolean ParseVector( char **text, int count, float *v ) {ParseVector119,3544
static unsigned NameToAFunc( const char *funcname )NameToAFunc154,4392
static int NameToSrcBlendMode( const char *name )NameToSrcBlendMode179,4852
static int NameToDstBlendMode( const char *name )NameToDstBlendMode227,5943
static genFunc_t NameToGenFunc( const char *funcname )NameToGenFunc271,6928
static void ParseWaveForm( char **text, waveForm_t *wave )ParseWaveForm308,7619
static void ParseTexMod( char *_text, shaderStage_t *stage )ParseTexMod360,8808
static qboolean ParseStage( shaderStage_t *stage, char **text )ParseStage590,14395
static void ParseDeform( char **text ) {ParseDeform1069,26634
static void ParseSkyParms( char **text ) {ParseSkyParms1217,30089
void ParseSort( char **text ) {ParseSort1280,31714
	char	*name;name1317,32718
	int		clearSolid, surfaceFlags, contents;clearSolid1318,32731
	int		clearSolid, surfaceFlags, contents;surfaceFlags1318,32731
	int		clearSolid, surfaceFlags, contents;contents1318,32731
} infoParm_t;infoParm_t1319,32773
infoParm_t	infoParms[] = {infoParms1321,32788
static void ParseSurfaceParm( char **text ) {ParseSurfaceParm1372,34995
static qboolean ParseShader( char **text )ParseShader1401,35680
static void ComputeStageIteratorFunc( void )ComputeStageIteratorFunc1634,41323
	int		blendA;blendA1709,42773
	int		blendB;blendB1710,42787
	int		multitextureEnv;multitextureEnv1712,42802
	int		multitextureBlend;multitextureBlend1713,42825
} collapse_t;collapse_t1714,42850
static collapse_t	collapse[] = {collapse1716,42865
static qboolean CollapseMultitexture( void ) {CollapseMultitexture1755,44138
static void FixRenderCommandList( int newShader ) {FixRenderCommandList1875,47231
static void SortNewShader( void ) {SortNewShader1948,49182
static shader_t *GeneratePermanentShader( void ) {GeneratePermanentShader1978,49808
static void VertexLightingCollapse( void ) {VertexLightingCollapse2038,51392
static shader_t *FinishShader( void ) {FinishShader2126,53765
static char *FindShaderInShaderText( const char *shadername ) {FindShaderInShaderText2322,58842
shader_t *R_FindShaderByName( const char *name ) {R_FindShaderByName2372,59665
shader_t *R_FindShader( const char *name, int lightmapIndex, qboolean mipRawImage ) {R_FindShader2431,61397
qhandle_t RE_RegisterShaderFromImage(const char *name, int lightmapIndex, image_t *image, qboolean mipRawImage) {RE_RegisterShaderFromImage2578,66080
qhandle_t RE_RegisterShaderLightMap( const char *name, int lightmapIndex ) {RE_RegisterShaderLightMap2695,69862
qhandle_t RE_RegisterShader( const char *name ) {RE_RegisterShader2729,70758
qhandle_t RE_RegisterShaderNoMip( const char *name ) {RE_RegisterShaderNoMip2759,71411
shader_t *R_GetShaderByHandle( qhandle_t hShader ) {R_GetShaderByHandle2789,72156
void	R_ShaderList_f (void) {R_ShaderList_f2809,72706
#define	MAX_SHADER_FILES	MAX_SHADER_FILES2878,74597
static void ScanAndLoadShaderFiles( void )ScanAndLoadShaderFiles2879,74627
static void CreateInternalShaders( void ) {CreateInternalShaders3017,77755
static void CreateExternalShaders( void ) {CreateExternalShaders3038,78370
void R_InitShaders( void ) {R_InitShaders3063,79071

renderer/tr_image_pcx.c,964
	char	manufacturer;manufacturer35,1239
	char	version;version36,1259
	char	encoding;encoding37,1274
	char	bits_per_pixel;bits_per_pixel38,1290
	unsigned short	xmin,ymin,xmax,ymax;xmin39,1312
	unsigned short	xmin,ymin,xmax,ymax;ymin39,1312
	unsigned short	xmin,ymin,xmax,ymax;xmax39,1312
	unsigned short	xmin,ymin,xmax,ymax;ymax39,1312
	unsigned short	hres,vres;hres40,1349
	unsigned short	hres,vres;vres40,1349
	unsigned char	palette[48];palette41,1376
	char	reserved;reserved42,1404
	char	color_planes;color_planes43,1420
	unsigned short	bytes_per_line;bytes_per_line44,1440
	unsigned short	palette_type;palette_type45,1472
	unsigned short	hscreensize, vscreensize;hscreensize46,1502
	unsigned short	hscreensize, vscreensize;vscreensize46,1502
	char	filler[54];filler47,1544
	unsigned char	data[];data48,1562
} pcx_t;pcx_t49,1585
void R_LoadPCX ( const char *filename, byte **pic, int *width, int *height)R_LoadPCX51,1595

renderer/tr_image_tga.c,977
typedef struct _TargaHeader {_TargaHeader33,1193
	unsigned char 	id_length, colormap_type, image_type;id_length34,1223
	unsigned char 	id_length, colormap_type, image_type;colormap_type34,1223
	unsigned char 	id_length, colormap_type, image_type;image_type34,1223
	unsigned short	colormap_index, colormap_length;colormap_index35,1277
	unsigned short	colormap_index, colormap_length;colormap_length35,1277
	unsigned char	colormap_size;colormap_size36,1326
	unsigned short	x_origin, y_origin, width, height;x_origin37,1356
	unsigned short	x_origin, y_origin, width, height;y_origin37,1356
	unsigned short	x_origin, y_origin, width, height;width37,1356
	unsigned short	x_origin, y_origin, width, height;height37,1356
	unsigned char	pixel_size, attributes;pixel_size38,1407
	unsigned char	pixel_size, attributes;attributes38,1407
} TargaHeader;TargaHeader39,1446
void R_LoadTGA ( const char *name, byte **pic, int *width, int *height)R_LoadTGA41,1462

renderer/tr_marks.c,699
#define MAX_VERTS_ON_POLY	MAX_VERTS_ON_POLY27,1078
#define MARKER_OFFSET	MARKER_OFFSET29,1109
#define	SIDE_FRONT	SIDE_FRONT38,1248
#define	SIDE_BACK	SIDE_BACK39,1269
#define	SIDE_ON	SIDE_ON40,1289
static void R_ChopPolyBehindPlane( int numInPoints, vec3_t inPoints[MAX_VERTS_ON_POLY],R_ChopPolyBehindPlane41,1308
void R_BoxSurfaces_r(mnode_t *node, vec3_t mins, vec3_t maxs, surfaceType_t **list, int listsize, int *listlength, vec3_t dir) {R_BoxSurfaces_r134,3134
void R_AddMarkFragments(int numClipPoints, vec3_t clipPoints[2][MAX_VERTS_ON_POLY],R_AddMarkFragments194,4965
int R_MarkFragments( int numPoints, const vec3_t *points, const vec3_t projection,R_MarkFragments253,6565

renderer/tr_image_jpg.c,933
#define JPEG_INTERNALSJPEG_INTERNALS33,1284
void R_LoadJPG( const char *filename, unsigned char **pic, int *width, int *height ) {R_LoadJPG36,1340
  struct jpeg_destination_mgr pub; /* public fields */pub222,7589
  byte* outfile;		/* target stream */outfile224,7645
  int	size;size225,7683
} my_destination_mgr;my_destination_mgr226,7695
typedef my_destination_mgr * my_dest_ptr;my_dest_ptr228,7718
init_destination (j_compress_ptr cinfo)init_destination237,7882
empty_output_buffer (j_compress_ptr cinfo)empty_output_buffer270,9286
static int hackSize;hackSize284,9636
term_destination (j_compress_ptr cinfo)term_destination287,9670
jpegDest (j_compress_ptr cinfo, byte* outfile, int size)jpegDest302,10026
void SaveJPG(char * filename, int quality, int image_width, int image_height, unsigned char *image_buffer) {SaveJPG326,10937
int SaveJPGToBuffer( byte *buffer, int quality,SaveJPGToBuffer441,15709

renderer/tr_shade.c,1840
static void APIENTRY R_ArrayElementDiscrete( GLint index ) {R_ArrayElementDiscrete43,1336
static int		c_vertexes;		// for seeing how long our average strips arec_vertexes60,1862
static int		c_begins;c_begins61,1933
static void R_DrawStripElements( int numIndexes, const glIndex_t *indexes, void ( APIENTRY *element )(GLint) ) {R_DrawStripElements62,1955
static void R_DrawElements( int numIndexes, const glIndex_t *indexes ) {R_DrawElements166,3966
shaderCommands_t	tess;tess211,4817
static qboolean	setArraysOnce;setArraysOnce212,4840
static void R_BindAnimatedImage( textureBundle_t *bundle ) {R_BindAnimatedImage220,4935
static void DrawTris (shaderCommands_t *input) {DrawTris254,5713
static void DrawNormals (shaderCommands_t *input) {DrawNormals288,6434
void RB_BeginSurface( shader_t *shader, int fogNum ) {RB_BeginSurface317,7058
static void DrawMultitextured( shaderCommands_t *input, int stage ) {DrawMultitextured348,7858
static void ProjectDlightTexture_altivec( void ) {ProjectDlightTexture_altivec406,9095
static void ProjectDlightTexture_scalar( void ) {ProjectDlightTexture_scalar579,14252
static void ProjectDlightTexture( void ) {ProjectDlightTexture722,17914
static void RB_FogPass( void ) {RB_FogPass741,18261
static void ComputeColors( shaderStage_t *pStage )ComputeColors775,19093
static void ComputeTexCoords( shaderStage_t *pStage ) {ComputeTexCoords981,24251
static void RB_IterateStagesGeneric( shaderCommands_t *input )RB_IterateStagesGeneric1080,27062
void RB_StageIteratorGeneric( void )RB_StageIteratorGeneric1145,28386
void RB_StageIteratorVertexLitTexture( void )RB_StageIteratorVertexLitTexture1259,30706
void RB_StageIteratorLightmappedMultitexture( void ) {RB_StageIteratorLightmappedMultitexture1337,32247
void RB_EndSurface( void ) {RB_EndSurface1442,34425

renderer/tr_image.c,3200
static byte			 s_intensitytable[256];s_intensitytable25,1011
static unsigned char s_gammatable[256];s_gammatable26,1049
int		gl_filter_min = GL_LINEAR_MIPMAP_NEAREST;gl_filter_min28,1090
int		gl_filter_max = GL_LINEAR;gl_filter_max29,1137
#define FILE_HASH_SIZE	FILE_HASH_SIZE31,1170
static	image_t*		hashTable[FILE_HASH_SIZE];hashTable32,1199
void R_GammaCorrect( byte *buffer, int bufSize ) {R_GammaCorrect37,1268
	char *name;name46,1425
	int	minimize, maximize;minimize47,1438
	int	minimize, maximize;maximize47,1438
} textureMode_t;textureMode_t48,1463
textureMode_t modes[] = {modes50,1481
static long generateHashValue( const char *fname ) {generateHashValue64,1940
void GL_TextureMode( const char *string ) {GL_TextureMode87,2359
int R_SumOfUsedImages( void ) {R_SumOfUsedImages129,3278
void R_ImageList_f( void ) {R_ImageList_f148,3581
static void ResampleTexture( unsigned *in, int inwidth, int inheight, unsigned *out,  ResampleTexture232,5587
void R_LightScaleTexture (unsigned *in, int inwidth, int inheight, qboolean only_gamma )R_LightScaleTexture281,6954
static void R_MipMap2( unsigned *in, int inWidth, int inHeight ) {R_MipMap2340,7929
static void R_MipMap (byte *in, int width, int height) {R_MipMap395,10068
static void R_BlendOverTexture( byte *data, int pixelCount, byte blend[4] ) {R_BlendOverTexture443,11060
byte	mipBlendColors[16][4] = {mipBlendColors460,11553
static void Upload32( unsigned *data, Upload32487,11914
image_t *R_CreateImage( const char *name, const byte *pic, int width, int height, R_CreateImage755,18172
	char *ext;ext826,19865
	void (*ImageLoader)( const char *, unsigned char **, int *, int * );ImageLoader827,19877
} imageExtToLoaderMap_t;imageExtToLoaderMap_t828,19947
static imageExtToLoaderMap_t imageLoaders[ ] =imageLoaders832,20103
static int numImageLoaders = sizeof( imageLoaders ) /numImageLoaders842,20299
void R_LoadImage( const char *name, byte **pic, int *width, int *height )R_LoadImage853,20512
image_t	*R_FindImageFile( const char *name, qboolean mipmap, qboolean allowPicmip, int glWrapClampMode ) {R_FindImageFile930,21967
#define	DLIGHT_SIZE	DLIGHT_SIZE982,23270
static void R_CreateDlightImage( void ) {R_CreateDlightImage983,23293
void R_InitFogTable( void ) {R_InitFogTable1016,24050
float	R_FogFactor( float s, float t ) {R_FogFactor1039,24461
#define	FOG_S	FOG_S1070,24869
#define	FOG_T	FOG_T1071,24887
static void R_CreateFogImage( void ) {R_CreateFogImage1072,24904
#define	DEFAULT_SIZE	DEFAULT_SIZE1113,25904
static void R_CreateDefaultImage( void ) {R_CreateDefaultImage1114,25928
void R_CreateBuiltinImages( void ) {R_CreateBuiltinImages1149,26790
void R_SetColorMappings( void ) {R_SetColorMappings1188,27832
void	R_InitImages( void ) {R_InitImages1273,29397
void R_DeleteTextures( void ) {R_DeleteTextures1287,29664
static char *CommaParse( char **data_p ) {CommaParse1324,30468
qhandle_t RE_RegisterSkin( const char *name ) {RE_RegisterSkin1430,31917
void	R_InitSkins( void ) {R_InitSkins1538,34272
skin_t	*R_GetSkinByHandle( qhandle_t hSkin ) {R_GetSkinByHandle1556,34720
void	R_SkinList_f( void ) {R_SkinList_f1568,34917

renderer/tr_main.c,3183
trGlobals_t		tr;tr28,1078
static float	s_flipMatrix[16] = {s_flipMatrix30,1096
refimport_t	ri;ri40,1296
surfaceType_t	entitySurface = SF_ENTITY;entitySurface44,1425
int R_CullLocalBox (vec3_t bounds[2]) {R_CullLocalBox53,1565
int R_CullLocalPointAndRadius( vec3_t pt, float radius )R_CullLocalPointAndRadius112,2800
int R_CullPointAndRadius( vec3_t pt, float radius )R_CullPointAndRadius124,3009
void R_LocalNormalToWorld (vec3_t local, vec3_t world) {R_LocalNormalToWorld166,3633
void R_LocalPointToWorld (vec3_t local, vec3_t world) {R_LocalPointToWorld178,4059
void R_WorldToLocal (vec3_t world, vec3_t local) {R_WorldToLocal190,4533
void R_TransformModelToClip( const vec3_t src, const float *modelMatrix, const float *projectionMatrix,R_TransformModelToClip202,4809
void R_TransformClipToWindow( const vec4_t clip, const viewParms_t *view, vec4_t normalized, vec4_t window ) {R_TransformClipToWindow229,5462
void myGlMultMatrix( const float *a, const float *b, float *out ) {myGlMultMatrix249,6030
void R_RotateForEntity( const trRefEntity_t *ent, const viewParms_t *viewParms,R_RotateForEntity272,6555
void R_RotateForViewer (void) R_RotateForViewer339,8247
static void R_SetFarClip( void )R_SetFarClip384,9657
void R_SetupFrustum (viewParms_t *dest, float xmin, float xmax, float ymax, float zProj, float stereoSep)R_SetupFrustum453,10896
void R_SetupProjection(viewParms_t *dest, float zProj, qboolean computeFrustum)R_SetupProjection513,13018
void R_SetupProjectionZ(viewParms_t *dest)R_SetupProjectionZ569,14562
void R_MirrorPoint (vec3_t in, orientation_t *surface, orientation_t *camera, vec3_t out) {R_MirrorPoint588,14943
void R_MirrorVector (vec3_t in, orientation_t *surface, orientation_t *camera, vec3_t out) {R_MirrorVector605,15357
void R_PlaneForSurface (surfaceType_t *surfType, cplane_t *plane) {R_PlaneForSurface622,15665
qboolean R_GetPortalOrientations( drawSurf_t *drawSurf, int entityNum, R_GetPortalOrientations669,16822
static qboolean IsMirror( const drawSurf_t *drawSurf, int entityNum )IsMirror788,21116
static qboolean SurfIsOffscreen( const drawSurf_t *drawSurf, vec4_t clipDest[128] ) {SurfIsOffscreen853,22810
qboolean R_MirrorViewBySurface (drawSurf_t *drawSurf, int entityNum) {R_MirrorViewBySurface958,25170
int R_SpriteFogNum( trRefEntity_t *ent ) {R_SpriteFogNum1015,26747
static ID_INLINE void R_Radix( int byte, int size, drawSurf_t *source, drawSurf_t *dest )R_Radix1054,27465
static void R_RadixSort( drawSurf_t *source, int size )R_RadixSort1084,28259
void R_AddDrawSurf( surfaceType_t *surface, shader_t *shader, R_AddDrawSurf1107,28884
void R_DecomposeSort( unsigned sort, int *entityNum, shader_t **shader, R_DecomposeSort1127,29548
void R_SortDrawSurfs( drawSurf_t *drawSurfs, int numDrawSurfs ) {R_SortDrawSurfs1140,29932
void R_AddEntitySurfaces (void) {R_AddEntitySurfaces1196,31461
void R_GenerateDrawSurfs( void ) {R_GenerateDrawSurfs1291,34030
void R_DebugPolygon( int color, int numPoints, float *points ) {R_DebugPolygon1316,34603
void R_DebugGraphics( void ) {R_DebugGraphics1349,35357
void R_RenderView (viewParms_t *parms) {R_RenderView1371,35753

renderer/tr_font.c,1282
#define _FLOOR(_FLOOR84,4339
#define _CEIL(_CEIL85,4370
#define _TRUNC(_TRUNC86,4406
FT_Library ftLibrary = NULL;  ftLibrary88,4437
#define MAX_FONTS MAX_FONTS91,4476
static int registeredFontCount = 0;registeredFontCount92,4496
static fontInfo_t registeredFont[MAX_FONTS];registeredFont93,4532
void R_GetGlyphInfo(FT_GlyphSlot glyph, int *left, int *right, int *width, int *top, int *bottom, int *height, int *pitch) {R_GetGlyphInfo96,4600
FT_Bitmap *R_RenderGlyph(FT_GlyphSlot glyph, glyphInfo_t* glyphOut) {R_RenderGlyph109,5114
void WriteTGA (char *filename, byte *data, int width, int height) {WriteTGA148,6167
static glyphInfo_t *RE_ConstructGlyphInfo(unsigned char *imageOut, int *xOut, int *yOut, int *maxHeight, FT_Face face, const unsigned char c, qboolean calcHeight) {RE_ConstructGlyphInfo180,6878
static int fdOffset;fdOffset298,9723
static byte	*fdFile;fdFile299,9744
int readInt( void ) {readInt301,9766
	byte	fred[4];fred308,9935
	float	ffred;ffred309,9950
} poor;poor310,9964
float readFloat( void ) {readFloat312,9973
void RE_RegisterFont(const char *fontName, int pointSize, fontInfo_t *font) {RE_RegisterFont329,10382
void R_InitFreeType(void) {R_InitFreeType530,16262
void R_DoneFreeType(void) {R_DoneFreeType540,16472

client/cl_parse.c,1146
char *svc_strings[256] = {svc_strings26,1055
void SHOWNET( msg_t *msg, char *s) {SHOWNET41,1267
void CL_DeltaEntity (msg_t *msg, clSnapshot_t *frame, int newnum, entityState_t *old, CL_DeltaEntity64,1711
void CL_ParsePacketEntities( msg_t *msg, clSnapshot_t *oldframe, clSnapshot_t *newframe) {CL_ParsePacketEntities91,2347
void CL_ParseSnapshot( msg_t *msg ) {CL_ParseSnapshot203,5233
int cl_connectedToPureServer;cl_connectedToPureServer330,9109
int cl_connectedToCheatServer;cl_connectedToCheatServer331,9139
int cl_connectedToVoipServer;cl_connectedToVoipServer334,9187
void CL_SystemInfoChanged( void ) {CL_SystemInfoChanged346,9441
static void CL_ParseServerInfo(void)CL_ParseServerInfo436,11961
void CL_ParseGamestate( msg_t *msg ) {CL_ParseGamestate455,12356
void CL_ParseDownload ( msg_t *msg ) {CL_ParseDownload548,14855
qboolean CL_ShouldIgnoreVoipSender(int sender)CL_ShouldIgnoreVoipSender640,17044
void CL_ParseVoip ( msg_t *msg ) {CL_ParseVoip664,17672
void CL_ParseCommandString( msg_t *msg ) {CL_ParseCommandString804,22266
void CL_ParseServerMessage( msg_t *msg ) {CL_ParseServerMessage828,22746

client/cl_main.c,9398
cvar_t	*cl_useMumble;cl_useMumble32,1121
cvar_t	*cl_mumbleScale;cl_mumbleScale33,1143
cvar_t	*cl_voipUseVAD;cl_voipUseVAD37,1191
cvar_t	*cl_voipVADThreshold;cl_voipVADThreshold38,1214
cvar_t	*cl_voipSend;cl_voipSend39,1243
cvar_t	*cl_voipSendTarget;cl_voipSendTarget40,1264
cvar_t	*cl_voipGainDuringCapture;cl_voipGainDuringCapture41,1291
cvar_t	*cl_voipCaptureMult;cl_voipCaptureMult42,1325
cvar_t	*cl_voipShowMeter;cl_voipShowMeter43,1353
cvar_t	*cl_voip;cl_voip44,1379
cvar_t	*cl_nodelta;cl_nodelta47,1404
cvar_t	*cl_debugMove;cl_debugMove48,1424
cvar_t	*cl_noprint;cl_noprint50,1447
cvar_t	*cl_motd;cl_motd51,1467
cvar_t	*rcon_client_password;rcon_client_password53,1485
cvar_t	*rconAddress;rconAddress54,1515
cvar_t	*cl_timeout;cl_timeout56,1537
cvar_t	*cl_maxpackets;cl_maxpackets57,1557
cvar_t	*cl_packetdup;cl_packetdup58,1580
cvar_t	*cl_timeNudge;cl_timeNudge59,1602
cvar_t	*cl_showTimeDelta;cl_showTimeDelta60,1624
cvar_t	*cl_freezeDemo;cl_freezeDemo61,1650
cvar_t	*cl_shownet;cl_shownet63,1674
cvar_t	*cl_showSend;cl_showSend64,1694
cvar_t	*cl_timedemo;cl_timedemo65,1715
cvar_t	*cl_timedemoLog;cl_timedemoLog66,1736
cvar_t	*cl_autoRecordDemo;cl_autoRecordDemo67,1760
cvar_t	*cl_aviFrameRate;cl_aviFrameRate68,1787
cvar_t	*cl_aviMotionJpeg;cl_aviMotionJpeg69,1812
cvar_t	*cl_forceavidemo;cl_forceavidemo70,1838
cvar_t	*cl_freelook;cl_freelook72,1864
cvar_t	*cl_sensitivity;cl_sensitivity73,1885
cvar_t	*cl_mouseAccel;cl_mouseAccel75,1910
cvar_t	*cl_showMouseRate;cl_showMouseRate76,1933
cvar_t	*m_pitch;m_pitch78,1960
cvar_t	*m_yaw;m_yaw79,1977
cvar_t	*m_forward;m_forward80,1992
cvar_t	*m_side;m_side81,2011
cvar_t	*m_filter;m_filter82,2027
cvar_t	*cl_activeAction;cl_activeAction84,2046
cvar_t	*cl_motdString;cl_motdString86,2072
cvar_t	*cl_allowDownload;cl_allowDownload88,2096
cvar_t	*cl_conXOffset;cl_conXOffset89,2122
cvar_t	*cl_inGameVideo;cl_inGameVideo90,2145
cvar_t	*cl_serverStatusResendTime;cl_serverStatusResendTime92,2170
cvar_t	*cl_trn;cl_trn93,2205
cvar_t	*cl_lanForcePackets;cl_lanForcePackets95,2222
cvar_t	*cl_guidServerUniq;cl_guidServerUniq97,2251
cvar_t	*cl_consoleKeys;cl_consoleKeys99,2279
clientActive_t		cl;cl101,2304
clientConnection_t	clc;clc102,2324
clientStatic_t		cls;cls103,2348
vm_t				*cgvm;cgvm104,2369
refexport_t	re;re107,2445
ping_t	cl_pinglist[MAX_PINGREQUESTS];cl_pinglist109,2462
typedef struct serverStatus_sserverStatus_s111,2501
	char string[BIG_INFO_STRING];string113,2533
	netadr_t address;address114,2564
	int time, startTime;time115,2583
	int time, startTime;startTime115,2583
	qboolean pending;pending116,2605
	qboolean print;print117,2624
	qboolean retrieved;retrieved118,2641
} serverStatus_t;serverStatus_t119,2662
serverStatus_t cl_serverStatusList[MAX_SERVERSTATUSREQUESTS];cl_serverStatusList121,2681
int serverStatusCount;serverStatusCount122,2743
void CL_CDDialog( void ) {CL_CDDialog141,3149
void CL_UpdateMumble(void)CL_UpdateMumble147,3250
void CL_UpdateVoipIgnore(const char *idstr, qboolean ignore)CL_UpdateVoipIgnore185,4004
void CL_UpdateVoipGain(const char *idstr, float gain)CL_UpdateVoipGain200,4436
void CL_Voip_f( void )CL_Voip_f213,4745
void CL_VoipNewGeneration(void)CL_VoipNewGeneration251,5893
void CL_CaptureVoip(void)CL_CaptureVoip271,6378
void CL_AddReliableCommand( const char *cmd ) {CL_AddReliableCommand444,11932
void CL_ChangeReliableCommand( void ) {CL_ChangeReliableCommand462,12494
void CL_WriteDemoMessage ( msg_t *msg, int headerBytes ) {CL_WriteDemoMessage491,13168
void CL_StopRecord_f( void ) {CL_StopRecord_f514,13669
void CL_DemoFilename( int number, char *fileName ) {CL_DemoFilename538,14103
static char		demoName[MAX_QPATH];	// compiler bug workarounddemoName565,14550
void CL_Record_f( void ) {CL_Record_f566,14611
static float CL_DemoFrameDurationSDev( void )CL_DemoFrameDurationSDev704,18095
void CL_DemoCompleted( void )CL_DemoCompleted736,18688
void CL_ReadDemoMessage( void ) {CL_ReadDemoMessage801,20171
static void CL_WalkDemoExt(char *arg, char *name, int *demofile)CL_WalkDemoExt854,21213
static void CL_CompleteDemoName( char *args, int argNum )CL_CompleteDemoName878,21661
void CL_PlayDemo_f( void ) {CL_PlayDemo_f897,21978
void CL_StartDemoLoop( void ) {CL_StartDemoLoop972,23875
void CL_NextDemo( void ) {CL_NextDemo986,24143
void CL_ShutdownAll(void) {CL_ShutdownAll1010,24584
void CL_FlushMemory( void ) {CL_FlushMemory1042,25199
void CL_MapLoading( void ) {CL_MapLoading1071,25798
void CL_ClearState (void) {CL_ClearState1116,27086
static void CL_UpdateGUID( const char *prefix, int prefix_len )CL_UpdateGUID1130,27292
void CL_Disconnect( qboolean showMainMenu ) {CL_Disconnect1156,27924
void CL_ForwardCommandToServer( const char *string ) {CL_ForwardCommandToServer1263,30441
void CL_RequestMotd( void ) {CL_RequestMotd1291,30915
void CL_RequestAuthorization( void ) {CL_RequestAuthorization1362,33245
void CL_ForwardToServer_f( void ) {CL_ForwardToServer_f1419,34720
void CL_Setenv_f( void ) {CL_Setenv_f1438,35086
void CL_Disconnect_f( void ) {CL_Disconnect_f1471,35622
void CL_Reconnect_f( void ) {CL_Reconnect_f1486,35905
void CL_Connect_f( void ) {CL_Connect_f1501,36229
#define MAX_RCON_MESSAGE MAX_RCON_MESSAGE1582,38150
static void CL_CompleteRcon( char *args, int argNum )CL_CompleteRcon1589,38241
void CL_Rcon_f( void ) {CL_Rcon_f1609,38581
void CL_SendPureChecksums( void ) {CL_SendPureChecksums1657,39678
void CL_ResetPureClientAtServer( void ) {CL_ResetPureClientAtServer1671,40024
void CL_Vid_Restart_f( void ) {CL_Vid_Restart_f1685,40293
void CL_Snd_Restart_f( void ) {CL_Snd_Restart_f1752,41902
void CL_OpenedPK3List_f( void ) {CL_OpenedPK3List_f1765,42043
void CL_ReferencedPK3List_f( void ) {CL_ReferencedPK3List_f1774,42198
void CL_Configstrings_f( void ) {CL_Configstrings_f1783,42370
void CL_Clientinfo_f( void ) {CL_Clientinfo_f1806,42761
void CL_DownloadsComplete( void ) {CL_DownloadsComplete1825,43273
void CL_BeginDownload( const char *localName, const char *remoteName ) {CL_BeginDownload1899,45054
void CL_NextDownload(void) {CL_NextDownload1928,45866
void CL_InitDownloads(void) {CL_InitDownloads2016,47926
void CL_CheckForResend( void ) {CL_CheckForResend2055,49147
void CL_DisconnectPacket( netadr_t from ) {CL_DisconnectPacket2130,51433
void CL_MotdPacket( netadr_t from ) {CL_MotdPacket2159,52055
void CL_InitServerInfo( serverInfo_t *server, netadr_t *address ) {CL_InitServerInfo2187,52619
#define MAX_SERVERSPERPACKET	MAX_SERVERSPERPACKET2201,52953
void CL_ServersResponsePacket( const netadr_t* from, msg_t *msg, qboolean extended ) {CL_ServersResponsePacket2208,53058
void CL_ConnectionlessPacket( netadr_t from, msg_t *msg ) {CL_ConnectionlessPacket2319,55820
void CL_PacketEvent( netadr_t from, msg_t *msg ) {CL_PacketEvent2443,59096
void CL_CheckTimeout( void ) {CL_CheckTimeout2502,60476
qboolean CL_CheckPaused(void)CL_CheckPaused2525,61007
void CL_CheckUserinfo( void ) {CL_CheckUserinfo2544,61421
void CL_Frame ( int msec ) {CL_Frame2567,61917
void QDECL CL_RefPrintf( int print_level, const char *fmt, ...) {CL_RefPrintf2715,65249
void CL_ShutdownRef( void ) {CL_ShutdownRef2739,65758
void CL_InitRenderer( void ) {CL_InitRenderer2752,65935
void CL_StartHunkUsers( qboolean rendererOnly ) {CL_StartHunkUsers2772,66589
void *CL_RefMalloc( int size ) {CL_RefMalloc2815,67175
int CL_ScaledMilliseconds(void) {CL_ScaledMilliseconds2819,67254
void CL_InitRef( void ) {CL_InitRef2828,67383
void CL_SetModel_f( void ) {CL_SetModel_f2893,69061
void CL_Video_f( void )CL_Video_f2919,69507
void CL_StopVideo_f( void )CL_StopVideo_f2974,70514
static void CL_GenerateQKey(void)CL_GenerateQKey2987,70744
void CL_Init( void ) {CL_Init3025,71475
void CL_Shutdown( void ) {CL_Shutdown3226,79209
static void CL_SetServerInfo(serverInfo_t *server, const char *info, int ping) {CL_SetServerInfo3281,80473
static void CL_SetServerInfoByAddress(netadr_t from, const char *info, int ping) {CL_SetServerInfoByAddress3299,81313
void CL_ServerInfoPacket( netadr_t from, msg_t *msg ) {CL_ServerInfoPacket3327,81966
serverStatus_t *CL_GetServerStatus( netadr_t from ) {CL_GetServerStatus3427,84553
int CL_ServerStatus( char *serverAddress, char *serverStatusString, int maxLen ) {CL_ServerStatus3462,85437
void CL_ServerStatusResponse( netadr_t from, msg_t *msg ) {CL_ServerStatusResponse3525,87307
void CL_LocalServers_f( void ) {CL_LocalServers_f3618,89388
void CL_GlobalServers_f( void ) {CL_GlobalServers_f3662,90696
void CL_GetPing( int n, char *buf, int buflen, int *pingtime )CL_GetPing3728,92326
void CL_UpdateServerInfo( int n )CL_UpdateServerInfo3771,93085
void CL_GetPingInfo( int n, char *buf, int buflen )CL_GetPingInfo3786,93322
void CL_ClearPing( int n )CL_ClearPing3804,93581
int CL_GetPingQueueCount( void )CL_GetPingQueueCount3817,93756
ping_t* CL_GetFreePing( void )CL_GetFreePing3840,94047
void CL_Ping_f( void ) {CL_Ping_f3897,94927
qboolean CL_UpdateVisiblePings_f(int source) {CL_UpdateVisiblePings_f3947,95852
void CL_ServerStatus_f(void) {CL_ServerStatus_f4052,98332
void CL_ShowIP_f(void) {CL_ShowIP_f4109,99426
qboolean CL_CDKeyValidate( const char *key, const char *checksum ) {CL_CDKeyValidate4119,99552

client/qal.h,4676
#define __QAL_H____QAL_H__26,1047
#define AL_NO_PROTOTYPESAL_NO_PROTOTYPES32,1157
#define ALC_NO_PROTOTYPESALC_NO_PROTOTYPES33,1182
#define qalEnable qalEnable146,5223
#define qalDisable qalDisable147,5250
#define qalIsEnabled qalIsEnabled148,5279
#define qalGetString qalGetString149,5312
#define qalGetBooleanv qalGetBooleanv150,5345
#define qalGetIntegerv qalGetIntegerv151,5382
#define qalGetFloatv qalGetFloatv152,5419
#define qalGetDoublev qalGetDoublev153,5452
#define qalGetBoolean qalGetBoolean154,5487
#define qalGetInteger qalGetInteger155,5522
#define qalGetFloat qalGetFloat156,5557
#define qalGetDouble qalGetDouble157,5588
#define qalGetError qalGetError158,5621
#define qalIsExtensionPresent qalIsExtensionPresent159,5652
#define qalGetProcAddress qalGetProcAddress160,5703
#define qalGetEnumValue qalGetEnumValue161,5746
#define qalListenerf qalListenerf162,5785
#define qalListener3f qalListener3f163,5818
#define qalListenerfv qalListenerfv164,5853
#define qalListeneri qalListeneri165,5888
#define qalListener3i qalListener3i166,5921
#define qalListeneriv qalListeneriv167,5956
#define qalGetListenerf qalGetListenerf168,5991
#define qalGetListener3f qalGetListener3f169,6030
#define qalGetListenerfv qalGetListenerfv170,6071
#define qalGetListeneri qalGetListeneri171,6112
#define qalGetListener3i qalGetListener3i172,6151
#define qalGetListeneriv qalGetListeneriv173,6192
#define qalGenSources qalGenSources174,6233
#define qalDeleteSources qalDeleteSources175,6268
#define qalIsSource qalIsSource176,6309
#define qalSourcef qalSourcef177,6340
#define qalSource3f qalSource3f178,6369
#define qalSourcefv qalSourcefv179,6400
#define qalSourcei qalSourcei180,6431
#define qalSource3i qalSource3i181,6460
#define qalSourceiv qalSourceiv182,6491
#define qalGetSourcef qalGetSourcef183,6522
#define qalGetSource3f qalGetSource3f184,6557
#define qalGetSourcefv qalGetSourcefv185,6594
#define qalGetSourcei qalGetSourcei186,6631
#define qalGetSource3i qalGetSource3i187,6666
#define qalGetSourceiv qalGetSourceiv188,6703
#define qalSourcePlayv qalSourcePlayv189,6740
#define qalSourceStopv qalSourceStopv190,6777
#define qalSourceRewindv qalSourceRewindv191,6814
#define qalSourcePausev qalSourcePausev192,6855
#define qalSourcePlay qalSourcePlay193,6894
#define qalSourceStop qalSourceStop194,6929
#define qalSourceRewind qalSourceRewind195,6964
#define qalSourcePause qalSourcePause196,7003
#define qalSourceQueueBuffers qalSourceQueueBuffers197,7040
#define qalSourceUnqueueBuffers qalSourceUnqueueBuffers198,7091
#define qalGenBuffers qalGenBuffers199,7146
#define qalDeleteBuffers qalDeleteBuffers200,7181
#define qalIsBuffer qalIsBuffer201,7222
#define qalBufferData qalBufferData202,7253
#define qalBufferf qalBufferf203,7288
#define qalBuffer3f qalBuffer3f204,7317
#define qalBufferfv qalBufferfv205,7348
#define qalBufferi qalBufferi206,7379
#define qalBuffer3i qalBuffer3i207,7408
#define qalBufferiv qalBufferiv208,7439
#define qalGetBufferf qalGetBufferf209,7470
#define qalGetBuffer3f qalGetBuffer3f210,7505
#define qalGetBufferfv qalGetBufferfv211,7542
#define qalGetBufferi qalGetBufferi212,7579
#define qalGetBuffer3i qalGetBuffer3i213,7614
#define qalGetBufferiv qalGetBufferiv214,7651
#define qalDopplerFactor qalDopplerFactor215,7688
#define qalDopplerVelocity qalDopplerVelocity216,7729
#define qalSpeedOfSound qalSpeedOfSound217,7774
#define qalDistanceModel qalDistanceModel218,7813
#define qalcCreateContext qalcCreateContext220,7855
#define qalcMakeContextCurrent qalcMakeContextCurrent221,7898
#define qalcProcessContext qalcProcessContext222,7951
#define qalcSuspendContext qalcSuspendContext223,7996
#define qalcDestroyContext qalcDestroyContext224,8041
#define qalcGetCurrentContext qalcGetCurrentContext225,8086
#define qalcGetContextsDevice qalcGetContextsDevice226,8137
#define qalcOpenDevice qalcOpenDevice227,8188
#define qalcCloseDevice qalcCloseDevice228,8225
#define qalcGetError qalcGetError229,8264
#define qalcIsExtensionPresent qalcIsExtensionPresent230,8297
#define qalcGetProcAddress qalcGetProcAddress231,8350
#define qalcGetEnumValue qalcGetEnumValue232,8395
#define qalcGetString qalcGetString233,8436
#define qalcGetIntegerv qalcGetIntegerv234,8471
#define qalcCaptureOpenDevice qalcCaptureOpenDevice235,8510
#define qalcCaptureCloseDevice qalcCaptureCloseDevice236,8561
#define qalcCaptureStart qalcCaptureStart237,8614
#define qalcCaptureStop qalcCaptureStop238,8655
#define qalcCaptureSamples qalcCaptureSamples239,8694

client/cl_keys.c,3415
field_t	historyEditLines[COMMAND_HISTORY];historyEditLines30,1051
int			nextHistoryLine;		// the last line in the history buffer, not maskednextHistoryLine32,1095
int			historyLine;	// the line being displayed from history bufferhistoryLine33,1170
field_t		g_consoleField;g_consoleField36,1275
field_t		chatField;chatField37,1300
qboolean	chat_team;chat_team38,1320
int			chat_playerNum;chat_playerNum40,1341
qboolean	key_overstrikeMode;key_overstrikeMode43,1365
int				anykeydown;anykeydown45,1395
qkey_t		keys[MAX_KEYS];keys46,1414
	char	*name;name50,1457
	int		keynum;keynum51,1470
} keyname_t;keyname_t52,1484
keyname_t keynames[] =keynames56,1580
void Field_VariableSizeDraw( field_t *edit, int x, int y, int width, int size, qboolean showCursor,Field_VariableSizeDraw312,7231
void Field_Draw( field_t *edit, int x, int y, int width, qboolean showCursor, qboolean noColorEscape ) Field_Draw385,8916
void Field_BigDraw( field_t *edit, int x, int y, int width, qboolean showCursor, qboolean noColorEscape ) Field_BigDraw390,9115
void Field_Paste( field_t *edit ) {Field_Paste400,9367
void Field_KeyDownEvent( field_t *edit, int key ) {Field_KeyDownEvent429,9917
void Field_CharEvent( field_t *edit, int ch ) {Field_CharEvent490,11050
void Console_Key (int key) {Console_Key577,12744
void Message_Key( int key ) {Message_Key717,16290
qboolean Key_GetOverstrikeMode( void ) {Key_GetOverstrikeMode756,17180
void Key_SetOverstrikeMode( qboolean state ) {Key_SetOverstrikeMode761,17253
qboolean Key_IsDown( int keynum ) {Key_IsDown771,17390
int Key_StringToKeynum( char *str ) {Key_StringToKeynum792,17873
char *Key_KeynumToString( int keynum ) {Key_KeynumToString828,18448
void Key_SetBinding( int keynum, const char *binding ) {Key_SetBinding874,19272
char *Key_GetBinding( int keynum ) {Key_GetBinding898,19783
int Key_GetKey(const char *binding) {Key_GetKey912,19974
void Key_Unbind_f (void)Key_Unbind_f930,20259
void Key_Unbindall_f (void)Key_Unbindall_f955,20614
void Key_Bind_f (void)Key_Bind_f970,20797
void Key_WriteBindings( fileHandle_t f ) {Key_WriteBindings1017,21587
void Key_Bindlist_f( void ) {Key_Bindlist_f1038,21892
void Key_KeynameCompletion( void(*callback)(const char *s) ) {Key_KeynameCompletion1053,22155
static void Key_CompleteUnbind( char *args, int argNum )Key_CompleteUnbind1065,22379
static void Key_CompleteBind( char *args, int argNum )Key_CompleteBind1082,22642
void CL_InitKeyCommands( void ) {CL_InitKeyCommands1109,23061
void CL_AddKeyUpCommands( int key, char *kb, unsigned time) {CL_AddKeyUpCommands1124,23483
void CL_KeyEvent (int key, qboolean down, unsigned time) {CL_KeyEvent1170,24447
void CL_CharEvent( int key ) {CL_CharEvent1346,28549
void Key_ClearStates (void)Key_ClearStates1378,29222
static int keyCatchers = 0;keyCatchers1394,29426
int Key_GetCatcher( void ) {Key_GetCatcher1401,29518
void Key_SetCatcher( int catcher ) {Key_SetCatcher1410,29634
#define			MAX_CONSOLE_SAVE_BUFFER	MAX_CONSOLE_SAVE_BUFFER1419,29847
#define			CONSOLE_HISTORY_FILE CONSOLE_HISTORY_FILE1420,29886
static char	consoleSaveBuffer[ MAX_CONSOLE_SAVE_BUFFER ];consoleSaveBuffer1421,29932
static int	consoleSaveBufferSize = 0;consoleSaveBufferSize1422,29990
void CL_LoadConsoleHistory( void )CL_LoadConsoleHistory1431,30140
void CL_SaveConsoleHistory( void )CL_SaveConsoleHistory1500,31801

client/client.h,11301
#define QKEY_FILE QKEY_FILE43,1457
#define QKEY_SIZE QKEY_SIZE44,1482
#define	RETRANSMIT_TIMEOUT	RETRANSMIT_TIMEOUT46,1506
	qboolean		valid;			// cleared if delta parsing was invalidvalid50,1656
	int				snapFlags;		// rate delayed and dropped commandssnapFlags51,1716
	int				serverTime;		// server time the message is valid for (in msec)serverTime53,1774
	int				messageNum;		// copied from netchan->incoming_sequencemessageNum55,1846
	int				deltaNum;		// messageNum the delta is fromdeltaNum56,1909
	int				ping;			// time from when cmdNum-1 was sent to time packet was reeceivedping57,1960
	byte			areamask[MAX_MAP_AREA_BYTES];		// portalarea visibility bitsareamask58,2041
	int				cmdNum;			// the next cmdNum the server is expectingcmdNum60,2111
	playerState_t	ps;						// complete information about the current player at this timeps61,2172
	int				numEntities;			// all of the entities that need to be presentednumEntities63,2259
	int				parseEntitiesNum;		// at the time of this snapshotparseEntitiesNum64,2331
	int				serverCommandNum;		// execute all commands up to this beforeserverCommandNum66,2391
} clSnapshot_t;clSnapshot_t68,2502
	int		p_cmdNumber;		// cl.cmdNumber when packet was sentp_cmdNumber82,2837
	int		p_serverTime;		// usercmd->serverTime when packet was sentp_serverTime83,2894
	int		p_realtime;			// cls.realtime when packet was sentp_realtime84,2959
} outPacket_t;outPacket_t85,3016
#define	MAX_PARSE_ENTITIES	MAX_PARSE_ENTITIES90,3230
	int			timeoutcount;		// it requres several frames in a timeout conditiontimeoutcount95,3315
	clSnapshot_t	snap;			// latest received from serversnap98,3503
	int			serverTime;			// may be paused during playserverTime100,3557
	int			oldServerTime;		// to prevent time from flowing bakcwardsoldServerTime101,3607
	int			oldFrameServerTime;	// to check tournament restartsoldFrameServerTime102,3672
	int			serverTimeDelta;	// cl.serverTime = cls.realtime + cl.serverTimeDeltaserverTimeDelta103,3731
	qboolean	extrapolatedSnapshot;	// set if any cgame frame has been forced to extrapolateextrapolatedSnapshot105,3857
	qboolean	newSnapshots;		// set on parse of any valid packetnewSnapshots107,4002
	gameState_t	gameState;			// configstringsgameState109,4064
	char		mapname[MAX_QPATH];	// extracted from CS_SERVERINFOmapname110,4107
	int			parseEntitiesNum;	// index (not anded off) into cl_parse_entities[]parseEntitiesNum112,4167
	int			mouseDx[2], mouseDy[2];	// added to by mouse eventsmouseDx114,4243
	int			mouseDx[2], mouseDy[2];	// added to by mouse eventsmouseDy114,4243
	int			mouseIndex;mouseIndex115,4302
	int			joystickAxis[MAX_JOYSTICK_AXIS];	// set by joystick eventsjoystickAxis116,4321
	int			cgameUserCmdValue;	// current weapon to add to usercmd_tcgameUserCmdValue119,4445
	float		cgameSensitivity;cgameSensitivity120,4509
	usercmd_t	cmds[CMD_BACKUP];	// each mesage will send several old cmdscmds124,4639
	int			cmdNumber;			// incremented each frame, because multiplecmdNumber125,4710
	outPacket_t	outPackets[PACKET_BACKUP];	// information about each packet we have sent outoutPackets128,4837
	vec3_t		viewangles;viewangles135,5247
	int			serverId;			// included in each client message so the serverserverId137,5269
	clSnapshot_t	snapshots[PACKET_BACKUP];snapshots140,5464
	entityState_t	entityBaselines[MAX_GENTITIES];	// for delta compression when not in previous frameentityBaselines142,5505
	entityState_t	parseEntities[MAX_PARSE_ENTITIES];parseEntities144,5605
} clientActive_t;clientActive_t145,5655
#define MAX_TIMEDEMO_DURATIONS	MAX_TIMEDEMO_DURATIONS161,6120
	int			clientNum;clientNum165,6175
	int			lastPacketSentTime;			// for retransmits during connectionlastPacketSentTime166,6193
	int			lastPacketTime;				// for timeoutslastPacketTime167,6259
	netadr_t	serverAddress;serverAddress169,6302
	int			connectTime;				// for connection retransmitsconnectTime170,6327
	int			connectPacketCount;			// for display on connection dialogconnectPacketCount171,6380
	char		serverMessage[MAX_STRING_TOKENS];	// for display on connection dialogserverMessage172,6445
	int			challenge;					// from the server to use for connectingchallenge174,6523
	int			checksumFeed;				// from the server for checksum calculationschecksumFeed175,6586
	int			reliableSequence;reliableSequence178,6714
	int			reliableAcknowledge;		// the last one the server has executedreliableAcknowledge179,6739
	char		reliableCommands[MAX_RELIABLE_COMMANDS][MAX_STRING_CHARS];reliableCommands180,6808
	int			serverMessageSequence;serverMessageSequence188,7141
	int			serverCommandSequence;serverCommandSequence191,7215
	int			lastExecutedServerCommand;		// last server command grabbed or executed with CL_GetServerCommandlastExecutedServerCommand192,7245
	char		serverCommands[MAX_RELIABLE_COMMANDS][MAX_STRING_CHARS];serverCommands193,7348
	fileHandle_t download;download196,7443
	char		downloadTempName[MAX_OSPATH];downloadTempName197,7467
	char		downloadName[MAX_OSPATH];downloadName198,7504
	qboolean	cURLEnabled;cURLEnabled200,7553
	qboolean	cURLUsed;cURLUsed201,7576
	qboolean	cURLDisconnected;cURLDisconnected202,7596
	char		downloadURL[MAX_OSPATH];downloadURL203,7624
	CURL		*downloadCURL;downloadCURL204,7656
	CURLM		*downloadCURLM;downloadCURLM205,7678
	int		sv_allowDownload;sv_allowDownload207,7724
	char		sv_dlURL[MAX_CVAR_VALUE_STRING];sv_dlURL208,7748
	int			downloadNumber;downloadNumber209,7788
	int			downloadBlock;	// block we are waiting fordownloadBlock210,7811
	int			downloadCount;	// how many bytes we gotdownloadCount211,7861
	int			downloadSize;	// how many bytes we gotdownloadSize212,7908
	char		downloadList[MAX_INFO_STRING]; // list of paks we need to downloaddownloadList213,7954
	qboolean	downloadRestart;	// if true, we need to do another FS_Restart because we downloaded a pakdownloadRestart214,8028
	char		demoName[MAX_QPATH];demoName217,8150
	qboolean	spDemoRecording;spDemoRecording218,8178
	qboolean	demorecording;demorecording219,8205
	qboolean	demoplaying;demoplaying220,8230
	qboolean	demowaiting;	// don't record until a non-delta message is receiveddemowaiting221,8253
	qboolean	firstDemoFrameSkipped;firstDemoFrameSkipped222,8330
	fileHandle_t	demofile;demofile223,8363
	int			timeDemoFrames;		// counter of rendered framestimeDemoFrames225,8388
	int			timeDemoStart;		// cls.realtime before first frametimeDemoStart226,8442
	int			timeDemoBaseTime;	// each frame will be at this time + frameNum * 50timeDemoBaseTime227,8500
	int			timeDemoLastFrame;// time the last frame was renderedtimeDemoLastFrame228,8576
	int			timeDemoMinDuration;	// minimum frame durationtimeDemoMinDuration229,8637
	int			timeDemoMaxDuration;	// maximum frame durationtimeDemoMaxDuration230,8691
	unsigned char	timeDemoDurations[ MAX_TIMEDEMO_DURATIONS ];	// log of frame durationstimeDemoDurations231,8745
	qboolean speexInitialized;speexInitialized234,8848
	int speexFrameSize;speexFrameSize235,8876
	int speexSampleRate;speexSampleRate236,8897
	SpeexBits speexDecoderBits[MAX_CLIENTS];speexDecoderBits240,9007
	void *speexDecoder[MAX_CLIENTS];speexDecoder241,9049
	byte voipIncomingGeneration[MAX_CLIENTS];voipIncomingGeneration242,9083
	int voipIncomingSequence[MAX_CLIENTS];voipIncomingSequence243,9126
	float voipGain[MAX_CLIENTS];voipGain244,9166
	qboolean voipIgnore[MAX_CLIENTS];voipIgnore245,9196
	qboolean voipMuteAll;voipMuteAll246,9231
	int voipTarget1;  // these three ints make up a bit mask of 92 bits.voipTarget1249,9276
	int voipTarget2;  //  the bits say who a VoIP pack is addressed to:voipTarget2250,9346
	int voipTarget3;  //  (1 << clientnum). See cl_voipSendTarget cvar.voipTarget3251,9415
	SpeexPreprocessState *speexPreprocessor;speexPreprocessor252,9484
	SpeexBits speexEncoderBits;speexEncoderBits253,9526
	void *speexEncoder;speexEncoder254,9555
	int voipOutgoingDataSize;voipOutgoingDataSize255,9576
	int voipOutgoingDataFrames;voipOutgoingDataFrames256,9603
	int voipOutgoingSequence;voipOutgoingSequence257,9632
	byte voipOutgoingGeneration;voipOutgoingGeneration258,9659
	byte voipOutgoingData[1024];voipOutgoingData259,9689
	float voipPower;voipPower260,9719
	netchan_t	netchan;netchan264,9815
} clientConnection_t;clientConnection_t265,9835
	netadr_t	adr;adr279,10155
	int			start;start280,10170
	int			time;time281,10184
	char		info[MAX_INFO_STRING];info282,10197
} ping_t;ping_t283,10227
	netadr_t	adr;adr286,10255
	char	  	hostName[MAX_NAME_LENGTH];hostName287,10270
	char	  	mapName[MAX_NAME_LENGTH];mapName288,10306
	char	  	game[MAX_NAME_LENGTH];game289,10341
	int			netType;netType290,10373
	int			gameType;gameType291,10389
	int		  	clients;clients292,10406
	int		  	maxClients;maxClients293,10424
	int			minPing;minPing294,10445
	int			maxPing;maxPing295,10461
	int			ping;ping296,10477
	qboolean	visible;visible297,10490
	int			punkbuster;punkbuster298,10509
} serverInfo_t;serverInfo_t299,10528
	connstate_t	state;				// connection statusstate302,10562
	qboolean	cddialog;			// bring up the cd needed dialog next framecddialog304,10607
	char		servername[MAX_OSPATH];		// name of server from original connect (used by reconnect)servername306,10674
	qboolean	rendererStarted;rendererStarted309,10835
	qboolean	soundStarted;soundStarted310,10862
	qboolean	soundRegistered;soundRegistered311,10886
	qboolean	uiStarted;uiStarted312,10913
	qboolean	cgameStarted;cgameStarted313,10934
	int			framecount;framecount315,10959
	int			frametime;			// msec since last frameframetime316,10978
	int			realtime;			// ignores pauserealtime318,11024
	int			realFrametime;		// ignoring pause, so console always worksrealFrametime319,11060
	int			numlocalservers;numlocalservers321,11127
	serverInfo_t	localServers[MAX_OTHER_SERVERS];localServers322,11151
	int			numglobalservers;numglobalservers324,11199
	serverInfo_t  globalServers[MAX_GLOBAL_SERVERS];globalServers325,11224
	int			numGlobalServerAddresses;numGlobalServerAddresses327,11304
	netadr_t		globalServerAddresses[MAX_GLOBAL_SERVERS];globalServerAddresses328,11337
	int			numfavoriteservers;numfavoriteservers330,11392
	serverInfo_t	favoriteServers[MAX_OTHER_SERVERS];favoriteServers331,11419
	int pingUpdateSource;		// source currently pinging or updatingpingUpdateSource333,11470
	netadr_t	updateServer;updateServer336,11558
	char		updateChallenge[MAX_TOKEN_CHARS];updateChallenge337,11582
	char		updateInfoString[MAX_INFO_STRING];updateInfoString338,11623
	netadr_t	authorizeServer;authorizeServer340,11666
	glconfig_t	glconfig;glconfig343,11713
	qhandle_t	charSetShader;charSetShader344,11735
	qhandle_t	whiteShader;whiteShader345,11761
	qhandle_t	consoleShader;consoleShader346,11785
} clientStatic_t;clientStatic_t347,11811
	int			down[2];		// key nums holding it downdown468,14747
	unsigned	downtime;		// msec timestampdowntime469,14792
	unsigned	msec;			// msec down this frame if both a down and up happenedmsec470,14831
	qboolean	active;			// current stateactive471,14904
	qboolean	wasPressed;		// set when down, not cleared when upwasPressed472,14941
} kbutton_t;kbutton_t473,15002

client/cl_ui.c,2779
vm_t *uivm;uivm29,1067
static void GetClientState( uiClientState_t *state ) {GetClientState36,1143
void LAN_LoadCachedServers( void ) {LAN_LoadCachedServers50,1661
void LAN_SaveServersToCache( void ) {LAN_SaveServersToCache75,2444
static void LAN_ResetPings(int source) {LAN_ResetPings93,3007
static int LAN_AddServer(int source, const char *name, const char *address) {LAN_AddServer125,3581
static void LAN_RemoveServer(int source, const char *addr) {LAN_RemoveServer172,4610
static int LAN_GetServerCount( int source ) {LAN_GetServerCount214,5465
static void LAN_GetServerAddressString( int source, int n, char *buf, int buflen ) {LAN_GetServerAddressString235,5832
static void LAN_GetServerInfo( int source, int n, char *buf, int buflen ) {LAN_GetServerInfo265,6551
static int LAN_GetServerPing( int source, int n ) {LAN_GetServerPing314,8060
static serverInfo_t *LAN_GetServerPtr( int source, int n ) {LAN_GetServerPtr345,8644
static int LAN_CompareServers( int source, int sortKey, int sortDir, int s1, int s2 ) {LAN_CompareServers372,9164
static int LAN_GetPingQueueCount( void ) {LAN_GetPingQueueCount441,10372
static void LAN_ClearPing( int n ) {LAN_ClearPing450,10514
static void LAN_GetPing( int n, char *buf, int buflen, int *pingtime ) {LAN_GetPing459,10634
static void LAN_GetPingInfo( int n, char *buf, int buflen ) {LAN_GetPingInfo468,10815
static void LAN_MarkServerVisible(int source, int n, qboolean visible ) {LAN_MarkServerVisible477,10985
static int LAN_ServerIsVisible(int source, int n ) {LAN_ServerIsVisible528,12025
qboolean LAN_UpdateVisiblePings(int source ) {LAN_UpdateVisiblePings555,12570
int LAN_GetServerStatus( char *serverAddress, char *serverStatus, int maxLen ) {LAN_GetServerStatus564,12729
static void CL_GetGlconfig( glconfig_t *config ) {CL_GetGlconfig573,12940
static void CL_GetClipboardData( char *buf, int buflen ) {CL_GetClipboardData582,13087
static void Key_KeynumToStringBuf( int keynum, char *buf, int buflen ) {Key_KeynumToStringBuf602,13355
static void Key_GetBindingBuf( int keynum, char *buf, int buflen ) {Key_GetBindingBuf611,13555
static void CLUI_GetCDKey( char *buf, int buflen ) {CLUI_GetCDKey629,13836
static void CLUI_SetCDKey( char *buf ) {CLUI_SetCDKey647,14201
static int GetConfigString(int index, char *buf, int size)GetConfigString668,14768
static int FloatAsInt( float f ) {FloatAsInt693,15160
intptr_t CL_UISystemCalls( intptr_t *args ) {CL_UISystemCalls706,15343
void CL_ShutdownUI( void ) {CL_ShutdownUI1075,23271
#define UI_OLD_API_VERSION	UI_OLD_API_VERSION1091,23531
void CL_InitUI( void ) {CL_InitUI1093,23561
qboolean UI_usesUniqueCDKey( void ) {UI_usesUniqueCDKey1132,24695
qboolean UI_GameCommand( void ) {UI_GameCommand1148,24961

client/snd_codec.h,1160
#define _SND_CODEC_H__SND_CODEC_H_25,1050
typedef struct snd_info_ssnd_info_s30,1139
	int rate;rate32,1167
	int width;width33,1178
	int channels;channels34,1190
	int samples;samples35,1205
	int size;size36,1219
	int dataofs;dataofs37,1230
} snd_info_t;snd_info_t38,1244
typedef struct snd_codec_s snd_codec_t;snd_codec_t40,1259
typedef struct snd_stream_ssnd_stream_s42,1300
	snd_codec_t *codec;codec44,1330
	fileHandle_t file;file45,1351
	snd_info_t info;info46,1371
	int length;length47,1389
	int pos;pos48,1402
	void *ptr;ptr49,1412
} snd_stream_t;snd_stream_t50,1424
typedef void *(*CODEC_LOAD)(const char *filename, snd_info_t *info);CODEC_LOAD53,1460
typedef snd_stream_t *(*CODEC_OPEN)(const char *filename);CODEC_OPEN54,1529
typedef int (*CODEC_READ)(snd_stream_t *stream, int bytes, void *buffer);CODEC_READ55,1588
typedef void (*CODEC_CLOSE)(snd_stream_t *stream);CODEC_CLOSE56,1662
struct snd_codec_ssnd_codec_s59,1738
	char *ext;ext61,1759
	CODEC_LOAD load;load62,1771
	CODEC_OPEN open;open63,1789
	CODEC_READ read;read64,1807
	CODEC_CLOSE close;close65,1825
	snd_codec_t *next;next66,1845

client/snd_mix.c,1502
static portable_samplepair_t paintbuffer[PAINTBUFFER_SIZE];paintbuffer30,1144
static int snd_vol;snd_vol31,1204
int*     snd_p;  snd_p33,1225
int      snd_linear_count;snd_linear_count34,1243
short*   snd_out;snd_out35,1270
void S_WriteLinearBlastStereo16 (void)S_WriteLinearBlastStereo1639,1372
__declspec( naked ) void S_WriteLinearBlastStereo16 (void)__declspec68,1864
void S_TransferStereo16 (unsigned long *pbuf, int endtime)S_TransferStereo16114,2594
void S_TransferPaintBuffer(int endtime)S_TransferPaintBuffer152,3409
static void S_PaintChannelFrom16_altivec( channel_t *ch, const sfx_t *sc, int count, int sampleOffset, int bufferOffset ) {S_PaintChannelFrom16_altivec231,4959
static void S_PaintChannelFrom16_scalar( channel_t *ch, const sfx_t *sc, int count, int sampleOffset, int bufferOffset ) {S_PaintChannelFrom16_scalar399,10078
static void S_PaintChannelFrom16( channel_t *ch, const sfx_t *sc, int count, int sampleOffset, int bufferOffset ) {S_PaintChannelFrom16472,11749
void S_PaintChannelFromWavelet( channel_t *ch, sfx_t *sc, int count, int sampleOffset, int bufferOffset ) {S_PaintChannelFromWavelet483,12149
void S_PaintChannelFromADPCM( channel_t *ch, sfx_t *sc, int count, int sampleOffset, int bufferOffset ) {S_PaintChannelFromADPCM525,13148
void S_PaintChannelFromMuLaw( channel_t *ch, sfx_t *sc, int count, int sampleOffset, int bufferOffset ) {S_PaintChannelFromMuLaw572,14214
void S_PaintChannels( int endtime ) {S_PaintChannels631,15635

client/libmumblelink.c,691
#define uint32_t uint32_t25,989
	uint32_t uiVersion;uiVersion44,1282
	uint32_t uiTick;uiTick45,1303
	float   fPosition[3];fPosition46,1321
	float   fFront[3];fFront47,1344
	float   fTop[3];fTop48,1364
	wchar_t name[256];name49,1382
} LinkedMem;LinkedMem50,1402
static LinkedMem *lm = NULL;lm52,1416
static HANDLE hMapObject = NULL;hMapObject55,1459
static int32_t GetTickCount(void)GetTickCount57,1498
int mumble_link(const char* name)mumble_link66,1636
void mumble_update_coordinates(float fPosition[3], float fFront[3], float fTop[3])mumble_update_coordinates105,2422
void mumble_unlink()mumble_unlink117,2719
int mumble_islinked(void)mumble_islinked131,2902

client/snd_codec_ogg.c,874
#define OGG_SAMPLEWIDTH OGG_SAMPLEWIDTH38,1436
snd_codec_t ogg_codec =ogg_codec41,1479
size_t S_OGG_Callback_read(void *ptr, size_t size, size_t nmemb, void *datasource)S_OGG_Callback_read54,1666
int S_OGG_Callback_seek(void *datasource, ogg_int64_t offset, int whence)S_OGG_Callback_seek107,2711
int S_OGG_Callback_close(void *datasource)S_OGG_Callback_close192,4550
long S_OGG_Callback_tell(void *datasource)S_OGG_Callback_tell199,4713
const ov_callbacks S_OGG_Callbacks =S_OGG_Callbacks217,5014
snd_stream_t *S_OGG_CodecOpenStream(const char *filename)S_OGG_CodecOpenStream230,5213
void S_OGG_CodecCloseStream(snd_stream_t *stream)S_OGG_CodecCloseStream335,7101
int S_OGG_CodecReadStream(snd_stream_t *stream, int bytes, void *buffer)S_OGG_CodecReadStream358,7473
void *S_OGG_CodecLoad(const char *filename, snd_info_t *info)S_OGG_CodecLoad423,8681

client/cl_curl.c,1958
cvar_t *cl_cURLLib;cl_cURLLib25,1016
char* (*qcurl_version)(void);qcurl_version30,1093
CURL* (*qcurl_easy_init)(void);qcurl_easy_init32,1124
CURLcode (*qcurl_easy_setopt)(CURL *curl, CURLoption option, ...);qcurl_easy_setopt33,1156
CURLcode (*qcurl_easy_perform)(CURL *curl);qcurl_easy_perform34,1223
void (*qcurl_easy_cleanup)(CURL *curl);qcurl_easy_cleanup35,1267
CURLcode (*qcurl_easy_getinfo)(CURL *curl, CURLINFO info, ...);qcurl_easy_getinfo36,1307
CURL* (*qcurl_easy_duphandle)(CURL *curl);qcurl_easy_duphandle37,1371
void (*qcurl_easy_reset)(CURL *curl);qcurl_easy_reset38,1414
const char *(*qcurl_easy_strerror)(CURLcode);qcurl_easy_strerror39,1452
CURLM* (*qcurl_multi_init)(void);qcurl_multi_init41,1499
CURLMcode (*qcurl_multi_add_handle)(CURLM *multi_handle,qcurl_multi_add_handle42,1533
CURLMcode (*qcurl_multi_remove_handle)(CURLM *multi_handle,qcurl_multi_remove_handle44,1658
CURLMcode (*qcurl_multi_fdset)(CURLM *multi_handle,qcurl_multi_fdset46,1786
CURLMcode (*qcurl_multi_perform)(CURLM *multi_handle,qcurl_multi_perform51,2107
CURLMcode (*qcurl_multi_cleanup)(CURLM *multi_handle);qcurl_multi_cleanup53,2232
CURLMsg *(*qcurl_multi_info_read)(CURLM *multi_handle,qcurl_multi_info_read54,2287
const char *(*qcurl_multi_strerror)(CURLMcode);qcurl_multi_strerror56,2411
static void *cURLLib = NULL;cURLLib58,2460
static void *GPA(char *str)GPA65,2536
qboolean CL_cURL_Init()CL_cURL_Init89,2890
void CL_cURL_Shutdown( void )CL_cURL_Shutdown165,4777
void CL_cURL_Cleanup(void)CL_cURL_Cleanup193,5383
static int CL_cURL_CallbackProgress( void *dummy, double dltotal, double dlnow,CL_cURL_CallbackProgress211,5780
static size_t CL_cURL_CallbackWrite(void *buffer, size_t size, size_t nmemb,CL_cURL_CallbackWrite221,6087
void CL_cURL_BeginDownload( const char *localName, const char *remoteURL )CL_cURL_BeginDownload228,6265
void CL_cURL_PerformDownload(void)CL_cURL_PerformDownload303,8996

client/cl_cin.c,7329
#define MAXSIZE	MAXSIZE37,1354
#define MINSIZE	MINSIZE38,1375
#define DEFAULT_CIN_WIDTH	DEFAULT_CIN_WIDTH40,1397
#define DEFAULT_CIN_HEIGHT	DEFAULT_CIN_HEIGHT41,1427
#define ROQ_QUAD	ROQ_QUAD43,1459
#define ROQ_QUAD_INFO	ROQ_QUAD_INFO44,1485
#define ROQ_CODEBOOK	ROQ_CODEBOOK45,1515
#define ROQ_QUAD_VQ	ROQ_QUAD_VQ46,1544
#define ROQ_QUAD_JPEG	ROQ_QUAD_JPEG47,1573
#define ROQ_QUAD_HANG	ROQ_QUAD_HANG48,1603
#define ROQ_PACKET	ROQ_PACKET49,1633
#define ZA_SOUND_MONO	ZA_SOUND_MONO50,1661
#define ZA_SOUND_STEREO	ZA_SOUND_STEREO51,1691
#define MAX_VIDEO_HANDLES	MAX_VIDEO_HANDLES53,1724
static	long				ROQ_YY_tab[256];ROQ_YY_tab69,2084
static	long				ROQ_UB_tab[256];ROQ_UB_tab70,2116
static	long				ROQ_UG_tab[256];ROQ_UG_tab71,2148
static	long				ROQ_VG_tab[256];ROQ_VG_tab72,2180
static	long				ROQ_VR_tab[256];ROQ_VR_tab73,2212
static	unsigned short		vq2[256*16*4];vq274,2244
static	unsigned short		vq4[256*64*4];vq475,2282
static	unsigned short		vq8[256*256*4];vq876,2320
	byte				linbuf[DEFAULT_CIN_WIDTH*DEFAULT_CIN_HEIGHT*4*2];linbuf80,2378
	byte				file[65536];file81,2437
	short				sqrTable[256];sqrTable82,2459
	int		mcomp[256];mcomp84,2485
	byte				*qStatus[2][32768];qStatus85,2503
	long				oldXOff, oldYOff, oldysize, oldxsize;oldXOff87,2533
	long				oldXOff, oldYOff, oldysize, oldxsize;oldYOff87,2533
	long				oldXOff, oldYOff, oldysize, oldxsize;oldysize87,2533
	long				oldXOff, oldYOff, oldysize, oldxsize;oldxsize87,2533
	int					currentHandle;currentHandle89,2581
} cinematics_t;cinematics_t90,2605
	char				fileName[MAX_OSPATH];fileName93,2639
	int					CIN_WIDTH, CIN_HEIGHT;CIN_WIDTH94,2670
	int					CIN_WIDTH, CIN_HEIGHT;CIN_HEIGHT94,2670
	int					xpos, ypos, width, height;xpos95,2702
	int					xpos, ypos, width, height;ypos95,2702
	int					xpos, ypos, width, height;width95,2702
	int					xpos, ypos, width, height;height95,2702
	qboolean			looping, holdAtEnd, dirty, alterGameState, silent, shader;looping96,2738
	qboolean			looping, holdAtEnd, dirty, alterGameState, silent, shader;holdAtEnd96,2738
	qboolean			looping, holdAtEnd, dirty, alterGameState, silent, shader;dirty96,2738
	qboolean			looping, holdAtEnd, dirty, alterGameState, silent, shader;alterGameState96,2738
	qboolean			looping, holdAtEnd, dirty, alterGameState, silent, shader;silent96,2738
	qboolean			looping, holdAtEnd, dirty, alterGameState, silent, shader;shader96,2738
	fileHandle_t		iFile;iFile97,2809
	e_status			status;status98,2831
	unsigned int		startTime;startTime99,2851
	unsigned int		lastTime;lastTime100,2877
	long				tfps;tfps101,2902
	long				RoQPlayed;RoQPlayed102,2917
	long				ROQSize;ROQSize103,2937
	unsigned int		RoQFrameSize;RoQFrameSize104,2955
	long				onQuad;onQuad105,2984
	long				numQuads;numQuads106,3001
	long				samplesPerLine;samplesPerLine107,3020
	unsigned int		roq_id;roq_id108,3045
	long				screenDelta;screenDelta109,3068
	void ( *VQ0)(byte *status, void *qdata );VQ0111,3091
	void ( *VQ1)(byte *status, void *qdata );VQ1112,3134
	void ( *VQNormal)(byte *status, void *qdata );VQNormal113,3177
	void ( *VQBuffer)(byte *status, void *qdata );VQBuffer114,3225
	long				samplesPerPixel;				// defaults to 2samplesPerPixel116,3274
	byte*				gray;gray117,3320
	unsigned int		xsize, ysize, maxsize, minsize;xsize118,3336
	unsigned int		xsize, ysize, maxsize, minsize;ysize118,3336
	unsigned int		xsize, ysize, maxsize, minsize;maxsize118,3336
	unsigned int		xsize, ysize, maxsize, minsize;minsize118,3336
	qboolean			half, smootheddouble, inMemory;half120,3384
	qboolean			half, smootheddouble, inMemory;smootheddouble120,3384
	qboolean			half, smootheddouble, inMemory;inMemory120,3384
	long				normalBuffer0;normalBuffer0121,3428
	long				roq_flags;roq_flags122,3452
	long				roqF0;roqF0123,3472
	long				roqF1;roqF1124,3488
	long				t[2];t125,3504
	long				roqFPS;roqFPS126,3519
	int					playonwalls;playonwalls127,3536
	byte*				buf;buf128,3558
	long				drawX, drawY;drawX129,3573
	long				drawX, drawY;drawY129,3573
} cin_cache;cin_cache130,3596
static cinematics_t		cin;cin132,3610
static cin_cache		cinTable[MAX_VIDEO_HANDLES];cinTable133,3636
static int				currentHandle = -1;currentHandle134,3683
static int				CL_handle = -1;CL_handle135,3717
void CIN_CloseAllVideos(void) {CIN_CloseAllVideos140,3794
static int CIN_HandleForVideo(void) {CIN_HandleForVideo151,3958
static void RllSetupTable( void )RllSetupTable175,4501
long RllDecodeMonoToMono(unsigned char *from,short *to,unsigned int size,char signedOutput ,unsigned short flag)RllDecodeMonoToMono200,5219
long RllDecodeMonoToStereo(unsigned char *from,short *to,unsigned int size,char signedOutput,unsigned short flag)RllDecodeMonoToStereo231,6172
long RllDecodeStereoToStereo(unsigned char *from,short *to,unsigned int size,char signedOutput, unsigned short flag)RllDecodeStereoToStereo263,7121
long RllDecodeStereoToMono(unsigned char *from,short *to,unsigned int size,char signedOutput, unsigned short flag)RllDecodeStereoToMono301,8316
static void move8_32( byte *src, byte *dst, int spl )move8_32331,9008
static void move4_32( byte *src, byte *dst, int spl  )move4_32351,9355
static void blit8_32( byte *src, byte *dst, int spl  )blit8_32371,9703
static void blit4_32( byte *src, byte *dst, int spl  )blit4_32390,10049
static void blit2_32( byte *src, byte *dst, int spl  )blit2_32410,10397
static void blitVQQuad32fs( byte **status, unsigned char *data )blitVQQuad32fs424,10704
static void ROQ_GenYUVTables( void )ROQ_GenYUVTables510,12797
#define VQ2TO4(VQ2TO4530,13369
#define VQ2TO2(VQ2TO2553,13742
static unsigned short yuv_to_rgb( long y, long u, long v )yuv_to_rgb574,14121
static unsigned int yuv_to_rgb24( long y, long u, long v )yuv_to_rgb24595,14696
static void decodeCodeBook( byte *input, unsigned short roq_flags )decodeCodeBook617,15284
static void recurseQuad( long startX, long startY, long quadSize, long xOff, long yOff )recurseQuad885,22526
static void setupQuad( long xOff, long yOff )setupQuad926,24001
static void readQuadInfo( byte *qData )readQuadInfo970,25270
static void RoQPrepMcomp( long xoff, long yoff ) RoQPrepMcomp1019,27280
static void initRoQ( void ) initRoQ1043,27957
static void RoQReset( void ) {RoQReset1077,28746
static void RoQInterrupt(void)RoQInterrupt1097,29319
static void RoQ_init( void )RoQ_init1233,34262
static void RoQShutdown( void ) {RoQShutdown1265,35294
e_status CIN_StopCinematic(int handle) {CIN_StopCinematic1305,36218
e_status CIN_RunCinematic (int handle)CIN_RunCinematic1336,36843
int CIN_PlayCinematic( const char *arg, int x, int y, int w, int h, int systemBits ) {CIN_PlayCinematic1411,39002
void CIN_SetExtents (int handle, int x, int y, int w, int h) {CIN_SetExtents1497,41392
void CIN_SetLooping(int handle, qboolean loop) {CIN_SetLooping1506,41699
void CIN_DrawCinematic (int handle) {CIN_DrawCinematic1517,41941
void CL_PlayCinematic_f(void) {CL_PlayCinematic_f1593,44705
void SCR_DrawCinematic (void) {SCR_DrawCinematic1625,45433
void SCR_RunCinematic (void)SCR_RunCinematic1631,45559
void SCR_StopCinematic(void) {SCR_StopCinematic1638,45683
void CIN_UploadCinematic(int handle) {CIN_UploadCinematic1646,45848

client/snd_codec_wav.c,931
static int FGetLittleLong( fileHandle_t f ) {FGetLittleLong32,1129
static short FGetLittleShort( fileHandle_t f ) {FGetLittleShort45,1301
static int S_ReadChunkInfo(fileHandle_t f, char *name)S_ReadChunkInfo58,1478
static int S_FindRIFFChunk( fileHandle_t f, char *chunk ) {S_FindRIFFChunk84,1882
static void S_ByteSwapRawSamples( int samples, int width, int s_channels, const byte *data ) {S_ByteSwapRawSamples108,2290
static qboolean S_ReadRIFFHeader(fileHandle_t file, snd_info_t *info)S_ReadRIFFHeader131,2685
snd_codec_t wav_codec =wav_codec184,3827
void *S_WAV_CodecLoad(const char *filename, snd_info_t *info)S_WAV_CodecLoad199,4021
snd_stream_t *S_WAV_CodecOpenStream(const char *filename)S_WAV_CodecOpenStream246,4956
void S_WAV_CodecCloseStream(snd_stream_t *stream)S_WAV_CodecCloseStream270,5311
int S_WAV_CodecReadStream(snd_stream_t *stream, int bytes, void *buffer)S_WAV_CodecReadStream280,5458

client/keys.h,201
	qboolean	down;down25,1014
	int			repeats;		// if > 1, it is autorepeatingrepeats26,1030
	char		*binding;binding27,1078
} qkey_t;qkey_t28,1095
#define		COMMAND_HISTORY	COMMAND_HISTORY39,1569

client/snd_public.h,0

client/libmumblelink.h,0

client/cl_cgame.c,1671
void CL_GetGameState( gameState_t *gs ) {CL_GetGameState41,1375
void CL_GetGlconfig( glconfig_t *glconfig ) {CL_GetGlconfig50,1504
qboolean CL_GetUserCmd( int cmdNumber, usercmd_t *ucmd ) {CL_GetUserCmd60,1643
int CL_GetCurrentCmdNumber( void ) {CL_GetCurrentCmdNumber79,2161
qboolean	CL_GetParseEntityState( int parseEntityNumber, entityState_t *state ) {CL_GetParseEntityState89,2295
void	CL_GetCurrentSnapshotNumber( int *snapshotNumber, int *serverTime ) {CL_GetCurrentSnapshotNumber110,2929
qboolean	CL_GetSnapshot( int snapshotNumber, snapshot_t *snapshot ) {CL_GetSnapshot120,3144
void CL_SetUserCmdValue( int userCmdValue, float sensitivityScale ) {CL_SetUserCmdValue173,4745
void CL_AddCgameCommand( const char *cmdName ) {CL_AddCgameCommand183,4966
void CL_CgameError( const char *string ) {CL_CgameError192,5116
void CL_ConfigstringModified( void ) {CL_ConfigstringModified202,5275
qboolean CL_GetServerCommand( int serverCommandNumber ) {CL_GetServerCommand266,6731
void CL_CM_LoadMap( const char *mapname ) {CL_CM_LoadMap379,10152
void CL_ShutdownCGame( void ) {CL_ShutdownCGame391,10324
static int	FloatAsInt( float f ) {FloatAsInt402,10535
intptr_t CL_CgameSystemCalls( intptr_t *args ) {CL_CgameSystemCalls415,10724
void CL_InitCGame( void ) {CL_InitCGame715,19304
qboolean CL_GameCommand( void ) {CL_GameCommand783,21143
void CL_CGameRendering( stereoFrame_t stereo ) {CL_CGameRendering798,21332
#define	RESET_TIME	RESET_TIME824,22121
void CL_AdjustTimeDelta( void ) {CL_AdjustTimeDelta826,22145
void CL_FirstSnapshot( void ) {CL_FirstSnapshot889,23786
void CL_SetCGameTime( void ) {CL_SetCGameTime963,25965

client/snd_main.c,2213
cvar_t *s_volume;s_volume29,1098
cvar_t *s_musicVolume;s_musicVolume30,1116
cvar_t *s_doppler;s_doppler31,1139
cvar_t *s_backend;s_backend32,1158
cvar_t *s_muteWhenMinimized;s_muteWhenMinimized33,1177
static soundInterface_t si;si35,1207
static qboolean S_ValidSoundInterface( soundInterface_t *si )S_ValidSoundInterface42,1298
void S_StartSound( vec3_t origin, int entnum, int entchannel, sfxHandle_t sfx )S_StartSound81,2501
void S_StartLocalSound( sfxHandle_t sfx, int channelNum )S_StartLocalSound93,2724
void S_StartBackgroundTrack( const char *intro, const char *loop )S_StartBackgroundTrack105,2924
void S_StopBackgroundTrack( void )S_StopBackgroundTrack117,3138
void S_RawSamples (int stream, int samples, int rate, int width, int channels,S_RawSamples129,3297
void S_StopAllSounds( void )S_StopAllSounds142,3575
void S_ClearLoopingSounds( qboolean killall )S_ClearLoopingSounds154,3724
void S_AddLoopingSound( int entityNum, const vec3_t origin,S_AddLoopingSound166,3905
void S_AddRealLoopingSound( int entityNum, const vec3_t origin,S_AddRealLoopingSound179,4166
void S_StopLoopingSound( int entityNum )S_StopLoopingSound192,4436
void S_Respatialize( int entityNum, const vec3_t origin,S_Respatialize204,4607
void S_UpdateEntityPosition( int entityNum, const vec3_t origin )S_UpdateEntityPosition217,4849
void S_Update( void )S_Update229,5055
void S_DisableSounds( void )S_DisableSounds246,5278
void S_BeginRegistration( void )S_BeginRegistration258,5426
sfxHandle_t	S_RegisterSound( const char *sample, qboolean compressed )S_RegisterSound270,5582
void S_ClearSoundBuffer( void )S_ClearSoundBuffer284,5819
void S_SoundInfo( void )S_SoundInfo296,5968
void S_SoundList( void )S_SoundList308,6096
void S_StartCapture( void )S_StartCapture322,6244
int S_AvailableCaptureSamples( void )S_AvailableCaptureSamples334,6395
void S_Capture( int samples, byte *data )S_Capture347,6580
void S_StopCapture( void )S_StopCapture359,6737
void S_MasterGain( float gain )S_MasterGain371,6872
void S_Play_f( void ) {S_Play_f386,7099
void S_Music_f( void ) {S_Music_f415,7599
void S_Init( void )S_Init442,8050
void S_Shutdown( void )S_Shutdown500,9450

client/cl_scrn.c,2167
qboolean	scr_initialized;		// ready to drawscr_initialized26,1071
cvar_t		*cl_timegraph;cl_timegraph28,1116
cvar_t		*cl_debuggraph;cl_debuggraph29,1139
cvar_t		*cl_graphheight;cl_graphheight30,1163
cvar_t		*cl_graphscale;cl_graphscale31,1188
cvar_t		*cl_graphshift;cl_graphshift32,1212
void SCR_DrawNamedPic( float x, float y, float width, float height, const char *picname ) {SCR_DrawNamedPic41,1335
void SCR_AdjustFrom640( float *x, float *y, float *w, float *h ) {SCR_AdjustFrom64059,1735
void SCR_FillRect( float x, float y, float width, float height, const float *color ) {SCR_FillRect94,2364
void SCR_DrawPic( float x, float y, float width, float height, qhandle_t hShader ) {SCR_DrawPic111,2714
static void SCR_DrawChar( int x, int y, float size, int ch ) {SCR_DrawChar122,2987
void SCR_DrawSmallChar( int x, int y, int ch ) {SCR_DrawSmallChar160,3564
void SCR_DrawStringExt( int x, int y, float size, const char *string, float *setColor, qboolean forceColor,SCR_DrawStringExt199,4196
void SCR_DrawBigString( int x, int y, const char *s, float alpha, qboolean noColorEscape ) {SCR_DrawBigString244,5081
void SCR_DrawBigStringColor( int x, int y, const char *s, vec4_t color, qboolean noColorEscape ) {SCR_DrawBigStringColor252,5329
void SCR_DrawSmallStringExt( int x, int y, const char *string, float *setColor, qboolean forceColor,SCR_DrawSmallStringExt265,5665
static int SCR_Strlen( const char *str ) {SCR_Strlen297,6311
int	SCR_GetBigStringWidth( const char *str ) {SCR_GetBigStringWidth316,6541
void SCR_DrawDemoRecording( void ) {SCR_DrawDemoRecording328,6771
void SCR_DrawVoipMeter( void ) {SCR_DrawVoipMeter352,7205
	float	value;value400,8427
	int		color;color401,8441
} graphsamp_t;graphsamp_t402,8454
static	int			current;current404,8470
static	graphsamp_t	values[1024];values405,8492
void SCR_DebugGraph (float value, int color)SCR_DebugGraph412,8577
void SCR_DrawDebugGraph (void)SCR_DrawDebugGraph424,8768
void SCR_Init( void ) {SCR_Init462,9624
void SCR_DrawScreenField( stereoFrame_t stereoFrame ) {SCR_DrawScreenField482,10153
void SCR_UpdateScreen( void ) {SCR_UpdateScreen562,12459

client/snd_codec.c,853
static snd_codec_t *codecs;codecs27,1072
static char *S_FileExtension(const char *fni)S_FileExtension34,1159
static snd_codec_t *S_FindCodecForFile(const char *filename)S_FindCodecForFile61,1563
void S_CodecInit()S_CodecInit104,2268
void S_CodecShutdown()S_CodecShutdown118,2457
void S_CodecRegister(snd_codec_t *codec)S_CodecRegister128,2559
void *S_CodecLoad(const char *filename, snd_info_t *info)S_CodecLoad139,2699
snd_stream_t *S_CodecOpenStream(const char *filename)S_CodecOpenStream162,3111
void S_CodecCloseStream(snd_stream_t *stream)S_CodecCloseStream180,3453
int S_CodecReadStream(snd_stream_t *stream, int bytes, void *buffer)S_CodecReadStream185,3535
snd_stream_t *S_CodecUtilOpen(const char *filename, snd_codec_t *codec)S_CodecUtilOpen198,3829
void S_CodecUtilClose(snd_stream_t **stream)S_CodecUtilClose232,4413

client/cl_net_chan.c,453
static void CL_Netchan_Encode( msg_t *msg ) {CL_Netchan_Encode38,1229
static void CL_Netchan_Decode( msg_t *msg ) {CL_Netchan_Decode92,2505
void CL_Netchan_TransmitNextFragment( netchan_t *chan ) {CL_Netchan_TransmitNextFragment134,3653
void CL_Netchan_Transmit( netchan_t *chan, msg_t* msg ) {CL_Netchan_Transmit143,3812
int newsize = 0;newsize151,4006
qboolean CL_Netchan_Process( netchan_t *chan, msg_t *msg ) {CL_Netchan_Process158,4085

client/snd_mem.c,891
#define DEF_COMSOUNDMEGS DEF_COMSOUNDMEGS35,1285
static	sndBuffer	*buffer = NULL;buffer45,1502
static	sndBuffer	*freelist = NULL;freelist46,1535
static	int inUse = 0;inUse47,1570
static	int totalInUse = 0;totalInUse48,1592
short *sfxScratchBuffer = NULL;sfxScratchBuffer50,1620
sfx_t *sfxScratchPointer = NULL;sfxScratchPointer51,1652
int	   sfxScratchIndex = 0;sfxScratchIndex52,1685
void	SND_free(sndBuffer *v) {SND_free54,1714
sndBuffer*	SND_malloc(void) {SND_malloc60,1833
void SND_setup(void) {SND_setup77,2096
static void ResampleSfx( sfx_t *sfx, int inrate, int inwidth, byte *data, qboolean compressed ) {ResampleSfx110,2806
static int ResampleSfxRaw( short *sfx, int inrate, int inwidth, int samples, byte *data ) {ResampleSfxRaw160,3860
qboolean S_LoadSound( sfx_t *sfx )S_LoadSound198,4736
void S_DisplayFreeMemory(void) {S_DisplayFreeMemory263,6651

client/qal.c,4619
LPALENABLE qalEnable;qalEnable34,1153
LPALDISABLE qalDisable;qalDisable35,1175
LPALISENABLED qalIsEnabled;qalIsEnabled36,1199
LPALGETSTRING qalGetString;qalGetString37,1227
LPALGETBOOLEANV qalGetBooleanv;qalGetBooleanv38,1255
LPALGETINTEGERV qalGetIntegerv;qalGetIntegerv39,1287
LPALGETFLOATV qalGetFloatv;qalGetFloatv40,1319
LPALGETDOUBLEV qalGetDoublev;qalGetDoublev41,1347
LPALGETBOOLEAN qalGetBoolean;qalGetBoolean42,1377
LPALGETINTEGER qalGetInteger;qalGetInteger43,1407
LPALGETFLOAT qalGetFloat;qalGetFloat44,1437
LPALGETDOUBLE qalGetDouble;qalGetDouble45,1463
LPALGETERROR qalGetError;qalGetError46,1491
LPALISEXTENSIONPRESENT qalIsExtensionPresent;qalIsExtensionPresent47,1517
LPALGETPROCADDRESS qalGetProcAddress;qalGetProcAddress48,1563
LPALGETENUMVALUE qalGetEnumValue;qalGetEnumValue49,1601
LPALLISTENERF qalListenerf;qalListenerf50,1635
LPALLISTENER3F qalListener3f;qalListener3f51,1663
LPALLISTENERFV qalListenerfv;qalListenerfv52,1693
LPALLISTENERI qalListeneri;qalListeneri53,1723
LPALGETLISTENERF qalGetListenerf;qalGetListenerf54,1751
LPALGETLISTENER3F qalGetListener3f;qalGetListener3f55,1785
LPALGETLISTENERFV qalGetListenerfv;qalGetListenerfv56,1821
LPALGETLISTENERI qalGetListeneri;qalGetListeneri57,1857
LPALGENSOURCES qalGenSources;qalGenSources58,1891
LPALDELETESOURCES qalDeleteSources;qalDeleteSources59,1921
LPALISSOURCE qalIsSource;qalIsSource60,1957
LPALSOURCEF qalSourcef;qalSourcef61,1983
LPALSOURCE3F qalSource3f;qalSource3f62,2007
LPALSOURCEFV qalSourcefv;qalSourcefv63,2033
LPALSOURCEI qalSourcei;qalSourcei64,2059
LPALGETSOURCEF qalGetSourcef;qalGetSourcef65,2083
LPALGETSOURCE3F qalGetSource3f;qalGetSource3f66,2113
LPALGETSOURCEFV qalGetSourcefv;qalGetSourcefv67,2145
LPALGETSOURCEI qalGetSourcei;qalGetSourcei68,2177
LPALSOURCEPLAYV qalSourcePlayv;qalSourcePlayv69,2207
LPALSOURCESTOPV qalSourceStopv;qalSourceStopv70,2239
LPALSOURCEREWINDV qalSourceRewindv;qalSourceRewindv71,2271
LPALSOURCEPAUSEV qalSourcePausev;qalSourcePausev72,2307
LPALSOURCEPLAY qalSourcePlay;qalSourcePlay73,2341
LPALSOURCESTOP qalSourceStop;qalSourceStop74,2371
LPALSOURCEREWIND qalSourceRewind;qalSourceRewind75,2401
LPALSOURCEPAUSE qalSourcePause;qalSourcePause76,2435
LPALSOURCEQUEUEBUFFERS qalSourceQueueBuffers;qalSourceQueueBuffers77,2467
LPALSOURCEUNQUEUEBUFFERS qalSourceUnqueueBuffers;qalSourceUnqueueBuffers78,2513
LPALGENBUFFERS qalGenBuffers;qalGenBuffers79,2563
LPALDELETEBUFFERS qalDeleteBuffers;qalDeleteBuffers80,2593
LPALISBUFFER qalIsBuffer;qalIsBuffer81,2629
LPALBUFFERDATA qalBufferData;qalBufferData82,2655
LPALGETBUFFERF qalGetBufferf;qalGetBufferf83,2685
LPALGETBUFFERI qalGetBufferi;qalGetBufferi84,2715
LPALDOPPLERFACTOR qalDopplerFactor;qalDopplerFactor85,2745
LPALDOPPLERVELOCITY qalDopplerVelocity;qalDopplerVelocity86,2781
LPALDISTANCEMODEL qalDistanceModel;qalDistanceModel87,2821
LPALCCREATECONTEXT qalcCreateContext;qalcCreateContext89,2858
LPALCMAKECONTEXTCURRENT qalcMakeContextCurrent;qalcMakeContextCurrent90,2896
LPALCPROCESSCONTEXT qalcProcessContext;qalcProcessContext91,2944
LPALCSUSPENDCONTEXT qalcSuspendContext;qalcSuspendContext92,2984
LPALCDESTROYCONTEXT qalcDestroyContext;qalcDestroyContext93,3024
LPALCGETCURRENTCONTEXT qalcGetCurrentContext;qalcGetCurrentContext94,3064
LPALCGETCONTEXTSDEVICE qalcGetContextsDevice;qalcGetContextsDevice95,3110
LPALCOPENDEVICE qalcOpenDevice;qalcOpenDevice96,3156
LPALCCLOSEDEVICE qalcCloseDevice;qalcCloseDevice97,3188
LPALCGETERROR qalcGetError;qalcGetError98,3222
LPALCISEXTENSIONPRESENT qalcIsExtensionPresent;qalcIsExtensionPresent99,3250
LPALCGETPROCADDRESS qalcGetProcAddress;qalcGetProcAddress100,3298
LPALCGETENUMVALUE qalcGetEnumValue;qalcGetEnumValue101,3338
LPALCGETSTRING qalcGetString;qalcGetString102,3374
LPALCGETINTEGERV qalcGetIntegerv;qalcGetIntegerv103,3404
LPALCCAPTUREOPENDEVICE qalcCaptureOpenDevice;qalcCaptureOpenDevice104,3438
LPALCCAPTURECLOSEDEVICE qalcCaptureCloseDevice;qalcCaptureCloseDevice105,3484
LPALCCAPTURESTART qalcCaptureStart;qalcCaptureStart106,3532
LPALCCAPTURESTOP qalcCaptureStop;qalcCaptureStop107,3568
LPALCCAPTURESAMPLES qalcCaptureSamples;qalcCaptureSamples108,3602
static void *OpenALLib = NULL;OpenALLib110,3643
static qboolean alinit_fail = qfalse;alinit_fail112,3675
static void *GPA(char *str)GPA119,3760
qboolean QAL_Init(const char *libname)QAL_Init142,4080
void QAL_Shutdown( void )QAL_Shutdown258,7829
qboolean QAL_Init(const char *libname)QAL_Init343,9776
void QAL_Shutdown( void )QAL_Shutdown347,9834

client/cl_avi.c,2817
#define INDEX_FILE_EXTENSION INDEX_FILE_EXTENSION26,1011
#define MAX_RIFF_CHUNKS MAX_RIFF_CHUNKS28,1054
typedef struct audioFormat_saudioFormat_s30,1082
  int rate;rate32,1113
  int format;format33,1125
  int channels;channels34,1139
  int bits;bits35,1155
  int sampleSize;sampleSize37,1168
  int totalBytes;totalBytes38,1186
} audioFormat_t;audioFormat_t39,1204
typedef struct aviFileData_saviFileData_s41,1222
  qboolean      fileOpen;fileOpen43,1253
  fileHandle_t  f;f44,1279
  char          fileName[ MAX_QPATH ];fileName45,1298
  int           fileSize;fileSize46,1337
  int           moviOffset;moviOffset47,1363
  int           moviSize;moviSize48,1391
  fileHandle_t  idxF;idxF50,1418
  int           numIndices;numIndices51,1440
  int           frameRate;frameRate53,1469
  int           framePeriod;framePeriod54,1496
  int           width, height;width55,1525
  int           width, height;height55,1525
  int           numVideoFrames;numVideoFrames56,1556
  int           maxRecordSize;maxRecordSize57,1588
  qboolean      motionJpeg;motionJpeg58,1619
  qboolean      audio;audio60,1648
  audioFormat_t a;a61,1671
  int           numAudioFrames;numAudioFrames62,1690
  int           chunkStack[ MAX_RIFF_CHUNKS ];chunkStack64,1723
  int           chunkStackTop;chunkStackTop65,1770
  byte          *cBuffer, *eBuffer;cBuffer67,1802
  byte          *cBuffer, *eBuffer;eBuffer67,1802
} aviFileData_t;aviFileData_t68,1838
static aviFileData_t afd;afd70,1856
#define MAX_AVI_BUFFER MAX_AVI_BUFFER72,1883
static byte buffer[ MAX_AVI_BUFFER ];buffer74,1912
static int  bufIndex;bufIndex75,1950
static ID_INLINE void SafeFS_Write( const void *buffer, int len, fileHandle_t f )SafeFS_Write82,2024
static ID_INLINE void WRITE_STRING( const char *s )WRITE_STRING93,2260
static ID_INLINE void WRITE_4BYTES( int x )WRITE_4BYTES104,2448
static ID_INLINE void WRITE_2BYTES( int x )WRITE_2BYTES118,2793
static ID_INLINE void WRITE_1BYTES( int x )WRITE_1BYTES130,3024
static ID_INLINE void START_CHUNK( const char *s )START_CHUNK141,3166
static ID_INLINE void END_CHUNK( void )END_CHUNK159,3505
void CL_WriteAVIHeader( void )CL_WriteAVIHeader181,3932
qboolean CL_OpenAVIForWriting( const char *fileName )CL_OpenAVIForWriting335,9811
static qboolean CL_CheckFileSize( int bytesToAdd )CL_CheckFileSize435,12333
void CL_WriteAVIVideoFrame( const byte *imageBuffer, int size )CL_WriteAVIVideoFrame466,12996
#define PCM_BUFFER_SIZE PCM_BUFFER_SIZE506,14040
void CL_WriteAVIAudioFrame( const byte *pcmBuffer, int size )CL_WriteAVIAudioFrame513,14131
void CL_TakeVideoFrame( void )CL_TakeVideoFrame579,15894
qboolean CL_CloseAVI( void )CL_CloseAVI596,16181
qboolean CL_VideoRecording( void )CL_VideoRecording668,17846

client/snd_wavelet.c,860
#define C0 C027,1024
#define C1 C128,1054
#define C2 C229,1084
#define C3 C330,1114
void daub4(float b[], unsigned long n, int isign)daub432,1146
void wt1(float a[], unsigned long n, int isign)wt162,1909
static unsigned char numBits[] = {numBits75,2253
byte MuLawEncode(short s) {MuLawEncode86,2836
short MuLawDecode(byte uLaw) {MuLawDecode101,3205
short mulawToShort[256];mulawToShort113,3459
static qboolean madeTable = qfalse;madeTable114,3484
static	int	NXStreamCount;NXStreamCount116,3521
void NXPutc(NXStream *stream, char out) {NXPutc118,3548
void encodeWavelet( sfx_t *sfx, short *packets) {encodeWavelet123,3626
void decodeWavelet(sndBuffer *chunk, short *to) {decodeWavelet173,4556
void encodeMuLaw( sfx_t *sfx, short *packets) {encodeMuLaw195,4867
void decodeMuLaw(sndBuffer *chunk, short *to) {decodeMuLaw241,5756

client/cl_input.c,6862
unsigned	frame_msec;frame_msec26,1072
int			old_com_frameTime;old_com_frameTime27,1093
kbutton_t	in_left, in_right, in_forward, in_back;in_left50,1872
kbutton_t	in_left, in_right, in_forward, in_back;in_right50,1872
kbutton_t	in_left, in_right, in_forward, in_back;in_forward50,1872
kbutton_t	in_left, in_right, in_forward, in_back;in_back50,1872
kbutton_t	in_lookup, in_lookdown, in_moveleft, in_moveright;in_lookup51,1922
kbutton_t	in_lookup, in_lookdown, in_moveleft, in_moveright;in_lookdown51,1922
kbutton_t	in_lookup, in_lookdown, in_moveleft, in_moveright;in_moveleft51,1922
kbutton_t	in_lookup, in_lookdown, in_moveleft, in_moveright;in_moveright51,1922
kbutton_t	in_strafe, in_speed;in_strafe52,1983
kbutton_t	in_strafe, in_speed;in_speed52,1983
kbutton_t	in_up, in_down;in_up53,2014
kbutton_t	in_up, in_down;in_down53,2014
kbutton_t	in_voiprecord;in_voiprecord56,2057
kbutton_t	in_buttons[16];in_buttons59,2090
qboolean	in_mlooking;in_mlooking62,2118
void IN_MLookDown( void ) {IN_MLookDown65,2142
void IN_MLookUp( void ) {IN_MLookUp69,2195
void IN_KeyDown( kbutton_t *b ) {IN_KeyDown76,2302
void IN_KeyUp( kbutton_t *b ) {IN_KeyUp112,2907
float CL_KeyState( kbutton_t *key ) {CL_KeyState161,3774
void IN_UpDown(void) {IN_KeyDown(&in_up);}IN_UpDown197,4232
void IN_UpUp(void) {IN_KeyUp(&in_up);}IN_UpUp198,4275
void IN_DownDown(void) {IN_KeyDown(&in_down);}IN_DownDown199,4314
void IN_DownUp(void) {IN_KeyUp(&in_down);}IN_DownUp200,4361
void IN_LeftDown(void) {IN_KeyDown(&in_left);}IN_LeftDown201,4404
void IN_LeftUp(void) {IN_KeyUp(&in_left);}IN_LeftUp202,4451
void IN_RightDown(void) {IN_KeyDown(&in_right);}IN_RightDown203,4494
void IN_RightUp(void) {IN_KeyUp(&in_right);}IN_RightUp204,4543
void IN_ForwardDown(void) {IN_KeyDown(&in_forward);}IN_ForwardDown205,4588
void IN_ForwardUp(void) {IN_KeyUp(&in_forward);}IN_ForwardUp206,4641
void IN_BackDown(void) {IN_KeyDown(&in_back);}IN_BackDown207,4690
void IN_BackUp(void) {IN_KeyUp(&in_back);}IN_BackUp208,4737
void IN_LookupDown(void) {IN_KeyDown(&in_lookup);}IN_LookupDown209,4780
void IN_LookupUp(void) {IN_KeyUp(&in_lookup);}IN_LookupUp210,4831
void IN_LookdownDown(void) {IN_KeyDown(&in_lookdown);}IN_LookdownDown211,4878
void IN_LookdownUp(void) {IN_KeyUp(&in_lookdown);}IN_LookdownUp212,4933
void IN_MoveleftDown(void) {IN_KeyDown(&in_moveleft);}IN_MoveleftDown213,4984
void IN_MoveleftUp(void) {IN_KeyUp(&in_moveleft);}IN_MoveleftUp214,5039
void IN_MoverightDown(void) {IN_KeyDown(&in_moveright);}IN_MoverightDown215,5090
void IN_MoverightUp(void) {IN_KeyUp(&in_moveright);}IN_MoverightUp216,5147
void IN_SpeedDown(void) {IN_KeyDown(&in_speed);}IN_SpeedDown218,5201
void IN_SpeedUp(void) {IN_KeyUp(&in_speed);}IN_SpeedUp219,5250
void IN_StrafeDown(void) {IN_KeyDown(&in_strafe);}IN_StrafeDown220,5295
void IN_StrafeUp(void) {IN_KeyUp(&in_strafe);}IN_StrafeUp221,5346
void IN_VoipRecordDown(void)IN_VoipRecordDown224,5410
void IN_VoipRecordUp(void)IN_VoipRecordUp230,5504
void IN_Button0Down(void) {IN_KeyDown(&in_buttons[0]);}IN_Button0Down237,5601
void IN_Button0Up(void) {IN_KeyUp(&in_buttons[0]);}IN_Button0Up238,5657
void IN_Button1Down(void) {IN_KeyDown(&in_buttons[1]);}IN_Button1Down239,5709
void IN_Button1Up(void) {IN_KeyUp(&in_buttons[1]);}IN_Button1Up240,5765
void IN_Button2Down(void) {IN_KeyDown(&in_buttons[2]);}IN_Button2Down241,5817
void IN_Button2Up(void) {IN_KeyUp(&in_buttons[2]);}IN_Button2Up242,5873
void IN_Button3Down(void) {IN_KeyDown(&in_buttons[3]);}IN_Button3Down243,5925
void IN_Button3Up(void) {IN_KeyUp(&in_buttons[3]);}IN_Button3Up244,5981
void IN_Button4Down(void) {IN_KeyDown(&in_buttons[4]);}IN_Button4Down245,6033
void IN_Button4Up(void) {IN_KeyUp(&in_buttons[4]);}IN_Button4Up246,6089
void IN_Button5Down(void) {IN_KeyDown(&in_buttons[5]);}IN_Button5Down247,6141
void IN_Button5Up(void) {IN_KeyUp(&in_buttons[5]);}IN_Button5Up248,6197
void IN_Button6Down(void) {IN_KeyDown(&in_buttons[6]);}IN_Button6Down249,6249
void IN_Button6Up(void) {IN_KeyUp(&in_buttons[6]);}IN_Button6Up250,6305
void IN_Button7Down(void) {IN_KeyDown(&in_buttons[7]);}IN_Button7Down251,6357
void IN_Button7Up(void) {IN_KeyUp(&in_buttons[7]);}IN_Button7Up252,6413
void IN_Button8Down(void) {IN_KeyDown(&in_buttons[8]);}IN_Button8Down253,6465
void IN_Button8Up(void) {IN_KeyUp(&in_buttons[8]);}IN_Button8Up254,6521
void IN_Button9Down(void) {IN_KeyDown(&in_buttons[9]);}IN_Button9Down255,6573
void IN_Button9Up(void) {IN_KeyUp(&in_buttons[9]);}IN_Button9Up256,6629
void IN_Button10Down(void) {IN_KeyDown(&in_buttons[10]);}IN_Button10Down257,6681
void IN_Button10Up(void) {IN_KeyUp(&in_buttons[10]);}IN_Button10Up258,6739
void IN_Button11Down(void) {IN_KeyDown(&in_buttons[11]);}IN_Button11Down259,6793
void IN_Button11Up(void) {IN_KeyUp(&in_buttons[11]);}IN_Button11Up260,6851
void IN_Button12Down(void) {IN_KeyDown(&in_buttons[12]);}IN_Button12Down261,6905
void IN_Button12Up(void) {IN_KeyUp(&in_buttons[12]);}IN_Button12Up262,6963
void IN_Button13Down(void) {IN_KeyDown(&in_buttons[13]);}IN_Button13Down263,7017
void IN_Button13Up(void) {IN_KeyUp(&in_buttons[13]);}IN_Button13Up264,7075
void IN_Button14Down(void) {IN_KeyDown(&in_buttons[14]);}IN_Button14Down265,7129
void IN_Button14Up(void) {IN_KeyUp(&in_buttons[14]);}IN_Button14Up266,7187
void IN_Button15Down(void) {IN_KeyDown(&in_buttons[15]);}IN_Button15Down267,7241
void IN_Button15Up(void) {IN_KeyUp(&in_buttons[15]);}IN_Button15Up268,7299
void IN_ButtonDown (void) {IN_ButtonDown270,7354
void IN_ButtonUp (void) {IN_ButtonUp272,7412
void IN_CenterView (void) {IN_CenterView275,7467
cvar_t	*cl_upspeed;cl_upspeed282,7647
cvar_t	*cl_forwardspeed;cl_forwardspeed283,7667
cvar_t	*cl_sidespeed;cl_sidespeed284,7692
cvar_t	*cl_yawspeed;cl_yawspeed286,7715
cvar_t	*cl_pitchspeed;cl_pitchspeed287,7736
cvar_t	*cl_run;cl_run289,7760
cvar_t	*cl_anglespeedkey;cl_anglespeedkey291,7777
void CL_AdjustAngles( void ) {CL_AdjustAngles301,7894
void CL_KeyMove( usercmd_t *cmd ) {CL_KeyMove326,8508
void CL_MouseEvent( int dx, int dy, int time ) {CL_MouseEvent371,9508
void CL_JoystickEvent( int axis, int value, int time ) {CL_JoystickEvent389,9919
void CL_JoystickMove( usercmd_t *cmd ) {CL_JoystickMove401,10184
void CL_MouseMove( usercmd_t *cmd ) {CL_MouseMove438,11074
void CL_CmdButtons( usercmd_t *cmd ) {CL_CmdButtons492,12303
void CL_FinishMove( usercmd_t *cmd ) {CL_FinishMove524,12937
usercmd_t CL_CreateCmd( void ) {CL_CreateCmd545,13358
void CL_CreateNewCommands( void ) {CL_CreateNewCommands598,14529
qboolean CL_ReadyToSendPacket( void ) {CL_ReadyToSendPacket635,15434
void CL_WritePacket( void ) {CL_WritePacket706,17196
void CL_SendCmd( void ) {CL_SendCmd910,24078
void CL_InitInput( void ) {CL_InitInput940,24638

client/snd_adpcm.c,594
static int indexTable[16] = {indexTable38,1481
static int stepsizeTable[89] = {stepsizeTable43,1579
void S_AdpcmEncode( short indata[], char outdata[], int len, struct adpcm_state *state ) {S_AdpcmEncode56,2119
/* static */ void S_AdpcmDecode( const char indata[], short *outdata, int len, struct adpcm_state *state ) {S_AdpcmDecode155,4653
int S_AdpcmMemoryNeeded( const wavinfo_t *info ) {S_AdpcmMemoryNeeded237,6763
void S_AdpcmGetSamples(sndBuffer *chunk, short *to) {S_AdpcmGetSamples271,7637
void S_AdpcmEncodeSound( sfx_t *sfx, short *samples ) {S_AdpcmEncodeSound290,8035

client/cl_console.c,2511
int g_console_field_width = 78;g_console_field_width27,1010
#define	NUM_CON_TIMES NUM_CON_TIMES30,1044
#define		CON_TEXTSIZE	CON_TEXTSIZE32,1069
	qboolean	initialized;initialized34,1114
	short	text[CON_TEXTSIZE];text36,1138
	int		current;		// line where next message will be printedcurrent37,1165
	int		x;				// offset in current line for next printx38,1224
	int		display;		// bottom of console displays this linedisplay39,1277
	int 	linewidth;		// characters across screenlinewidth41,1334
	int		totallines;		// total lines in console scrollbacktotallines42,1380
	float	xadjust;		// for wide aspect screensxadjust44,1437
	float	displayFrac;	// aproaches finalFrac at scr_conspeeddisplayFrac46,1482
	float	finalFrac;		// 0.0 to 1.0 lines of console to displayfinalFrac47,1541
	int		vislines;		// in scanlinesvislines49,1603
	int		times[NUM_CON_TIMES];	// cls.realtime time the line was generatedtimes51,1637
	vec4_t	color;color53,1749
} console_t;console_t54,1764
console_t	con;con58,1801
cvar_t		*con_conspeed;con_conspeed60,1817
cvar_t		*con_notifytime;con_notifytime61,1840
#define	DEFAULT_CONSOLE_WIDTH	DEFAULT_CONSOLE_WIDTH63,1866
vec4_t	console_color = {1.0, 1.0, 1.0, 1.0};console_color65,1900
void Con_ToggleConsole_f (void) {Con_ToggleConsole_f73,2007
void Con_MessageMode_f (void) {Con_MessageMode_f91,2426
void Con_MessageMode2_f (void) {Con_MessageMode2_f105,2679
void Con_MessageMode3_f (void) {Con_MessageMode3_f118,2931
void Con_MessageMode4_f (void) {Con_MessageMode4_f135,3316
void Con_Clear_f (void) {Con_Clear_f152,3691
void Con_Dump_f (void)Con_Dump_f170,3956
void Con_ClearNotify( void ) {Con_ClearNotify230,5047
void Con_CheckResize (void)Con_CheckResize247,5275
void Cmd_CompleteTxtName( char *args, int argNum ) {Cmd_CompleteTxtName310,6601
void Con_Init (void) {Con_Init322,6778
void Con_Linefeed (qboolean skipnotify)Con_Linefeed352,7651
void CL_ConsolePrint( char *txt ) {CL_ConsolePrint382,8368
void Con_DrawInput (void) {Con_DrawInput489,10336
void Con_DrawNotify (void)Con_DrawNotify514,10861
void Con_DrawSolidConsole( float frac ) {Con_DrawSolidConsole592,12436
void Con_DrawConsole( void ) {Con_DrawConsole704,14717
void Con_RunConsole (void) {Con_RunConsole735,15350
void Con_PageUp( void ) {Con_PageUp760,15986
void Con_PageDown( void ) {Con_PageDown767,16141
void Con_Top( void ) {Con_Top774,16257
void Con_Bottom( void ) {Con_Bottom781,16421
void Con_Close( void ) {Con_Close786,16479

client/snd_dma.c,4782
snd_stream_t	*s_backgroundStream = NULL;s_backgroundStream44,1511
static char		s_backgroundLoop[MAX_QPATH];s_backgroundLoop45,1552
#define		SOUND_FULLVOLUME	SOUND_FULLVOLUME54,1918
#define		SOUND_ATTENUATE	SOUND_ATTENUATE56,1948
channel_t   s_channels[MAX_CHANNELS];s_channels58,1983
channel_t   loop_channels[MAX_CHANNELS];loop_channels59,2021
int			numLoopChannels;numLoopChannels60,2062
static int	s_soundStarted;s_soundStarted62,2086
static		qboolean	s_soundMuted;s_soundMuted63,2113
dma_t		dma;dma65,2145
static int			listener_number;listener_number67,2158
static vec3_t		listener_origin;listener_origin68,2188
static vec3_t		listener_axis[3];listener_axis69,2220
int			s_soundtime;		// sample PAIRSs_soundtime71,2254
int   		s_paintedtime; 		// sample PAIRSs_paintedtime72,2290
#define		MAX_SFX	MAX_SFX76,2408
sfx_t		s_knownSfx[MAX_SFX];s_knownSfx77,2432
int			s_numSfx = 0;s_numSfx78,2460
#define		LOOP_HASH	LOOP_HASH80,2481
static	sfx_t		*sfxHash[LOOP_HASH];sfxHash81,2505
cvar_t		*s_testsound;s_testsound83,2541
cvar_t		*s_khz;s_khz84,2563
cvar_t		*s_show;s_show85,2579
cvar_t		*s_mixahead;s_mixahead86,2596
cvar_t		*s_mixPreStep;s_mixPreStep87,2617
static loopSound_t		loopSounds[MAX_GENTITIES];loopSounds89,2641
static	channel_t		*freelist = NULL;freelist90,2688
int						s_rawend[MAX_RAW_STREAMS];s_rawend92,2725
portable_samplepair_t s_rawsamples[MAX_RAW_STREAMS][MAX_RAW_SAMPLES];s_rawsamples93,2761
void S_Base_SoundInfo(void) {	S_Base_SoundInfo101,3005
void S_Base_StartCapture( void )S_Base_StartCapture125,3664
int S_Base_AvailableCaptureSamples( void )S_Base_AvailableCaptureSamples131,3734
void S_Base_Capture( int samples, byte *data )S_Base_Capture138,3825
void S_Base_StopCapture( void )S_Base_StopCapture144,3909
void S_Base_MasterGain( float val )S_Base_MasterGain150,3978
void S_Base_SoundList( void ) {S_Base_SoundList163,4112
void S_ChannelFree(channel_t *v) {S_ChannelFree189,4697
channel_t*	S_ChannelMalloc( void ) {S_ChannelMalloc195,4811
void S_ChannelSetup( void ) {S_ChannelSetup206,5008
static long S_HashSFXName(const char *name) {S_HashSFXName234,5600
static sfx_t *S_FindName( const char *name ) {S_FindName259,6050
void S_DefaultSound( sfx_t *sfx ) {S_DefaultSound316,6998
void S_Base_DisableSounds( void ) {S_Base_DisableSounds339,7413
sfxHandle_t	S_Base_RegisterSound( const char *name, qboolean compressed ) {S_Base_RegisterSound351,7618
void S_Base_BeginRegistration( void ) {S_Base_BeginRegistration392,8422
void S_memoryLoad(sfx_t	*sfx) {S_memoryLoad406,8767
void S_SpatializeOrigin (vec3_t origin, int master_vol, int *left_vol, int *right_vol)S_SpatializeOrigin424,9176
void S_Base_StartSound(vec3_t origin, int entityNum, int entchannel, sfxHandle_t sfxHandle ) {S_Base_StartSound489,10677
void S_Base_StartLocalSound( sfxHandle_t sfxHandle, int channelNum ) {S_Base_StartLocalSound611,13438
void S_Base_ClearSoundBuffer( void ) {S_Base_ClearSoundBuffer633,13936
void S_Base_StopAllSounds(void) {S_Base_StopAllSounds664,14518
void S_Base_StopLoopingSound(int entityNum) {S_Base_StopLoopingSound683,14868
void S_Base_ClearLoopingSounds( qboolean killall ) {S_Base_ClearLoopingSounds695,15095
void S_Base_AddLoopingSound( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfxHandle ) {S_Base_AddLoopingSound714,15568
void S_Base_AddRealLoopingSound( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfxHandle ) {S_Base_AddRealLoopingSound777,17556
void S_AddLoopSounds (void) {S_AddLoopSounds817,18541
void S_ByteSwapRawSamples( int samples, int width, int s_channels, const byte *data ) {S_ByteSwapRawSamples899,20503
void S_Base_RawSamples( int stream, int samples, int rate, int width, int s_channels, const byte *data, float volume ) {S_Base_RawSamples924,20894
void S_Base_UpdateEntityPosition( int entityNum, const vec3_t origin ) {S_Base_UpdateEntityPosition1034,23584
void S_Base_Respatialize( int entityNum, const vec3_t head, vec3_t axis[3], int inwater ) {S_Base_Respatialize1049,23974
qboolean S_ScanChannelStarts( void ) {S_ScanChannelStarts1097,25103
void S_Base_Update( void ) {S_Base_Update1134,25836
void S_GetSoundtime(void)S_GetSoundtime1167,26476
void S_Update_(void) {S_Update_1217,27563
void S_Base_StopBackgroundTrack( void ) {S_Base_StopBackgroundTrack1293,28938
void S_Base_StartBackgroundTrack( const char *intro, const char *loop ){S_Base_StartBackgroundTrack1306,29180
void S_UpdateBackgroundTrack( void ) {S_UpdateBackgroundTrack1350,30202
void S_FreeOldestSound( void ) {S_FreeOldestSound1430,32117
void S_Base_Shutdown( void ) {S_Base_Shutdown1464,32866
qboolean S_Base_Init( soundInterface_t *si ) {S_Base_Init1481,33060

client/snd_openal.c,9308
cvar_t *s_alPrecache;s_alPrecache33,1172
cvar_t *s_alGain;s_alGain34,1194
cvar_t *s_alSources;s_alSources35,1212
cvar_t *s_alDopplerFactor;s_alDopplerFactor36,1233
cvar_t *s_alDopplerSpeed;s_alDopplerSpeed37,1260
cvar_t *s_alMinDistance;s_alMinDistance38,1286
cvar_t *s_alMaxDistance;s_alMaxDistance39,1311
cvar_t *s_alRolloff;s_alRolloff40,1336
cvar_t *s_alGraceDistance;s_alGraceDistance41,1357
cvar_t *s_alDriver;s_alDriver42,1384
cvar_t *s_alDevice;s_alDevice43,1404
cvar_t *s_alAvailableDevices;s_alAvailableDevices44,1424
ALuint S_AL_Format(int width, int channels)S_AL_Format52,1516
static const char *S_AL_ErrorMsg(ALenum error)S_AL_ErrorMsg80,1955
typedef struct alSfx_salSfx_s105,2459
	char			filename[MAX_QPATH];filename107,2484
	ALuint		buffer;					// OpenAL bufferbuffer108,2513
	qboolean	isDefault;			// Couldn't be loaded - use default FXisDefault109,2551
	qboolean	inMemory;				// Sound is stored in memoryinMemory110,2613
	qboolean	isLocked;				// Sound is locked (can not be unloaded)isLocked111,2665
	int				lastUsedTime;		// Time last usedlastUsedTime112,2729
} alSfx_t;alSfx_t113,2770
static qboolean alBuffersInitialised = qfalse;alBuffersInitialised115,2782
#define MAX_SFX MAX_SFX118,2871
static alSfx_t knownSfx[MAX_SFX];knownSfx119,2892
static int numSfx = 0;numSfx120,2926
static sfxHandle_t default_sfx;default_sfx122,2950
static sfxHandle_t S_AL_BufferFindFree( void )S_AL_BufferFindFree131,3065
static sfxHandle_t S_AL_BufferFind(const char *filename)S_AL_BufferFind158,3483
static void S_AL_BufferUseDefault(sfxHandle_t sfx)S_AL_BufferUseDefault195,4043
static void S_AL_BufferUnload(sfxHandle_t sfx)S_AL_BufferUnload210,4454
static qboolean S_AL_BufferEvict( void )S_AL_BufferEvict234,4909
static void S_AL_BufferLoad(sfxHandle_t sfx)S_AL_BufferLoad268,5443
void S_AL_BufferUse(sfxHandle_t sfx)S_AL_BufferUse361,7382
qboolean S_AL_BufferInit( void )S_AL_BufferInit377,7674
void S_AL_BufferShutdown( void )S_AL_BufferShutdown402,8147
sfxHandle_t S_AL_RegisterSound( const char *sample, qboolean compressed )S_AL_RegisterSound429,8568
ALuint S_AL_BufferGet(sfxHandle_t sfx)S_AL_BufferGet448,8957
typedef struct src_ssrc_s457,9112
	ALuint					alSource;		// OpenAL source objectalSource459,9135
	sfxHandle_t 		sfx;				// Sound effect in usesfx460,9182
	int							lastUsedTime;		// Last time usedlastUsedTime462,9229
	alSrcPriority_t	priority;		// Prioritypriority463,9273
	int							entity;			// Owning entity (-1 if none)entity464,9313
	int							channel;		// Associated channel (-1 if none)channel465,9364
	int							isActive;		// Is this source currently in use?isActive467,9421
	int							isLocked;		// This is locked (un-allocatable)isLocked468,9479
	int							isLooping;	// Is this a looping effect (attached to an entity)isLooping469,9536
	int							isTracking;	// Is this object tracking it's ownerisTracking470,9610
	float							curGain;	// gain employed if source is within maxdistance.curGain472,9672
	float							scaleGain;	// Last gain value for this source. 0 if muted.scaleGain473,9744
	qboolean				local;			// Is this local (relative to the cam)local475,9817
} src_t;src_t476,9878
	#define MAX_SRC MAX_SRC479,9903
	#define MAX_SRC MAX_SRC481,9929
static src_t srcList[MAX_SRC];srcList483,9957
static int srcCount = 0;srcCount484,9988
static qboolean alSourcesInitialised = qfalse;alSourcesInitialised485,10013
static vec3_t lastListenerOrigin = { 0.0f, 0.0f, 0.0f };lastListenerOrigin486,10060
typedef struct sentity_ssentity_s488,10118
	vec3_t					origin;origin490,10145
	int							srcAllocated; // If a src_t has been allocated to this entitysrcAllocated492,10166
	int							srcIndex;srcIndex493,10239
	qboolean				loopAddedThisFrame;loopAddedThisFrame495,10261
	alSrcPriority_t	loopPriority;loopPriority496,10294
	sfxHandle_t			loopSfx;loopSfx497,10325
	qboolean				startLoopingSound;startLoopingSound498,10349
} sentity_t;sentity_t499,10381
static sentity_t entityList[MAX_GENTITIES];entityList501,10395
#define S_AL_SanitiseVector(S_AL_SanitiseVector508,10502
static void _S_AL_SanitiseVector( vec3_t v, int line )_S_AL_SanitiseVector509,10566
#define AL_THIRD_PERSON_THRESHOLD_SQ AL_THIRD_PERSON_THRESHOLD_SQ520,10871
static void S_AL_ScaleGain(src_t *chksrc, vec3_t origin)S_AL_ScaleGain529,11067
static qboolean S_AL_HearingThroughEntity( int entityNum )S_AL_HearingThroughEntity569,12029
qboolean S_AL_SrcInit( void )S_AL_SrcInit600,12935
void S_AL_SrcShutdown( void )S_AL_SrcShutdown638,13637
static void S_AL_SrcSetup(srcHandle_t src, sfxHandle_t sfx, alSrcPriority_t priority,S_AL_SrcSetup665,14091
static void S_AL_SrcKill(srcHandle_t src)S_AL_SrcKill717,15636
srcHandle_t S_AL_SrcAlloc( alSrcPriority_t priority, int entnum, int channel )S_AL_SrcAlloc758,16600
void S_AL_SrcLock(srcHandle_t src)S_AL_SrcLock850,18502
void S_AL_SrcUnlock(srcHandle_t src)S_AL_SrcUnlock863,18690
void S_AL_UpdateEntityPosition( int entityNum, const vec3_t origin )S_AL_UpdateEntityPosition874,18840
static qboolean S_AL_CheckInput(int entityNum, sfxHandle_t sfx)S_AL_CheckInput892,19357
void S_AL_StartLocalSound(sfxHandle_t sfx, int channel)S_AL_StartLocalSound914,19812
void S_AL_StartSound( vec3_t origin, int entnum, int entchannel, sfxHandle_t sfx )S_AL_StartSound942,20273
void S_AL_ClearLoopingSounds( qboolean killall )S_AL_ClearLoopingSounds991,21400
static void S_AL_SrcLoop( alSrcPriority_t priority, sfxHandle_t sfx,S_AL_SrcLoop1006,21674
void S_AL_AddLoopingSound( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfx )S_AL_AddLoopingSound1074,23292
void S_AL_AddRealLoopingSound( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfx )S_AL_AddRealLoopingSound1095,23771
void S_AL_StopLoopingSound(int entityNum )S_AL_StopLoopingSound1123,24656
void S_AL_SrcUpdate( void )S_AL_SrcUpdate1137,24918
void S_AL_SrcShutup( void )S_AL_SrcShutup1235,27398
ALuint S_AL_SrcGet(srcHandle_t src)S_AL_SrcGet1248,27550
static srcHandle_t streamSourceHandles[MAX_RAW_STREAMS];streamSourceHandles1256,27702
static qboolean streamPlaying[MAX_RAW_STREAMS];streamPlaying1257,27759
static ALuint streamSources[MAX_RAW_STREAMS];streamSources1258,27807
static void S_AL_AllocateStreamChannel( int stream )S_AL_AllocateStreamChannel1265,27923
static void S_AL_FreeStreamChannel( int stream )S_AL_FreeStreamChannel1294,29005
void S_AL_RawSamples(int stream, int samples, int rate, int width, int channels, const byte *data, float volume)S_AL_RawSamples1311,29330
void S_AL_StreamUpdate( int stream )S_AL_StreamUpdate1351,30292
void S_AL_StreamDie( int stream )S_AL_StreamDie1397,31301
#define NUM_MUSIC_BUFFERS	NUM_MUSIC_BUFFERS1414,31637
#define	MUSIC_BUFFER_SIZE MUSIC_BUFFER_SIZE1415,31665
static qboolean musicPlaying = qfalse;musicPlaying1417,31697
static srcHandle_t musicSourceHandle = -1;musicSourceHandle1418,31736
static ALuint musicSource;musicSource1419,31779
static ALuint musicBuffers[NUM_MUSIC_BUFFERS];musicBuffers1420,31806
static snd_stream_t *mus_stream;mus_stream1422,31854
static snd_stream_t *intro_stream;intro_stream1423,31887
static char s_backgroundLoop[MAX_QPATH];s_backgroundLoop1424,31922
static byte decode_buffer[MUSIC_BUFFER_SIZE];decode_buffer1426,31964
static void S_AL_MusicSourceGet( void )S_AL_MusicSourceGet1433,32073
static void S_AL_MusicSourceFree( void )S_AL_MusicSourceFree1457,32831
static void S_AL_CloseMusicFiles(void)S_AL_CloseMusicFiles1470,33054
void S_AL_StopBackgroundTrack( void )S_AL_StopBackgroundTrack1491,33334
void S_AL_MusicProcess(ALuint b)S_AL_MusicProcess1520,33829
void S_AL_StartBackgroundTrack( const char *intro, const char *loop )S_AL_StartBackgroundTrack1587,35183
void S_AL_MusicUpdate( void )S_AL_MusicUpdate1659,36594
static ALCdevice *alDevice;alDevice1696,37586
static ALCcontext *alContext;alContext1697,37614
static ALCdevice *alCaptureDevice;alCaptureDevice1700,37661
static cvar_t *s_alCapture;s_alCapture1701,37696
#define ALDRIVER_DEFAULT ALDRIVER_DEFAULT1705,37746
#define ALDEVICE_DEFAULT ALDEVICE_DEFAULT1706,37786
#define ALDRIVER_DEFAULT ALDRIVER_DEFAULT1708,37853
#define ALDRIVER_DEFAULT ALDRIVER_DEFAULT1710,37937
void S_AL_StopAllSounds( void )S_AL_StopAllSounds1719,38055
void S_AL_Respatialize( int entityNum, const vec3_t origin, vec3_t axis[3], int inwater )S_AL_Respatialize1734,38275
void S_AL_Update( void )S_AL_Update1764,39077
void S_AL_DisableSounds( void )S_AL_DisableSounds1812,39993
void S_AL_BeginRegistration( void )S_AL_BeginRegistration1823,40125
void S_AL_ClearSoundBuffer( void )S_AL_ClearSoundBuffer1833,40237
void S_AL_SoundList( void )S_AL_SoundList1843,40341
void S_AL_StartCapture( void )S_AL_StartCapture1849,40397
int S_AL_AvailableCaptureSamples( void )S_AL_AvailableCaptureSamples1856,40507
void S_AL_Capture( int samples, byte *data )S_AL_Capture1869,40761
void S_AL_StopCapture( void )S_AL_StopCapture1875,40895
void S_AL_MasterGain( float gain )S_AL_MasterGain1881,40996
void S_AL_SoundInfo( void )S_AL_SoundInfo1894,41138
void S_AL_Shutdown( void )S_AL_Shutdown1915,41833
qboolean S_AL_Init( soundInterface_t *si )S_AL_Init1953,42518

client/snd_local.h,6140
#define	PAINTBUFFER_SIZE	PAINTBUFFER_SIZE29,1110
#define SND_CHUNK_SIZE	SND_CHUNK_SIZE31,1168
#define SND_CHUNK_SIZE_FLOAT	SND_CHUNK_SIZE_FLOAT32,1213
#define SND_CHUNK_SIZE_BYTE	SND_CHUNK_SIZE_BYTE33,1272
	int			left;	// the final values will be clamped to +/- 0x00ffff00 and shifted downleft36,1349
	int			right;right37,1433
} portable_samplepair_t;portable_samplepair_t38,1447
typedef struct adpcm_state {adpcm_state40,1473
    short	sample;		/* Previous output value */sample41,1502
    char	index;		/* Index into stepsize table */index42,1549
} adpcm_state_t;adpcm_state_t43,1598
typedef	struct sndBuffer_s {sndBuffer_s45,1616
	short					sndChunk[SND_CHUNK_SIZE];sndChunk46,1645
	struct sndBuffer_s		*next;next47,1682
    int						size;size48,1710
	adpcm_state_t			adpcm;adpcm49,1729
} sndBuffer;sndBuffer50,1753
typedef struct sfx_s {sfx_s52,1767
	sndBuffer		*soundData;soundData53,1790
	qboolean		defaultSound;			// couldn't be loaded, so use buzzdefaultSound54,1814
	qboolean		inMemory;				// not in MemoryinMemory55,1876
	qboolean		soundCompressed;		// not in MemorysoundCompressed56,1917
	int				soundCompressionMethod;	soundCompressionMethod57,1963
	int 			soundLength;soundLength58,1996
	char 			soundName[MAX_QPATH];soundName59,2017
	int				lastTimeUsed;lastTimeUsed60,2048
	struct sfx_s	*next;next61,2070
} sfx_t;sfx_t62,2091
	int			channels;channels65,2118
	int			samples;				// mono samples in buffersamples66,2135
	int			submission_chunk;		// don't mix less than this #submission_chunk67,2180
	int			samplebits;samplebits68,2236
	int			speed;speed69,2255
	byte		*buffer;buffer70,2269
} dma_t;dma_t71,2285
#define START_SAMPLE_IMMEDIATE	START_SAMPLE_IMMEDIATE73,2295
#define MAX_DOPPLER_SCALE MAX_DOPPLER_SCALE75,2338
typedef struct loopSound_s {loopSound_s77,2383
	vec3_t		origin;origin78,2412
	vec3_t		velocity;velocity79,2429
	sfx_t		*sfx;sfx80,2448
	int			mergeFrame;mergeFrame81,2462
	qboolean	active;active82,2481
	qboolean	kill;kill83,2499
	qboolean	doppler;doppler84,2515
	float		dopplerScale;dopplerScale85,2534
	float		oldDopplerScale;oldDopplerScale86,2556
	int			framenum;framenum87,2581
} loopSound_t;loopSound_t88,2598
	int			allocTime;allocTime92,2631
	int			startSample;	// START_SAMPLE_IMMEDIATE = set immediately on next mixstartSample93,2649
	int			entnum;			// to allow overriding a specific soundentnum94,2725
	int			entchannel;		// to allow overriding a specific soundentchannel95,2782
	int			leftvol;		// 0-255 volume after spatializationleftvol96,2842
	int			rightvol;		// 0-255 volume after spatializationrightvol97,2896
	int			master_vol;		// 0-255 volume before spatializationmaster_vol98,2951
	float		dopplerScale;dopplerScale99,3009
	float		oldDopplerScale;oldDopplerScale100,3031
	vec3_t		origin;			// only use if fixed_origin is setorigin101,3056
	qboolean	fixed_origin;	// use origin instead of fetching entnum's originfixed_origin102,3110
	sfx_t		*thesfx;		// sfx structurethesfx103,3184
	qboolean	doppler;doppler104,3219
} channel_t;channel_t105,3238
#define	WAV_FORMAT_PCM	WAV_FORMAT_PCM108,3253
	int			format;format112,3298
	int			rate;rate113,3313
	int			width;width114,3326
	int			channels;channels115,3340
	int			samples;samples116,3357
	int			dataofs;		// chunk starts this many bytes from file startdataofs117,3373
} wavinfo_t;wavinfo_t118,3438
	void (*Shutdown)(void);Shutdown123,3527
	void (*StartSound)( vec3_t origin, int entnum, int entchannel, sfxHandle_t sfx );StartSound124,3552
	void (*StartLocalSound)( sfxHandle_t sfx, int channelNum );StartLocalSound125,3635
	void (*StartBackgroundTrack)( const char *intro, const char *loop );StartBackgroundTrack126,3696
	void (*StopBackgroundTrack)( void );StopBackgroundTrack127,3766
	void (*RawSamples)(int stream, int samples, int rate, int width, int channels, const byte *data, float volume);RawSamples128,3804
	void (*StopAllSounds)( void );StopAllSounds129,3917
	void (*ClearLoopingSounds)( qboolean killall );ClearLoopingSounds130,3949
	void (*AddLoopingSound)( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfx );AddLoopingSound131,3998
	void (*AddRealLoopingSound)( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfx );AddRealLoopingSound132,4102
	void (*StopLoopingSound)(int entityNum );StopLoopingSound133,4210
	void (*Respatialize)( int entityNum, const vec3_t origin, vec3_t axis[3], int inwater );Respatialize134,4253
	void (*UpdateEntityPosition)( int entityNum, const vec3_t origin );UpdateEntityPosition135,4343
	void (*Update)( void );Update136,4412
	void (*DisableSounds)( void );DisableSounds137,4437
	void (*BeginRegistration)( void );BeginRegistration138,4469
	sfxHandle_t (*RegisterSound)( const char *sample, qboolean compressed );RegisterSound139,4505
	void (*ClearSoundBuffer)( void );ClearSoundBuffer140,4579
	void (*SoundInfo)( void );SoundInfo141,4614
	void (*SoundList)( void );SoundList142,4642
	void (*StartCapture)( void );StartCapture144,4686
	int (*AvailableCaptureSamples)( void );AvailableCaptureSamples145,4717
	void (*Capture)( int samples, byte *data );Capture146,4758
	void (*StopCapture)( void );StopCapture147,4803
	void (*MasterGain)( float gain );MasterGain148,4833
} soundInterface_t;soundInterface_t150,4875
#define	MAX_CHANNELS	MAX_CHANNELS176,5427
#define	MAX_RAW_SAMPLES	MAX_RAW_SAMPLES188,5712
#define MAX_RAW_STREAMS MAX_RAW_STREAMS189,5742
#define SENTINEL_MULAW_ZERO_RUN SENTINEL_MULAW_ZERO_RUN219,6450
#define SENTINEL_MULAW_FOUR_BIT_RUN SENTINEL_MULAW_FOUR_BIT_RUN220,6486
#define	NXStream NXStream224,6560
	SRCPRI_AMBIENT = 0,	// Ambient sound effectsSRCPRI_AMBIENT241,6943
	SRCPRI_ENTITY,			// Entity sound effectsSRCPRI_ENTITY242,6989
	SRCPRI_ONESHOT,			// One-shot soundsSRCPRI_ONESHOT243,7031
	SRCPRI_LOCAL,				// Local soundsSRCPRI_LOCAL244,7069
	SRCPRI_STREAM				// Streams (music, cutscenes)SRCPRI_STREAM245,7103
} alSrcPriority_t;alSrcPriority_t246,7151
typedef int srcHandle_t;srcHandle_t248,7171

client/cl_curl.h,1197
#define __QCURL_H____QCURL_H__25,1001
#define DEFAULT_CURL_LIB DEFAULT_CURL_LIB33,1129
#define DEFAULT_CURL_LIB DEFAULT_CURL_LIB35,1193
#define DEFAULT_CURL_LIB DEFAULT_CURL_LIB37,1240
#define ALTERNATE_CURL_LIB ALTERNATE_CURL_LIB38,1280
#define qcurl_version qcurl_version76,2559
#define qcurl_easy_init qcurl_easy_init78,2595
#define qcurl_easy_setopt qcurl_easy_setopt79,2634
#define qcurl_easy_perform qcurl_easy_perform80,2677
#define qcurl_easy_cleanup qcurl_easy_cleanup81,2722
#define qcurl_easy_getinfo qcurl_easy_getinfo82,2767
#define qcurl_easy_duphandle qcurl_easy_duphandle83,2812
#define qcurl_easy_reset qcurl_easy_reset84,2861
#define qcurl_easy_strerror qcurl_easy_strerror85,2902
#define qcurl_multi_init qcurl_multi_init87,2950
#define qcurl_multi_add_handle qcurl_multi_add_handle88,2991
#define qcurl_multi_remove_handle qcurl_multi_remove_handle89,3044
#define qcurl_multi_fdset qcurl_multi_fdset90,3103
#define qcurl_multi_perform qcurl_multi_perform91,3146
#define qcurl_multi_cleanup qcurl_multi_cleanup92,3193
#define qcurl_multi_info_read qcurl_multi_info_read93,3240
#define qcurl_multi_strerror qcurl_multi_strerror94,3291

client/keycodes.h,6655
#define __KEYCODES_H____KEYCODES_H__24,1000
	K_TAB = 9,K_TAB33,1162
	K_ENTER = 13,K_ENTER34,1174
	K_ESCAPE = 27,K_ESCAPE35,1189
	K_SPACE = 32,K_SPACE36,1205
	K_BACKSPACE = 127,K_BACKSPACE38,1221
	K_COMMAND = 128,K_COMMAND40,1242
	K_CAPSLOCK,K_CAPSLOCK41,1260
	K_POWER,K_POWER42,1273
	K_PAUSE,K_PAUSE43,1283
	K_UPARROW,K_UPARROW45,1294
	K_DOWNARROW,K_DOWNARROW46,1306
	K_LEFTARROW,K_LEFTARROW47,1320
	K_RIGHTARROW,K_RIGHTARROW48,1334
	K_ALT,K_ALT50,1350
	K_CTRL,K_CTRL51,1358
	K_SHIFT,K_SHIFT52,1367
	K_INS,K_INS53,1377
	K_DEL,K_DEL54,1385
	K_PGDN,K_PGDN55,1393
	K_PGUP,K_PGUP56,1402
	K_HOME,K_HOME57,1411
	K_END,K_END58,1420
	K_F1,K_F160,1429
	K_F2,K_F261,1436
	K_F3,K_F362,1443
	K_F4,K_F463,1450
	K_F5,K_F564,1457
	K_F6,K_F665,1464
	K_F7,K_F766,1471
	K_F8,K_F867,1478
	K_F9,K_F968,1485
	K_F10,K_F1069,1492
	K_F11,K_F1170,1500
	K_F12,K_F1271,1508
	K_F13,K_F1372,1516
	K_F14,K_F1473,1524
	K_F15,K_F1574,1532
	K_KP_HOME,K_KP_HOME76,1541
	K_KP_UPARROW,K_KP_UPARROW77,1553
	K_KP_PGUP,K_KP_PGUP78,1568
	K_KP_LEFTARROW,K_KP_LEFTARROW79,1580
	K_KP_5,K_KP_580,1597
	K_KP_RIGHTARROW,K_KP_RIGHTARROW81,1606
	K_KP_END,K_KP_END82,1624
	K_KP_DOWNARROW,K_KP_DOWNARROW83,1635
	K_KP_PGDN,K_KP_PGDN84,1652
	K_KP_ENTER,K_KP_ENTER85,1664
	K_KP_INS,K_KP_INS86,1677
	K_KP_DEL,K_KP_DEL87,1688
	K_KP_SLASH,K_KP_SLASH88,1699
	K_KP_MINUS,K_KP_MINUS89,1712
	K_KP_PLUS,K_KP_PLUS90,1725
	K_KP_NUMLOCK,K_KP_NUMLOCK91,1737
	K_KP_STAR,K_KP_STAR92,1752
	K_KP_EQUALS,K_KP_EQUALS93,1764
	K_MOUSE1,K_MOUSE195,1779
	K_MOUSE2,K_MOUSE296,1790
	K_MOUSE3,K_MOUSE397,1801
	K_MOUSE4,K_MOUSE498,1812
	K_MOUSE5,K_MOUSE599,1823
	K_MWHEELDOWN,K_MWHEELDOWN101,1835
	K_MWHEELUP,K_MWHEELUP102,1850
	K_JOY1,K_JOY1104,1864
	K_JOY2,K_JOY2105,1873
	K_JOY3,K_JOY3106,1882
	K_JOY4,K_JOY4107,1891
	K_JOY5,K_JOY5108,1900
	K_JOY6,K_JOY6109,1909
	K_JOY7,K_JOY7110,1918
	K_JOY8,K_JOY8111,1927
	K_JOY9,K_JOY9112,1936
	K_JOY10,K_JOY10113,1945
	K_JOY11,K_JOY11114,1955
	K_JOY12,K_JOY12115,1965
	K_JOY13,K_JOY13116,1975
	K_JOY14,K_JOY14117,1985
	K_JOY15,K_JOY15118,1995
	K_JOY16,K_JOY16119,2005
	K_JOY17,K_JOY17120,2015
	K_JOY18,K_JOY18121,2025
	K_JOY19,K_JOY19122,2035
	K_JOY20,K_JOY20123,2045
	K_JOY21,K_JOY21124,2055
	K_JOY22,K_JOY22125,2065
	K_JOY23,K_JOY23126,2075
	K_JOY24,K_JOY24127,2085
	K_JOY25,K_JOY25128,2095
	K_JOY26,K_JOY26129,2105
	K_JOY27,K_JOY27130,2115
	K_JOY28,K_JOY28131,2125
	K_JOY29,K_JOY29132,2135
	K_JOY30,K_JOY30133,2145
	K_JOY31,K_JOY31134,2155
	K_JOY32,K_JOY32135,2165
	K_AUX1,K_AUX1137,2176
	K_AUX2,K_AUX2138,2185
	K_AUX3,K_AUX3139,2194
	K_AUX4,K_AUX4140,2203
	K_AUX5,K_AUX5141,2212
	K_AUX6,K_AUX6142,2221
	K_AUX7,K_AUX7143,2230
	K_AUX8,K_AUX8144,2239
	K_AUX9,K_AUX9145,2248
	K_AUX10,K_AUX10146,2257
	K_AUX11,K_AUX11147,2267
	K_AUX12,K_AUX12148,2277
	K_AUX13,K_AUX13149,2287
	K_AUX14,K_AUX14150,2297
	K_AUX15,K_AUX15151,2307
	K_AUX16,K_AUX16152,2317
	K_WORLD_0,K_WORLD_0154,2328
	K_WORLD_1,K_WORLD_1155,2340
	K_WORLD_2,K_WORLD_2156,2352
	K_WORLD_3,K_WORLD_3157,2364
	K_WORLD_4,K_WORLD_4158,2376
	K_WORLD_5,K_WORLD_5159,2388
	K_WORLD_6,K_WORLD_6160,2400
	K_WORLD_7,K_WORLD_7161,2412
	K_WORLD_8,K_WORLD_8162,2424
	K_WORLD_9,K_WORLD_9163,2436
	K_WORLD_10,K_WORLD_10164,2448
	K_WORLD_11,K_WORLD_11165,2461
	K_WORLD_12,K_WORLD_12166,2474
	K_WORLD_13,K_WORLD_13167,2487
	K_WORLD_14,K_WORLD_14168,2500
	K_WORLD_15,K_WORLD_15169,2513
	K_WORLD_16,K_WORLD_16170,2526
	K_WORLD_17,K_WORLD_17171,2539
	K_WORLD_18,K_WORLD_18172,2552
	K_WORLD_19,K_WORLD_19173,2565
	K_WORLD_20,K_WORLD_20174,2578
	K_WORLD_21,K_WORLD_21175,2591
	K_WORLD_22,K_WORLD_22176,2604
	K_WORLD_23,K_WORLD_23177,2617
	K_WORLD_24,K_WORLD_24178,2630
	K_WORLD_25,K_WORLD_25179,2643
	K_WORLD_26,K_WORLD_26180,2656
	K_WORLD_27,K_WORLD_27181,2669
	K_WORLD_28,K_WORLD_28182,2682
	K_WORLD_29,K_WORLD_29183,2695
	K_WORLD_30,K_WORLD_30184,2708
	K_WORLD_31,K_WORLD_31185,2721
	K_WORLD_32,K_WORLD_32186,2734
	K_WORLD_33,K_WORLD_33187,2747
	K_WORLD_34,K_WORLD_34188,2760
	K_WORLD_35,K_WORLD_35189,2773
	K_WORLD_36,K_WORLD_36190,2786
	K_WORLD_37,K_WORLD_37191,2799
	K_WORLD_38,K_WORLD_38192,2812
	K_WORLD_39,K_WORLD_39193,2825
	K_WORLD_40,K_WORLD_40194,2838
	K_WORLD_41,K_WORLD_41195,2851
	K_WORLD_42,K_WORLD_42196,2864
	K_WORLD_43,K_WORLD_43197,2877
	K_WORLD_44,K_WORLD_44198,2890
	K_WORLD_45,K_WORLD_45199,2903
	K_WORLD_46,K_WORLD_46200,2916
	K_WORLD_47,K_WORLD_47201,2929
	K_WORLD_48,K_WORLD_48202,2942
	K_WORLD_49,K_WORLD_49203,2955
	K_WORLD_50,K_WORLD_50204,2968
	K_WORLD_51,K_WORLD_51205,2981
	K_WORLD_52,K_WORLD_52206,2994
	K_WORLD_53,K_WORLD_53207,3007
	K_WORLD_54,K_WORLD_54208,3020
	K_WORLD_55,K_WORLD_55209,3033
	K_WORLD_56,K_WORLD_56210,3046
	K_WORLD_57,K_WORLD_57211,3059
	K_WORLD_58,K_WORLD_58212,3072
	K_WORLD_59,K_WORLD_59213,3085
	K_WORLD_60,K_WORLD_60214,3098
	K_WORLD_61,K_WORLD_61215,3111
	K_WORLD_62,K_WORLD_62216,3124
	K_WORLD_63,K_WORLD_63217,3137
	K_WORLD_64,K_WORLD_64218,3150
	K_WORLD_65,K_WORLD_65219,3163
	K_WORLD_66,K_WORLD_66220,3176
	K_WORLD_67,K_WORLD_67221,3189
	K_WORLD_68,K_WORLD_68222,3202
	K_WORLD_69,K_WORLD_69223,3215
	K_WORLD_70,K_WORLD_70224,3228
	K_WORLD_71,K_WORLD_71225,3241
	K_WORLD_72,K_WORLD_72226,3254
	K_WORLD_73,K_WORLD_73227,3267
	K_WORLD_74,K_WORLD_74228,3280
	K_WORLD_75,K_WORLD_75229,3293
	K_WORLD_76,K_WORLD_76230,3306
	K_WORLD_77,K_WORLD_77231,3319
	K_WORLD_78,K_WORLD_78232,3332
	K_WORLD_79,K_WORLD_79233,3345
	K_WORLD_80,K_WORLD_80234,3358
	K_WORLD_81,K_WORLD_81235,3371
	K_WORLD_82,K_WORLD_82236,3384
	K_WORLD_83,K_WORLD_83237,3397
	K_WORLD_84,K_WORLD_84238,3410
	K_WORLD_85,K_WORLD_85239,3423
	K_WORLD_86,K_WORLD_86240,3436
	K_WORLD_87,K_WORLD_87241,3449
	K_WORLD_88,K_WORLD_88242,3462
	K_WORLD_89,K_WORLD_89243,3475
	K_WORLD_90,K_WORLD_90244,3488
	K_WORLD_91,K_WORLD_91245,3501
	K_WORLD_92,K_WORLD_92246,3514
	K_WORLD_93,K_WORLD_93247,3527
	K_WORLD_94,K_WORLD_94248,3540
	K_WORLD_95,K_WORLD_95249,3553
	K_SUPER,K_SUPER251,3567
	K_COMPOSE,K_COMPOSE252,3577
	K_MODE,K_MODE253,3589
	K_HELP,K_HELP254,3598
	K_PRINT,K_PRINT255,3607
	K_SYSREQ,K_SYSREQ256,3617
	K_SCROLLOCK,K_SCROLLOCK257,3628
	K_BREAK,K_BREAK258,3642
	K_MENU,K_MENU259,3652
	K_EURO,K_EURO260,3661
	K_UNDO,K_UNDO261,3670
	K_CONSOLE,K_CONSOLE264,3724
	MAX_KEYSMAX_KEYS266,3737
} keyNum_t;keyNum_t267,3747
#define K_LAST_KEY K_LAST_KEY272,3988
#define	K_CHAR_FLAG	K_CHAR_FLAG277,4194

qcommon/qcommon.h,9229
#define _QCOMMON_H__QCOMMON_H_24,1084
#define __attribute__(__attribute__31,1223
	qboolean	allowoverflow;	// if false, do a Com_Errorallowoverflow43,1403
	qboolean	overflowed;		// set to true if the buffer size failed (with allowoverflow set)overflowed44,1456
	qboolean	oob;			// set to true if the buffer size failed (with allowoverflow set)oob45,1545
	byte	*data;data46,1628
	int		maxsize;maxsize47,1641
	int		cursize;cursize48,1656
	int		readcount;readcount49,1671
	int		bit;				// for bitwise reads and writesbit50,1688
} msg_t;msg_t51,1734
#define	PACKET_BACKUP	PACKET_BACKUP124,4248
#define	PACKET_MASK	PACKET_MASK126,4390
#define	MAX_PACKET_USERCMDS	MAX_PACKET_USERCMDS128,4430
#define	PORT_ANY	PORT_ANY130,4503
#define	MAX_RELIABLE_COMMANDS	MAX_RELIABLE_COMMANDS132,4526
	NA_BOT,NA_BOT135,4625
	NA_BAD,					// an address lookup failedNA_BAD136,4634
	NA_LOOPBACK,NA_LOOPBACK137,4675
	NA_BROADCAST,NA_BROADCAST138,4689
	NA_IP,NA_IP139,4704
	NA_IP6,NA_IP6140,4712
	NA_MULTICAST6,NA_MULTICAST6141,4721
	NA_UNSPECNA_UNSPEC142,4737
} netadrtype_t;netadrtype_t143,4748
	NS_CLIENT,NS_CLIENT146,4780
	NS_SERVERNS_SERVER147,4792
} netsrc_t;netsrc_t148,4803
#define NET_ADDRSTRMAXLEN NET_ADDRSTRMAXLEN150,4816
	netadrtype_t	type;type152,4930
	byte	ip[4];ip154,4951
	byte	ip6[16];ip6155,4964
	unsigned short	port;port157,4980
	unsigned long	scope_id;	// Needed for IPv6 link-local addressesscope_id158,5002
} netadr_t;netadr_t159,5067
#define	MAX_MSGLEN	MAX_MSGLEN182,6033
#define MAX_DOWNLOAD_WINDOW	MAX_DOWNLOAD_WINDOW185,6151
#define MAX_DOWNLOAD_BLKSIZE	MAX_DOWNLOAD_BLKSIZE186,6216
	netsrc_t	sock;sock194,6382
	int			dropped;			// between last packet and previousdropped196,6399
	netadr_t	remoteAddress;remoteAddress198,6454
	int			qport;				// qport value to write when transmittingqport199,6479
	int			incomingSequence;incomingSequence202,6564
	int			outgoingSequence;outgoingSequence203,6589
	int			fragmentSequence;fragmentSequence206,6653
	int			fragmentLength;	fragmentLength207,6678
	byte		fragmentBuffer[MAX_MSGLEN];fragmentBuffer208,6702
	qboolean	unsentFragments;unsentFragments212,6833
	int			unsentFragmentStart;unsentFragmentStart213,6860
	int			unsentLength;unsentLength214,6888
	byte		unsentBuffer[MAX_MSGLEN];unsentBuffer215,6909
} netchan_t;netchan_t216,6942
#define	PROTOCOL_VERSION	PROTOCOL_VERSION235,7398
#define	UPDATE_SERVER_NAME	UPDATE_SERVER_NAME242,7587
#define MASTER_SERVER_NAME	MASTER_SERVER_NAME245,7713
    #define	AUTHORIZE_SERVER_NAME	AUTHORIZE_SERVER_NAME250,7824
  #define	PORT_AUTHORIZE	PORT_AUTHORIZE253,7920
#define	PORT_MASTER	PORT_MASTER257,7969
#define	PORT_UPDATE	PORT_UPDATE258,7997
#define	PORT_SERVER	PORT_SERVER259,8025
#define	NUM_SERVER_PORTS	NUM_SERVER_PORTS260,8053
enum svc_ops_e {svc_ops_e269,8290
	svc_bad,svc_bad270,8307
	svc_nop,svc_nop271,8317
	svc_gamestate,svc_gamestate272,8327
	svc_configstring,			// [short] [string] only in gamestate messagessvc_configstring273,8343
	svc_baseline,				// only in gamestate messagessvc_baseline274,8411
	svc_serverCommand,			// [string] to be executed by client game modulesvc_serverCommand275,8459
	svc_download,				// [short] size [size bytes]svc_download276,8530
	svc_snapshot,svc_snapshot277,8577
	svc_EOF,svc_EOF278,8592
	svc_extension,svc_extension282,8713
	svc_voip,     // not wrapped in USE_VOIP, so this value is reserved.svc_voip283,8729
enum clc_ops_e {clc_ops_e290,8830
	clc_bad,clc_bad291,8847
	clc_nop, 		clc_nop292,8857
	clc_move,				// [[usercmd_t]clc_move293,8870
	clc_moveNoDelta,		// [[usercmd_t]clc_moveNoDelta294,8900
	clc_clientCommand,		// [string] messageclc_clientCommand295,8935
	clc_EOF,clc_EOF296,8976
	clc_extension,clc_extension300,9097
	clc_voip,   // not wrapped in USE_VOIP, so this value is reserved.clc_voip301,9113
typedef struct vm_s vm_t;vm_t312,9336
	VMI_NATIVE,VMI_NATIVE315,9378
	VMI_BYTECODE,VMI_BYTECODE316,9391
	VMI_COMPILEDVMI_COMPILED317,9406
} vmInterpret_t;vmInterpret_t318,9420
	TRAP_MEMSET = 100,TRAP_MEMSET321,9453
	TRAP_MEMCPY,TRAP_MEMCPY322,9473
	TRAP_STRNCPY,TRAP_STRNCPY323,9487
	TRAP_SIN,TRAP_SIN324,9502
	TRAP_COS,TRAP_COS325,9513
	TRAP_ATAN2,TRAP_ATAN2326,9524
	TRAP_SQRT,TRAP_SQRT327,9537
	TRAP_MATRIXMULTIPLY,TRAP_MATRIXMULTIPLY328,9549
	TRAP_ANGLEVECTORS,TRAP_ANGLEVECTORS329,9571
	TRAP_PERPENDICULARVECTOR,TRAP_PERPENDICULARVECTOR330,9591
	TRAP_FLOOR,TRAP_FLOOR331,9618
	TRAP_CEIL,TRAP_CEIL332,9631
	TRAP_TESTPRINTINT,TRAP_TESTPRINTINT334,9644
	TRAP_TESTPRINTFLOATTRAP_TESTPRINTFLOAT335,9664
} sharedTraps_t;sharedTraps_t336,9685
#define	VMA(VMA356,10231
static ID_INLINE float _vmf(intptr_t x)_vmf357,10265
#define	VMF(VMF363,10356
typedef void (*xcommand_t) (void);xcommand_t408,11634
typedef void (*completionFunc_t)( char *args, int argNum );completionFunc_t421,12121
#define FS_GENERAL_REF	FS_GENERAL_REF560,17200
#define FS_UI_REF	FS_UI_REF561,17228
#define FS_CGAME_REF	FS_CGAME_REF562,17252
#define FS_QAGAME_REF	FS_QAGAME_REF563,17278
#define NUM_ID_PAKS	NUM_ID_PAKS565,17372
#define	MAX_FILE_HANDLES	MAX_FILE_HANDLES567,17396
#	define Q3CONFIG_CFG Q3CONFIG_CFG570,17442
#	define Q3CONFIG_CFG Q3CONFIG_CFG572,17492
#define	MAX_EDIT_LINE	MAX_EDIT_LINE710,22928
	int		cursor;cursor712,22971
	int		scroll;scroll713,22985
	int		widthInChars;widthInChars714,22999
	char	buffer[MAX_EDIT_LINE];buffer715,23019
} field_t;field_t716,23048
  CF_RDTSC      = 1 << 0,CF_RDTSC741,23674
  CF_MMX        = 1 << 1,CF_MMX742,23700
  CF_MMX_EXT    = 1 << 2,CF_MMX_EXT743,23726
  CF_3DNOW      = 1 << 3,CF_3DNOW744,23752
  CF_3DNOW_EXT  = 1 << 4,CF_3DNOW_EXT745,23778
  CF_SSE        = 1 << 5,CF_SSE746,23804
  CF_SSE2       = 1 << 6,CF_SSE2747,23830
  CF_ALTIVEC    = 1 << 7CF_ALTIVEC748,23856
} cpuFeatures_t;cpuFeatures_t749,23881
#define	MAXPRINTMSG	MAXPRINTMSG752,24015
	SE_NONE = 0,	// evTime is still validSE_NONE757,24082
	SE_KEY,		// evValue is a key code, evValue2 is the down flagSE_KEY758,24121
	SE_CHAR,	// evValue is an ascii charSE_CHAR759,24183
	SE_MOUSE,	// evValue and evValue2 are reletive signed x / y movesSE_MOUSE760,24221
	SE_JOYSTICK_AXIS,	// evValue is an axis number and evValue2 is the current state (-127 to 127)SE_JOYSTICK_AXIS761,24288
	SE_CONSOLE,	// evPtr is a char*SE_CONSOLE762,24384
	SE_PACKET	// evPtr is a netadr_t followed by data bytes to evPtrLengthSE_PACKET763,24417
} sysEventType_t;sysEventType_t764,24489
	int				evTime;evTime767,24525
	sysEventType_t	evType;evType768,24541
	int				evValue, evValue2;evValue769,24565
	int				evValue, evValue2;evValue2769,24565
	int				evPtrLength;	// bytes of data pointed to by evPtr, for journalingevPtrLength770,24592
	void			*evPtr;			// this must be manually freed if not NULLevPtr771,24666
} sysEvent_t;sysEvent_t772,24727
	TAG_FREE,TAG_FREE842,27122
	TAG_GENERAL,TAG_GENERAL843,27133
	TAG_BOTLIB,TAG_BOTLIB844,27147
	TAG_RENDERER,TAG_RENDERER845,27160
	TAG_SMALL,TAG_SMALL846,27175
	TAG_STATICTAG_STATIC847,27187
} memtag_t;memtag_t848,27199
	#define ZONE_DEBUGZONE_DEBUG870,27449
#define Z_TagMalloc(Z_TagMalloc874,27495
#define Z_Malloc(Z_Malloc875,27583
#define S_Malloc(S_Malloc876,27657
	AXIS_SIDE,AXIS_SIDE1001,31268
	AXIS_FORWARD,AXIS_FORWARD1002,31280
	AXIS_UP,AXIS_UP1003,31295
	AXIS_ROLL,AXIS_ROLL1004,31305
	AXIS_YAW,AXIS_YAW1005,31317
	AXIS_PITCH,AXIS_PITCH1006,31328
	MAX_JOYSTICK_AXISMAX_JOYSTICK_AXIS1007,31341
} joystickAxis_t;joystickAxis_t1008,31360
#define NYT NYT1087,33815
#define INTERNAL_NODE INTERNAL_NODE1088,33868
typedef struct nodetype {nodetype1090,33900
	struct	nodetype *left, *right, *parent; /* tree structure */ left1091,33926
	struct	nodetype *left, *right, *parent; /* tree structure */ right1091,33926
	struct	nodetype *left, *right, *parent; /* tree structure */ parent1091,33926
	struct	nodetype *next, *prev; /* doubly-linked list */next1092,33989
	struct	nodetype *next, *prev; /* doubly-linked list */prev1092,33989
	struct	nodetype **head; /* highest ranked node in block */head1093,34045
	int		weight;weight1094,34105
	int		symbol;symbol1095,34119
} node_t;node_t1096,34133
#define HMAX HMAX1098,34144
	int			blocNode;blocNode1101,34200
	int			blocPtrs;blocPtrs1102,34217
	node_t*		tree;tree1104,34235
	node_t*		lhead;lhead1105,34251
	node_t*		ltail;ltail1106,34268
	node_t*		loc[HMAX+1];loc1107,34285
	node_t**	freelist;freelist1108,34308
	node_t		nodeList[768];nodeList1110,34329
	node_t*		nodePtrs[768];nodePtrs1111,34353
} huff_t;huff_t1112,34378
	huff_t		compressor;compressor1115,34406
	huff_t		decompressor;decompressor1116,34427
} huffman_t;huffman_t1117,34450
#define	SV_ENCODE_START	SV_ENCODE_START1137,35125
#define SV_DECODE_START	SV_DECODE_START1138,35152
#define	CL_ENCODE_START	CL_ENCODE_START1139,35180
#define CL_DECODE_START	CL_DECODE_START1140,35208
#define DLF_ENABLE DLF_ENABLE1143,35287
#define DLF_NO_REDIRECT DLF_NO_REDIRECT1144,35308
#define DLF_NO_UDP DLF_NO_UDP1145,35334
#define DLF_NO_DISCONNECT DLF_NO_DISCONNECT1146,35355

qcommon/cm_polylib.h,447
	int		numpoints;numpoints27,1061
	vec3_t	p[4];		// variable sizedp28,1078
} winding_t;winding_t29,1111
#define	MAX_POINTS_ON_WINDING	MAX_POINTS_ON_WINDING31,1125
#define	SIDE_FRONT	SIDE_FRONT33,1159
#define	SIDE_BACK	SIDE_BACK34,1180
#define	SIDE_ON	SIDE_ON35,1200
#define	SIDE_CROSS	SIDE_CROSS36,1219
#define	CLIP_EPSILON	CLIP_EPSILON38,1241
#define MAX_MAP_BOUNDS	MAX_MAP_BOUNDS40,1268
#define	ON_EPSILON	ON_EPSILON44,1375

qcommon/vm_powerpc.c,7335
# define MAP_ANONYMOUS MAP_ANONYMOUS30,1154
static clock_t time_outside_vm = 0;time_outside_vm43,1404
static clock_t time_total_vm = 0;time_total_vm44,1440
#define DIE(DIE48,1557
PPC_Malloc( size_t size )PPC_Malloc62,1889
# define PPC_Free PPC_Free70,2006
# define PPC_Malloc PPC_Malloc72,2035
# define PPC_Free PPC_Free73,2064
# define OPTIMIZE_HOLE OPTIMIZE_HOLE84,2305
# define OPTIMIZE_COPY OPTIMIZE_COPY85,2330
# define OPTIMIZE_MASK OPTIMIZE_MASK86,2355
# define OPTIMIZE_HOLE OPTIMIZE_HOLE88,2386
# define OPTIMIZE_COPY OPTIMIZE_COPY89,2411
# define OPTIMIZE_MASK OPTIMIZE_MASK90,2436
#  define SL(SL123,3630
#  define SL(SL125,3661
#  define SA(SA130,3759
#  define SA(SA132,3790
#define ELF32	ELF32135,3823
#define ELF64	ELF64136,3857
#define OSX32	OSX32137,3891
#define OSX64	OSX64138,3925
#define iSTLU	iSTLU141,4026
#define iSTL	iSTL142,4059
#define iLL	iLL143,4089
#define iLLX	iLLX144,4117
#define GPRLEN	GPRLEN147,4171
#define FPRLEN	FPRLEN148,4197
#define GPRLEN_SHIFT	GPRLEN_SHIFT150,4280
#define STACK_LR	STACK_LR153,4342
#define STACK_SAVE	STACK_SAVE155,4409
#define STACK_TEMP	STACK_TEMP157,4500
#define STACK_RTEMP	STACK_RTEMP160,4636
	void *function;function169,4813
	void *toc;toc170,4830
	void *env;env171,4842
} opd_t;opd_t172,4854
#define opImm0	opImm0182,4998
#define opImm1	opImm1183,5039
#define opImm4	opImm4184,5103
#define opRet0	opRet0186,5169
#define opRetI	opRetI187,5213
#define opRetF	opRetF188,5257
#define opRetIF	opRetIF189,5299
#define opArg0	opArg0191,5365
#define opArgI	opArgI192,5410
#define opArgF	opArgF193,5458
#define opArgIF	opArgIF194,5504
#define opArg2I	opArg2I196,5571
#define opArg2F	opArg2F197,5634
#define opArg2IF opArg2IF198,5695
static const unsigned char vm_opInfo[256] =vm_opInfo200,5782
typedef struct source_instruction_s source_instruction_t;source_instruction_t273,8659
struct source_instruction_s {source_instruction_s274,8717
	unsigned long int op;op276,8758
	unsigned long int i_count;i_count279,8808
		unsigned int i;i283,8875
		signed int si;si284,8893
		signed short ss[2];ss285,8910
		unsigned short us[2];us286,8932
		unsigned char b;b287,8956
	} arg;arg288,8975
	unsigned char regA1;regA1291,9020
	unsigned char regA2;regA2292,9042
	unsigned char regR;regR293,9064
	unsigned char regPos;regPos294,9085
	source_instruction_t *next;next297,9130
typedef struct VM_Data {VM_Data305,9219
	size_t dataLength;dataLength307,9277
	size_t codeLength;codeLength310,9374
	long int (* AsmCall)( int, int );AsmCall313,9453
	void (* BlockCopy )( unsigned int, unsigned int, unsigned int );BlockCopy314,9488
	ppc_instruction_t *iPointers;iPointers317,9617
	unsigned int dataMask;dataMask320,9705
	unsigned int floatBase; // 0x59800004floatBase323,9785
	opd_t opd;opd327,9869
	unsigned int data[0];data332,9991
} vm_data_t;vm_data_t333,10014
# define VM_Data_Offset(VM_Data_Offset336,10044
# define OFFSET(OFFSET338,10112
# define VM_Data_Offset(VM_Data_Offset340,10202
VM_AsmCall( int callSyscallInvNum, int callProgramStack )VM_AsmCall348,10330
VM_BlockCopy( unsigned int dest, unsigned int src, unsigned int count )VM_BlockCopy393,11475
typedef struct dest_instruction dest_instruction_t;dest_instruction_t412,11898
typedef struct symbolic_jump symbolic_jump_t;symbolic_jump_t413,11950
struct symbolic_jump {symbolic_jump415,11997
	unsigned long int jump_to;jump_to417,12071
	long int bo, bi;bo420,12149
	long int bo, bi;bi420,12149
	unsigned long ext;ext423,12209
	dest_instruction_t *parent;parent426,12273
	symbolic_jump_t *nextJump;nextJump429,12317
struct dest_instruction {dest_instruction432,12349
	unsigned long int count;count434,12408
	unsigned long int i_count;i_count437,12465
	unsigned short length;length440,12552
	dest_instruction_t *next;next442,12577
	symbolic_jump_t *jump;jump445,12665
	ppc_instruction_t code[0];code448,12749
static dest_instruction_t *di_first = NULL, *di_last = NULL;di_first453,12847
static dest_instruction_t *di_first = NULL, *di_last = NULL;di_last453,12847
static unsigned long int di_count = 0;di_count455,12934
static dest_instruction_t **di_pointers = NULL;di_pointers459,13159
#define FALSE_ICOUNT FALSE_ICOUNT463,13295
PPC_Append(PPC_Append470,13413
PPC_AppendInstructions(PPC_AppendInstructions492,13788
static symbolic_jump_t *sj_first = NULL, *sj_last = NULL;sj_first515,14305
static symbolic_jump_t *sj_first = NULL, *sj_last = NULL;sj_last515,14305
PPC_PrepareJump(PPC_PrepareJump517,14375
#define emitStart(emitStart547,14940
#define pushIn(pushIn553,15105
#definein555,15175
#define emitEnd(emitEnd557,15231
#define emitJump(emitJump564,15410
#define LOCAL_DATA_CHUNK LOCAL_DATA_CHUNK575,15636
typedef struct local_data_s local_data_t;local_data_t576,15664
struct local_data_s {local_data_s577,15706
	long int count;count579,15765
	unsigned int data[ LOCAL_DATA_CHUNK ];data582,15804
	local_data_t *next;next585,15887
static local_data_t *data_first = NULL;data_first589,15932
static long int data_acc = 0;data_acc591,15996
PPC_PushData( unsigned int datum )PPC_PushData597,16089
static long int fastMaskHi = 0, fastMaskLo = 31;fastMaskHi641,17014
static long int fastMaskHi = 0, fastMaskLo = 31;fastMaskLo641,17014
PPC_MakeFastMask( int mask )PPC_MakeFastMask643,17075
#define rVMDATA rVMDATA670,17645
#define rDATABASE rDATABASE672,17692
#define rPSTACK rPSTACK674,17741
static const long int gpr_list[] = {gpr_list683,17990
static const long int gpr_vstart = 8; /* position of first volatile register */gpr_vstart692,18238
static const long int gpr_total = sizeof( gpr_list ) / sizeof( gpr_list[0] );gpr_total693,18318
static const long int fpr_list[] = {fpr_list695,18397
static const long int fpr_vstart = 8;fpr_vstart706,18665
static const long int fpr_total = sizeof( fpr_list ) / sizeof( fpr_list[0] );fpr_total707,18703
PPC_CompileInit( void )PPC_CompileInit713,18853
#define rFIRST	rFIRST761,20244
#define rSECOND	rSECOND763,20316
#define rTEMP(rTEMP765,20402
#define rTMP	rTMP766,20445
#define fFIRST	fFIRST768,20469
#define fSECOND	fSECOND769,20511
#define fTEMP(fTEMP770,20554
#define fTMP	fTMP771,20597
#define rTYPE_STATIC	rTYPE_STATIC774,20639
#define rTYPE_FLOAT	rTYPE_FLOAT775,20665
#define RET_INT	RET_INT778,20730
#define RET_FLOAT	RET_FLOAT779,20780
#define ARG_INT	ARG_INT781,20858
#define ARG_FLOAT	ARG_FLOAT782,20894
#define ARG2_INT	ARG2_INT783,20929
#define ARG2_FLOAT	ARG2_FLOAT784,20965
PPC_EmitConst( source_instruction_t * const i_const )PPC_EmitConst790,21091
#define MAYBE_EMIT_CONST(MAYBE_EMIT_CONST820,21926
PPC_EmitNull( source_instruction_t * const i_null )PPC_EmitNull826,22077
#define EMIT_FALSE_CONST(EMIT_FALSE_CONST830,22186
VM_AnalyzeFunction(VM_AnalyzeFunction837,22338
VM_CompileFunction( source_instruction_t * const i_first )VM_CompileFunction1021,27177
PPC_ShrinkJumps( void )PPC_ShrinkJumps1788,44805
PPC_ComputeCode( vm_t *vm )PPC_ComputeCode1822,45655
VM_Destroy_Compiled( vm_t *self )VM_Destroy_Compiled1990,50307
VM_Compile( vm_t *vm, vmHeader_t *header )VM_Compile2000,50531
VM_CallCompiled( vm_t *vm, int *args )VM_CallCompiled2110,53403

qcommon/puff.h,34
#define __PUFF_H__PUFF_H31,1157

qcommon/vm_x86.c,2166
#define VM_X86_MMAPVM_X86_MMAP40,1325
static	byte	*buf = NULL;buf56,1545
static	byte	*jused = NULL;jused57,1570
static	int		compiledOfs = 0;compiledOfs58,1597
static	byte	*code = NULL;code59,1626
static	int		pc = 0;pc60,1652
static	int		*instructionPointers = NULL;instructionPointers62,1673
#define FTOL_PTRFTOL_PTR64,1715
static	int		ftolPtr = (int)_ftol;ftolPtr70,1794
static	int		ftolPtr = (int)qftol0F7F;ftolPtr84,1993
static void (*const asmCallPtr)(void) = AsmCall;asmCallPtr90,2079
static	int		callMask = 0;callMask93,2130
static	int	instruction, pass;instruction95,2157
static	int	instruction, pass;pass95,2157
static	int	lastConst = 0;lastConst96,2187
static	int	oc0, oc1, pop0, pop1;oc097,2213
static	int	oc0, oc1, pop0, pop1;oc197,2213
static	int	oc0, oc1, pop0, pop1;pop097,2213
static	int	oc0, oc1, pop0, pop1;pop197,2213
	LAST_COMMAND_NONE	= 0,LAST_COMMAND_NONE101,2263
	LAST_COMMAND_MOV_EDI_EAX,LAST_COMMAND_MOV_EDI_EAX102,2287
	LAST_COMMAND_SUB_DI_4,LAST_COMMAND_SUB_DI_4103,2314
	LAST_COMMAND_SUB_DI_8,LAST_COMMAND_SUB_DI_8104,2338
} ELastCommand;ELastCommand105,2362
static	ELastCommand	LastCommand;LastCommand107,2379
__declspec( naked ) void AsmCall( void ) {__declspec115,2479
#	define CMANG(CMANG179,3886
#	define CMANG(CMANG181,3920
static void __attribute__((cdecl, used)) CallAsmCall(int const syscallNum,CallAsmCall184,3953
static int	Constant4( void ) {Constant4233,5087
static int	Constant1( void ) {Constant1241,5223
static void Emit1( int v ) Emit1249,5303
static void Emit4( int v ) {Emit4264,5504
static int Hex( int c ) {Hex271,5641
static void EmitString( const char *string ) {EmitString286,5897
static void EmitCommand(ELastCommand command)EmitCommand306,6132
static void EmitAddEDI4(vm_t *vm) {EmitAddEDI4327,6517
static void EmitMovEAXEDI(vm_t *vm) {EmitMovEAXEDI344,6997
qboolean EmitMovEBXEDI(vm_t *vm, int andit) {EmitMovEBXEDI367,7682
void VM_Compile( vm_t *vm, vmHeader_t *header ) {VM_Compile403,8608
void VM_Destroy_Compiled(vm_t* self)VM_Destroy_Compiled1107,32813
int	VM_CallCompiled( vm_t *vm, int *args ) {VM_CallCompiled1125,33120

qcommon/cm_patch.c,3657
int	c_totalPatchBlocks;c_totalPatchBlocks83,2596
int	c_totalPatchSurfaces;c_totalPatchSurfaces84,2620
int	c_totalPatchEdges;c_totalPatchEdges85,2646
static const patchCollide_t	*debugPatchCollide;debugPatchCollide87,2670
static const facet_t		*debugFacet;debugFacet88,2718
static qboolean		debugBlock;debugBlock89,2753
static vec3_t		debugBlockPoints[4];debugBlockPoints90,2782
void CM_ClearLevelPatches( void ) {CM_ClearLevelPatches97,2882
static int CM_SignbitsForNormal( vec3_t normal ) {CM_SignbitsForNormal107,3031
static qboolean CM_PlaneFromPoints( vec4_t plane, vec3_t a, vec3_t b, vec3_t c ) {CM_PlaneFromPoints127,3381
static qboolean	CM_NeedsSubdivision( vec3_t a, vec3_t b, vec3_t c ) {CM_NeedsSubdivision158,4036
static void CM_Subdivide( vec3_t a, vec3_t b, vec3_t c, vec3_t out1, vec3_t out2, vec3_t out3 ) {CM_Subdivide190,4722
static void CM_TransposeGrid( cGrid_t *grid ) {CM_TransposeGrid207,5068
static void CM_SetGridWrapWidth( cGrid_t *grid ) {CM_SetGridWrapWidth258,6320
static void CM_SubdivideGridColumns( cGrid_t *grid ) {CM_SubdivideGridColumns289,6939
#define	POINT_EPSILON	POINT_EPSILON356,8790
static qboolean CM_ComparePoints( float *a, float *b ) {CM_ComparePoints357,8816
static void CM_RemoveDegenerateColumns( cGrid_t *grid ) {CM_RemoveDegenerateColumns382,9285
static	int				numPlanes;numPlanes417,10052
static	patchPlane_t	planes[MAX_PATCH_PLANES];planes418,10077
static	int				numFacets;numFacets420,10124
static	facet_t			facets[MAX_PATCH_PLANES]; //maybe MAX_FACETS ??facets421,10149
#define	NORMAL_EPSILON	NORMAL_EPSILON423,10215
#define	DIST_EPSILON	DIST_EPSILON424,10245
int CM_PlaneEqual(patchPlane_t *p, float plane[4], int *flipped) {CM_PlaneEqual431,10330
void CM_SnapVector(vec3_t normal) {CM_SnapVector465,11065
int CM_FindPlane2(float plane[4], int *flipped) {CM_FindPlane2490,11417
static int CM_FindPlane( float *p1, float *p2, float *p3 ) {CM_FindPlane518,11974
static int CM_PointOnPlaneSide( float *p, int planeNum ) {CM_PointOnPlaneSide570,13105
static int	CM_GridPlane( int gridPlanes[MAX_GRID_SIZE][MAX_GRID_SIZE][2], int i, int j, int tri ) {CM_GridPlane597,13504
static int CM_EdgePlaneNum( cGrid_t *grid, int gridPlanes[MAX_GRID_SIZE][MAX_GRID_SIZE][2], int i, int j, int k ) {CM_EdgePlaneNum619,13892
static void CM_SetBorderInward( facet_t *facet, cGrid_t *grid, int gridPlanes[MAX_GRID_SIZE][MAX_GRID_SIZE][2],CM_SetBorderInward678,15473
static qboolean CM_ValidateFacet( facet_t *facet ) {CM_ValidateFacet756,17365
void CM_AddFacetBevels( facet_t *facet ) {CM_AddFacetBevels808,18564
	EN_TOP,EN_TOP970,22891
	EN_RIGHT,EN_RIGHT971,22900
	EN_BOTTOM,EN_BOTTOM972,22911
	EN_LEFTEN_LEFT973,22923
} edgeName_t;edgeName_t974,22932
static void CM_PatchCollideFromGrid( cGrid_t *grid, patchCollide_t *pf ) {CM_PatchCollideFromGrid981,23015
struct patchCollide_s	*CM_GeneratePatchCollide( int width, int height, vec3_t *points ) {CM_GeneratePatchCollide1149,28519
void CM_TracePointThroughPatchCollide( traceWork_t *tw, const struct patchCollide_s *pc ) {CM_TracePointThroughPatchCollide1232,30707
int CM_CheckFacetPlane(float *plane, vec3_t start, vec3_t end, float *enterFrac, float *leaveFrac, int *hit) {CM_CheckFacetPlane1332,33305
void CM_TraceThroughPatchCollide( traceWork_t *tw, const struct patchCollide_s *pc ) {CM_TraceThroughPatchCollide1378,34297
qboolean CM_PositionTestInPatchCollide( traceWork_t *tw, const struct patchCollide_s *pc ) {CM_PositionTestInPatchCollide1519,37954
void CM_DrawDebugSurface( void (*drawPoly)(int color, int numPoints, float *points) ) {CM_DrawDebugSurface1622,40466

qcommon/cmd.c,2937
#define	MAX_CMD_BUFFER	MAX_CMD_BUFFER27,1070
#define	MAX_CMD_LINE	MAX_CMD_LINE28,1099
	byte	*data;data31,1143
	int		maxsize;maxsize32,1156
	int		cursize;cursize33,1171
} cmd_t;cmd_t34,1186
int			cmd_wait;cmd_wait36,1196
cmd_t		cmd_text;cmd_text37,1212
byte		cmd_text_buf[MAX_CMD_BUFFER];cmd_text_buf38,1229
void Cmd_Wait_f( void ) {Cmd_Wait_f52,1577
void Cbuf_Init (void)Cbuf_Init74,1926
void Cbuf_AddText( const char *text ) {Cbuf_AddText88,2157
void Cbuf_InsertText( const char *text ) {Cbuf_InsertText111,2546
void Cbuf_ExecuteText (int exec_when, const char *text)Cbuf_ExecuteText141,3088
void Cbuf_Execute (void)Cbuf_Execute170,3634
void Cmd_Exec_f( void ) {Cmd_Exec_f241,4943
void Cmd_Vstr_f( void ) {Cmd_Vstr_f276,5576
void Cmd_Echo_f (void)Cmd_Echo_f296,5902
typedef struct cmd_function_scmd_function_s314,6216
	struct cmd_function_s	*next;next316,6248
	char					*name;name317,6278
	xcommand_t				function;function318,6295
	completionFunc_t	complete;complete319,6320
} cmd_function_t;cmd_function_t320,6348
static	int			cmd_argc;cmd_argc323,6368
static	char		*cmd_argv[MAX_STRING_TOKENS];		// points into cmd_tokenizedcmd_argv324,6391
static	char		cmd_tokenized[BIG_INFO_STRING+MAX_STRING_TOKENS];	// will have 0 bytes insertedcmd_tokenized325,6464
static	char		cmd_cmd[BIG_INFO_STRING]; // the original command we received (no token processing)cmd_cmd326,6557
static	cmd_function_t	*cmd_functions;		// possible commands to executecmd_functions328,6655
int		Cmd_Argc( void ) {Cmd_Argc335,6768
char	*Cmd_Argv( int arg ) {Cmd_Argv344,6854
void	Cmd_ArgvBuffer( int arg, char *buffer, int bufferLength ) {Cmd_ArgvBuffer359,7093
char	*Cmd_Args( void ) {Cmd_Args371,7319
char *Cmd_ArgsFrom( int arg ) {Cmd_ArgsFrom393,7676
void	Cmd_ArgsBuffer( char *buffer, int bufferLength ) {Cmd_ArgsBuffer418,8093
char *Cmd_Cmd(void)Cmd_Cmd431,8406
static void Cmd_TokenizeString2( const char *text_in, qboolean ignoreQuotes ) {Cmd_TokenizeString2448,8772
void Cmd_TokenizeString( const char *text_in ) {Cmd_TokenizeString555,10735
void Cmd_TokenizeStringIgnoreQuotes( const char *text_in ) {Cmd_TokenizeStringIgnoreQuotes564,10891
void	Cmd_AddCommand( const char *cmd_name, xcommand_t function ) {Cmd_AddCommand573,11042
void Cmd_SetCommandCompletionFunc( const char *command, completionFunc_t complete ) {Cmd_SetCommandCompletionFunc601,11741
void	Cmd_RemoveCommand( const char *cmd_name ) {Cmd_RemoveCommand616,12034
void	Cmd_CommandCompletion( void(*callback)(const char *s) ) {Cmd_CommandCompletion644,12452
void Cmd_CompleteArgument( const char *command, char *args, int argNum ) {Cmd_CompleteArgument657,12672
void	Cmd_ExecuteString( const char *text ) {	Cmd_ExecuteString675,13040
void Cmd_List_f (void)Cmd_List_f735,14314
void Cmd_CompleteCfgName( char *args, int argNum ) {Cmd_CompleteCfgName762,14736
void Cmd_Init (void) {Cmd_Init773,14904

qcommon/common.c,12288
int demo_protocols[] =demo_protocols34,1199
#define MAX_NUM_ARGVS	MAX_NUM_ARGVS37,1242
#define MIN_DEDICATED_COMHUNKMEGS MIN_DEDICATED_COMHUNKMEGS39,1268
#define MIN_COMHUNKMEGS	MIN_COMHUNKMEGS40,1304
#define DEF_COMHUNKMEGS	DEF_COMHUNKMEGS41,1332
#define DEF_COMZONEMEGS	DEF_COMZONEMEGS42,1360
#define XSTRING(XSTRING43,1388
#define STRING(STRING44,1420
#define DEF_COMHUNKMEGS_S	DEF_COMHUNKMEGS_S45,1445
#define DEF_COMZONEMEGS_S	DEF_COMZONEMEGS_S46,1496
int		com_argc;com_argc48,1548
char	*com_argv[MAX_NUM_ARGVS+1];com_argv49,1563
jmp_buf abortframe;		// an ERR_DROP occured, exit the entire frameabortframe51,1597
FILE *debuglogfile;debuglogfile54,1666
static fileHandle_t logfile;logfile55,1686
fileHandle_t	com_journalFile;			// events are written herecom_journalFile56,1715
fileHandle_t	com_journalDataFile;		// config files are written herecom_journalDataFile57,1774
cvar_t	*com_speeds;com_speeds59,1843
cvar_t	*com_developer;com_developer60,1863
cvar_t	*com_dedicated;com_dedicated61,1886
cvar_t	*com_timescale;com_timescale62,1909
cvar_t	*com_fixedtime;com_fixedtime63,1932
cvar_t	*com_dropsim;		// 0.0 to 1.0, simulated packet dropscom_dropsim64,1955
cvar_t	*com_journal;com_journal65,2015
cvar_t	*com_maxfps;com_maxfps66,2036
cvar_t	*com_altivec;com_altivec67,2056
cvar_t	*com_timedemo;com_timedemo68,2077
cvar_t	*com_sv_running;com_sv_running69,2099
cvar_t	*com_cl_running;com_cl_running70,2123
cvar_t	*com_logfile;		// 1 = buffer log, 2 = flush after each printcom_logfile71,2147
cvar_t	*com_showtrace;com_showtrace72,2215
cvar_t	*com_version;com_version73,2238
cvar_t	*com_blood;com_blood74,2259
cvar_t	*com_buildScript;	// for automated data building scriptscom_buildScript75,2278
cvar_t	*com_introPlayed;com_introPlayed76,2342
cvar_t	*cl_paused;cl_paused77,2367
cvar_t	*sv_paused;sv_paused78,2386
cvar_t  *cl_packetdelay;cl_packetdelay79,2405
cvar_t  *sv_packetdelay;sv_packetdelay80,2430
cvar_t	*com_cameraMode;com_cameraMode81,2455
cvar_t	*com_ansiColor;com_ansiColor82,2479
cvar_t	*com_unfocused;com_unfocused83,2502
cvar_t	*com_maxfpsUnfocused;com_maxfpsUnfocused84,2525
cvar_t	*com_minimized;com_minimized85,2554
cvar_t	*com_maxfpsMinimized;com_maxfpsMinimized86,2577
cvar_t	*com_standalone;com_standalone87,2606
int		time_game;time_game90,2651
int		time_frontend;		// renderer frontend timetime_frontend91,2667
int		time_backend;		// renderer backend timetime_backend92,2714
int			com_frameTime;com_frameTime94,2760
int			com_frameMsec;com_frameMsec95,2781
int			com_frameNumber;com_frameNumber96,2802
qboolean	com_errorEntered;com_errorEntered98,2826
qboolean	com_fullyInitialized;com_fullyInitialized99,2853
char	com_errorMessage[MAXPRINTMSG];com_errorMessage101,2885
static char	*rd_buffer;rd_buffer108,3068
static int	rd_buffersize;rd_buffersize109,3092
static void	(*rd_flush)( char *buffer );rd_flush110,3118
void Com_BeginRedirect (char *buffer, int buffersize, void (*flush)( char *) )Com_BeginRedirect112,3160
void Com_EndRedirect (void)Com_EndRedirect123,3380
void QDECL Com_Printf( const char *fmt, ... ) {Com_Printf144,3719
void QDECL Com_DPrintf( const char *fmt, ...) {Com_DPrintf221,5425
void QDECL Com_Error( int code, const char *fmt, ... ) {Com_Error244,5879
void Com_Quit_f( void ) {Com_Quit_f334,8249
#define	MAX_CONSOLE_LINES	MAX_CONSOLE_LINES365,8896
int		com_numConsoleLines;com_numConsoleLines366,8925
char	*com_consoleLines[MAX_CONSOLE_LINES];com_consoleLines367,8951
void Com_ParseCommandLine( char *commandLine ) {Com_ParseCommandLine376,9101
qboolean Com_SafeMode( void ) {Com_SafeMode408,9969
void Com_StartupVariable( const char *match ) {Com_StartupVariable434,10609
qboolean Com_AddStartupCommands( void ) {Com_AddStartupCommands467,11288
void Info_Print( const char *s ) {Info_Print494,11866
char *Com_StringContains(char *str1, char *str2, int casesensitive) {Com_StringContains541,12422
int Com_Filter(char *filter, char *name, int casesensitive)Com_Filter570,12876
int Com_FilterPath(char *filter, char *name, int casesensitive)Com_FilterPath650,14539
int Com_HashKey(char *string, int maxlen) {Com_HashKey682,15152
int Com_RealTime(qtime_t *qtime) {Com_RealTime698,15436
#define	ZONEID	ZONEID736,16353
#define MINFRAGMENT	MINFRAGMENT737,16377
typedef struct zonedebug_s {zonedebug_s739,16401
	char *label;label740,16430
	char *file;file741,16444
	int line;line742,16457
	int allocSize;allocSize743,16468
} zonedebug_t;zonedebug_t744,16484
typedef struct memblock_s {memblock_s746,16500
	int		size;           // including the header and possibly tiny fragmentssize747,16528
	int     tag;            // a tag of 0 is a free blocktag748,16602
	struct memblock_s       *next, *prev;next749,16657
	struct memblock_s       *next, *prev;prev749,16657
	int     id;        		// should be ZONEIDid750,16696
	zonedebug_t d;d752,16756
} memblock_t;memblock_t754,16779
	int		size;			// total bytes malloced, including headersize757,16811
	int		used;			// total bytes usedused758,16867
	memblock_t	blocklist;	// start / end cap for linked listblocklist759,16901
	memblock_t	*rover;rover760,16959
} memzone_t;memzone_t761,16979
memzone_t	*mainzone;mainzone764,17042
memzone_t	*smallzone;smallzone767,17188
void Z_ClearZone( memzone_t *zone, int size ) {Z_ClearZone776,17306
int Z_AvailableZoneMemory( memzone_t *zone ) {Z_AvailableZoneMemory801,17906
int Z_AvailableMemory( void ) {Z_AvailableMemory810,18063
void Z_Free( void *ptr ) {Z_Free819,18204
void Z_FreeTags( int tag ) {Z_FreeTags890,19679
void *Z_TagMallocDebug( int size, int tag, char *label, char *file, int line ) {Z_TagMallocDebug921,20213
void *Z_MallocDebug( int size, char *label, char *file, int line ) {Z_MallocDebug1012,22269
void *S_MallocDebug( int size, char *label, char *file, int line ) {S_MallocDebug1031,22625
void *S_Malloc( int size ) {S_Malloc1035,22766
void Z_CheckHeap( void ) {Z_CheckHeap1045,22913
void Z_LogZoneHeap( memzone_t *zone, char *name ) {Z_LogZoneHeap1068,23586
void Z_LogHeap( void ) {Z_LogHeap1121,25125
typedef struct memstatic_s {memstatic_s1127,25287
	memblock_t b;b1128,25316
	byte mem[2];mem1129,25331
} memstatic_t;memstatic_t1130,25345
memstatic_t emptystring =emptystring1132,25361
memstatic_t numberstring[] = {numberstring1134,25473
char *CopyString( const char *in ) {CopyString1155,26524
#define	HUNK_MAGIC	HUNK_MAGIC1206,28109
#define	HUNK_FREE_MAGIC	HUNK_FREE_MAGIC1207,28139
	int		magic;magic1210,28192
	int		size;size1211,28205
} hunkHeader_t;hunkHeader_t1212,28217
	int		mark;mark1215,28251
	int		permanent;permanent1216,28263
	int		temp;temp1217,28280
	int		tempHighwater;tempHighwater1218,28292
} hunkUsed_t;hunkUsed_t1219,28313
typedef struct hunkblock_s {hunkblock_s1221,28328
	int size;size1222,28357
	byte printed;printed1223,28368
	struct hunkblock_s *next;next1224,28383
	char *label;label1225,28410
	char *file;file1226,28424
	int line;line1227,28437
} hunkblock_t;hunkblock_t1228,28448
static	hunkblock_t *hunkblocks;hunkblocks1230,28464
static	hunkUsed_t	hunk_low, hunk_high;hunk_low1232,28497
static	hunkUsed_t	hunk_low, hunk_high;hunk_high1232,28497
static	hunkUsed_t	*hunk_permanent, *hunk_temp;hunk_permanent1233,28536
static	hunkUsed_t	*hunk_permanent, *hunk_temp;hunk_temp1233,28536
static	byte	*s_hunkData = NULL;s_hunkData1235,28584
static	int		s_hunkTotal;s_hunkTotal1236,28616
static	int		s_zoneTotal;s_zoneTotal1238,28642
static	int		s_smallZoneTotal;s_smallZoneTotal1239,28667
void Com_Meminfo_f( void ) {Com_Meminfo_f1247,28755
void Com_TouchMemory( void ) {Com_TouchMemory1341,31767
void Com_InitSmallZoneMemory( void ) {Com_InitSmallZoneMemory1388,32701
void Com_InitZoneMemory( void ) {Com_InitZoneMemory1399,33013
void Hunk_Log( void) {Hunk_Log1428,33789
void Hunk_SmallLog( void) {Hunk_SmallLog1458,34622
void Com_InitHunkMemory( void ) {Com_InitHunkMemory1506,35907
int	Hunk_MemoryRemaining( void ) {Hunk_MemoryRemaining1562,37610
void Hunk_SetMark( void ) {Hunk_SetMark1578,37997
void Hunk_ClearToMark( void ) {Hunk_ClearToMark1590,38231
qboolean Hunk_CheckMark( void ) {Hunk_CheckMark1600,38432
void Hunk_Clear( void ) {Hunk_Clear1618,38758
static void Hunk_SwapBanks( void ) {Hunk_SwapBanks1648,39282
void *Hunk_AllocDebug( int size, ha_pref preference, char *label, char *file, int line ) {Hunk_AllocDebug1674,39923
void *Hunk_AllocateTempMemory( int size ) {Hunk_AllocateTempMemory1749,41705
void Hunk_FreeTempMemory( void *buf ) {Hunk_FreeTempMemory1798,42900
void Hunk_ClearTempMemory( void ) {Hunk_ClearTempMemory1846,44193
void Hunk_Trash( void ) {Hunk_Trash1857,44359
#define	MAX_PUSHED_EVENTS	MAX_PUSHED_EVENTS1902,45254
static int com_pushedEventsHead = 0;com_pushedEventsHead1903,45297
static int com_pushedEventsTail = 0;com_pushedEventsTail1904,45334
static sysEvent_t	com_pushedEvents[MAX_PUSHED_EVENTS];com_pushedEvents1905,45371
void Com_InitJournaling( void ) {Com_InitJournaling1912,45488
#define MAX_QUEUED_EVENTS MAX_QUEUED_EVENTS1945,46432
#define MASK_QUEUED_EVENTS MASK_QUEUED_EVENTS1946,46463
static sysEvent_t  eventQueue[ MAX_QUEUED_EVENTS ];eventQueue1948,46517
static int         eventHead = 0;eventHead1949,46569
static int         eventTail = 0;eventTail1950,46603
static byte        sys_packetReceived[ MAX_MSGLEN ];sys_packetReceived1951,46637
void Com_QueueEvent( int time, sysEventType_t type, int value, int value2, int ptrLength, void *ptr )Com_QueueEvent1962,46877
sysEvent_t Com_GetSystemEvent( void )Com_GetSystemEvent2000,47543
sysEvent_t	Com_GetRealEvent( void ) {Com_GetRealEvent2061,48746
void Com_InitPushEvent( void ) {Com_InitPushEvent2105,49831
void Com_PushEvent( sysEvent_t *event ) {Com_PushEvent2121,50248
sysEvent_t	Com_GetEvent( void ) {Com_GetEvent2152,50891
void Com_RunAndTimeServerPacket( netadr_t *evFrom, msg_t *buf ) {Com_RunAndTimeServerPacket2165,51187
int Com_EventLoop( void ) {Com_EventLoop2192,51635
int Com_Milliseconds (void) {Com_Milliseconds2292,54091
static void Com_Error_f (void) {Com_Error_f2317,54555
static void Com_Freeze_f (void) {Com_Freeze_f2334,54848
static void Com_Crash_f( void ) {Com_Crash_f2361,55253
char	cl_cdkey[34] = "                                ";cl_cdkey2371,55655
char	cl_cdkey[34] = "123456789";cl_cdkey2373,55717
void Com_ReadCDKey( const char *filename ) {Com_ReadCDKey2382,55882
void Com_AppendCDKey( const char *filename ) {Com_AppendCDKey2412,56443
static void Com_WriteCDKey( const char *filename, const char *ikey ) {Com_WriteCDKey2443,57028
static void Com_DetectAltivec(void)Com_DetectAltivec2487,57864
void Com_Init( char *commandLine ) {Com_Init2510,58315
void Com_WriteConfigToFile( const char *filename ) {Com_WriteConfigToFile2677,63611
void Com_WriteConfiguration( void ) {Com_WriteConfiguration2700,64056
void Com_WriteConfig_f( void ) {Com_WriteConfig_f2741,64871
int Com_ModifyMsec( int msec ) {Com_ModifyMsec2760,65280
void Com_Frame( void ) {Com_Frame2811,66466
void Com_Shutdown (void) {Com_Shutdown2992,70359
float Q_acos(float c) {Q_acos3022,70873
void Field_Clear( field_t *edit ) {Field_Clear3047,71217
static const char *completionString;completionString3053,71336
static char shortestMatch[MAX_TOKEN_CHARS];shortestMatch3054,71373
static int	matchCount;matchCount3055,71417
static field_t *completionField;completionField3057,71529
static void FindMatches( const char *s ) {FindMatches3065,71614
static void PrintMatches( const char *s ) {PrintMatches3096,72167
static void PrintCvarMatches( const char *s ) {PrintCvarMatches3108,72371
static char *Field_FindFirstSeparator( char *s )Field_FindFirstSeparator3122,72696
static qboolean Field_Complete( void )Field_Complete3140,72910
void Field_CompleteKeyname( void )Field_CompleteKeyname3172,73597
void Field_CompleteFilename( const char *dir,Field_CompleteFilename3189,73855
void Field_CompleteCommand( char *cmd,Field_CompleteCommand3206,74195
void Field_AutoComplete( field_t *field )Field_AutoComplete3300,76232
void Com_RandomBytes( byte *string, int len )Com_RandomBytes3314,76506

qcommon/q_math.c,4916
#define __Q3_VM_MATH__Q3_VM_MATH29,1253
vec3_t	vec3_origin = {0,0,0};vec3_origin34,1305
vec3_t	axisDefault[3] = { { 1, 0, 0 }, { 0, 1, 0 }, { 0, 0, 1 } };axisDefault35,1335
vec4_t		colorBlack	= {0, 0, 0, 1};colorBlack38,1404
vec4_t		colorRed	= {1, 0, 0, 1};colorRed39,1439
vec4_t		colorGreen	= {0, 1, 0, 1};colorGreen40,1472
vec4_t		colorBlue	= {0, 0, 1, 1};colorBlue41,1507
vec4_t		colorYellow	= {1, 1, 0, 1};colorYellow42,1541
vec4_t		colorMagenta= {1, 0, 1, 1};colorMagenta43,1577
vec4_t		colorCyan	= {0, 1, 1, 1};colorCyan44,1613
vec4_t		colorWhite	= {1, 1, 1, 1};colorWhite45,1647
vec4_t		colorLtGrey	= {0.75, 0.75, 0.75, 1};colorLtGrey46,1682
vec4_t		colorMdGrey	= {0.5, 0.5, 0.5, 1};colorMdGrey47,1727
vec4_t		colorDkGrey	= {0.25, 0.25, 0.25, 1};colorDkGrey48,1769
vec4_t	g_color_table[8] =g_color_table50,1815
vec3_t	bytedirs[NUMVERTEXNORMALS] =bytedirs63,2034
int		Q_rand( int *seed ) {Q_rand150,8103
float	Q_random( int *seed ) {Q_random155,8178
float	Q_crandom( int *seed ) {Q_crandom159,8265
signed char ClampChar( int i ) {ClampChar165,8400
signed short ClampShort( int i ) {ClampShort175,8519
int DirToByte( vec3_t dir ) {DirToByte187,8696
void ByteToDir( int b, vec3_t dir ) {ByteToDir210,8964
unsigned ColorBytes3 (float r, float g, float b) {ColorBytes3219,9126
unsigned ColorBytes4 (float r, float g, float b, float a) {ColorBytes4229,9296
float NormalizeColor( const vec3_t in, vec3_t out ) {NormalizeColor240,9505
qboolean PlaneFromPoints( vec4_t plane, const vec3_t a, const vec3_t b, const vec3_t c ) {PlaneFromPoints270,9986
void RotatePointAroundVector( vec3_t dst, const vec3_t dir, const vec3_t point,RotatePointAroundVector291,10399
void RotateAroundDirection( vec3_t axis[3], float yaw ) {RotateAroundDirection352,11545
void vectoangles( const vec3_t value1, vec3_t angles ) {vectoangles371,11913
void AnglesToAxis( const vec3_t angles, vec3_t axis[3] ) {AnglesToAxis416,12628
void AxisClear( vec3_t axis[3] ) {AxisClear424,12858
void AxisCopy( vec3_t in[3], vec3_t out[3] ) {AxisCopy436,13049
void ProjectPointOnPlane( vec3_t dst, const vec3_t p, const vec3_t normal )ProjectPointOnPlane442,13189
void MakeNormalVectors( const vec3_t forward, vec3_t right, vec3_t up) {MakeNormalVectors473,13821
void VectorRotate( vec3_t in, vec3_t matrix[3], vec3_t out )VectorRotate489,14201
float Q_rsqrt( float number )Q_rsqrt502,14514
float Q_fabs( float f ) {Q_fabs518,14885
float LerpAngle (float from, float to, float frac) {LerpAngle534,15096
float	AngleSubtract( float a1, float a2 ) {AngleSubtract556,15390
void AnglesSubtract( vec3_t v1, vec3_t v2, vec3_t v3 ) {AnglesSubtract570,15547
float	AngleMod(float a) {AngleMod577,15728
float AngleNormalize360 ( float angle ) {AngleNormalize360590,15942
float AngleNormalize180 ( float angle ) {AngleNormalize180602,16177
float AngleDelta ( float angle1, float angle2 ) {AngleDelta618,16425
void SetPlaneSignbits (cplane_t *out) {SetPlaneSignbits631,16649
int BoxOnPlaneSide (vec3_t emins, vec3_t emaxs, struct cplane_s *p)BoxOnPlaneSide688,17516
__declspec( naked ) int BoxOnPlaneSide (vec3_t emins, vec3_t emaxs, struct cplane_s *p)__declspec756,19488
float RadiusFromBounds( const vec3_t mins, const vec3_t maxs ) {RadiusFromBounds994,23677
void ClearBounds( vec3_t mins, vec3_t maxs ) {ClearBounds1009,23920
void AddPointToBounds( const vec3_t v, vec3_t mins, vec3_t maxs ) {AddPointToBounds1014,24047
qboolean BoundsIntersect(const vec3_t mins, const vec3_t maxs,BoundsIntersect1037,24393
qboolean BoundsIntersectSphere(const vec3_t mins, const vec3_t maxs,BoundsIntersectSphere1053,24688
qboolean BoundsIntersectPoint(const vec3_t mins, const vec3_t maxs,BoundsIntersectPoint1069,25044
vec_t VectorNormalize( vec3_t v ) {VectorNormalize1085,25331
vec_t VectorNormalize2( const vec3_t v, vec3_t out) {VectorNormalize21102,25639
void _VectorMA( const vec3_t veca, float scale, const vec3_t vecb, vec3_t vecc) {_VectorMA1122,25960
vec_t _DotProduct( const vec3_t v1, const vec3_t v2 ) {_DotProduct1129,26154
void _VectorSubtract( const vec3_t veca, const vec3_t vecb, vec3_t out ) {_VectorSubtract1133,26262
void _VectorAdd( const vec3_t veca, const vec3_t vecb, vec3_t out ) {_VectorAdd1139,26421
void _VectorCopy( const vec3_t in, vec3_t out ) {_VectorCopy1145,26575
void _VectorScale( const vec3_t in, vec_t scale, vec3_t out ) {_VectorScale1151,26679
void Vector4Scale( const vec4_t in, vec_t scale, vec4_t out ) {Vector4Scale1157,26815
int Q_log2( int val ) {Q_log21165,26975
void MatrixMultiply(float in1[3][3], float in2[3][3], float out[3][3]) {MatrixMultiply1201,27415
void AngleVectors( const vec3_t angles, vec3_t forward, vec3_t right, vec3_t up) {AngleVectors1223,28284
void PerpendicularVector( vec3_t dst, const vec3_t src )PerpendicularVector1261,29021
int Q_isnan( float x )Q_isnan1300,29637

qcommon/unzip.h,8191
typedef struct TagunzFile__ { int unused; } unzFile__; TagunzFile__26,1134
typedef struct TagunzFile__ { int unused; } unzFile__; unused26,1134
typedef struct TagunzFile__ { int unused; } unzFile__; unzFile__26,1134
typedef unzFile__ *unzFile;unzFile27,1190
typedef void* unzFile;unzFile29,1224
typedef struct tm_unz_s tm_unz_s33,1291
	unsigned int tm_sec;            /* seconds after the minute - [0,59] */tm_sec35,1318
	unsigned int tm_min;            /* minutes after the hour - [0,59] */tm_min36,1391
	unsigned int tm_hour;           /* hours since midnight - [0,23] */tm_hour37,1462
	unsigned int tm_mday;           /* day of the month - [1,31] */tm_mday38,1531
	unsigned int tm_mon;            /* months since January - [0,11] */tm_mon39,1596
	unsigned int tm_year;           /* years - [1980..2044] */tm_year40,1665
} tm_unz;tm_unz41,1725
typedef struct unz_global_info_sunz_global_info_s45,1854
	unsigned long number_entry;         /* total number of entries in the central dir on this disk */number_entry47,1889
	unsigned long size_comment;         /* size of the global comment of the zipfile */size_comment48,1988
} unz_global_info;unz_global_info49,2073
typedef struct unz_file_info_sunz_file_info_s53,2162
    unsigned long version;              /* version made by                 2 unsigned chars */version55,2195
    unsigned long version_needed;       /* version needed to extract       2 unsigned chars */version_needed56,2290
    unsigned long flag;                 /* general purpose bit flag        2 unsigned chars */flag57,2385
    unsigned long compression_method;   /* compression method              2 unsigned chars */compression_method58,2480
    unsigned long dosDate;              /* last mod file date in Dos fmt   4 unsigned chars */dosDate59,2575
    unsigned long crc;                  /* crc-32                          4 unsigned chars */crc60,2670
    unsigned long compressed_size;      /* compressed size                 4 unsigned chars */ compressed_size61,2765
    unsigned long uncompressed_size;    /* uncompressed size               4 unsigned chars */ uncompressed_size62,2861
    unsigned long size_filename;        /* filename length                 2 unsigned chars */size_filename63,2957
    unsigned long size_file_extra;      /* extra field length              2 unsigned chars */size_file_extra64,3052
    unsigned long size_file_comment;    /* file comment length             2 unsigned chars */size_file_comment65,3147
    unsigned long disk_num_start;       /* disk number start               2 unsigned chars */disk_num_start67,3243
    unsigned long internal_fa;          /* internal file attributes        2 unsigned chars */internal_fa68,3338
    unsigned long external_fa;          /* external file attributes        4 unsigned chars */external_fa69,3433
    tm_unz tmu_date;tmu_date71,3529
} unz_file_info;unz_file_info72,3550
typedef struct unz_file_info_internal_sunz_file_info_internal_s75,3643
    unsigned long offset_curfile;/* relative offset of static header 4 unsigned chars */offset_curfile77,3685
} unz_file_info_internal;unz_file_info_internal78,3774
typedef void* (*alloc_func) (void* opaque, unsigned int items, unsigned int size);alloc_func80,3801
typedef void   (*free_func) (void* opaque, void* address);free_func81,3884
typedef struct z_stream_s {z_stream_s85,3968
    unsigned char    *next_in;  /* next input unsigned char */next_in86,3996
    unsigned int     avail_in;  /* number of unsigned chars available at next_in */avail_in87,4059
    unsigned long    total_in;  /* total nb of input unsigned chars read so */total_in88,4143
    unsigned char    *next_out; /* next output unsigned char should be put there */next_out90,4223
    unsigned int     avail_out; /* remaining free space at next_out */avail_out91,4307
    unsigned long    total_out; /* total nb of unsigned chars output so */total_out92,4378
    char     *msg;      /* last error message, NULL if no error */msg94,4454
    struct internal_state *state; /* not visible by applications */state95,4521
    alloc_func zalloc;  /* used to allocate the internal state */zalloc97,4590
    free_func  zfree;   /* used to free the internal state */zfree98,4656
    unsigned char*     opaque;  /* private data object passed to zalloc and zfree */opaque99,4718
    int     data_type;  /* best guess about the data type: ascii or binary */data_type101,4804
    unsigned long   adler;      /* adler32 value of the uncompressed data */adler102,4882
    unsigned long   reserved;   /* reserved for future use */reserved103,4959
} z_stream;z_stream104,5021
typedef z_stream *z_streamp;z_streamp106,5034
	char  *read_buffer;         /* internal buffer for compressed data */read_buffer113,5201
	z_stream stream;            /* zLib stream structure for inflate */stream114,5272
	unsigned long pos_in_zipfile;       /* position in unsigned char on the zipfile, for fseek*/pos_in_zipfile116,5342
	unsigned long stream_initialised;   /* flag set if stream structure is initialised*/stream_initialised117,5436
	unsigned long offset_local_extrafield;/* offset of the static extra field */offset_local_extrafield119,5523
	unsigned int  size_local_extrafield;/* size of the static extra field */size_local_extrafield120,5601
	unsigned long pos_local_extrafield;   /* position in the static extra field in read*/pos_local_extrafield121,5675
	unsigned long crc32;                /* crc32 of all data uncompressed */crc32123,5763
	unsigned long crc32_wait;           /* crc32 we must obtain after decompress all */crc32_wait124,5837
	unsigned long rest_read_compressed; /* number of unsigned char to be decompressed */rest_read_compressed125,5922
	unsigned long rest_read_uncompressed;/*number of unsigned char to be obtained after decomp*/rest_read_uncompressed126,6008
	FILE* file;                 /* io structore of the zipfile */file127,6102
	unsigned long compression_method;   /* compression method (0==store) */compression_method128,6165
	unsigned long byte_before_the_zipfile;/* unsigned char before the zipfile, (>0 for sfx)*/byte_before_the_zipfile129,6238
} file_in_zip_read_info_s;file_in_zip_read_info_s130,6329
	FILE* file;                 /* io structore of the zipfile */file137,6434
	unz_global_info gi;       /* public global information */gi138,6497
	unsigned long byte_before_the_zipfile;/* unsigned char before the zipfile, (>0 for sfx)*/byte_before_the_zipfile139,6556
	unsigned long num_file;             /* number of the current file in the zipfile*/num_file140,6647
	unsigned long pos_in_central_dir;   /* pos of the current file in the central dir*/pos_in_central_dir141,6731
	unsigned long current_file_ok;      /* flag about the usability of the current file*/current_file_ok142,6816
	unsigned long central_pos;          /* position of the beginning of the central dir*/central_pos143,6903
	unsigned long size_central_dir;     /* size of the central directory  */size_central_dir145,6991
	unsigned long offset_central_dir;   /* offset of start of central directory withoffset_central_dir146,7065
	unz_file_info cur_file_info; /* public info about the current file in zip*/cur_file_info149,7198
	unz_file_info_internal cur_file_info_internal; /* private info about it*/cur_file_info_internal150,7275
    file_in_zip_read_info_s* pfile_in_zip_read; /* structure about the currentpfile_in_zip_read151,7350
	unsigned char*	tmpFile;tmpFile153,7501
	int	tmpPos,tmpSize;tmpPos154,7526
	int	tmpPos,tmpSize;tmpSize154,7526
} unz_s;unz_s155,7547
#define UNZ_OK UNZ_OK157,7557
#define UNZ_END_OF_LIST_OF_FILE UNZ_END_OF_LIST_OF_FILE158,7609
#define UNZ_ERRNO UNZ_ERRNO159,7648
#define UNZ_EOF UNZ_EOF160,7690
#define UNZ_PARAMERROR UNZ_PARAMERROR161,7726
#define UNZ_BADZIPFILE UNZ_BADZIPFILE162,7773
#define UNZ_INTERNALERROR UNZ_INTERNALERROR163,7820
#define UNZ_CRCERROR UNZ_CRCERROR164,7867
#define UNZ_CASESENSITIVE	UNZ_CASESENSITIVE166,7915
#define UNZ_NOTCASESENSITIVE	UNZ_NOTCASESENSITIVE167,7944
#define UNZ_OSDEFAULTCASE	UNZ_OSDEFAULTCASE168,7975

qcommon/q_shared.h,25517
#define __Q_SHARED_H__Q_SHARED_H24,998
  #define PRODUCT_NAME	PRODUCT_NAME30,1139
  #define BASEGAME	BASEGAME31,1173
  #define CLIENT_WINDOW_TITLE CLIENT_WINDOW_TITLE32,1203
  #define CLIENT_WINDOW_MIN_TITLE CLIENT_WINDOW_MIN_TITLE33,1249
  #define GAMENAME_FOR_MASTER	GAMENAME_FOR_MASTER34,1296
  #define PRODUCT_NAME	PRODUCT_NAME36,1374
  #define BASEGAME	BASEGAME37,1406
  #define CLIENT_WINDOW_TITLE CLIENT_WINDOW_TITLE38,1436
  #define CLIENT_WINDOW_MIN_TITLE CLIENT_WINDOW_MIN_TITLE39,1482
  #define GAMENAME_FOR_MASTER	GAMENAME_FOR_MASTER40,1524
  #define PRODUCT_VERSION PRODUCT_VERSION44,1593
#define Q3_VERSION Q3_VERSION47,1634
#define MAX_TEAMNAME MAX_TEAMNAME49,1687
#define __attribute__(__attribute__80,3059
typedef int intptr_t;intptr_t104,3895
  #define Q_vsnprintf Q_vsnprintf121,4188
  #define Q_snprintf Q_snprintf122,4221
  #define Q_vsnprintf Q_vsnprintf124,4258
  #define Q_snprintf Q_snprintf125,4290
  typedef __int64 int64_t;int64_t131,4363
  typedef __int32 int32_t;int32_t132,4390
  typedef __int16 int16_t;int16_t133,4417
  typedef __int8 int8_t;int8_t134,4444
  typedef unsigned __int64 uint64_t;uint64_t135,4469
  typedef unsigned __int32 uint32_t;uint32_t136,4506
  typedef unsigned __int16 uint16_t;uint16_t137,4543
  typedef unsigned __int8 uint8_t;uint8_t138,4580
typedef unsigned char 		byte;byte150,4750
typedef enum {qfalse, qtrue}	qboolean;qfalse152,4781
typedef enum {qfalse, qtrue}	qboolean;qtrue152,4781
typedef enum {qfalse, qtrue}	qboolean;qboolean152,4781
	float f;f155,4837
	int i;i156,4847
	unsigned int ui;ui157,4855
} floatint_t;floatint_t158,4873
typedef int		qhandle_t;qhandle_t160,4888
typedef int		sfxHandle_t;sfxHandle_t161,4912
typedef int		fileHandle_t;fileHandle_t162,4938
typedef int		clipHandle_t;clipHandle_t163,4965
#define PAD(PAD165,4993
#define ALIGN(ALIGN168,5052
#define ALIGN(ALIGN170,5103
#define NULL NULL174,5141
#define	MAX_QINT	MAX_QINT177,5174
#define	MIN_QINT	MIN_QINT178,5204
#define	PITCH	PITCH182,5256
#define	YAW	YAW183,5289
#define	ROLL	ROLL184,5324
#define	MAX_STRING_CHARS	MAX_STRING_CHARS188,5449
#define	MAX_STRING_TOKENS	MAX_STRING_TOKENS189,5534
#define	MAX_TOKEN_CHARS	MAX_TOKEN_CHARS190,5613
#define	MAX_INFO_STRING	MAX_INFO_STRING192,5681
#define	MAX_INFO_KEY	MAX_INFO_KEY193,5711
#define	MAX_INFO_VALUE	MAX_INFO_VALUE194,5740
#define	BIG_INFO_STRING	BIG_INFO_STRING196,5770
#define	BIG_INFO_KEY	BIG_INFO_KEY197,5834
#define	BIG_INFO_VALUE	BIG_INFO_VALUE198,5863
#define	MAX_QPATH	MAX_QPATH201,5894
#define MAX_OSPATH	MAX_OSPATH203,5973
#define	MAX_OSPATH	MAX_OSPATH205,6009
#define	MAX_NAME_LENGTH	MAX_NAME_LENGTH208,6082
#define	MAX_SAY_TEXT	MAX_SAY_TEXT210,6143
	EXEC_NOW,			// don't return until completed, a VM should NEVER use this,EXEC_NOW214,6225
	EXEC_INSERT,		// insert at current position, but don't run yetEXEC_INSERT216,6367
	EXEC_APPEND			// add to end of the command buffer (normal case)EXEC_APPEND217,6431
} cbufExec_t;cbufExec_t218,6496
#define	MAX_MAP_AREA_BYTES	MAX_MAP_AREA_BYTES224,6584
	PRINT_ALL,PRINT_ALL229,6730
	PRINT_DEVELOPER,		// only print when "developer 1"PRINT_DEVELOPER230,6742
	PRINT_WARNING,PRINT_WARNING231,6794
	PRINT_ERRORPRINT_ERROR232,6810
} printParm_t;printParm_t233,6823
#undef ERR_FATAL	ERR_FATAL237,6857
	ERR_FATAL,					// exit the entire game with a popup windowERR_FATAL242,6973
	ERR_DROP,					// print to console and disconnect from gameERR_DROP243,7033
	ERR_SERVERDISCONNECT,		// don't kill serverERR_SERVERDISCONNECT244,7093
	ERR_DISCONNECT,				// client disconnected from the serverERR_DISCONNECT245,7138
	ERR_NEED_CD					// pop up the need-cd dialogERR_NEED_CD246,7197
} errorParm_t;errorParm_t247,7243
#define PROP_GAP_WIDTH	PROP_GAP_WIDTH252,7307
#define PROP_SPACE_WIDTH	PROP_SPACE_WIDTH253,7334
#define PROP_HEIGHT	PROP_HEIGHT254,7362
#define PROP_SMALL_SIZE_SCALE	PROP_SMALL_SIZE_SCALE255,7388
#define BLINK_DIVISOR	BLINK_DIVISOR257,7424
#define PULSE_DIVISOR	PULSE_DIVISOR258,7452
#define UI_LEFT	UI_LEFT260,7480
#define UI_CENTER	UI_CENTER261,7520
#define UI_RIGHT	UI_RIGHT262,7550
#define UI_FORMATMASK	UI_FORMATMASK263,7579
#define UI_SMALLFONT	UI_SMALLFONT264,7612
#define UI_BIGFONT	UI_BIGFONT265,7644
#define UI_GIANTFONT	UI_GIANTFONT266,7686
#define UI_DROPSHADOW	UI_DROPSHADOW267,7718
#define UI_BLINK	UI_BLINK268,7751
#define UI_INVERSE	UI_INVERSE269,7780
#define UI_PULSE	UI_PULSE270,7811
	#define HUNK_DEBUGHUNK_DEBUG273,7879
	h_high,h_high277,7922
	h_low,h_low278,7931
	h_dontcareh_dontcare279,7939
} ha_pref;ha_pref280,7951
#define Hunk_Alloc(Hunk_Alloc283,7981
#define Com_Memset Com_Memset289,8238
#define Com_Memcpy Com_Memcpy290,8264
#define CIN_system	CIN_system292,8291
#define CIN_loop	CIN_loop293,8312
#define	CIN_hold	CIN_hold294,8331
#define CIN_silent	CIN_silent295,8350
#define CIN_shader	CIN_shader296,8371
typedef float vec_t;vec_t307,8538
typedef vec_t vec2_t[2];vec2_t308,8559
typedef vec_t vec3_t[3];vec3_t309,8584
typedef vec_t vec4_t[4];vec4_t310,8609
typedef vec_t vec5_t[5];vec5_t311,8634
typedef	int	fixed4_t;fixed4_t313,8660
typedef	int	fixed8_t;fixed8_t314,8682
typedef	int	fixed16_t;fixed16_t315,8704
#define M_PI	M_PI318,8741
#define NUMVERTEXNORMALS	NUMVERTEXNORMALS321,8821
#define	SCREEN_WIDTH	SCREEN_WIDTH326,9008
#define	SCREEN_HEIGHT	SCREEN_HEIGHT327,9034
#define TINYCHAR_WIDTH	TINYCHAR_WIDTH329,9062
#define TINYCHAR_HEIGHT	TINYCHAR_HEIGHT330,9104
#define SMALLCHAR_WIDTH	SMALLCHAR_WIDTH332,9151
#define SMALLCHAR_HEIGHT	SMALLCHAR_HEIGHT333,9178
#define BIGCHAR_WIDTH	BIGCHAR_WIDTH335,9207
#define BIGCHAR_HEIGHT	BIGCHAR_HEIGHT336,9233
#define	GIANTCHAR_WIDTH	GIANTCHAR_WIDTH338,9261
#define	GIANTCHAR_HEIGHT	GIANTCHAR_HEIGHT339,9289
#define Q_COLOR_ESCAPE	Q_COLOR_ESCAPE353,9618
#define Q_IsColorString(Q_IsColorString354,9645
#define COLOR_BLACK	COLOR_BLACK356,9754
#define COLOR_RED	COLOR_RED357,9779
#define COLOR_GREEN	COLOR_GREEN358,9802
#define COLOR_YELLOW	COLOR_YELLOW359,9827
#define COLOR_BLUE	COLOR_BLUE360,9852
#define COLOR_CYAN	COLOR_CYAN361,9876
#define COLOR_MAGENTA	COLOR_MAGENTA362,9900
#define COLOR_WHITE	COLOR_WHITE363,9926
#define ColorIndex(ColorIndex364,9951
#define S_COLOR_BLACK	S_COLOR_BLACK366,9996
#define S_COLOR_RED	S_COLOR_RED367,10023
#define S_COLOR_GREEN	S_COLOR_GREEN368,10049
#define S_COLOR_YELLOW	S_COLOR_YELLOW369,10076
#define S_COLOR_BLUE	S_COLOR_BLUE370,10104
#define S_COLOR_CYAN	S_COLOR_CYAN371,10130
#define S_COLOR_MAGENTA	S_COLOR_MAGENTA372,10156
#define S_COLOR_WHITE	S_COLOR_WHITE373,10185
#define	MAKERGB(MAKERGB377,10246
#define	MAKERGBA(MAKERGBA378,10297
#define DEG2RAD(DEG2RAD380,10360
#define RAD2DEG(RAD2DEG381,10409
#define	nanmask nanmask388,10535
#define	IS_NAN(IS_NAN390,10562
static ID_INLINE float Q_rsqrt( float number ) {Q_rsqrt394,10626
static ID_INLINE float Q_fabs(float x) {Q_fabs406,10926
#define Q_fabs Q_fabs413,11063
#define SQRTFAST(SQRTFAST421,11186
#define DotProduct(DotProduct432,11418
#define VectorSubtract(VectorSubtract433,11488
#define VectorAdd(VectorAdd434,11583
#define VectorCopy(VectorCopy435,11674
#define	VectorScale(VectorScale436,11744
#define	VectorMA(VectorMA437,11829
#define DotProduct(DotProduct441,11943
#define VectorSubtract(VectorSubtract442,11986
#define VectorAdd(VectorAdd443,12039
#define VectorCopy(VectorCopy444,12083
#define	VectorScale(VectorScale445,12126
#define	VectorMA(VectorMA446,12175
#undef VectorCopyVectorCopy452,12263
	float	v[3];v455,12371
} vec3struct_t;vec3struct_t456,12384
#define VectorCopy(VectorCopy457,12400
#define VectorClear(VectorClear461,12479
#define VectorNegate(VectorNegate462,12529
#define VectorSet(VectorSet463,12603
#define Vector4Copy(Vector4Copy464,12670
#define	SnapVector(SnapVector466,12755
static ID_INLINE int VectorCompare( const vec3_t v1, const vec3_t v2 ) {VectorCompare485,13693
static ID_INLINE vec_t VectorLength( const vec3_t v ) {VectorLength492,13857
static ID_INLINE vec_t VectorLengthSquared( const vec3_t v ) {VectorLengthSquared496,13973
static ID_INLINE vec_t Distance( const vec3_t p1, const vec3_t p2 ) {Distance500,14084
static ID_INLINE vec_t DistanceSquared( const vec3_t p1, const vec3_t p2 ) {DistanceSquared507,14225
static ID_INLINE void VectorNormalizeFast( vec3_t v )VectorNormalizeFast516,14528
static ID_INLINE void VectorInverse( vec3_t v ){VectorInverse527,14701
static ID_INLINE void CrossProduct( const vec3_t v1, const vec3_t v2, vec3_t cross ) {CrossProduct533,14798
#define random(random570,15786
#define crandom(crandom571,15842
#define MAX_TOKENLENGTH	MAX_TOKENLENGTH631,18339
#define TT_STRING	TT_STRING635,18402
#define TT_LITERAL	TT_LITERAL636,18438
#define TT_NUMBER	TT_NUMBER637,18476
#define TT_NAME	TT_NAME638,18512
#define TT_PUNCTUATION	TT_PUNCTUATION639,18545
typedef struct pc_token_spc_token_s642,18598
	int type;type644,18626
	int subtype;subtype645,18637
	int intvalue;intvalue646,18651
	float floatvalue;floatvalue647,18666
	char string[MAX_TOKENLENGTH];string648,18685
} pc_token_t;pc_token_t649,18716
	FS_READ,FS_READ672,19441
	FS_WRITE,FS_WRITE673,19451
	FS_APPEND,FS_APPEND674,19462
	FS_APPEND_SYNCFS_APPEND_SYNC675,19474
} fsMode_t;fsMode_t676,19490
	FS_SEEK_CUR,FS_SEEK_CUR679,19518
	FS_SEEK_END,FS_SEEK_END680,19532
	FS_SEEK_SETFS_SEEK_SET681,19546
} fsOrigin_t;fsOrigin_t682,19559
	byte	b0;b0719,20747
	byte	b1;b1720,20757
	byte	b2;b2721,20767
	byte	b3;b3722,20777
	byte	b4;b4723,20787
	byte	b5;b5724,20797
	byte	b6;b6725,20807
	byte	b7;b7726,20817
} qint64;qint64727,20827
#define TRUNCATE_LENGTH	TRUNCATE_LENGTH744,21225
#define	CVAR_ARCHIVE	CVAR_ARCHIVE776,22354
#define	CVAR_USERINFO	CVAR_USERINFO779,22508
#define	CVAR_SERVERINFO	CVAR_SERVERINFO780,22572
#define	CVAR_SYSTEMINFO	CVAR_SYSTEMINFO781,22641
#define	CVAR_INIT	CVAR_INIT782,22717
#define	CVAR_LATCH	CVAR_LATCH784,22831
#define	CVAR_ROM	CVAR_ROM789,23073
#define	CVAR_USER_CREATED	CVAR_USER_CREATED790,23141
#define	CVAR_TEMP	CVAR_TEMP791,23199
#define CVAR_CHEAT	CVAR_CHEAT792,23288
#define CVAR_NORESTART	CVAR_NORESTART793,23358
#define CVAR_SERVER_CREATED	CVAR_SERVER_CREATED795,23434
#define CVAR_NONEXISTENT	CVAR_NONEXISTENT796,23524
typedef struct cvar_s {cvar_s799,23654
	char			*name;name800,23678
	char			*string;string801,23693
	char			*resetString;		// cvar_restart will reset to this valueresetString802,23710
	char			*latchedString;		// for CVAR_LATCH varslatchedString803,23774
	int				flags;flags804,23822
	qboolean	modified;			// set each time the cvar is changedmodified805,23837
	int				modificationCount;	// incremented each time the cvar is changedmodificationCount806,23896
	float			value;				// atof( string )value807,23968
	int				integer;			// atoi( string )integer808,24005
	qboolean	validate;validate809,24042
	qboolean	integral;integral810,24062
	float			min;min811,24082
	float			max;max812,24096
	struct cvar_s *next;next813,24110
	struct cvar_s *hashNext;hashNext814,24132
} cvar_t;cvar_t815,24158
#define	MAX_CVAR_VALUE_STRING	MAX_CVAR_VALUE_STRING817,24169
typedef int	cvarHandle_t;cvarHandle_t819,24204
	cvarHandle_t	handle;handle824,24372
	int			modificationCount;modificationCount825,24394
	float		value;value826,24420
	int			integer;integer827,24435
	char		string[MAX_CVAR_VALUE_STRING];string828,24451
} vmCvar_t;vmCvar_t829,24489
#define	PLANE_X	PLANE_X843,24787
#define	PLANE_Y	PLANE_Y844,24807
#define	PLANE_Z	PLANE_Z845,24827
#define	PLANE_NON_AXIAL	PLANE_NON_AXIAL846,24847
#define PlaneTypeForNormal(PlaneTypeForNormal855,24937
typedef struct cplane_s {cplane_s859,25151
	vec3_t	normal;normal860,25177
	float	dist;dist861,25193
	byte	type;			// for fast side tests: 0,1,2 = axial, 3 = nonaxialtype862,25206
	byte	signbits;		// signx + (signy<<1) + (signz<<2), used as lookup during collisionsignbits863,25272
	byte	pad[2];pad864,25357
} cplane_t;cplane_t865,25371
	qboolean	allsolid;	// if true, plane is not validallsolid870,25463
	qboolean	startsolid;	// if true, the initial point was in a solid areastartsolid871,25514
	float		fraction;	// time completed, 1.0 = didn't hit anythingfraction872,25586
	vec3_t		endpos;		// final positionendpos873,25649
	cplane_t	plane;		// surface normal at impact, transformed to world spaceplane874,25685
	int			surfaceFlags;	// surface hitsurfaceFlags875,25759
	int			contents;	// contents on other side of surface hitcontents876,25795
	int			entityNum;	// entity the contacted sirface is a part ofentityNum877,25853
} trace_t;trace_t878,25916
	int		firstPoint;firstPoint886,26092
	int		numPoints;numPoints887,26110
} markFragment_t;markFragment_t888,26127
	vec3_t		origin;origin893,26165
	vec3_t		axis[3];axis894,26182
} orientation_t;orientation_t895,26200
#define KEYCATCH_CONSOLE	KEYCATCH_CONSOLE902,26410
#define	KEYCATCH_UI	KEYCATCH_UI903,26443
#define	KEYCATCH_MESSAGE	KEYCATCH_MESSAGE904,26474
#define	KEYCATCH_CGAME	KEYCATCH_CGAME905,26507
	CHAN_AUTO,CHAN_AUTO912,26685
	CHAN_LOCAL,		// menu sounds, etcCHAN_LOCAL913,26697
	CHAN_WEAPON,CHAN_WEAPON914,26731
	CHAN_VOICE,CHAN_VOICE915,26745
	CHAN_ITEM,CHAN_ITEM916,26758
	CHAN_BODY,CHAN_BODY917,26770
	CHAN_LOCAL_SOUND,	// chat messages, etcCHAN_LOCAL_SOUND918,26782
	CHAN_ANNOUNCER		// announcer voices, etcCHAN_ANNOUNCER919,26823
} soundChannel_t;soundChannel_t920,26865
#define	ANGLE2SHORT(ANGLE2SHORT931,27079
#define	SHORT2ANGLE(SHORT2ANGLE932,27133
#define	SNAPFLAG_RATE_DELAYED	SNAPFLAG_RATE_DELAYED934,27177
#define	SNAPFLAG_NOT_ACTIVE	SNAPFLAG_NOT_ACTIVE935,27209
#define SNAPFLAG_SERVERCOUNT	SNAPFLAG_SERVERCOUNT936,27291
#define	MAX_CLIENTS	MAX_CLIENTS941,27409
#define MAX_LOCATIONS	MAX_LOCATIONS942,27453
#define	GENTITYNUM_BITS	GENTITYNUM_BITS944,27480
#define	MAX_GENTITIES	MAX_GENTITIES945,27540
#define	ENTITYNUM_NONE	ENTITYNUM_NONE950,27740
#define	ENTITYNUM_WORLD	ENTITYNUM_WORLD951,27782
#define	ENTITYNUM_MAX_NORMAL	ENTITYNUM_MAX_NORMAL952,27825
#define	MAX_MODELS	MAX_MODELS955,27874
#define	MAX_SOUNDS	MAX_SOUNDS956,27941
#define	MAX_CONFIGSTRINGS	MAX_CONFIGSTRINGS959,28008
#define	CS_SERVERINFO	CS_SERVERINFO963,28180
#define	CS_SYSTEMINFO	CS_SYSTEMINFO964,28254
#define	RESERVED_CONFIGSTRINGS	RESERVED_CONFIGSTRINGS966,28365
#define	MAX_GAMESTATE_CHARS	MAX_GAMESTATE_CHARS968,28452
	int			stringOffsets[MAX_CONFIGSTRINGS];stringOffsets970,28503
	char		stringData[MAX_GAMESTATE_CHARS];stringData971,28544
	int			dataCount;dataCount972,28584
} gameState_t;gameState_t973,28602
#define	MAX_STATS	MAX_STATS978,28699
#define	MAX_PERSISTANT	MAX_PERSISTANT979,28723
#define	MAX_POWERUPS	MAX_POWERUPS980,28751
#define	MAX_WEAPONS	MAX_WEAPONS981,28777
#define	MAX_PS_EVENTS	MAX_PS_EVENTS983,28806
#define PS_PMOVEFRAMECOUNTBITS	PS_PMOVEFRAMECOUNTBITS985,28833
typedef struct playerState_s {playerState_s997,29321
	int			commandTime;	// cmd->serverTime of last executed commandcommandTime998,29352
	int			pm_type;pm_type999,29416
	int			bobCycle;		// for view bobbing and footstep generationbobCycle1000,29432
	int			pm_flags;		// ducked, jump_held, etcpm_flags1001,29494
	int			pm_time;pm_time1002,29538
	vec3_t		origin;origin1004,29555
	vec3_t		velocity;velocity1005,29572
	int			weaponTime;weaponTime1006,29591
	int			gravity;gravity1007,29610
	int			speed;speed1008,29626
	int			delta_angles[3];	// add to command angles to get view directiondelta_angles1009,29640
	int			groundEntityNum;// ENTITYNUM_NONE = in airgroundEntityNum1012,29777
	int			legsTimer;		// don't change low priority animations until this runs outlegsTimer1014,29828
	int			legsAnim;		// mask off ANIM_TOGGLEBITlegsAnim1015,29907
	int			torsoTimer;		// don't change low priority animations until this runs outtorsoTimer1017,29953
	int			torsoAnim;		// mask off ANIM_TOGGLEBITtorsoAnim1018,30033
	int			movementDir;	// a number 0 to 7 that represents the reletive anglemovementDir1020,30080
	vec3_t		grapplePoint;	// location of grapple to pull towards if PMF_GRAPPLE_PULLgrapplePoint1025,30325
	int			eFlags;			// copied to entityState_t->eFlagseFlags1027,30408
	int			eventSequence;	// pmove generated eventseventSequence1029,30461
	int			events[MAX_PS_EVENTS];events1030,30509
	int			eventParms[MAX_PS_EVENTS];eventParms1031,30539
	int			externalEvent;	// events set on player from another sourceexternalEvent1033,30574
	int			externalEventParm;externalEventParm1034,30640
	int			externalEventTime;externalEventTime1035,30666
	int			clientNum;		// ranges from 0 to MAX_CLIENTS-1clientNum1037,30693
	int			weapon;			// copied to entityState_t->weaponweapon1038,30746
	int			weaponstate;weaponstate1039,30798
	vec3_t		viewangles;		// for fixed viewsviewangles1041,30819
	int			viewheight;viewheight1042,30860
	int			damageEvent;	// when it changes, latch the other parmsdamageEvent1045,30900
	int			damageYaw;damageYaw1046,30962
	int			damagePitch;damagePitch1047,30980
	int			damageCount;damageCount1048,31000
	int			stats[MAX_STATS];stats1050,31021
	int			persistant[MAX_PERSISTANT];	// stats that aren't cleared on deathpersistant1051,31046
	int			powerups[MAX_POWERUPS];	// level.time that the powerup runs outpowerups1052,31119
	int			ammo[MAX_WEAPONS];ammo1053,31190
	int			generic1;generic11055,31217
	int			loopSound;loopSound1056,31234
	int			jumppad_ent;	// jumppad entity hit this framejumppad_ent1057,31252
	int			ping;			// server to game info for scoreboardping1060,31347
	int			pmove_framecount;	// FIXME: don't transmit over the networkpmove_framecount1061,31400
	int			jumppad_frame;jumppad_frame1062,31467
	int			entityEventSequence;entityEventSequence1063,31489
} playerState_t;playerState_t1064,31517
#define	BUTTON_ATTACK	BUTTON_ATTACK1074,31738
#define	BUTTON_TALK	BUTTON_TALK1075,31763
#define	BUTTON_USE_HOLDABLE	BUTTON_USE_HOLDABLE1076,31835
#define	BUTTON_GESTURE	BUTTON_GESTURE1077,31865
#define	BUTTON_WALKING	BUTTON_WALKING1078,31891
#define BUTTON_AFFIRMATIVE	BUTTON_AFFIRMATIVE1083,32179
#define	BUTTON_NEGATIVE	BUTTON_NEGATIVE1084,32209
#define BUTTON_GETFLAG	BUTTON_GETFLAG1086,32238
#define BUTTON_GUARDBASE	BUTTON_GUARDBASE1087,32266
#define BUTTON_PATROL	BUTTON_PATROL1088,32295
#define BUTTON_FOLLOWME	BUTTON_FOLLOWME1089,32322
#define	BUTTON_ANY	BUTTON_ANY1091,32353
#define	MOVE_RUN	MOVE_RUN1093,32404
typedef struct usercmd_s {usercmd_s1097,32578
	int				serverTime;serverTime1098,32605
	int				angles[3];angles1099,32625
	int 			buttons;buttons1100,32644
	byte			weapon;           // weapon weapon1101,32661
	signed char	forwardmove, rightmove, upmove;forwardmove1102,32698
	signed char	forwardmove, rightmove, upmove;rightmove1102,32698
	signed char	forwardmove, rightmove, upmove;upmove1102,32698
} usercmd_t;usercmd_t1103,32743
#define	SOLID_BMODEL	SOLID_BMODEL1108,32907
	TR_STATIONARY,TR_STATIONARY1111,32953
	TR_INTERPOLATE,				// non-parametric, but interpolate between snapshotsTR_INTERPOLATE1112,32969
	TR_LINEAR,TR_LINEAR1113,33042
	TR_LINEAR_STOP,TR_LINEAR_STOP1114,33054
	TR_SINE,					// value = base + sin( time / duration ) * deltaTR_SINE1115,33071
	TR_GRAVITYTR_GRAVITY1116,33134
} trType_t;trType_t1117,33146
	trType_t	trType;trType1120,33176
	int		trTime;trTime1121,33194
	int		trDuration;			// if non 0, trTime + trDuration = stop timetrDuration1122,33208
	vec3_t	trBase;trBase1123,33273
	vec3_t	trDelta;			// velocity, etctrDelta1124,33289
} trajectory_t;trajectory_t1125,33325
typedef struct entityState_s {entityState_s1134,33663
	int		number;			// entity indexnumber1135,33694
	int		eType;			// entityType_teType1136,33726
	int		eFlags;eFlags1137,33757
	trajectory_t	pos;	// for calculating positionpos1139,33772
	trajectory_t	apos;	// for calculating anglesapos1140,33819
	int		time;time1142,33866
	int		time2;time21143,33878
	vec3_t	origin;origin1145,33892
	vec3_t	origin2;origin21146,33908
	vec3_t	angles;angles1148,33926
	vec3_t	angles2;angles21149,33942
	int		otherEntityNum;	// shotgun sources, etcotherEntityNum1151,33960
	int		otherEntityNum2;otherEntityNum21152,34006
	int		groundEntityNum;	// -1 = in airgroundEntityNum1154,34030
	int		constantLight;	// r + (g<<8) + (b<<16) + (intensity<<24)constantLight1156,34069
	int		loopSound;		// constantly loop this soundloopSound1157,34132
	int		modelindex;modelindex1159,34181
	int		modelindex2;modelindex21160,34199
	int		clientNum;		// 0 to (MAX_CLIENTS - 1), for players and corpsesclientNum1161,34218
	int		frame;frame1162,34287
	int		solid;			// for client side prediction, trap_linkentity sets this properlysolid1164,34301
	int		event;			// impulse events -- muzzle flashes, footsteps, etcevent1166,34383
	int		eventParm;eventParm1167,34450
	int		powerups;		// bit flagspowerups1170,34484
	int		weapon;			// determines weapon and flash model, etcweapon1171,34514
	int		legsAnim;		// mask off ANIM_TOGGLEBITlegsAnim1172,34572
	int		torsoAnim;		// mask off ANIM_TOGGLEBITtorsoAnim1173,34616
	int		generic1;generic11175,34662
} entityState_t;entityState_t1176,34678
	CA_UNINITIALIZED,CA_UNINITIALIZED1179,34711
	CA_DISCONNECTED, 	// not talking to a serverCA_DISCONNECTED1180,34730
	CA_AUTHORIZING,		// not used any more, was checking cd key CA_AUTHORIZING1181,34776
	CA_CONNECTING,		// sending request packets to the serverCA_CONNECTING1182,34837
	CA_CHALLENGING,		// sending challenge packets to the serverCA_CHALLENGING1183,34895
	CA_CONNECTED,		// netchan_t established, getting gamestateCA_CONNECTED1184,34956
	CA_LOADING,			// only during cgame initialization, never during main loopCA_LOADING1185,35016
	CA_PRIMED,			// got gamestate, waiting for first frameCA_PRIMED1186,35091
	CA_ACTIVE,			// game views should be displayedCA_ACTIVE1187,35147
	CA_CINEMATIC		// playing a cinematic or a static pic, not connected to a serverCA_CINEMATIC1188,35195
} connstate_t;connstate_t1189,35276
#define GLYPH_START GLYPH_START1193,35310
#define GLYPH_END GLYPH_END1194,35332
#define GLYPH_CHARSTART GLYPH_CHARSTART1195,35354
#define GLYPH_CHAREND GLYPH_CHAREND1196,35381
#define GLYPHS_PER_FONT GLYPHS_PER_FONT1197,35407
  int height;       // number of scan linesheight1199,35476
  int top;          // top of glyph in buffertop1200,35520
  int bottom;       // bottom of glyph in bufferbottom1201,35566
  int pitch;        // width for copyingpitch1202,35615
  int xSkip;        // x adjustmentxSkip1203,35656
  int imageWidth;   // width of actual imageimageWidth1204,35692
  int imageHeight;  // height of actual imageimageHeight1205,35737
  float s;          // x offset in image where glyph startss1206,35783
  float t;          // y offset in image where glyph startst1207,35843
  float s2;s21208,35903
  float t2;t21209,35915
  qhandle_t glyph;  // handle to the shader with the glyphglyph1210,35927
  char shaderName[32];shaderName1211,35986
} glyphInfo_t;glyphInfo_t1212,36009
  glyphInfo_t glyphs [GLYPHS_PER_FONT];glyphs1215,36042
  float glyphScale;glyphScale1216,36082
  char name[MAX_QPATH];name1217,36102
} fontInfo_t;fontInfo_t1218,36126
#define Square(Square1220,36141
typedef struct qtime_s {qtime_s1226,36233
	int tm_sec;     /* seconds after the minute - [0,59] */tm_sec1227,36258
	int tm_min;     /* minutes after the hour - [0,59] */tm_min1228,36315
	int tm_hour;    /* hours since midnight - [0,23] */tm_hour1229,36370
	int tm_mday;    /* day of the month - [1,31] */tm_mday1230,36423
	int tm_mon;     /* months since January - [0,11] */tm_mon1231,36472
	int tm_year;    /* years since 1900 */tm_year1232,36525
	int tm_wday;    /* days since Sunday - [0,6] */tm_wday1233,36565
	int tm_yday;    /* days since January 1 - [0,365] */tm_yday1234,36614
	int tm_isdst;   /* daylight savings time flag */tm_isdst1235,36668
} qtime_t;qtime_t1236,36718
#define AS_LOCAL	AS_LOCAL1241,36796
#define AS_MPLAYER	AS_MPLAYER1242,36817
#define AS_GLOBAL	AS_GLOBAL1243,36839
#define AS_FAVORITES	AS_FAVORITES1244,36861
	FMV_IDLE,FMV_IDLE1249,36921
	FMV_PLAY,		// playFMV_PLAY1250,36932
	FMV_EOF,		// all other conditions, i.e. stop/EOF/abortFMV_EOF1251,36952
	FMV_ID_BLT,FMV_ID_BLT1252,37008
	FMV_ID_IDLE,FMV_ID_IDLE1253,37021
	FMV_LOOPED,FMV_LOOPED1254,37035
	FMV_ID_WAITFMV_ID_WAIT1255,37048
} e_status;e_status1256,37061
typedef enum _flag_status {_flag_status1258,37074
	FLAG_ATBASE = 0,FLAG_ATBASE1259,37102
	FLAG_TAKEN,			// CTFFLAG_TAKEN1260,37120
	FLAG_TAKEN_RED,		// One Flag CTFFLAG_TAKEN_RED1261,37142
	FLAG_TAKEN_BLUE,	// One Flag CTFFLAG_TAKEN_BLUE1262,37176
	FLAG_DROPPEDFLAG_DROPPED1263,37210
} flagStatus_t;flagStatus_t1264,37224
#define	MAX_GLOBAL_SERVERS	MAX_GLOBAL_SERVERS1268,37243
#define	MAX_OTHER_SERVERS	MAX_OTHER_SERVERS1269,37278
#define MAX_PINGREQUESTS	MAX_PINGREQUESTS1270,37312
#define MAX_SERVERSTATUSREQUESTS	MAX_SERVERSTATUSREQUESTS1271,37344
#define SAY_ALL	SAY_ALL1273,37381
#define SAY_TEAM	SAY_TEAM1274,37400
#define SAY_TELL	SAY_TELL1275,37419
#define CDKEY_LEN CDKEY_LEN1277,37439
#define CDCHKSUM_LEN CDCHKSUM_LEN1278,37460

qcommon/md5.c,817
typedef struct MD5Context {MD5Context20,748
	uint32_t buf[4];buf21,776
	uint32_t bits[2];bits22,794
	unsigned char in[64];in23,813
} MD5_CTX;MD5_CTX24,836
	#define byteReverse(byteReverse27,870
	static void byteReverse(unsigned char *buf, unsigned longs)byteReverse34,1052
static void MD5Init(struct MD5Context *ctx)MD5Init51,1440
#define F1(F164,1754
#define F2(F265,1794
#define F3(F366,1826
#define F4(F467,1858
#define MD5STEP(MD5STEP70,1947
static void MD5Transform(uint32_t buf[4],MD5Transform78,2262
static void MD5Update(struct MD5Context *ctx, unsigned char const *buf,MD5Update166,5991
static void MD5Final(struct MD5Context *ctx, unsigned char *digest)MD5Final216,7052
char *Com_MD5File( const char *fn, int length, const char *prefix, int prefix_len )Com_MD5File260,8237

qcommon/cm_public.h,0

qcommon/qfiles.h,14505
#define __QFILES_H____QFILES_H__23,995
#define __attribute__(__attribute__33,1205
#define	SHADER_MAX_VERTEXES	SHADER_MAX_VERTEXES38,1296
#define	SHADER_MAX_INDEXES	SHADER_MAX_INDEXES39,1329
#define	MAX_QPATH	MAX_QPATH43,1429
#define	VM_MAGIC	VM_MAGIC53,1617
#define	VM_MAGIC_VER2	VM_MAGIC_VER254,1647
	int		vmMagic;vmMagic56,1697
	int		instructionCount;instructionCount58,1713
	int		codeOffset;codeOffset60,1738
	int		codeLength;codeLength61,1756
	int		dataOffset;dataOffset63,1775
	int		dataLength;dataLength64,1793
	int		litLength;			// ( dataLength - litLength ) should be byteswapped on loadlitLength65,1811
	int		bssLength;			// zero filled memory appended to datalengthbssLength66,1890
	int		jtrgLength;			// number of jump table targetsjtrgLength69,1994
} vmHeader_t;vmHeader_t70,2046
#define MD3_IDENT	MD3_IDENT80,2248
#define MD3_VERSION	MD3_VERSION81,2303
#define MD3_MAX_LODS	MD3_MAX_LODS84,2339
#define	MD3_MAX_TRIANGLES	MD3_MAX_TRIANGLES85,2363
#define MD3_MAX_VERTS	MD3_MAX_VERTS86,2409
#define MD3_MAX_SHADERS	MD3_MAX_SHADERS87,2452
#define MD3_MAX_FRAMES	MD3_MAX_FRAMES88,2497
#define	MD3_MAX_SURFACES	MD3_MAX_SURFACES89,2539
#define MD3_MAX_TAGS	MD3_MAX_TAGS90,2581
#define	MD3_XYZ_SCALE	MD3_XYZ_SCALE93,2638
typedef struct md3Frame_s {md3Frame_s95,2671
	vec3_t		bounds[2];bounds96,2699
	vec3_t		localOrigin;localOrigin97,2719
	float		radius;radius98,2741
	char		name[16];name99,2757
} md3Frame_t;md3Frame_t100,2774
typedef struct md3Tag_s {md3Tag_s102,2789
	char		name[MAX_QPATH];	// tag namename103,2815
	vec3_t		origin;origin104,2851
	vec3_t		axis[3];axis105,2868
} md3Tag_t;md3Tag_t106,2886
	int		ident;				// ident119,3197
	char	name[MAX_QPATH];	// polyset namename121,3218
	int		flags;flags123,3258
	int		numFrames;			// all surfaces in a model should have the samenumFrames124,3271
	int		numShaders;			// all surfaces in a model should have the samenumShaders126,3339
	int		numVerts;numVerts127,3407
	int		numTriangles;numTriangles129,3424
	int		ofsTriangles;ofsTriangles130,3444
	int		ofsShaders;			// offset from start of md3Surface_tofsShaders132,3465
	int		ofsSt;				// texture coords are common for all framesofsSt133,3522
	int		ofsXyzNormals;		// numVerts * numFramesofsXyzNormals134,3582
	int		ofsEnd;				// next surface followsofsEnd136,3629
} md3Surface_t;md3Surface_t137,3670
	char			name[MAX_QPATH];name140,3704
	int				shaderIndex;	// for in-game useshaderIndex141,3729
} md3Shader_t;md3Shader_t142,3769
	int			indexes[3];indexes145,3802
} md3Triangle_t;md3Triangle_t146,3821
	float		st[2];st149,3856
} md3St_t;md3St_t150,3871
	short		xyz[3];xyz153,3900
	short		normal;normal154,3916
} md3XyzNormal_t;md3XyzNormal_t155,3932
	int			ident;ident158,3968
	int			version;version159,3982
	char		name[MAX_QPATH];	// model namename161,3999
	int			flags;flags163,4038
	int			numFrames;numFrames165,4053
	int			numTags;			numTags166,4071
	int			numSurfaces;numSurfaces167,4090
	int			numSkins;numSkins169,4111
	int			ofsFrames;			// offset for first frameofsFrames171,4129
	int			ofsTags;			// numFrames * numTagsofsTags172,4175
	int			ofsSurfaces;		// first surface, others followofsSurfaces173,4216
	int			ofsEnd;				// end of fileofsEnd175,4270
} md3Header_t;md3Header_t176,4303
#define MD4_IDENT	MD4_IDENT186,4502
#define MD4_VERSION	MD4_VERSION187,4557
#define	MD4_MAX_BONES	MD4_MAX_BONES188,4581
	int			boneIndex;		// these are indexes into the boneReferences,boneIndex191,4626
	float		   boneWeight;		// not the global per-frame bone listboneWeight192,4691
	vec3_t		offset;offset193,4753
} md4Weight_t;md4Weight_t194,4770
	vec3_t		normal;normal197,4803
	vec2_t		texCoords;texCoords198,4820
	int			numWeights;numWeights199,4840
	md4Weight_t	weights[1];		// variable sizedweights200,4859
} md4Vertex_t;md4Vertex_t201,4903
	int			indexes[3];indexes204,4936
} md4Triangle_t;md4Triangle_t205,4955
	int			ident;ident208,4990
	char		name[MAX_QPATH];	// polyset namename210,5005
	char		shader[MAX_QPATH];shader211,5045
	int			shaderIndex;		// for in-game useshaderIndex212,5071
	int			ofsHeader;			// this will be a negative numberofsHeader214,5112
	int			numVerts;numVerts216,5167
	int			ofsVerts;ofsVerts217,5184
	int			numTriangles;numTriangles219,5202
	int			ofsTriangles;ofsTriangles220,5223
	int			numBoneReferences;numBoneReferences227,5547
	int			ofsBoneReferences;ofsBoneReferences228,5573
	int			ofsEnd;				// next surface followsofsEnd230,5600
} md4Surface_t;md4Surface_t231,5642
	float		matrix[3][4];matrix234,5676
} md4Bone_t;md4Bone_t235,5698
	vec3_t		bounds[2];			// bounds of all surfaces of all LOD's for this framebounds238,5729
	vec3_t		localOrigin;		// midpoint of bounds, used for sphere culllocalOrigin239,5805
	float		radius;				// dist from localOrigin to cornerradius240,5872
	md4Bone_t	bones[1];			// [numBones]bones241,5926
} md4Frame_t;md4Frame_t242,5963
	int			numSurfaces;numSurfaces245,5995
	int			ofsSurfaces;		// first surface, others followofsSurfaces246,6015
	int			ofsEnd;				// next lod followsofsEnd247,6068
} md4LOD_t;md4LOD_t248,6106
	int			ident;ident251,6136
	int			version;version252,6150
	char		name[MAX_QPATH];	// model namename254,6167
	int			numFrames;numFrames257,6262
	int			numBones;numBones258,6280
	int			ofsBoneNames;		// char	name[ MAX_QPATH ]ofsBoneNames259,6297
	int			ofsFrames;			// md4Frame_t[numFrames]ofsFrames260,6345
	int			numLODs;numLODs263,6457
	int			ofsLODs;ofsLODs264,6473
	int			ofsEnd;				// end of fileofsEnd266,6490
} md4Header_t;md4Header_t267,6523
#define MDR_IDENT	MDR_IDENT290,7438
#define MDR_VERSION	MDR_VERSION291,7491
#define	MDR_MAX_BONES	MDR_MAX_BONES292,7513
	int			boneIndex;	// these are indexes into the boneReferences,boneIndex295,7557
	float		   boneWeight;		// not the global per-frame bone listboneWeight296,7621
	vec3_t		offset;offset297,7683
} mdrWeight_t;mdrWeight_t298,7700
	vec3_t		normal;normal301,7733
	vec2_t		texCoords;texCoords302,7750
	int			numWeights;numWeights303,7770
	mdrWeight_t	weights[1];		// variable sizedweights304,7789
} mdrVertex_t;mdrVertex_t305,7833
	int			indexes[3];indexes308,7866
} mdrTriangle_t;mdrTriangle_t309,7885
	int			ident;ident312,7920
	char		name[MAX_QPATH];	// polyset namename314,7935
	char		shader[MAX_QPATH];shader315,7975
	int			shaderIndex;	// for in-game useshaderIndex316,8001
	int			ofsHeader;	// this will be a negative numberofsHeader318,8041
	int			numVerts;numVerts320,8094
	int			ofsVerts;ofsVerts321,8111
	int			numTriangles;numTriangles323,8129
	int			ofsTriangles;ofsTriangles324,8150
	int			numBoneReferences;numBoneReferences331,8474
	int			ofsBoneReferences;ofsBoneReferences332,8500
	int			ofsEnd;		// next surface followsofsEnd334,8527
} mdrSurface_t;mdrSurface_t335,8567
	float		matrix[3][4];matrix338,8601
} mdrBone_t;mdrBone_t339,8623
	vec3_t		bounds[2];		// bounds of all surfaces of all LOD's for this framebounds342,8654
	vec3_t		localOrigin;		// midpoint of bounds, used for sphere culllocalOrigin343,8729
	float		radius;			// dist from localOrigin to cornerradius344,8796
	char		name[16];name345,8849
	mdrBone_t	bones[1];		// [numBones]bones346,8866
} mdrFrame_t;mdrFrame_t347,8902
        unsigned char Comp[24]; // MC_COMP_BYTES is in MatComp.h, but don't want to coupleComp350,8934
} mdrCompBone_t;mdrCompBone_t351,9025
        vec3_t          bounds[2];		// bounds of all surfaces of all LOD's for this framebounds354,9060
        vec3_t          localOrigin;		// midpoint of bounds, used for sphere culllocalOrigin355,9150
        float           radius;			// dist from localOrigin to cornerradius356,9232
        mdrCompBone_t   bones[1];		// [numBones]bones357,9301
} mdrCompFrame_t;mdrCompFrame_t358,9350
	int			numSurfaces;numSurfaces361,9386
	int			ofsSurfaces;		// first surface, others followofsSurfaces362,9406
	int			ofsEnd;				// next lod followsofsEnd363,9459
} mdrLOD_t;mdrLOD_t364,9497
        int                     boneIndex;boneIndex367,9527
        char            name[32];name368,9570
} mdrTag_t;mdrTag_t369,9604
	int			ident;ident372,9634
	int			version;version373,9648
	char		name[MAX_QPATH];	// model namename375,9665
	int			numFrames;numFrames378,9760
	int			numBones;numBones379,9778
	int			ofsFrames;			// mdrFrame_t[numFrames]ofsFrames380,9795
	int			numLODs;numLODs383,9907
	int			ofsLODs;ofsLODs384,9923
        int                     numTags;numTags386,9940
        int                     ofsTags;ofsTags387,9981
	int			ofsEnd;				// end of fileofsEnd389,10023
} mdrHeader_t;mdrHeader_t390,10056
#define BSP_IDENT	BSP_IDENT403,10267
#define BSP_VERSION	BSP_VERSION406,10347
#define	MAX_MAP_MODELS	MAX_MAP_MODELS411,10498
#define	MAX_MAP_BRUSHES	MAX_MAP_BRUSHES412,10528
#define	MAX_MAP_ENTITIES	MAX_MAP_ENTITIES413,10560
#define	MAX_MAP_ENTSTRING	MAX_MAP_ENTSTRING414,10591
#define	MAX_MAP_SHADERS	MAX_MAP_SHADERS415,10625
#define	MAX_MAP_AREAS	MAX_MAP_AREAS417,10657
#define	MAX_MAP_FOGS	MAX_MAP_FOGS418,10732
#define	MAX_MAP_PLANES	MAX_MAP_PLANES419,10760
#define	MAX_MAP_NODES	MAX_MAP_NODES420,10792
#define	MAX_MAP_BRUSHSIDES	MAX_MAP_BRUSHSIDES421,10823
#define	MAX_MAP_LEAFS	MAX_MAP_LEAFS422,10858
#define	MAX_MAP_LEAFFACES	MAX_MAP_LEAFFACES423,10889
#define	MAX_MAP_LEAFBRUSHES MAX_MAP_LEAFBRUSHES424,10923
#define	MAX_MAP_PORTALS	MAX_MAP_PORTALS425,10959
#define	MAX_MAP_LIGHTING	MAX_MAP_LIGHTING426,10992
#define	MAX_MAP_LIGHTGRID	MAX_MAP_LIGHTGRID427,11026
#define	MAX_MAP_VISIBILITY	MAX_MAP_VISIBILITY428,11061
#define	MAX_MAP_DRAW_SURFS	MAX_MAP_DRAW_SURFS430,11098
#define	MAX_MAP_DRAW_VERTS	MAX_MAP_DRAW_VERTS431,11133
#define	MAX_MAP_DRAW_INDEXES	MAX_MAP_DRAW_INDEXES432,11168
#define	MAX_KEY	MAX_KEY436,11254
#define	MAX_VALUE	MAX_VALUE437,11276
#define	ANGLE_UP	ANGLE_UP440,11379
#define	ANGLE_DOWN	ANGLE_DOWN441,11401
#define	LIGHTMAP_WIDTH	LIGHTMAP_WIDTH443,11426
#define	LIGHTMAP_HEIGHT	LIGHTMAP_HEIGHT444,11454
#define MAX_WORLD_COORD	MAX_WORLD_COORD446,11484
#define MIN_WORLD_COORD	MIN_WORLD_COORD447,11522
#define WORLD_SIZE	WORLD_SIZE448,11561
	int		fileofs, filelen;fileofs454,11720
	int		fileofs, filelen;filelen454,11720
} lump_t;lump_t455,11744
#define	LUMP_ENTITIES	LUMP_ENTITIES457,11755
#define	LUMP_SHADERS	LUMP_SHADERS458,11780
#define	LUMP_PLANES	LUMP_PLANES459,11804
#define	LUMP_NODES	LUMP_NODES460,11828
#define	LUMP_LEAFS	LUMP_LEAFS461,11851
#define	LUMP_LEAFSURFACES	LUMP_LEAFSURFACES462,11874
#define	LUMP_LEAFBRUSHES	LUMP_LEAFBRUSHES463,11902
#define	LUMP_MODELS	LUMP_MODELS464,11929
#define	LUMP_BRUSHES	LUMP_BRUSHES465,11953
#define	LUMP_BRUSHSIDES	LUMP_BRUSHSIDES466,11977
#define	LUMP_DRAWVERTS	LUMP_DRAWVERTS467,12004
#define	LUMP_DRAWINDEXES	LUMP_DRAWINDEXES468,12031
#define	LUMP_FOGS	LUMP_FOGS469,12059
#define	LUMP_SURFACES	LUMP_SURFACES470,12082
#define	LUMP_LIGHTMAPS	LUMP_LIGHTMAPS471,12108
#define	LUMP_LIGHTGRID	LUMP_LIGHTGRID472,12135
#define	LUMP_VISIBILITY	LUMP_VISIBILITY473,12162
#define	HEADER_LUMPS	HEADER_LUMPS474,12190
	int			ident;ident477,12233
	int			version;version478,12247
	lump_t		lumps[HEADER_LUMPS];lumps480,12264
} dheader_t;dheader_t481,12294
	float		mins[3], maxs[3];mins484,12325
	float		mins[3], maxs[3];maxs484,12325
	int			firstSurface, numSurfaces;firstSurface485,12351
	int			firstSurface, numSurfaces;numSurfaces485,12351
	int			firstBrush, numBrushes;firstBrush486,12385
	int			firstBrush, numBrushes;numBrushes486,12385
} dmodel_t;dmodel_t487,12416
	char		shader[MAX_QPATH];shader490,12446
	int			surfaceFlags;surfaceFlags491,12472
	int			contentFlags;contentFlags492,12493
} dshader_t;dshader_t493,12514
	float		normal[3];normal498,12595
	float		dist;dist499,12614
} dplane_t;dplane_t500,12628
	int			planeNum;planeNum503,12658
	int			children[2];	// negative numbers are -(leafs+1), not nodeschildren504,12675
	int			mins[3];		// for frustom cullingmins505,12741
	int			maxs[3];maxs506,12781
} dnode_t;dnode_t507,12797
	int			cluster;			// -1 = opaque cluster (do I still store these?)cluster510,12826
	int			area;area511,12893
	int			mins[3];			// for frustum cullingmins513,12907
	int			maxs[3];maxs514,12948
	int			firstLeafSurface;firstLeafSurface516,12965
	int			numLeafSurfaces;numLeafSurfaces517,12990
	int			firstLeafBrush;firstLeafBrush519,13015
	int			numLeafBrushes;numLeafBrushes520,13038
} dleaf_t;dleaf_t521,13061
	int			planeNum;			// positive plane side faces out of the leafplaneNum524,13090
	int			shaderNum;shaderNum525,13154
} dbrushside_t;dbrushside_t526,13172
	int			firstSide;firstSide529,13206
	int			numSides;numSides530,13224
	int			shaderNum;		// the shader that determines the contents flagsshaderNum531,13241
} dbrush_t;dbrush_t532,13309
	char		shader[MAX_QPATH];shader535,13339
	int			brushNum;brushNum536,13365
	int			visibleSide;	// the brush side that ray tests need to clip against (-1 == none)visibleSide537,13382
} dfog_t;dfog_t538,13469
	vec3_t		xyz;xyz541,13497
	float		st[2];st542,13511
	float		lightmap[2];lightmap543,13526
	vec3_t		normal;normal544,13547
	byte		color[4];color545,13564
} drawVert_t;drawVert_t546,13581
#define drawVert_t_cleared(drawVert_t_cleared548,13596
	MST_BAD,MST_BAD551,13712
	MST_PLANAR,MST_PLANAR552,13722
	MST_PATCH,MST_PATCH553,13735
	MST_TRIANGLE_SOUP,MST_TRIANGLE_SOUP554,13747
	MST_FLAREMST_FLARE555,13767
} mapSurfaceType_t;mapSurfaceType_t556,13778
	int			shaderNum;shaderNum559,13816
	int			fogNum;fogNum560,13834
	int			surfaceType;surfaceType561,13849
	int			firstVert;firstVert563,13870
	int			numVerts;numVerts564,13888
	int			firstIndex;firstIndex566,13906
	int			numIndexes;numIndexes567,13925
	int			lightmapNum;lightmapNum569,13945
	int			lightmapX, lightmapY;lightmapX570,13965
	int			lightmapX, lightmapY;lightmapY570,13965
	int			lightmapWidth, lightmapHeight;lightmapWidth571,13994
	int			lightmapWidth, lightmapHeight;lightmapHeight571,13994
	vec3_t		lightmapOrigin;lightmapOrigin573,14033
	vec3_t		lightmapVecs[3];	// for patches, [0] and [1] are lodboundslightmapVecs574,14058
	int			patchWidth;patchWidth576,14127
	int			patchHeight;patchHeight577,14146
} dsurface_t;dsurface_t578,14166

qcommon/net_ip.c,5112
typedef int socklen_t;socklen_t42,1395
#		define sa_family_t	sa_family_t44,1441
typedef unsigned short sa_family_t;sa_family_t46,1485
#	define EAGAIN	EAGAIN49,1530
#	define EADDRNOTAVAIL	EADDRNOTAVAIL50,1565
#	define EAFNOSUPPORT	EAFNOSUPPORT51,1605
#	define ECONNRESET	ECONNRESET52,1644
#	define socketError	socketError53,1680
static WSADATA	winsockdata;winsockdata55,1722
static qboolean	winsockInitialized = qfalse;winsockInitialized56,1750
#		define _BSD_SOCKLEN_T__BSD_SOCKLEN_T_62,1884
typedef int SOCKET;SOCKET83,2266
#	define INVALID_SOCKET	INVALID_SOCKET84,2286
#	define SOCKET_ERROR	SOCKET_ERROR85,2314
#	define closesocket	closesocket86,2341
#	define ioctlsocket	ioctlsocket87,2370
#	define socketError	socketError88,2399
static qboolean usingSocks = qfalse;usingSocks92,2437
static int networkingEnabled = 0;networkingEnabled93,2474
#define NET_ENABLEV4	NET_ENABLEV495,2509
#define NET_ENABLEV6	NET_ENABLEV696,2536
#define NET_PRIOV6	NET_PRIOV698,2661
#define NET_DISABLEMCAST	NET_DISABLEMCAST100,2729
static cvar_t	*net_enabled;net_enabled102,2760
static cvar_t	*net_socksEnabled;net_socksEnabled104,2789
static cvar_t	*net_socksServer;net_socksServer105,2822
static cvar_t	*net_socksPort;net_socksPort106,2854
static cvar_t	*net_socksUsername;net_socksUsername107,2884
static cvar_t	*net_socksPassword;net_socksPassword108,2918
static cvar_t	*net_ip;net_ip110,2953
static cvar_t	*net_ip6;net_ip6111,2976
static cvar_t	*net_port;net_port112,3000
static cvar_t	*net_port6;net_port6113,3025
static cvar_t	*net_mcast6addr;net_mcast6addr114,3051
static cvar_t	*net_mcast6iface;net_mcast6iface115,3082
static struct sockaddr	socksRelayAddr;socksRelayAddr117,3115
static SOCKET	ip_socket = INVALID_SOCKET;ip_socket119,3155
static SOCKET	ip6_socket = INVALID_SOCKET;ip6_socket120,3197
static SOCKET	socks_socket = INVALID_SOCKET;socks_socket121,3240
static SOCKET	multicast6_socket = INVALID_SOCKET;multicast6_socket122,3285
static struct ipv6_mreq curgroup;curgroup125,3387
static struct sockaddr_in6 boundto;boundto127,3457
  #define IF_NAMESIZE IF_NAMESIZE130,3514
#define NET_MULTICAST_IP6 NET_MULTICAST_IP6134,3656
#define	MAX_IPS	MAX_IPS136,3711
	char ifname[IF_NAMESIZE];ifname140,3749
	netadrtype_t type;type142,3778
	sa_family_t family;family143,3798
	struct sockaddr_storage addr;addr144,3819
	struct sockaddr_storage netmask;netmask145,3850
} nip_localaddr_t;nip_localaddr_t146,3884
static nip_localaddr_t localIP[MAX_IPS];localIP148,3904
static int numIP;numIP149,3945
char *NET_ErrorString( void ) {NET_ErrorString160,4111
static void NetadrToSockadr( netadr_t *a, struct sockaddr *s ) {NetadrToSockadr215,6303
static void SockadrToNetadr( struct sockaddr *s, netadr_t *a ) {SockadrToNetadr241,7259
static struct addrinfo *SearchAddrInfo(struct addrinfo *hints, sa_family_t family)SearchAddrInfo257,7739
static qboolean Sys_StringToSockaddr(const char *s, struct sockaddr *sadr, int sadr_len, sa_family_t family)Sys_StringToSockaddr275,7995
static void Sys_SockaddrToString(char *dest, int destlen, struct sockaddr *input)Sys_SockaddrToString342,9670
qboolean Sys_StringToAdr( const char *s, netadr_t *a, netadrtype_t family ) {Sys_StringToAdr359,10025
qboolean	NET_CompareBaseAdr (netadr_t a, netadr_t b)NET_CompareBaseAdr390,10563
const char	*NET_AdrToString (netadr_t a)NET_AdrToString418,11027
const char	*NET_AdrToStringwPort (netadr_t a)NET_AdrToStringwPort439,11501
qboolean	NET_CompareAdr (netadr_t a, netadr_t b)NET_CompareAdr460,12000
qboolean	NET_IsLocalAddress( netadr_t adr ) {NET_IsLocalAddress477,12235
int	recvfromCount;recvfromCount491,12532
qboolean Sys_GetPacket( netadr_t *net_from, msg_t *net_message ) {Sys_GetPacket494,12559
static char socksBuf[4096];socksBuf610,15478
void Sys_SendPacket( int length, const void *data, netadr_t to ) {Sys_SendPacket617,15566
qboolean Sys_IsLANAddress( netadr_t adr ) {Sys_IsLANAddress681,17502
void Sys_ShowIP(void) {Sys_ShowIP762,19343
int NET_IPSocket( char *net_interface, int port, int *err ) {NET_IPSocket786,19823
int NET_IP6Socket( char *net_interface, int port, struct sockaddr_in6 *bindto, int *err ) {NET_IP6Socket857,21607
void NET_SetMulticast6(void)NET_SetMulticast6941,23719
void NET_JoinMulticast6(void)NET_JoinMulticast6975,24581
void NET_LeaveMulticast6()NET_LeaveMulticast61025,26280
void NET_OpenSocks( int port ) {NET_OpenSocks1043,26644
void NET_AddLocalAddress(char *ifname, struct sockaddr *addr, struct sockaddr *netmask)NET_AddLocalAddress1220,31227
void NET_GetLocalAddress(void)NET_GetLocalAddress1258,32038
void NET_GetLocalAddress( void ) {NET_GetLocalAddress1279,32510
void NET_OpenIP( void ) {NET_OpenIP1328,33777
static qboolean NET_GetCvars( void ) {NET_GetCvars1401,35364
void NET_Config( qboolean enableNetworking ) {NET_Config1465,37210
void NET_Init( void ) {NET_Init1546,38579
void NET_Shutdown( void ) {NET_Shutdown1572,39013
void NET_Sleep( int msec ) {NET_Sleep1593,39291
void NET_Restart( void ) {NET_Restart1635,40026

qcommon/vm_local.h,3329
	OP_UNDEF, OP_UNDEF26,1033
	OP_IGNORE, OP_IGNORE28,1046
	OP_BREAK,OP_BREAK30,1060
	OP_ENTER,OP_ENTER32,1072
	OP_LEAVE,OP_LEAVE33,1083
	OP_CALL,OP_CALL34,1094
	OP_PUSH,OP_PUSH35,1104
	OP_POP,OP_POP36,1114
	OP_CONST,OP_CONST38,1124
	OP_LOCAL,OP_LOCAL39,1135
	OP_JUMP,OP_JUMP41,1147
	OP_EQ,OP_EQ45,1182
	OP_NE,OP_NE46,1190
	OP_LTI,OP_LTI48,1199
	OP_LEI,OP_LEI49,1208
	OP_GTI,OP_GTI50,1217
	OP_GEI,OP_GEI51,1226
	OP_LTU,OP_LTU53,1236
	OP_LEU,OP_LEU54,1245
	OP_GTU,OP_GTU55,1254
	OP_GEU,OP_GEU56,1263
	OP_EQF,OP_EQF58,1273
	OP_NEF,OP_NEF59,1282
	OP_LTF,OP_LTF61,1292
	OP_LEF,OP_LEF62,1301
	OP_GTF,OP_GTF63,1310
	OP_GEF,OP_GEF64,1319
	OP_LOAD1,OP_LOAD168,1353
	OP_LOAD2,OP_LOAD269,1364
	OP_LOAD4,OP_LOAD470,1375
	OP_STORE1,OP_STORE171,1386
	OP_STORE2,OP_STORE272,1398
	OP_STORE4,				// *(stack[top-1]) = stack[top]OP_STORE473,1410
	OP_ARG,OP_ARG74,1457
	OP_BLOCK_COPY,OP_BLOCK_COPY76,1467
	OP_SEX8,OP_SEX880,1508
	OP_SEX16,OP_SEX1681,1518
	OP_NEGI,OP_NEGI83,1530
	OP_ADD,OP_ADD84,1540
	OP_SUB,OP_SUB85,1549
	OP_DIVI,OP_DIVI86,1558
	OP_DIVU,OP_DIVU87,1568
	OP_MODI,OP_MODI88,1578
	OP_MODU,OP_MODU89,1588
	OP_MULI,OP_MULI90,1598
	OP_MULU,OP_MULU91,1608
	OP_BAND,OP_BAND93,1619
	OP_BOR,OP_BOR94,1629
	OP_BXOR,OP_BXOR95,1638
	OP_BCOM,OP_BCOM96,1648
	OP_LSH,OP_LSH98,1659
	OP_RSHI,OP_RSHI99,1668
	OP_RSHU,OP_RSHU100,1678
	OP_NEGF,OP_NEGF102,1689
	OP_ADDF,OP_ADDF103,1699
	OP_SUBF,OP_SUBF104,1709
	OP_DIVF,OP_DIVF105,1719
	OP_MULF,OP_MULF106,1729
	OP_CVIF,OP_CVIF108,1740
	OP_CVFIOP_CVFI109,1750
} opcode_t;opcode_t110,1759
typedef int	vmptr_t;vmptr_t114,1774
typedef struct vmSymbol_s {vmSymbol_s116,1796
	struct vmSymbol_s	*next;next117,1824
	int		symValue;symValue118,1850
	int		profileCount;profileCount119,1866
	char	symName[1];		// variable sizedsymName120,1886
} vmSymbol_t;vmSymbol_t121,1923
#define	VM_OFFSET_PROGRAM_STACK	VM_OFFSET_PROGRAM_STACK123,1938
#define	VM_OFFSET_SYSTEM_CALL	VM_OFFSET_SYSTEM_CALL124,1973
struct vm_s {vm_s126,2007
    int			programStack;		// the vm may be recursively enteredprogramStack129,2125
    intptr_t			(*systemCall)( intptr_t *parms );systemCall130,2187
    char		name[MAX_QPATH];name134,2281
	void		*dllHandle;dllHandle137,2340
	intptr_t			(QDECL *entryPoint)( int callNum, ... );entryPoint138,2359
	void (*destroy)(vm_t* self);destroy139,2412
	qboolean	currentlyInterpreting;currentlyInterpreting142,2471
	qboolean	compiled;compiled144,2505
	byte		*codeBase;codeBase145,2525
	int			codeLength;codeLength146,2543
	int			*instructionPointers;instructionPointers148,2563
	int			instructionPointersLength;instructionPointersLength149,2592
	byte		*dataBase;dataBase151,2627
	int			dataMask;dataMask152,2645
	int			stackBottom;		// if programStack < stackBottom, errorstackBottom154,2663
	int			numSymbols;numSymbols156,2725
	struct vmSymbol_s	*symbols;symbols157,2744
	int			callLevel;		// counts recursive VM_CallcallLevel159,2774
	int			breakFunction;		// increment breakCount on function entry to thisbreakFunction160,2821
	int			breakCount;breakCount161,2894
	char		fqpath[MAX_QPATH+1] ;fqpath163,2914
	byte		*jumpTableTargets;jumpTableTargets165,2944
	int			numJumpTableTargets;numJumpTableTargets166,2970

qcommon/vm_powerpc_asm.h,8318
#define VM_POWERPC_ASM_HVM_POWERPC_ASM_H24,1017
#define r0	r031,1146
#define r1	r132,1171
#define r2	r233,1217
#define r3	r334,1242
#define r4	r435,1270
#define r5	r536,1298
#define r6	r637,1326
#define r7	r738,1354
#define r8	r839,1382
#define r9	r940,1410
#define r10	r1041,1438
#define r11	r1142,1468
#define r12	r1243,1495
#define r13	r1344,1522
#define r14	r1445,1569
#define r15	r1546,1599
#define r16	r1647,1629
#define r17	r1748,1659
#define r18	r1849,1689
#define r19	r1950,1719
#define r20	r2051,1749
#define r21	r2152,1779
#define r22	r2253,1809
#define r23	r2354,1839
#define r24	r2455,1869
#define r25	r2556,1899
#define r26	r2657,1929
#define r27	r2758,1959
#define r28	r2859,1989
#define r29	r2960,2019
#define r30	r3061,2049
#define r31	r3162,2079
#define f0	f064,2135
#define f1	f165,2163
#define f2	f266,2191
#define f3	f367,2219
#define f4	f468,2247
#define f5	f569,2275
#define f6	f670,2303
#define f7	f771,2331
#define f8	f872,2359
#define f9	f973,2387
#define f10	f1074,2415
#define f11	f1175,2445
#define f12	f1276,2475
#define f13	f1377,2505
#define f14	f1478,2535
#define f15	f1579,2565
#define f16	f1680,2595
#define f17	f1781,2625
#define f18	f1882,2655
#define f19	f1983,2685
#define f20	f2084,2715
#define f21	f2185,2745
#define f22	f2286,2775
#define f23	f2387,2805
#define f24	f2488,2835
#define f25	f2589,2865
#define f26	f2690,2895
#define f27	f2791,2925
#define f28	f2892,2955
#define f29	f2993,2985
#define f30	f3094,3015
#define f31	f3195,3045
#define cr0	cr097,3076
#define cr1	cr198,3102
#define cr2	cr299,3128
#define cr3	cr3100,3157
#define cr4	cr4101,3186
#define cr5	cr5102,3215
#define cr6	cr6103,3241
#define cr7	cr7104,3267
#define lt	lt106,3294
#define gt	gt107,3307
#define eq	eq108,3320
#define so	so109,3333
#define branchLikely	branchLikely112,3373
#define branchFalse	branchFalse113,3396
#define branchTrue	branchTrue114,3418
#define branchAlways	branchAlways115,3440
#define branchExtLink	branchExtLink118,3507
typedef enum powerpc_iname {powerpc_iname132,4053
	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,iCMPLWI133,4082
	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,iCMPWI133,4082
	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,iCMPW133,4082
	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,iCMPLW133,4082
	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,iFCMPU133,4082
	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,iLI133,4082
	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,iLIS133,4082
	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,iADDI133,4082
	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,iADDIS133,4082
	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,iBLTm134,4149
	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,iBC134,4149
	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,iBCL134,4149
	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,iB134,4149
	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,iBL134,4149
	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,iBLR134,4149
	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,iBCTR134,4149
	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,iBCTRL134,4149
	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,iRLWINM134,4149
	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,iNOP134,4149
	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,iORI134,4149
	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,iXORIS135,4219
	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,iLDX135,4219
	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,iLWZX135,4219
	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,iSLW135,4219
	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,iAND135,4219
	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,iSUB135,4219
	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,iLBZX135,4219
	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,iNEG135,4219
	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,iNOT135,4219
	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,iSTWX135,4219
	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,iSTBX135,4219
	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,iMULLW136,4292
	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,iADD136,4292
	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,iLHZX136,4292
	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,iXOR136,4292
	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,iMFLR136,4292
	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,iSTHX136,4292
	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,iMR136,4292
	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,iOR136,4292
	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,iDIVWU136,4292
	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,iMTLR136,4292
	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,iMTCTR137,4359
	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,iDIVW137,4359
	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,iLFSX137,4359
	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,iSRW137,4359
	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,iSTFSX137,4359
	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,iSRAW137,4359
	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,iEXTSH137,4359
	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,iEXTSB137,4359
	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,iLWZ137,4359
	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,iLBZ137,4359
	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,iSTW138,4431
	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,iSTWU138,4431
	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,iSTB138,4431
	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,iLHZ138,4431
	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,iSTH138,4431
	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,iLFS138,4431
	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,iLFD138,4431
	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,iSTFS138,4431
	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,iSTFD138,4431
	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,iLD138,4431
	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,iFDIVS138,4431
	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,iFSUBS139,4502
	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,iFADDS139,4502
	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,iFMULS139,4502
	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,iSTD139,4502
	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,iSTDU139,4502
	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,iFRSP139,4502
	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,iFCTIWZ139,4502
	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,iFSUB139,4502
	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,iFNEG139,4502
} powerpc_iname_t;powerpc_iname_t140,4570
typedef uint32_t ppc_instruction_t;ppc_instruction_t144,4611
#define IN(IN149,4739

qcommon/vm_interpreted.c,744
static char	*opnames[256] = {opnames26,1032
static ID_INLINE unsigned int loadWord(void *addr) {loadWord119,1960
static ID_INLINE unsigned int __lwbrx(register void *addr,__lwbrx126,2106
#define loadWord(loadWord133,2301
    static ID_INLINE int loadWord(void *addr) {loadWord137,2354
char *VM_Indent( vm_t *vm ) {VM_Indent144,2478
void VM_StackTrace( vm_t *vm, int programCounter, int programStack ) {VM_StackTrace152,2672
void VM_PrepareInterpreter( vm_t *vm, vmHeader_t *header ) {VM_PrepareInterpreter170,3078
#define	MAX_STACK	MAX_STACK322,5830
#define	STACK_MASK	STACK_MASK323,5852
#define	DEBUGSTR DEBUGSTR325,5886
int	VM_CallInterpreted( vm_t *vm, int *args ) {VM_CallInterpreted327,5946
#define r2 r2385,7561

qcommon/vm_ppc.c,12978
#define DEBUG_VM DEBUG_VM28,1056
static char	*opnames[256] = {opnames31,1089
    R_REAL_STACK = 1,R_REAL_STACK121,1957
	R_STACK = 3,			// localR_STACK125,2046
	R_OPSTACK,				// globalR_OPSTACK126,2071
	R_MEMBASE,			// globalR_MEMBASE129,2112
	R_MEMMASK,R_MEMMASK130,2136
	R_ASMCALL,			// globalR_ASMCALL131,2148
    R_INSTRUCTIONS,		// globalR_INSTRUCTIONS132,2172
    R_NUM_INSTRUCTIONS,	// globalR_NUM_INSTRUCTIONS133,2203
    R_CVM,				// currentVMR_CVM134,2237
	R_TOP = 11,R_TOP137,2279
	R_SECOND = 12,R_SECOND138,2292
	R_EA = 2				// effective address calculationR_EA139,2308
} regNums_t;regNums_t141,2357
#define	RG_REAL_STACK	RG_REAL_STACK143,2371
#define	RG_STACK	RG_STACK144,2397
#define	RG_OPSTACK	RG_OPSTACK145,2419
#define	RG_MEMBASE	RG_MEMBASE146,2443
#define	RG_MEMMASK	RG_MEMMASK147,2467
#define	RG_ASMCALL	RG_ASMCALL148,2491
#define	RG_INSTRUCTIONS	RG_INSTRUCTIONS149,2515
#define	RG_NUM_INSTRUCTIONS	RG_NUM_INSTRUCTIONS150,2543
#define	RG_CVM	RG_CVM151,2574
#define	RG_TOP	RG_TOP152,2596
#define	RG_SECOND	RG_SECOND153,2618
#define	RG_EA RG_EA154,2642
#define OP_STACK_MAX_DEPTH	OP_STACK_MAX_DEPTH157,2719
static int opStackIntRegisters[OP_STACK_MAX_DEPTH] =opStackIntRegisters162,2963
static unsigned int *opStackLoadInstructionAddr[OP_STACK_MAX_DEPTH];opStackLoadInstructionAddr170,3089
static int opStackFloatRegisters[OP_STACK_MAX_DEPTH] =opStackFloatRegisters176,3376
static int opStackRegType[OP_STACK_MAX_DEPTH] =opStackRegType184,3494
	PPC_TDI		= 0x08000000,PPC_TDI194,3692
	PPC_TWI		= 0x0c000000,PPC_TWI195,3716
	PPC_MULLI	= 0x1c000000,PPC_MULLI196,3740
	PPC_SUBFIC	= 0x20000000,PPC_SUBFIC197,3765
	PPC_CMPI	= 0x28000000,PPC_CMPI198,3791
	PPC_CMPLI	= 0x2c000000,PPC_CMPLI199,3815
	PPC_ADDIC	= 0x30000000,PPC_ADDIC200,3840
	PPC_ADDIC_	= 0x34000000,PPC_ADDIC_201,3865
	PPC_ADDI	= 0x38000000,PPC_ADDI202,3891
	PPC_ADDIS	= 0x3c000000,PPC_ADDIS203,3915
	PPC_BC		= 0x40000000,PPC_BC204,3940
	PPC_SC		= 0x44000000,PPC_SC205,3963
	PPC_B		= 0x48000000,PPC_B206,3986
	PPC_MCRF	= 0x4c000000,PPC_MCRF208,4009
	PPC_BCLR	= 0x4c000020,PPC_BCLR209,4033
	PPC_RFID	= 0x4c000000,PPC_RFID210,4057
	PPC_CRNOR	= 0x4c000000,PPC_CRNOR211,4081
	PPC_RFI		= 0x4c000000,PPC_RFI212,4106
	PPC_CRANDC	= 0x4c000000,PPC_CRANDC213,4130
	PPC_ISYNC	= 0x4c000000,PPC_ISYNC214,4156
	PPC_CRXOR	= 0x4c000000,PPC_CRXOR215,4181
	PPC_CRNAND	= 0x4c000000,PPC_CRNAND216,4206
	PPC_CREQV	= 0x4c000000,PPC_CREQV217,4232
	PPC_CRORC	= 0x4c000000,PPC_CRORC218,4257
	PPC_CROR	= 0x4c000000,PPC_CROR219,4282
	PPC_BCCTR	= 0x4c000420,PPC_BCCTR221,4321
	PPC_RLWIMI	= 0x50000000,PPC_RLWIMI222,4346
	PPC_RLWINM	= 0x54000000,PPC_RLWINM223,4372
	PPC_RLWNM	= 0x5c000000,PPC_RLWNM224,4398
	PPC_ORI		= 0x60000000,PPC_ORI225,4423
	PPC_ORIS	= 0x64000000,PPC_ORIS226,4447
	PPC_XORI	= 0x68000000,PPC_XORI227,4471
	PPC_XORIS	= 0x6c000000,PPC_XORIS228,4495
	PPC_ANDI_	= 0x70000000,PPC_ANDI_229,4520
	PPC_ANDIS_	= 0x74000000,PPC_ANDIS_230,4545
	PPC_RLDICL	= 0x78000000,PPC_RLDICL231,4571
	PPC_RLDICR	= 0x78000000,PPC_RLDICR232,4597
	PPC_RLDIC	= 0x78000000,PPC_RLDIC233,4623
	PPC_RLDIMI	= 0x78000000,PPC_RLDIMI234,4648
	PPC_RLDCL	= 0x78000000,PPC_RLDCL235,4674
	PPC_RLDCR	= 0x78000000,PPC_RLDCR236,4699
	PPC_CMP		= 0x7c000000,PPC_CMP237,4724
	PPC_TW		= 0x7c000000,PPC_TW238,4748
	PPC_SUBFC	= 0x7c000010,PPC_SUBFC239,4771
	PPC_MULHDU	= 0x7c000000,PPC_MULHDU240,4796
	PPC_ADDC	= 0x7c000014,PPC_ADDC241,4822
	PPC_MULHWU	= 0x7c000000,PPC_MULHWU242,4846
	PPC_MFCR	= 0x7c000000,PPC_MFCR243,4872
	PPC_LWAR	= 0x7c000000,PPC_LWAR244,4896
	PPC_LDX		= 0x7c000000,PPC_LDX245,4920
	PPC_LWZX	= 0x7c00002e,PPC_LWZX246,4944
	PPC_SLW		= 0x7c000030,PPC_SLW247,4968
	PPC_CNTLZW	= 0x7c000000,PPC_CNTLZW248,4992
	PPC_SLD		= 0x7c000000,PPC_SLD249,5018
	PPC_AND		= 0x7c000038,PPC_AND250,5042
	PPC_CMPL	= 0x7c000040,PPC_CMPL251,5066
	PPC_SUBF	= 0x7c000050,PPC_SUBF252,5090
	PPC_LDUX	= 0x7c000000,PPC_LDUX253,5114
	PPC_DCBST	= 0x7c000000,PPC_DCBST255,5153
	PPC_LWZUX	= 0x7c00006c,PPC_LWZUX256,5178
	PPC_CNTLZD	= 0x7c000000,PPC_CNTLZD257,5203
	PPC_ANDC	= 0x7c000000,PPC_ANDC258,5229
	PPC_TD		= 0x7c000000,PPC_TD259,5253
	PPC_MULHD	= 0x7c000000,PPC_MULHD260,5276
	PPC_MULHW	= 0x7c000000,PPC_MULHW261,5301
	PPC_MTSRD	= 0x7c000000,PPC_MTSRD262,5326
	PPC_MFMSR	= 0x7c000000,PPC_MFMSR263,5351
	PPC_LDARX	= 0x7c000000,PPC_LDARX264,5376
	PPC_DCBF	= 0x7c000000,PPC_DCBF265,5401
	PPC_LBZX	= 0x7c0000ae,PPC_LBZX266,5425
	PPC_NEG		= 0x7c000000,PPC_NEG267,5449
	PPC_MTSRDIN	= 0x7c000000,PPC_MTSRDIN268,5473
	PPC_LBZUX	= 0x7c000000,PPC_LBZUX269,5500
	PPC_NOR		= 0x7c0000f8,PPC_NOR270,5525
	PPC_SUBFE	= 0x7c000000,PPC_SUBFE271,5549
	PPC_ADDE	= 0x7c000000,PPC_ADDE272,5574
	PPC_MTCRF	= 0x7c000000,PPC_MTCRF273,5598
	PPC_MTMSR	= 0x7c000000,PPC_MTMSR274,5623
	PPC_STDX	= 0x7c000000,PPC_STDX275,5648
	PPC_STWCX_	= 0x7c000000,PPC_STWCX_276,5672
	PPC_STWX	= 0x7c00012e,PPC_STWX277,5698
	PPC_MTMSRD	= 0x7c000000,PPC_MTMSRD278,5722
	PPC_STDUX	= 0x7c000000,PPC_STDUX279,5748
	PPC_STWUX	= 0x7c00016e,PPC_STWUX280,5773
	PPC_SUBFZE	= 0x7c000000,PPC_SUBFZE281,5798
	PPC_ADDZE	= 0x7c000000,PPC_ADDZE282,5824
	PPC_MTSR	= 0x7c000000,PPC_MTSR283,5849
	PPC_STDCX_	= 0x7c000000,PPC_STDCX_284,5873
	PPC_STBX	= 0x7c0001ae,PPC_STBX285,5899
	PPC_SUBFME	= 0x7c000000,PPC_SUBFME286,5923
	PPC_MULLD	= 0x7c000000,PPC_MULLD287,5949
	PPC_ADDME	= 0x7c000000,PPC_ADDME289,5989
	PPC_MULLW	= 0x7c0001d6,PPC_MULLW290,6014
	PPC_MTSRIN	= 0x7c000000,PPC_MTSRIN291,6039
	PPC_DCBTST	= 0x7c000000,PPC_DCBTST292,6065
	PPC_STBUX	= 0x7c000000,PPC_STBUX293,6091
	PPC_ADD		= 0x7c000214,PPC_ADD294,6116
	PPC_DCBT	= 0x7c000000,PPC_DCBT295,6140
	PPC_LHZX	= 0x7c00022e,PPC_LHZX296,6164
	PPC_EQV		= 0x7c000000,PPC_EQV297,6188
	PPC_TLBIE	= 0x7c000000,PPC_TLBIE298,6212
	PPC_ECIWX	= 0x7c000000,PPC_ECIWX299,6237
	PPC_LHZUX	= 0x7c000000,PPC_LHZUX300,6262
	PPC_XOR		= 0x7c000278,PPC_XOR301,6287
	PPC_MFSPR	= 0x7c0002a6,PPC_MFSPR302,6311
	PPC_LWAX	= 0x7c000000,PPC_LWAX303,6336
	PPC_LHAX	= 0x7c000000,PPC_LHAX304,6360
	PPC_TLBIA	= 0x7c000000,PPC_TLBIA305,6384
	PPC_MFTB	= 0x7c000000,PPC_MFTB306,6409
	PPC_LWAUX	= 0x7c000000,PPC_LWAUX307,6433
	PPC_LHAUX	= 0x7c000000,PPC_LHAUX308,6458
	PPC_STHX	= 0x7c00032e,PPC_STHX309,6483
	PPC_ORC		= 0x7c000338,PPC_ORC310,6507
	PPC_SRADI	= 0x7c000000,PPC_SRADI311,6531
	PPC_SLBIE	= 0x7c000000,PPC_SLBIE312,6556
	PPC_ECOWX	= 0x7c000000,PPC_ECOWX313,6581
	PPC_STHUX	= 0x7c000000,PPC_STHUX314,6606
	PPC_OR		= 0x7c000378,PPC_OR315,6631
	PPC_DIVDU	= 0x7c000000,PPC_DIVDU316,6654
	PPC_DIVWU	= 0x7c000396,PPC_DIVWU317,6679
	PPC_MTSPR	= 0x7c0003a6,PPC_MTSPR318,6704
	PPC_DCBI	= 0x7c000000,PPC_DCBI319,6729
	PPC_NAND	= 0x7c000000,PPC_NAND320,6753
	PPC_DIVD	= 0x7c000000,PPC_DIVD321,6777
	PPC_DIVW	= 0x7c0003d6,PPC_DIVW323,6816
	PPC_SLBIA	= 0x7c000000,PPC_SLBIA324,6840
	PPC_MCRXR	= 0x7c000000,PPC_MCRXR325,6865
	PPC_LSWX	= 0x7c000000,PPC_LSWX326,6890
	PPC_LWBRX	= 0x7c000000,PPC_LWBRX327,6914
	PPC_LFSX	= 0x7c00042e,PPC_LFSX328,6939
	PPC_SRW		= 0x7c000430,PPC_SRW329,6963
	PPC_SRD		= 0x7c000000,PPC_SRD330,6987
	PPC_TLBSYNC	= 0x7c000000,PPC_TLBSYNC331,7011
	PPC_LFSUX	= 0x7c000000,PPC_LFSUX332,7038
	PPC_MFSR	= 0x7c000000,PPC_MFSR333,7063
	PPC_LSWI	= 0x7c000000,PPC_LSWI334,7087
	PPC_SYNC	= 0x7c000000,PPC_SYNC335,7111
	PPC_LFDX	= 0x7c000000,PPC_LFDX336,7135
	PPC_LFDUX	= 0x7c000000,PPC_LFDUX337,7159
	PPC_MFSRIN	= 0x7c000000,PPC_MFSRIN338,7184
	PPC_STSWX	= 0x7c000000,PPC_STSWX339,7210
	PPC_STWBRX	= 0x7c000000,PPC_STWBRX340,7235
	PPC_STFSX	= 0x7c00052e,PPC_STFSX341,7261
	PPC_STFSUX	= 0x7c000000,PPC_STFSUX342,7286
	PPC_STSWI	= 0x7c000000,PPC_STSWI343,7312
	PPC_STFDX	= 0x7c000000,PPC_STFDX344,7337
	PPC_DCBA	= 0x7c000000,PPC_DCBA345,7362
	PPC_STFDUX	= 0x7c000000,PPC_STFDUX346,7386
	PPC_LHBRX	= 0x7c000000,PPC_LHBRX347,7412
	PPC_SRAW	= 0x7c000630,PPC_SRAW348,7437
	PPC_SRAD	= 0x7c000000,PPC_SRAD349,7461
	PPC_SRAWI	= 0x7c000000,PPC_SRAWI350,7485
	PPC_EIEIO	= 0x7c000000,PPC_EIEIO351,7510
	PPC_STHBRX	= 0x7c000000,PPC_STHBRX352,7535
	PPC_EXTSH	= 0x7c000734,PPC_EXTSH353,7561
	PPC_EXTSB	= 0x7c000774,PPC_EXTSB354,7586
	PPC_ICBI	= 0x7c000000,PPC_ICBI355,7611
	PPC_STFIWX	= 0x7c0007ae,PPC_STFIWX357,7650
	PPC_EXTSW	= 0x7c000000,PPC_EXTSW358,7676
	PPC_DCBZ	= 0x7c000000,PPC_DCBZ359,7701
	PPC_LWZ		= 0x80000000,PPC_LWZ360,7725
	PPC_LWZU	= 0x84000000,PPC_LWZU361,7749
	PPC_LBZ		= 0x88000000,PPC_LBZ362,7773
	PPC_LBZU	= 0x8c000000,PPC_LBZU363,7797
	PPC_STW		= 0x90000000,PPC_STW364,7821
	PPC_STWU	= 0x94000000,PPC_STWU365,7845
	PPC_STB		= 0x98000000,PPC_STB366,7869
	PPC_STBU	= 0x9c000000,PPC_STBU367,7893
	PPC_LHZ		= 0xa0000000,PPC_LHZ368,7917
	PPC_LHZU	= 0xa4000000,PPC_LHZU369,7941
	PPC_LHA		= 0xa8000000,PPC_LHA370,7965
	PPC_LHAU	= 0xac000000,PPC_LHAU371,7989
	PPC_STH		= 0xb0000000,PPC_STH372,8013
	PPC_STHU	= 0xb4000000,PPC_STHU373,8037
	PPC_LMW		= 0xb8000000,PPC_LMW374,8061
	PPC_STMW	= 0xbc000000,PPC_STMW375,8085
	PPC_LFS		= 0xc0000000,PPC_LFS376,8109
	PPC_LFSU	= 0xc4000000,PPC_LFSU377,8133
	PPC_LFD		= 0xc8000000,PPC_LFD378,8157
	PPC_LFDU	= 0xcc000000,PPC_LFDU379,8181
	PPC_STFS	= 0xd0000000,PPC_STFS380,8205
	PPC_STFSU	= 0xd4000000,PPC_STFSU381,8229
	PPC_STFD	= 0xd8000000,PPC_STFD382,8254
	PPC_STFDU	= 0xdc000000,PPC_STFDU383,8278
	PPC_LD		= 0xe8000000,PPC_LD384,8303
	PPC_LDU		= 0xe8000001,PPC_LDU385,8326
	PPC_LWA		= 0xe8000002,PPC_LWA386,8350
	PPC_FDIVS	= 0xec000024,PPC_FDIVS387,8374
	PPC_FSUBS	= 0xec000028,PPC_FSUBS388,8399
	PPC_FADDS	= 0xec00002a,PPC_FADDS389,8424
	PPC_FSQRTS	= 0xec000000,PPC_FSQRTS391,8464
	PPC_FRES	= 0xec000000,PPC_FRES392,8490
	PPC_FMULS	= 0xec000032,PPC_FMULS393,8514
	PPC_FMSUBS	= 0xec000000,PPC_FMSUBS394,8539
	PPC_FMADDS	= 0xec000000,PPC_FMADDS395,8565
	PPC_FNMSUBS	= 0xec000000,PPC_FNMSUBS396,8591
	PPC_FNMADDS	= 0xec000000,PPC_FNMADDS397,8618
	PPC_STD		= 0xf8000000,PPC_STD398,8645
	PPC_STDU	= 0xf8000001,PPC_STDU399,8669
	PPC_FCMPU	= 0xfc000000,PPC_FCMPU400,8693
	PPC_FRSP	= 0xfc000018,PPC_FRSP401,8718
	PPC_FCTIW	= 0xfc000000,PPC_FCTIW402,8742
	PPC_FCTIWZ	= 0xfc00001e,PPC_FCTIWZ403,8767
	PPC_FDIV	= 0xfc000000,PPC_FDIV404,8793
	PPC_FSUB	= 0xfc000028,PPC_FSUB405,8817
	PPC_FADD	= 0xfc000000,PPC_FADD406,8841
	PPC_FSQRT	= 0xfc000000,PPC_FSQRT407,8865
	PPC_FSEL	= 0xfc000000,PPC_FSEL408,8890
	PPC_FMUL	= 0xfc000000,PPC_FMUL409,8914
	PPC_FRSQRTE	= 0xfc000000,PPC_FRSQRTE410,8938
	PPC_FMSUB	= 0xfc000000,PPC_FMSUB411,8965
	PPC_FMADD	= 0xfc000000,PPC_FMADD412,8990
	PPC_FNMSUB	= 0xfc000000,PPC_FNMSUB413,9015
	PPC_FNMADD	= 0xfc000000,PPC_FNMADD414,9041
	PPC_FCMPO	= 0xfc000000,PPC_FCMPO415,9067
	PPC_MTFSB1	= 0xfc000000,PPC_MTFSB1416,9092
	PPC_FNEG	= 0xfc000050,PPC_FNEG417,9118
	PPC_MCRFS	= 0xfc000000,PPC_MCRFS418,9142
	PPC_MTFSB0	= 0xfc000000,PPC_MTFSB0419,9167
	PPC_FMR		= 0xfc000000,PPC_FMR420,9193
	PPC_MTFSFI	= 0xfc000000,PPC_MTFSFI421,9217
	PPC_FNABS	= 0xfc000000,PPC_FNABS422,9243
	PPC_FABS	= 0xfc000000,PPC_FABS423,9268
	PPC_MFFS	= 0xfc000000,PPC_MFFS425,9307
	PPC_MTFSF	= 0xfc000000,PPC_MTFSF426,9331
	PPC_FCTID	= 0xfc000000,PPC_FCTID427,9356
	PPC_FCTIDZ	= 0xfc000000,PPC_FCTIDZ428,9381
	PPC_FCFID	= 0xfc000000PPC_FCFID429,9407
} ppcOpcodes_t;ppcOpcodes_t431,9433
static	unsigned	*buf;buf435,9479
static	int		compiledOfs;	// in dwordscompiledOfs436,9501
static int pass;pass437,9539
static	byte	*code;code440,9588
static	int		pc;pc441,9607
double	itofConvert[2];itofConvert445,9647
static int	Constant4( void ) {Constant4447,9671
static int	Constant1( void ) {Constant1455,9807
static void Emit4( char *opname, int i ) {Emit4463,9887
static void Inst( char *opname, int opcode, int destReg, int aReg, int bReg ) {Inst472,10082
static void Inst4( char *opname, int opcode, int destReg, int aReg, int bReg, int cReg ) {Inst4484,10421
static void InstImm( char *opname, int opcode, int destReg, int aReg, int immediate ) {InstImm496,10795
static void InstImmU( char *opname, int opcode, int destReg, int aReg, int immediate ) {InstImmU511,11324
static int pop0, pop1, oc0, oc1;pop0526,11810
static int pop0, pop1, oc0, oc1;pop1526,11810
static int pop0, pop1, oc0, oc1;oc0526,11810
static int pop0, pop1, oc0, oc1;oc1526,11810
static vm_t *tvm;tvm527,11843
static int instruction;instruction528,11861
static byte *jused;jused529,11885
static void spillOpStack(int depth)spillOpStack531,11906
static void loadOpStack(int depth)loadOpStack553,12420
static void makeFloat(int depth)makeFloat570,12875
#define assertInteger(assertInteger657,16009
void VM_Compile( vm_t *vm, vmHeader_t *header ) {VM_Compile664,16127
int	VM_CallCompiled( vm_t *vm, int *args ) {VM_CallCompiled1745,57023
void AsmCall( void ) {AsmCall1814,59083
void asm AsmCall( void ) {AsmCall1903,62505

qcommon/vm.c,1802
vm_t	*currentVM = NULL;currentVM39,1156
vm_t	*lastVM    = NULL;lastVM40,1180
int		vm_debugLevel;vm_debugLevel41,1204
static int forced_unload;forced_unload44,1288
#define	MAX_VM	MAX_VM46,1315
vm_t	vmTable[MAX_VM];vmTable47,1333
void VM_Debug( int level ) {VM_Debug63,1597
void VM_Init( void ) {VM_Init72,1697
const char *VM_ValueToSymbol( vm_t *vm, int value ) {VM_ValueToSymbol91,2157
vmSymbol_t *VM_ValueToFunctionSymbol( vm_t *vm, int value ) {VM_ValueToFunctionSymbol121,2702
int VM_SymbolToValue( vm_t *vm, const char *symbol ) {VM_SymbolToValue143,3019
int	ParseHex( const char *text ) {ParseHex191,3881
void VM_LoadSymbols( vm_t *vm ) {VM_LoadSymbols219,4316
intptr_t QDECL VM_DllSyscall( intptr_t arg, ... ) {VM_DllSyscall339,7651
vmHeader_t *VM_LoadQVM( vm_t *vm, qboolean alloc ) {VM_LoadQVM366,8136
vm_t *VM_Restart( vm_t *vm ) {VM_Restart479,11422
#define	STACK_SIZE	STACK_SIZE519,12159
vm_t *VM_Create( const char *module, intptr_t (*systemCalls)(intptr_t *), VM_Create521,12187
void VM_Free( vm_t *vm ) {VM_Free620,14499
void VM_Clear(void) {VM_Clear659,15189
void VM_Forced_Unload_Start(void) {VM_Forced_Unload_Start666,15276
void VM_Forced_Unload_Done(void) {VM_Forced_Unload_Done670,15335
void *VM_ArgPtr( intptr_t intValue ) {VM_ArgPtr674,15393
void *VM_ExplicitArgPtr( vm_t *vm, intptr_t intValue ) {VM_ExplicitArgPtr690,15724
#define	MAX_STACK	MAX_STACK732,16426
#define	STACK_MASK	STACK_MASK733,16448
intptr_t	QDECL VM_Call( vm_t *vm, int callnum, ... ) {VM_Call735,16482
static int QDECL VM_ProfileSort( const void *a, const void *b ) {VM_ProfileSort805,18036
void VM_VmProfile_f( void ) {VM_VmProfile_f826,18365
void VM_VmInfo_f( void ) {VM_VmInfo_f873,19198
void VM_LogSyscalls( int *args ) {VM_LogSyscalls906,19914

qcommon/md4.c,1007
struct mdfour {mdfour33,935
	uint32_t A, B, C, D;A34,951
	uint32_t A, B, C, D;B34,951
	uint32_t A, B, C, D;C34,951
	uint32_t A, B, C, D;D34,951
	uint32_t totalN;totalN35,973
static struct mdfour *m;m44,1099
#define F(F46,1125
#define G(G47,1169
#define H(H48,1222
#define lshift(lshift49,1253
#define ROUND1(ROUND151,1305
#define ROUND2(ROUND252,1368
#define ROUND3(ROUND353,1443
static void mdfour64(uint32_t *M)mdfour6456,1560
static void copy64(uint32_t *M, byte *in)copy64104,3221
static void copy4(byte *out,uint32_t x)copy4113,3378
void mdfour_begin(struct mdfour *md)mdfour_begin121,3512
static void mdfour_tail(byte *in, int n)mdfour_tail131,3656
static void mdfour_update(struct mdfour *md, byte *in, int n)mdfour_update158,4035
static void mdfour_result(struct mdfour *md, byte *out)mdfour_result178,4283
static void mdfour(byte *out, byte *in, int n)mdfour188,4437
unsigned Com_BlockChecksum (const void *buffer, int length)Com_BlockChecksum198,4653

qcommon/vm_x86_64.c,1616
#define Dfprintf(Dfprintf42,1390
static FILE* qdasmout;qdasmout43,1440
#define Dfprintf(Dfprintf45,1469
#define VM_X86_64_MMAPVM_X86_64_MMAP48,1503
#undef DfprintfDfprintf56,1717
#define Dfprintf(Dfprintf57,1733
static long callAsmCall(long callProgramStack, long callSyscallNum)callAsmCall81,2168
static char	*opnames[256] = {opnames113,3090
static unsigned char op_argsize[256] = op_argsize202,3955
#define emit(emit229,4500
void emit(const char* fmt, ...)emit232,4583
#define JMPIARG JMPIARG244,4796
#define JMPIARG JMPIARG247,4847
#define IJ(IJ253,4996
#define FJ(FJ262,5189
#define XJ(XJ271,5413
#define FJ(FJ273,5433
#define XJ(XJ274,5450
#define SIMPLE(SIMPLE284,5673
#define FSIMPLE(FSIMPLE290,5800
#define XSIMPLE(XSIMPLE295,5925
#define FSIMPLE(FSIMPLE297,5951
#define XSIMPLE(XSIMPLE298,5971
#define SHIFT(SHIFT305,6129
#define RANGECHECK(RANGECHECK313,6308
#define RANGECHECK(RANGECHECK316,6386
#define RANGECHECK(RANGECHECK325,6673
#define NOTIMPL(NOTIMPL329,6721
#define NOTIMPL(NOTIMPL332,6835
static void* getentrypoint(vm_t* vm)getentrypoint336,6976
char* mmapfile(const char* fn, size_t* size)mmapfile346,7150
static int doas(char* in, char* out, unsigned char** compiledcode)doas372,7523
static void block_copy_vm(unsigned dest, unsigned src, unsigned count)block_copy_vm435,8529
void VM_Compile( vm_t *vm, vmHeader_t *header ) {VM_Compile455,8981
void VM_Destroy_Compiled(vm_t* self)VM_Destroy_Compiled1038,22586
static char* memData;memData1058,22926
int	VM_CallCompiled( vm_t *vm, int *args ) {VM_CallCompiled1061,22956

qcommon/net_chan.c,2281
#define	MAX_PACKETLEN	MAX_PACKETLEN50,1777
#define	FRAGMENT_SIZE	FRAGMENT_SIZE52,1840
#define	PACKET_HEADER	PACKET_HEADER53,1886
#define	FRAGMENT_BIT	FRAGMENT_BIT55,1940
cvar_t		*showpackets;showpackets57,1970
cvar_t		*showdrop;showdrop58,1992
cvar_t		*qport;qport59,2011
static char *netsrcString[2] = {netsrcString61,2028
void Netchan_Init( int port ) {Netchan_Init72,2138
void Netchan_Setup( netsrc_t sock, netchan_t *chan, netadr_t adr, int qport ) {Netchan_Setup86,2456
void Netchan_TransmitNextFragment( netchan_t *chan ) {Netchan_TransmitNextFragment189,4774
void Netchan_Transmit( netchan_t *chan, int length, const byte *data ) {Netchan_Transmit246,6506
qboolean Netchan_Process( netchan_t *chan, msg_t *msg ) {Netchan_Process304,7946
#define	MAX_LOOPBACK	MAX_LOOPBACK474,12568
	byte	data[MAX_PACKETLEN];data477,12610
	int		datalen;datalen478,12637
} loopmsg_t;loopmsg_t479,12652
	loopmsg_t	msgs[MAX_LOOPBACK];msgs482,12683
	int			get, send;get483,12714
	int			get, send;send483,12714
} loopback_t;loopback_t484,12732
loopback_t	loopbacks[2];loopbacks486,12747
qboolean	NET_GetLoopPacket (netsrc_t sock, netadr_t *net_from, msg_t *net_message)NET_GetLoopPacket489,12774
void NET_SendLoopPacket (netsrc_t sock, int length, const void *data, netadr_t to)NET_SendLoopPacket514,13319
typedef struct packetQueue_s {packetQueue_s530,13679
        struct packetQueue_s *next;next531,13710
        int length;length532,13746
        byte *data;data533,13766
        netadr_t to;to534,13786
        int release;release535,13807
} packetQueue_t;packetQueue_t536,13828
packetQueue_t *packetQueue = NULL;packetQueue538,13846
static void NET_QueuePacket( int length, const void *data, netadr_t to,NET_QueuePacket540,13882
void NET_FlushPacketQueue(void)NET_FlushPacketQueue569,14413
void NET_SendPacket( netsrc_t sock, int length, const void *data, netadr_t to ) {NET_SendPacket587,14753
void QDECL NET_OutOfBandPrint( netsrc_t sock, netadr_t adr, const char *format, ... ) {NET_OutOfBandPrint623,15590
void QDECL NET_OutOfBandData( netsrc_t sock, netadr_t adr, byte *format, int len ) {NET_OutOfBandData649,16136
int NET_StringToAdr( const char *s, netadr_t *a, netadrtype_t family )NET_StringToAdr679,16786

qcommon/surfaceflags.h,2118
#define	CONTENTS_SOLID	CONTENTS_SOLID30,1188
#define	CONTENTS_LAVA	CONTENTS_LAVA31,1252
#define	CONTENTS_SLIME	CONTENTS_SLIME32,1278
#define	CONTENTS_WATER	CONTENTS_WATER33,1306
#define	CONTENTS_FOG	CONTENTS_FOG34,1334
#define CONTENTS_NOTTEAM1	CONTENTS_NOTTEAM136,1361
#define CONTENTS_NOTTEAM2	CONTENTS_NOTTEAM237,1395
#define CONTENTS_NOBOTCLIP	CONTENTS_NOBOTCLIP38,1429
#define	CONTENTS_AREAPORTAL	CONTENTS_AREAPORTAL40,1465
#define	CONTENTS_PLAYERCLIP	CONTENTS_PLAYERCLIP42,1502
#define	CONTENTS_MONSTERCLIP	CONTENTS_MONSTERCLIP43,1539
#define	CONTENTS_TELEPORTER	CONTENTS_TELEPORTER45,1606
#define	CONTENTS_JUMPPAD	CONTENTS_JUMPPAD46,1643
#define CONTENTS_CLUSTERPORTAL	CONTENTS_CLUSTERPORTAL47,1677
#define CONTENTS_DONOTENTER	CONTENTS_DONOTENTER48,1717
#define CONTENTS_BOTCLIP	CONTENTS_BOTCLIP49,1755
#define CONTENTS_MOVER	CONTENTS_MOVER50,1790
#define	CONTENTS_ORIGIN	CONTENTS_ORIGIN52,1825
#define	CONTENTS_BODY	CONTENTS_BODY54,1897
#define	CONTENTS_CORPSE	CONTENTS_CORPSE55,1975
#define	CONTENTS_DETAIL	CONTENTS_DETAIL56,2011
#define	CONTENTS_STRUCTURAL	CONTENTS_STRUCTURAL57,2079
#define	CONTENTS_TRANSLUCENT	CONTENTS_TRANSLUCENT58,2147
#define	CONTENTS_TRIGGER	CONTENTS_TRIGGER59,2229
#define	CONTENTS_NODROP	CONTENTS_NODROP60,2266
#define	SURF_NODAMAGE	SURF_NODAMAGE62,2353
#define	SURF_SLICK	SURF_SLICK63,2411
#define	SURF_SKY	SURF_SKY64,2462
#define	SURF_LADDER	SURF_LADDER65,2520
#define	SURF_NOIMPACT	SURF_NOIMPACT66,2547
#define	SURF_NOMARKS	SURF_NOMARKS67,2609
#define	SURF_FLESH	SURF_FLESH68,2666
#define	SURF_NODRAW	SURF_NODRAW69,2726
#define	SURF_HINT	SURF_HINT70,2793
#define	SURF_SKIP	SURF_SKIP71,2851
#define	SURF_NOLIGHTMAP	SURF_NOLIGHTMAP72,2928
#define	SURF_POINTLIGHT	SURF_POINTLIGHT73,2995
#define	SURF_METALSTEPS	SURF_METALSTEPS74,3065
#define	SURF_NOSTEPS	SURF_NOSTEPS75,3120
#define	SURF_NONSOLID	SURF_NONSOLID76,3172
#define	SURF_LIGHTFILTER	SURF_LIGHTFILTER77,3249
#define	SURF_ALPHASHADOW	SURF_ALPHASHADOW78,3327
#define	SURF_NODLIGHT	SURF_NODLIGHT79,3407
#define SURF_DUST	SURF_DUST80,3489

qcommon/unzip.c,17403
#define _ZCONF_H_ZCONF_H91,3634
#    define MAX_MEM_LEVEL MAX_MEM_LEVEL96,3743
#    define MAX_MEM_LEVEL MAX_MEM_LEVEL98,3779
#  define MAX_WBITS MAX_WBITS108,4069
#define OF(OF127,4835
typedef unsigned char  Byte;  /* 8 bits */Byte130,4866
typedef unsigned int   uInt;  /* 16 bits or more */uInt131,4909
typedef unsigned long  uLong; /* 32 bits or more */uLong132,4961
typedef Byte    *voidp;voidp133,5013
#  define SEEK_SET SEEK_SET136,5055
#  define SEEK_CUR SEEK_CUR137,5125
#  define SEEK_END SEEK_END138,5194
#define ZLIB_VERSION ZLIB_VERSION143,5303
#define Z_NO_FLUSH Z_NO_FLUSH200,8013
#define Z_PARTIAL_FLUSH Z_PARTIAL_FLUSH201,8039
#define Z_SYNC_FLUSH Z_SYNC_FLUSH202,8113
#define Z_FULL_FLUSH Z_FULL_FLUSH203,8139
#define Z_FINISH Z_FINISH204,8165
#define Z_OK Z_OK207,8252
#define Z_STREAM_END Z_STREAM_END208,8278
#define Z_NEED_DICT Z_NEED_DICT209,8304
#define Z_ERRNO Z_ERRNO210,8330
#define Z_STREAM_ERROR Z_STREAM_ERROR211,8358
#define Z_DATA_ERROR Z_DATA_ERROR212,8386
#define Z_MEM_ERROR Z_MEM_ERROR213,8414
#define Z_BUF_ERROR Z_BUF_ERROR214,8442
#define Z_VERSION_ERROR Z_VERSION_ERROR215,8470
#define Z_NO_COMPRESSION Z_NO_COMPRESSION220,8652
#define Z_BEST_SPEED Z_BEST_SPEED221,8687
#define Z_BEST_COMPRESSION Z_BEST_COMPRESSION222,8722
#define Z_DEFAULT_COMPRESSION Z_DEFAULT_COMPRESSION223,8757
#define Z_FILTERED Z_FILTERED226,8819
#define Z_HUFFMAN_ONLY Z_HUFFMAN_ONLY227,8851
#define Z_DEFAULT_STRATEGY Z_DEFAULT_STRATEGY228,8883
#define Z_BINARY Z_BINARY231,8981
#define Z_ASCII Z_ASCII232,9002
#define Z_UNKNOWN Z_UNKNOWN233,9023
#define Z_DEFLATED Z_DEFLATED236,9090
#define Z_NULL Z_NULL239,9192
#define zlib_version zlib_version241,9265
typedef voidp gzFile;gzFile746,33963
#define deflateInit(deflateInit945,41685
#define inflateInit(inflateInit947,41796
#define deflateInit2(deflateInit2949,41900
#define inflateInit2(inflateInit2952,42124
typedef unsigned char  uch;uch960,42415
typedef unsigned short ush;ush961,42443
typedef unsigned long  ulg;ulg962,42471
#define ERR_MSG(ERR_MSG967,42626
#define ERR_RETURN(ERR_RETURN969,42676
#  define DEF_WBITS DEF_WBITS976,42866
#  define DEF_MEM_LEVEL DEF_MEM_LEVEL981,43005
#  define DEF_MEM_LEVEL DEF_MEM_LEVEL983,43037
#define STORED_BLOCK STORED_BLOCK987,43107
#define STATIC_TREES STATIC_TREES988,43130
#define DYN_TREES DYN_TREES989,43153
#define MIN_MATCH MIN_MATCH992,43213
#define MAX_MATCH MAX_MATCH993,43234
#define PRESET_DICT PRESET_DICT996,43302
#  define OS_CODE OS_CODE1003,43454
#  define F_OPEN(F_OPEN1007,43520
#  define zstrerror(zstrerror1014,43662
#  define zstrerror(zstrerror1016,43713
#define zmemcpy zmemcpy1019,43752
#define zmemcmp zmemcmp1020,43779
#define zmemzero(zmemzero1021,43802
   int z_verbose = 0;z_verbose1025,43902
#  define Assert(Assert1026,43924
#  define Trace(Trace1028,44000
#  define Tracev(Tracev1029,44053
#  define Tracevv(Tracevv1030,44106
#  define Tracec(Tracec1031,44160
#  define Tracecv(Tracecv1032,44222
#  define Assert(Assert1034,44291
#  define Trace(Trace1035,44318
#  define Tracev(Tracev1036,44337
#  define Tracevv(Tracevv1037,44357
#  define Tracec(Tracec1038,44378
#  define Tracecv(Tracecv1039,44400
typedef uLong (*check_func) OF((uLong check, const Byte *buf, uInt len));check_func1043,44432
#define ZALLOC(ZALLOC1047,44632
#define ZFREE(ZFREE1049,44732
#define TRY_FREE(TRY_FREE1050,44809
#define CASESENSITIVITYDEFAULT_NOCASESENSITIVITYDEFAULT_NO1055,44978
#define UNZ_BUFSIZE UNZ_BUFSIZE1060,45041
#define UNZ_MAXFILENAMEINZIP UNZ_MAXFILENAMEINZIP1064,45106
# define ALLOC(ALLOC1068,45163
# define TRYFREE(TRYFREE1071,45224
#define SIZECENTRALDIRITEM SIZECENTRALDIRITEM1074,45272
#define SIZEZIPLOCALHEADER SIZEZIPLOCALHEADER1075,45306
static int unzlocal_getShort (FILE* fin, uLong *pX)unzlocal_getShort1108,46038
static int unzlocal_getLong (FILE *fin, uLong *pX)unzlocal_getLong1138,46475
static int strcmpcasenosensitive_internal (const char* fileName1,const char* fileName2)strcmpcasenosensitive_internal1178,47118
#define CASESENSITIVITYDEFAULTVALUE CASESENSITIVITYDEFAULTVALUE1201,47535
#define CASESENSITIVITYDEFAULTVALUE CASESENSITIVITYDEFAULTVALUE1203,47579
#define STRCMPCASENOSENTIVEFUNCTION STRCMPCASENOSENTIVEFUNCTION1207,47661
extern  int unzStringFileNameCompare (const char* fileName1,const char* fileName2,int iCaseSensitivity)unzStringFileNameCompare1219,48138
#define BUFREADCOMMENT BUFREADCOMMENT1230,48446
extern uLong unzlocal_SearchCentralDir(FILE *fin)unzlocal_SearchCentralDir1236,48577
extern unzFile unzReOpen (const char* path, unzFile file)unzReOpen1291,49703
extern unzFile unzOpen (const char* path)unzOpen1316,50336
extern int unzClose (unzFile file)unzClose1411,52887
extern int unzGetGlobalInfo (unzFile file,unz_global_info *pglobal_info)unzGetGlobalInfo1431,53271
static void unzlocal_DosDateToTmuDate (uLong ulDosDate, tm_unz* ptm)unzlocal_DosDateToTmuDate1445,53537
static int unzlocal_GetCurrentFileInfoInternal (unzFile file,unzlocal_GetCurrentFileInfoInternal1461,54055
extern int unzGetCurrentFileInfo (	unzFile file, unz_file_info *pfile_info,unzGetCurrentFileInfo1625,58417
extern int unzGoToFirstFile (unzFile file)unzGoToFirstFile1640,58955
extern int unzGoToNextFile (unzFile file)unzGoToNextFile1662,59514
extern int unzGetCurrentFileInfoPosition (unzFile file, unsigned long *pos )unzGetCurrentFileInfoPosition1689,60255
extern int unzSetCurrentFileInfoPosition (unzFile file, unsigned long pos )unzSetCurrentFileInfoPosition1705,60565
extern int unzLocateFile (unzFile file, const char *szFileName, int iCaseSensitivity)unzLocateFile1730,61217
static int unzlocal_CheckCurrentFileCoherencyHeader (unz_s* s, uInt* piSizeVar,unzlocal_CheckCurrentFileCoherencyHeader1780,62409
extern int unzOpenCurrentFile (unzFile file)unzOpenCurrentFile1866,64962
extern int unzReadCurrentFile  (unzFile file, void *buf, unsigned len)unzReadCurrentFile1966,68254
extern long unztell (unzFile file)unztell2091,72189
extern int unzeof (unzFile file)unzeof2110,72579
extern int unzGetLocalExtrafield (unzFile file,void *buf,unsigned len)unzGetLocalExtrafield2142,73412
extern int unzCloseCurrentFile (unzFile file)unzCloseCurrentFile2186,74480
extern int unzGetGlobalComment (unzFile file, char *szComment, uLong uSizeBuf)unzGetGlobalComment2227,75448
typedef struct inflate_blocks_state inflate_blocks_statef;inflate_blocks_statef2265,76423
#define exop exop2297,77328
#define bits bits2298,77356
static const uInt border[] = { /* Order of the bit length code lengths */border2301,77435
typedef struct inflate_huft_s inflate_huft;inflate_huft2317,78088
struct inflate_huft_s {inflate_huft_s2319,78133
      Byte Exop;        /* number of extra bits or operation */Exop2322,78180
      Byte Bits;        /* number of bits in this code or subcode */Bits2323,78244
    } what;what2324,78313
    uInt pad;           /* pad structure to a power of 2 (4 bytes for */pad2325,78325
  } word;               /*  16-bit, 8 bytes for 32-bit int's) */word2326,78398
  uInt base;            /* literal, length base, distance base,base2327,78463
#define MANY MANY2336,78884
typedef struct inflate_codes_state inflate_codes_statef;inflate_codes_statef2375,80557
#define _INFUTIL_H_INFUTIL_H2402,81301
      TYPE,     /* get type bits (3, including end bit) */TYPE2405,81336
      LENS,     /* get lengths for stored */LENS2406,81395
      STORED,   /* processing stored block */STORED2407,81440
      TABLE,    /* get table lengths */TABLE2408,81486
      BTREE,    /* get bit lengths tree for a dynamic block */BTREE2409,81526
      DTREE,    /* get length, distance trees for a dynamic block */DTREE2410,81589
      CODES,    /* processing fixed or dynamic block */CODES2411,81658
      DRY,      /* output remaining window bytes */DRY2412,81714
      DONE,     /* finished last block, done */DONE2413,81766
      BAD}      /* got a data error--stuck here */BAD2414,81814
inflate_block_mode;inflate_block_mode2415,81865
struct inflate_blocks_state {inflate_blocks_state2418,81926
  inflate_block_mode  mode;     /* current inflate_block mode */mode2421,81970
    uInt left;          /* if STORED, bytes left to copy */left2425,82081
      uInt table;               /* table lengths (14 bits) */table2427,82154
      uInt index;               /* index into blens (or border) */index2428,82216
      uInt *blens;             /* bit lengths of codes */blens2429,82283
      uInt bb;                  /* bit length tree depth */bb2430,82341
      inflate_huft *tb;         /* bit length decoding tree */tb2431,82401
    } trees;            /* if DTREE, decoding info for trees */trees2432,82464
         *codes;codes2435,82569
    } decode;           /* if CODES, current state */decode2436,82586
  } sub;                /* submode */sub2437,82640
  uInt last;            /* true if this block is the last block */last2438,82678
  uInt bitk;            /* bits in bit buffer */bitk2441,82783
  uLong bitb;           /* bit buffer */bitb2442,82832
  inflate_huft *hufts;  /* single malloc for tree space */hufts2443,82873
  Byte *window;        /* sliding window */window2444,82932
  Byte *end;           /* one byte after sliding window */end2445,82976
  Byte *read;          /* window read pointer */read2446,83035
  Byte *write;         /* window write pointer */write2447,83084
  check_func checkfn;   /* check function */checkfn2448,83134
  uLong check;          /* check on output */check2449,83179
#define UPDBITS UPDBITS2456,83305
#define UPDIN UPDIN2457,83344
#define UPDOUT UPDOUT2458,83414
#define UPDATE UPDATE2459,83443
#define LEAVE LEAVE2460,83481
#define LOADIN LOADIN2462,83560
#define NEEDBYTE NEEDBYTE2463,83625
#define NEXTBYTE NEXTBYTE2464,83667
#define NEEDBITS(NEEDBITS2465,83695
#define DUMPBITS(DUMPBITS2466,83770
#define WAVAIL WAVAIL2468,83829
#define LOADOUT LOADOUT2469,83883
#define WRAP WRAP2470,83928
#define FLUSH FLUSH2471,84006
#define NEEDOUT NEEDOUT2472,84061
#define OUTBYTE(OUTBYTE2473,84137
#define LOAD LOAD2475,84207
static  uInt inflate_mask[17];inflate_mask2478,84318
void inflate_blocks_reset(inflate_blocks_statef *s, z_streamp z, uLong *c)inflate_blocks_reset2535,87139
inflate_blocks_statef *inflate_blocks_new(z_streamp z, check_func c, uInt w)inflate_blocks_new2553,87629
int inflate_blocks(inflate_blocks_statef *s, z_streamp z, int r)inflate_blocks2581,88274
int inflate_blocks_free(inflate_blocks_statef *s, z_streamp z)inflate_blocks_free2826,95489
static uInt inflate_mask[17] = {inflate_mask2855,96152
int inflate_flush(inflate_blocks_statef *s, z_streamp z, int r)inflate_flush2863,96411
#define exop exop2939,98256
#define bits bits2940,98284
static const uInt cplens[31] = { /* Copy lengths for literal codes 257..285 */cplens2956,98911
static const uInt cplext[31] = { /* Extra bits for literal codes 257..285 */cplext2960,99171
static const uInt cpdist[30] = { /* Copy offsets for distance codes 0..29 */cpdist2963,99381
static const uInt cpdext[30] = { /* Extra bits for distance codes */cpdext2967,99625
#define BMAX BMAX3006,101731
static int huft_build(uInt *b, uInt n, uInt s, const uInt *d, const uInt *e, inflate_huft ** t, uInt *m, inflate_huft *hp, uInt *hn, uInt *v)huft_build3008,101793
#define C0 C03049,104217
#define C2 C23050,104238
#define C4 C43051,104261
int inflate_trees_bits(uInt *c, uInt *bb, inflate_huft * *tb, inflate_huft *hp, z_streamp z)inflate_trees_bits3209,109070
int inflate_trees_dynamic(uInt nl, uInt nd, uInt *c, uInt *bl, uInt *bd, inflate_huft * *tl, inflate_huft * *td, inflate_huft *hp, z_streamp z)inflate_trees_dynamic3236,109953
static uInt fixed_bl = 9;fixed_bl3308,112119
static uInt fixed_bd = 5;fixed_bd3309,112145
static inflate_huft fixed_tl[] = {fixed_tl3310,112171
static inflate_huft fixed_td[] = {fixed_td3440,120170
int inflate_trees_fixed(uInt *bl, uInt *bd, inflate_huft * *tl, inflate_huft * *td, z_streamp z)inflate_trees_fixed3451,120752
#define exop exop3466,121299
#define bits bits3467,121327
#define GRABBITS(GRABBITS3470,121431
#define UNGRAB UNGRAB3471,121497
static int inflate_fast(uInt bl, uInt bd, inflate_huft *tl, inflate_huft *td, inflate_blocks_statef *s, z_streamp z)inflate_fast3478,121842
#define exop exop3623,126644
#define bits bits3624,126672
      START,    /* x: set up for LEN */START3627,126779
      LEN,      /* i: get length/literal/eob next */LEN3628,126819
      LENEXT,   /* i: getting length extra (have base) */LENEXT3629,126872
      DIST,     /* i: get distance next */DIST3630,126930
      DISTEXT,  /* i: getting distance extra */DISTEXT3631,126973
      COPY,     /* o: copying bytes in window, waiting for space */COPY3632,127021
      LIT,      /* o: got literal, waiting for output space */LIT3633,127089
      WASH,     /* o: got eob, possibly still output waiting */WASH3634,127152
      END,      /* x: got eob and all data flushed */END3635,127216
      BADCODE}  /* x: got error */BADCODE3636,127270
inflate_codes_mode;inflate_codes_mode3637,127305
struct inflate_codes_state {inflate_codes_state3640,127360
  inflate_codes_mode mode;      /* current inflate_codes mode */mode3643,127403
  uInt len;len3646,127504
      inflate_huft *tree;       /* pointer into tree */tree3649,127539
      uInt need;                /* bits needed */need3650,127595
    } code;             /* if LEN or DIST, where in tree */code3651,127645
    uInt lit;           /* if LIT, literal */lit3652,127705
      uInt get;                 /* bits to get for extra */get3654,127764
      uInt dist;                /* distance back to copy from */dist3655,127824
    } copy;             /* if EXT or COPY, where and how much */copy3656,127889
  } sub;                /* submode */sub3657,127954
  Byte lbits;           /* ltree bits decoded per branch */lbits3660,128030
  Byte dbits;           /* dtree bits decoder per branch */dbits3661,128090
  inflate_huft *ltree;          /* literal/length/eob tree */ltree3662,128150
  inflate_huft *dtree;          /* distance tree */dtree3663,128212
inflate_codes_statef *inflate_codes_new(uInt bl, uInt bd, inflate_huft *tl, inflate_huft *td, z_streamp z)inflate_codes_new3668,128270
int inflate_codes(inflate_blocks_statef *s, z_streamp z, int r)inflate_codes3686,128686
void inflate_codes_free(inflate_codes_statef *c, z_streamp z)inflate_codes_free3853,133815
#define BASE BASE3864,134121
#define NMAX NMAX3865,134180
#undef DO1DO13868,134275
#undef DO2DO23869,134286
#undef DO4DO43870,134297
#undef DO8DO83871,134308
#define DO1(DO13873,134320
#define DO2(DO23874,134366
#define DO4(DO43875,134412
#define DO8(DO83876,134458
#define DO16(DO163877,134504
static uLong adler32(uLong adler, const Byte *buf, uInt len)adler323880,134629
      imMETHOD,   /* waiting for method byte */imMETHOD3947,136313
      imFLAG,     /* waiting for flag byte */imFLAG3948,136361
      imDICT4,    /* four dictionary check bytes to go */imDICT43949,136407
      imDICT3,    /* three dictionary check bytes to go */imDICT33950,136465
      imDICT2,    /* two dictionary check bytes to go */imDICT23951,136524
      imDICT1,    /* one dictionary check byte to go */imDICT13952,136581
      imDICT0,    /* waiting for inflateSetDictionary */imDICT03953,136637
      imBLOCKS,   /* decompressing blocks */imBLOCKS3954,136694
      imCHECK4,   /* four check bytes to go */imCHECK43955,136739
      imCHECK3,   /* three check bytes to go */imCHECK33956,136786
      imCHECK2,   /* two check bytes to go */imCHECK23957,136834
      imCHECK1,   /* one check byte to go */imCHECK13958,136880
      imDONE,     /* finished check, done */imDONE3959,136925
      imBAD}      /* got an error--stay here */imBAD3960,136970
inflate_mode;inflate_mode3961,137018
struct internal_state {internal_state3964,137061
  inflate_mode  mode;   /* current inflate mode */mode3967,137099
    uInt method;        /* if FLAGS, method byte */method3971,137196
      uLong was;                /* computed check value */was3973,137261
      uLong need;               /* stream check value */need3974,137320
    } check;            /* if CHECK, check values to compare */check3975,137377
    uInt marker;        /* if BAD, inflateSync's marker bytes count */marker3976,137441
  } sub;        /* submode */sub3977,137512
  int  nowrap;          /* flag for no wrapper */nowrap3980,137580
  uInt wbits;           /* log2(window size)  (8..15, defaults to 15) */wbits3981,137630
    *blocks;            /* current inflate_blocks state */blocks3983,137728
int inflateReset(z_streamp z)inflateReset3988,137793
int inflateEnd(z_streamp z)inflateEnd4001,138109
int inflateInit2_(z_streamp z, int w, const char *version, int stream_size)inflateInit2_4015,138402
#define iNEEDBYTE iNEEDBYTE4074,139798
#define iNEXTBYTE iNEXTBYTE4075,139850
int inflate(z_streamp z, int f)inflate4077,139913
voidp zcalloc (voidp opaque, unsigned items, unsigned size)zcalloc4288,145716
void  zcfree (voidp opaque, voidp ptr)zcfree4294,145885

qcommon/msg.c,4865
static huffman_t		msgHuff;msgHuff25,1018
static qboolean			msgInit = qfalse;msgInit27,1046
int pcount[256];pcount29,1083
int oldsize = 0;oldsize40,1342
void MSG_Init( msg_t *buf, byte *data, int length ) {MSG_Init44,1391
void MSG_InitOOB( msg_t *buf, byte *data, int length ) {MSG_InitOOB53,1568
void MSG_Clear( msg_t *buf ) {MSG_Clear63,1767
void MSG_Bitstream( msg_t *buf ) {MSG_Bitstream70,1880
void MSG_BeginReading( msg_t *msg ) {MSG_BeginReading74,1938
void MSG_BeginReadingOOB( msg_t *msg ) {MSG_BeginReadingOOB80,2035
void MSG_Copy(msg_t *buf, byte *data, int length, msg_t *src)MSG_Copy86,2134
int	overflows;overflows104,2595
void MSG_WriteBits( msg_t *msg, int value, int bits ) {MSG_WriteBits107,2648
int MSG_ReadBits( msg_t *msg, int bits ) {MSG_ReadBits184,4300
void MSG_WriteChar( msg_t *sb, int c ) {MSG_WriteChar255,5712
void MSG_WriteByte( msg_t *sb, int c ) {MSG_WriteByte264,5889
void MSG_WriteData( msg_t *buf, const void *data, int length ) {MSG_WriteData273,6063
void MSG_WriteShort( msg_t *sb, int c ) {MSG_WriteShort280,6208
void MSG_WriteLong( msg_t *sb, int c ) {MSG_WriteLong289,6409
void MSG_WriteFloat( msg_t *sb, float f ) {MSG_WriteFloat293,6482
void MSG_WriteString( msg_t *sb, const char *s ) {MSG_WriteString299,6591
void MSG_WriteBigString( msg_t *sb, const char *s ) {MSG_WriteBigString325,7143
void MSG_WriteAngle( msg_t *sb, float f ) {MSG_WriteAngle351,7695
void MSG_WriteAngle16( msg_t *sb, float f ) {MSG_WriteAngle16355,7787
int MSG_ReadChar (msg_t *msg ) {MSG_ReadChar367,8017
int MSG_ReadByte( msg_t *msg ) {MSG_ReadByte378,8172
int MSG_LookaheadByte( msg_t *msg ) {MSG_LookaheadByte388,8327
int MSG_ReadShort( msg_t *msg ) {MSG_ReadShort399,8574
int MSG_ReadLong( msg_t *msg ) {MSG_ReadLong410,8724
float MSG_ReadFloat( msg_t *msg ) {MSG_ReadFloat421,8867
char *MSG_ReadString( msg_t *msg ) {MSG_ReadString432,9035
char *MSG_ReadBigString( msg_t *msg ) {MSG_ReadBigString460,9499
char *MSG_ReadStringLine( msg_t *msg ) {MSG_ReadStringLine488,9965
float MSG_ReadAngle16( msg_t *msg ) {MSG_ReadAngle16516,10443
void MSG_ReadData( msg_t *msg, void *data, int len ) {MSG_ReadData520,10525
#define	LOG(LOG539,10877
void MSG_WriteDelta( msg_t *msg, int oldV, int newV, int bits ) {MSG_WriteDelta541,10952
int	MSG_ReadDelta( msg_t *msg, int oldV, int bits ) {MSG_ReadDelta550,11151
void MSG_WriteDeltaFloat( msg_t *msg, float oldV, float newV ) {MSG_WriteDeltaFloat557,11294
float MSG_ReadDeltaFloat( msg_t *msg, float oldV ) {MSG_ReadDeltaFloat568,11520
int kbitmask[32] = {kbitmask586,11886
void MSG_WriteDeltaKey( msg_t *msg, int key, int oldV, int newV, int bits ) {MSG_WriteDeltaKey597,12303
int	MSG_ReadDeltaKey( msg_t *msg, int key, int oldV, int bits ) {MSG_ReadDeltaKey606,12520
void MSG_WriteDeltaKeyFloat( msg_t *msg, int key, float oldV, float newV ) {MSG_WriteDeltaKeyFloat613,12700
float MSG_ReadDeltaKeyFloat( msg_t *msg, int key, float oldV ) {MSG_ReadDeltaKeyFloat624,12944
#define	CM_ANGLE1 CM_ANGLE1644,13370
#define	CM_ANGLE2 CM_ANGLE2645,13396
#define	CM_ANGLE3 CM_ANGLE3646,13422
#define	CM_FORWARD	CM_FORWARD647,13448
#define	CM_SIDE	CM_SIDE648,13474
#define	CM_UP	CM_UP649,13498
#define	CM_BUTTONS	CM_BUTTONS650,13520
#define CM_WEAPON	CM_WEAPON651,13546
void MSG_WriteDeltaUsercmd( msg_t *msg, usercmd_t *from, usercmd_t *to ) {MSG_WriteDeltaUsercmd658,13644
void MSG_ReadDeltaUsercmd( msg_t *msg, usercmd_t *from, usercmd_t *to ) {MSG_ReadDeltaUsercmd682,14487
void MSG_WriteDeltaUsercmdKey( msg_t *msg, int key, usercmd_t *from, usercmd_t *to ) {MSG_WriteDeltaUsercmdKey703,15244
void MSG_ReadDeltaUsercmdKey( msg_t *msg, int key, usercmd_t *from, usercmd_t *to ) {MSG_ReadDeltaUsercmdKey741,16589
void MSG_ReportChangeVectors_f( void ) {MSG_ReportChangeVectors_f784,18028
	char	*name;name794,18190
	int		offset;offset795,18203
	int		bits;		// 0 = floatbits796,18217
} netField_t;netField_t797,18243
#define	NETF(NETF800,18310
netField_t	entityStateFields[] = entityStateFields802,18362
#define	FLOAT_INT_BITS	FLOAT_INT_BITS860,19928
#define	FLOAT_INT_BIAS	FLOAT_INT_BIAS861,19954
void MSG_WriteDeltaEntity( msg_t *msg, struct entityState_s *from, struct entityState_s *to, MSG_WriteDeltaEntity874,20402
void MSG_ReadDeltaEntity( msg_t *msg, entityState_t *from, entityState_t *to, MSG_ReadDeltaEntity991,23544
#define	PSF(PSF1113,26642
netField_t	playerStateFields[] = playerStateFields1115,26693
void MSG_WriteDeltaPlayerstate( msg_t *msg, struct playerState_s *from, struct playerState_s *to ) {MSG_WriteDeltaPlayerstate1173,28019
void MSG_ReadDeltaPlayerstate (msg_t *msg, playerState_t *from, playerState_t *to ) {MSG_ReadDeltaPlayerstate1329,31602
int msg_hData[256] = {msg_hData1464,34845
void MSG_initHuffman( void ) {MSG_initHuffman1723,38572

qcommon/q_shared.c,4272
float Com_Clamp( float min, float max, float value ) {Com_Clamp26,1079
char *COM_SkipPath (char *pathname)COM_SkipPath42,1276
const char *COM_GetExtension( const char *name ) {COM_GetExtension61,1496
void COM_StripExtension( const char *in, char *out, int destsize ) {COM_StripExtension83,1779
void COM_DefaultExtension (char *path, int maxSize, const char *extension ) {COM_DefaultExtension105,2147
short   ShortSwap (short l)ShortSwap155,3676
short	ShortNoSwap (short l)ShortNoSwap165,3780
int    LongSwap (int l)LongSwap170,3824
int	LongNoSwap (int l)LongNoSwap182,4005
qint64 Long64Swap (qint64 ll)Long64Swap187,4044
qint64 Long64NoSwap (qint64 ll)Long64NoSwap203,4273
float FloatSwap (const float *f) {FloatSwap208,4322
float FloatNoSwap (const float *f)FloatNoSwap217,4435
static	char	com_token[MAX_TOKEN_CHARS];com_token267,5316
static	char	com_parsename[MAX_TOKEN_CHARS];com_parsename268,5356
static	int		com_lines;com_lines269,5400
void COM_BeginParseSession( const char *name )COM_BeginParseSession271,5424
int COM_GetCurrentParseLine( void )COM_GetCurrentParseLine277,5556
char *COM_Parse( char **data_p )COM_Parse282,5616
void COM_ParseError( char *format, ... )COM_ParseError287,5693
void COM_ParseWarning( char *format, ... )COM_ParseWarning299,5961
static char *SkipWhitespace( char *data, qboolean *hasNewLines ) {SkipWhitespace323,6454
int COM_Compress( char *data_p ) {COM_Compress340,6689
char *COM_ParseExt( char **data_p, qboolean allowLineBreaks )COM_ParseExt408,8019
void COM_MatchToken( char **buf_p, char *match ) {COM_MatchToken515,9517
void SkipBracedSection (char **program) {SkipBracedSection534,9905
void SkipRestOfLine ( char **data ) {SkipRestOfLine557,10253
void Parse1DMatrix (char **buf_p, int x, float *m) {Parse1DMatrix573,10423
void Parse2DMatrix (char **buf_p, int y, int x, float *m) {Parse2DMatrix587,10649
void Parse3DMatrix (char **buf_p, int z, int y, int x, float *m) {Parse3DMatrix599,10857
int Com_HexStrToInt( const char *str )Com_HexStrToInt616,11139
int Q_isprint( int c )Q_isprint658,11812
int Q_islower( int c )Q_islower665,11902
int Q_isupper( int c )Q_isupper672,11988
int Q_isalpha( int c )Q_isalpha679,12074
char* Q_strrchr( const char* string, int c )Q_strrchr686,12188
qboolean Q_isanumber( const char *s )Q_isanumber706,12394
qboolean Q_isintegral( float f )Q_isintegral724,12600
void Q_strncpyz( char *dest, const char *src, int destsize ) {Q_strncpyz736,12748
int Q_stricmpn (const char *s1, const char *s2, int n) {Q_stricmpn751,13112
int Q_strncmp (const char *s1, const char *s2, int n) {Q_strncmp789,13724
int Q_stricmp (const char *s1, const char *s2) {Q_stricmp808,14006
char *Q_strlwr( char *s1 ) {Q_strlwr813,14113
char *Q_strupr( char *s1 ) {Q_strupr824,14232
void Q_strcat( char *dest, int size, const char *src ) {Q_strcat837,14412
const char *Q_stristr( const char *s, const char *find)Q_stristr850,14677
int Q_PrintStrlen( const char *string ) {Q_PrintStrlen880,15151
char *Q_CleanStr( char *string ) {Q_CleanStr903,15389
int Q_CountChar(const char *string, char tocount)Q_CountChar924,15650
void QDECL Com_sprintf( char *dest, int size, const char *fmt, ...) {Com_sprintf937,15814
char	* QDECL va( char *format, ... ) {va968,16508
void Com_TruncateLongString( char *buffer, const char *s )Com_TruncateLongString991,16932
char *Info_ValueForKey( const char *s, const char *key ) {Info_ValueForKey1022,17633
void Info_NextPair( const char **head, char *key, char *value ) {Info_NextPair1079,18510
void Info_RemoveKey( char *s, const char *key ) {Info_RemoveKey1118,18946
void Info_RemoveKey_Big( char *s, const char *key ) {Info_RemoveKey_Big1174,19680
qboolean Info_Validate( const char *s ) {Info_Validate1235,20490
void Info_SetValueForKey( char *s, const char *key, const char *value ) {Info_SetValueForKey1252,20743
void Info_SetValueForKey_Big( char *s, const char *key, const char *value ) {Info_SetValueForKey_Big1292,21608
static qboolean Com_CharIsOneOfCharset( char c, char *set )Com_CharIsOneOfCharset1334,22505
char *Com_SkipCharset( char *s, char *sep )Com_SkipCharset1352,22739
char *Com_SkipTokens( char *s, int numTokens, char *sep )Com_SkipTokens1372,22959

qcommon/cm_local.h,4512
#define	MAX_SUBMODELS	MAX_SUBMODELS27,1043
#define	BOX_MODEL_HANDLE	BOX_MODEL_HANDLE28,1071
#define CAPSULE_MODEL_HANDLE	CAPSULE_MODEL_HANDLE29,1101
	cplane_t	*plane;plane33,1153
	int			children[2];		// negative numbers are leafschildren34,1171
} cNode_t;cNode_t35,1222
	int			cluster;cluster38,1251
	int			area;area39,1267
	int			firstLeafBrush;firstLeafBrush41,1281
	int			numLeafBrushes;numLeafBrushes42,1304
	int			firstLeafSurface;firstLeafSurface44,1328
	int			numLeafSurfaces;numLeafSurfaces45,1353
} cLeaf_t;cLeaf_t46,1377
typedef struct cmodel_s {cmodel_s48,1389
	vec3_t		mins, maxs;mins49,1415
	vec3_t		mins, maxs;maxs49,1415
	cLeaf_t		leaf;			// submodels don't reference the main treeleaf50,1436
} cmodel_t;cmodel_t51,1497
	cplane_t	*plane;plane54,1527
	int			surfaceFlags;surfaceFlags55,1545
	int			shaderNum;shaderNum56,1566
} cbrushside_t;cbrushside_t57,1584
	int			shaderNum;		// the shader that determined the contentsshaderNum60,1618
	int			contents;contents61,1680
	vec3_t		bounds[2];bounds62,1697
	int			numsides;numsides63,1717
	cbrushside_t	*sides;sides64,1734
	int			checkcount;		// to avoid repeated testingscheckcount65,1756
} cbrush_t;cbrush_t66,1806
	int			checkcount;				// to avoid repeated testingscheckcount70,1837
	int			surfaceFlags;surfaceFlags71,1889
	int			contents;contents72,1910
	struct patchCollide_s	*pc;pc73,1927
} cPatch_t;cPatch_t74,1955
	int			floodnum;floodnum78,1986
	int			floodvalid;floodvalid79,2003
} cArea_t;cArea_t80,2022
	char		name[MAX_QPATH];name83,2051
	int			numShaders;numShaders85,2076
	dshader_t	*shaders;shaders86,2095
	int			numBrushSides;numBrushSides88,2117
	cbrushside_t *brushsides;brushsides89,2139
	int			numPlanes;numPlanes91,2167
	cplane_t	*planes;planes92,2185
	int			numNodes;numNodes94,2205
	cNode_t		*nodes;nodes95,2222
	int			numLeafs;numLeafs97,2241
	cLeaf_t		*leafs;leafs98,2258
	int			numLeafBrushes;numLeafBrushes100,2277
	int			*leafbrushes;leafbrushes101,2300
	int			numLeafSurfaces;numLeafSurfaces103,2322
	int			*leafsurfaces;leafsurfaces104,2346
	int			numSubModels;numSubModels106,2369
	cmodel_t	*cmodels;cmodels107,2390
	int			numBrushes;numBrushes109,2411
	cbrush_t	*brushes;brushes110,2430
	int			numClusters;numClusters112,2451
	int			clusterBytes;clusterBytes113,2471
	byte		*visibility;visibility114,2492
	qboolean	vised;			// if false, visibility is just a single cluster of ffsvised115,2512
	int			numEntityChars;numEntityChars117,2588
	char		*entityString;entityString118,2611
	int			numAreas;numAreas120,2634
	cArea_t		*areas;areas121,2651
	int			*areaPortals;	// [ numAreas*numAreas ] reference countsareaPortals122,2669
	int			numSurfaces;numSurfaces124,2733
	cPatch_t	**surfaces;			// non-patches will be NULLsurfaces125,2753
	int			floodvalid;floodvalid127,2806
	int			checkcount;					// incremented on each tracecheckcount128,2825
} clipMap_t;clipMap_t129,2877
#define	SURFACE_CLIP_EPSILON	SURFACE_CLIP_EPSILON134,3004
	qboolean	use;use148,3322
	float		radius;radius149,3337
	float		halfheight;halfheight150,3353
	vec3_t		offset;offset151,3373
} sphere_t;sphere_t152,3390
	vec3_t		start;start155,3420
	vec3_t		end;end156,3436
	vec3_t		size[2];	// size of the box being swept through the modelsize157,3450
	vec3_t		offsets[8];	// [signbits][x] = either size[0][x] or size[1][x]offsets158,3517
	float		maxOffset;	// longest corner length from originmaxOffset159,3589
	vec3_t		extents;	// greatest of abs(size[0]) and abs(size[1])extents160,3645
	vec3_t		bounds[2];	// enclosing box of start and end surrounding by sizebounds161,3708
	vec3_t		modelOrigin;// origin of the model tracing throughmodelOrigin162,3782
	int			contents;	// ored contents of the model tracing throughcontents163,3842
	qboolean	isPoint;	// optimized caseisPoint164,3905
	trace_t		trace;		// returned from trace calltrace165,3942
	sphere_t	sphere;		// sphere for oriendted capsule collisionsphere166,3988
} traceWork_t;traceWork_t167,4049
typedef struct leafList_s {leafList_s169,4065
	int		count;count170,4093
	int		maxcount;maxcount171,4106
	qboolean	overflowed;overflowed172,4122
	int		*list;list173,4144
	vec3_t	bounds[2];bounds174,4157
	int		lastLeaf;		// for overflows where each leaf can't be stored individuallylastLeaf175,4176
	void	(*storeLeafs)( struct leafList_s *ll, int nodenum );storeLeafs176,4255
} leafList_t;leafList_t177,4314

qcommon/huffman.c,1431
static int			bloc = 0;bloc30,1238
void	Huff_putBit( int bit, byte *fout, int *offset) {Huff_putBit32,1262
int		Huff_getBloc(void)Huff_getBloc42,1447
void	Huff_setBloc(int _bloc)Huff_setBloc47,1490
int		Huff_getBit( byte *fin, int *offset) {Huff_getBit52,1539
static void add_bit (char bit, byte *fout) {add_bit62,1735
static int get_bit (byte *fin) {get_bit71,1930
static node_t **get_ppnode(huff_t* huff) {get_ppnode78,2035
static void free_ppnode(huff_t* huff, node_t **ppnode) {free_ppnode89,2269
static void swap (huff_t* huff, node_t *node1, node_t *node2) { swap95,2447
static void swaplist(node_t *node1, node_t *node2) {swaplist126,2978
static void increment(huff_t* huff, node_t *node) {increment158,3534
void Huff_addRef(huff_t* huff, byte ch) {Huff_addRef196,4345
int Huff_Receive (node_t *node, int *ch, byte *fin) {Huff_Receive266,6145
void Huff_offsetReceive (node_t *node, int *ch, byte *fin, int *offset) {Huff_offsetReceive282,6458
static void send(node_t *node, node_t *child, byte *fout) {send301,6847
void Huff_transmit (huff_t *huff, int ch, byte *fout) {Huff_transmit315,7092
void Huff_offsetTransmit (huff_t *huff, int ch, byte *fout, int *offset) {Huff_offsetTransmit328,7416
void Huff_Decompress(msg_t *mbuf, int offset) {Huff_Decompress334,7562
void Huff_Compress(msg_t *mbuf, int offset) {Huff_Compress388,8944
void Huff_Init(huffman_t *huff) {Huff_Init427,9871

qcommon/cm_patch.h,1342
#define	MAX_FACETS	MAX_FACETS63,2176
#define	MAX_PATCH_PLANES	MAX_PATCH_PLANES64,2202
	float	plane[4];plane67,2250
	int		signbits;		// signx + (signy<<1) + (signz<<2), used as lookup during collisionsignbits68,2267
} patchPlane_t;patchPlane_t69,2352
	int			surfacePlane;surfacePlane72,2386
	int			numBorders;		// 3 or four + 6 axial bevels + 4 or 3 * 4 edge bevelsnumBorders73,2407
	int			borderPlanes[4+6+16];borderPlanes74,2482
	int			borderInward[4+6+16];borderInward75,2511
	qboolean	borderNoAdjust[4+6+16];borderNoAdjust76,2540
} facet_t;facet_t77,2574
typedef struct patchCollide_s {patchCollide_s79,2586
	vec3_t	bounds[2];bounds80,2618
	int		numPlanes;			// surface planes plus edge planesnumPlanes81,2637
	patchPlane_t	*planes;planes82,2691
	int		numFacets;numFacets83,2714
	facet_t	*facets;facets84,2731
} patchCollide_t;patchCollide_t85,2749
#define	MAX_GRID_SIZE	MAX_GRID_SIZE88,2769
	int			width;width91,2813
	int			height;height92,2827
	qboolean	wrapWidth;wrapWidth93,2842
	qboolean	wrapHeight;wrapHeight94,2863
	vec3_t	points[MAX_GRID_SIZE][MAX_GRID_SIZE];	// [width][height]points95,2885
} cGrid_t;cGrid_t96,2950
#define	SUBDIVIDE_DISTANCE	SUBDIVIDE_DISTANCE98,2962
#define	PLANE_TRI_EPSILON	PLANE_TRI_EPSILON99,3042
#define	WRAP_POINT_EPSILON	WRAP_POINT_EPSILON100,3072

qcommon/puff.c,1542
#define local local75,3627
#define MAXBITS MAXBITS81,3821
#define MAXLCODES MAXLCODES82,3882
#define MAXDCODES MAXDCODES83,3959
#define MAXCODES MAXCODES84,4030
#define FIXLCODES FIXLCODES85,4106
struct state {state88,4211
    uint8_t *out;         /* output buffer */out90,4249
    uint32_t outlen;       /* available space at out */outlen91,4295
    uint32_t outcnt;       /* bytes written to out so far */outcnt92,4351
    uint8_t *in;          /* input buffer */in95,4435
    uint32_t inlen;        /* available input at in */inlen96,4480
    uint32_t incnt;        /* bytes read so far */incnt97,4535
    int32_t bitbuf;                 /* bit buffer */bitbuf98,4586
    int32_t bitcnt;                 /* number of bits in bit buffer */bitcnt99,4639
    jmp_buf env;env102,4776
local int32_t bits(struct state *s, int32_t need)bits116,5229
local int32_t stored(struct state *s)stored153,6591
struct huffman {huffman193,8042
    int16_t *count;       /* number of symbols of each length */count194,8059
    int16_t *symbol;      /* canonically ordered symbols */symbol195,8124
local int32_t decode(struct state *s, struct huffman *h)decode221,9411
local int32_t construct(struct huffman *h, int16_t *length, int32_t n)construct294,12663
local int32_t codes(struct state *s,codes389,17550
local int32_t fixed(struct state *s)fixed477,21420
local int32_t dynamic(struct state *s)dynamic601,27593
int32_t puff(uint8_t  *dest,           /* pointer to destination pointer */puff715,33201

qcommon/q_platform.h,4039
#define __Q_PLATFORM_H__Q_PLATFORM_H24,998
#define id386 id38629,1105
#define idppc idppc30,1121
#define idppc_altivec idppc_altivec31,1137
#define id386 id38636,1231
#define id386 id38638,1253
#define idppc idppc43,1396
#define idppc_altivec idppc_altivec45,1433
#define VECCONST_UINT8(VECCONST_UINT847,1524
#define VECCONST_UINT8(VECCONST_UINT850,1646
#define idppc_altivec idppc_altivec54,1775
#define idppc idppc57,1812
#define idppc_altivec idppc_altivec58,1828
#define QDECLQDECL66,1973
#undef QDECLQDECL72,2082
#define QDECL QDECL73,2095
#define OS_STRING OS_STRING76,2142
#define OS_STRING OS_STRING78,2197
#define ID_INLINE ID_INLINE81,2235
#define PATH_SEP PATH_SEP82,2262
#define ARCH_STRING ARCH_STRING85,2331
#define ARCH_STRING ARCH_STRING87,2380
#define Q3_LITTLE_ENDIANQ3_LITTLE_ENDIAN90,2414
#define DLL_EXT DLL_EXT92,2440
#define MACOS_XMACOS_X102,2670
#define OS_STRING OS_STRING105,2694
#define ID_INLINE ID_INLINE106,2721
#define PATH_SEP PATH_SEP107,2746
#define ARCH_STRING ARCH_STRING110,2783
#define Q3_BIG_ENDIANQ3_BIG_ENDIAN111,2809
#define ARCH_STRING ARCH_STRING113,2854
#define Q3_LITTLE_ENDIANQ3_LITTLE_ENDIAN114,2881
#define DLL_EXT DLL_EXT117,2914
#define OS_STRING OS_STRING127,3066
#define ID_INLINE ID_INLINE128,3092
#define PATH_SEP PATH_SEP129,3117
#define ARCH_STRING ARCH_STRING132,3160
#define ARCH_STRING ARCH_STRING134,3212
#define ARCH_STRING ARCH_STRING136,3269
#define ARCH_STRING ARCH_STRING138,3323
#define ARCH_STRING ARCH_STRING140,3372
#define ARCH_STRING ARCH_STRING142,3423
#define ARCH_STRING ARCH_STRING144,3474
#define ARCH_STRING ARCH_STRING146,3525
#define ARCH_STRING ARCH_STRING148,3577
#define ARCH_STRING ARCH_STRING150,3627
#define ARCH_STRING ARCH_STRING152,3676
#define ARCH_STRING ARCH_STRING154,3726
#define ARCH_STRING ARCH_STRING156,3776
#define ARCH_STRING ARCH_STRING158,3824
#define Q3_BIG_ENDIANQ3_BIG_ENDIAN162,3896
#define Q3_LITTLE_ENDIANQ3_LITTLE_ENDIAN164,3924
#define DLL_EXT DLL_EXT167,3957
  #define __BSD____BSD__179,4208
#define OS_STRING OS_STRING183,4259
#define OS_STRING OS_STRING185,4314
#define OS_STRING OS_STRING187,4368
#define ID_INLINE ID_INLINE190,4403
#define PATH_SEP PATH_SEP191,4428
#define ARCH_STRING ARCH_STRING194,4466
#define ARCH_STRING ARCH_STRING196,4515
#define Q3_BIG_ENDIANQ3_BIG_ENDIAN200,4580
#define Q3_LITTLE_ENDIANQ3_LITTLE_ENDIAN202,4608
#define DLL_EXT DLL_EXT205,4641
#define OS_STRING OS_STRING216,4813
#define ID_INLINE ID_INLINE217,4841
#define PATH_SEP PATH_SEP218,4866
#define ARCH_STRING ARCH_STRING221,4904
#define ARCH_STRING ARCH_STRING223,4953
#define Q3_BIG_ENDIANQ3_BIG_ENDIAN227,5016
#define Q3_LITTLE_ENDIANQ3_LITTLE_ENDIAN229,5070
#define DLL_EXT DLL_EXT232,5103
#define OS_STRING OS_STRING240,5227
#define ID_INLINE ID_INLINE241,5252
#define PATH_SEP PATH_SEP242,5279
#define ARCH_STRING ARCH_STRING244,5301
#define Q3_BIG_ENDIAN Q3_BIG_ENDIAN246,5329
#define DLL_EXT DLL_EXT248,5388
#define OS_STRING OS_STRING256,5512
#define ID_INLINEID_INLINE257,5537
#define PATH_SEP PATH_SEP258,5555
#define ARCH_STRING ARCH_STRING260,5577
#define DLL_EXT DLL_EXT262,5609
#define LittleShort(LittleShort299,6312
#define LittleLong(LittleLong300,6348
#define LittleFloat(LittleFloat301,6382
#define BigShortBigShort302,6419
#define BigLongBigLong303,6436
#define BigFloatBigFloat304,6452
#define LittleShortLittleShort308,6505
#define LittleLongLittleLong309,6525
#define LittleFloatLittleFloat310,6544
#define BigShort(BigShort311,6564
#define BigLong(BigLong312,6597
#define BigFloat(BigFloat313,6628
#define LittleShortLittleShort317,6687
#define LittleLongLittleLong318,6707
#define LittleFloatLittleFloat319,6726
#define BigShortBigShort320,6746
#define BigLongBigLong321,6763
#define BigFloatBigFloat322,6779
#define PLATFORM_STRING PLATFORM_STRING331,6876
#define PLATFORM_STRING PLATFORM_STRING333,6932

qcommon/cm_polylib.c,1550
int	c_active_windings;c_active_windings31,1174
int	c_peak_windings;c_peak_windings32,1197
int	c_winding_allocs;c_winding_allocs33,1218
int	c_winding_points;c_winding_points34,1240
void pw(winding_t *w)pw36,1263
winding_t	*AllocWinding (int points)AllocWinding49,1453
void FreeWinding (winding_t *w)FreeWinding66,1772
int	c_removed;c_removed81,2026
void	RemoveColinearPoints (winding_t *w)RemoveColinearPoints83,2042
void WindingPlane (winding_t *w, vec3_t normal, vec_t *dist)WindingPlane119,2688
vec_t	WindingArea (winding_t *w)WindingArea136,3004
void	WindingBounds (winding_t *w, vec3_t mins, vec3_t maxs)WindingBounds158,3361
void	WindingCenter (winding_t *w, vec3_t center)WindingCenter184,3757
winding_t *BaseWindingForPlane (vec3_t normal, vec_t dist)BaseWindingForPlane202,4071
winding_t	*CopyWinding (winding_t *w)CopyWinding273,5307
winding_t	*ReverseWinding (winding_t *w)ReverseWinding289,5566
void	ClipWindingEpsilon (winding_t *in, vec3_t normal, vec_t dist, ClipWindingEpsilon309,5855
void ChopWindingInPlace (winding_t **inout, vec3_t normal, vec_t dist, vec_t epsilon)ChopWindingInPlace421,8175
winding_t	*ChopWinding (winding_t *in, vec3_t normal, vec_t dist)ChopWinding526,10267
void CheckWinding (winding_t *w)CheckWinding544,10532
int		WindingOnPlaneSide (winding_t *w, vec3_t normal, vec_t dist)WindingOnPlaneSide607,11977
#define	MAX_HULL_POINTS	MAX_HULL_POINTS649,12592
void	AddWindingToConvexHull( winding_t *w, winding_t **hull, vec3_t normal ) {AddWindingToConvexHull650,12621

qcommon/cvar.c,2977
cvar_t		*cvar_vars;cvar_vars27,1058
cvar_t		*cvar_cheats;cvar_cheats28,1078
int			cvar_modifiedFlags;cvar_modifiedFlags29,1100
#define	MAX_CVARS	MAX_CVARS31,1127
cvar_t		cvar_indexes[MAX_CVARS];cvar_indexes32,1150
int			cvar_numIndexes;cvar_numIndexes33,1183
#define FILE_HASH_SIZE	FILE_HASH_SIZE35,1207
static	cvar_t*		hashTable[FILE_HASH_SIZE];hashTable36,1235
static long generateHashValue( const char *fname ) {generateHashValue45,1434
static qboolean Cvar_ValidateString( const char *s ) {Cvar_ValidateString66,1740
static cvar_t *Cvar_FindVar( const char *var_name ) {Cvar_FindVar87,2034
float Cvar_VariableValue( const char *var_name ) {Cvar_VariableValue107,2341
int Cvar_VariableIntegerValue( const char *var_name ) {Cvar_VariableIntegerValue122,2545
char *Cvar_VariableString( const char *var_name ) {Cvar_VariableString137,2750
void Cvar_VariableStringBuffer( const char *var_name, char *buffer, int bufsize ) {Cvar_VariableStringBuffer152,2957
int Cvar_Flags(const char *var_name)Cvar_Flags169,3223
void	Cvar_CommandCompletion( void(*callback)(const char *s) ) {Cvar_CommandCompletion184,3429
static const char *Cvar_Validate( cvar_t *var,Cvar_Validate197,3644
cvar_t *Cvar_Get( const char *var_name, const char *var_value, int flags ) {Cvar_Get304,5527
void Cvar_Print( cvar_t *v ) {Cvar_Print414,8448
cvar_t *Cvar_Set2( const char *var_name, const char *value, qboolean force ) {Cvar_Set2439,8919
void Cvar_Set( const char *var_name, const char *value) {Cvar_Set556,11226
void Cvar_SetLatched( const char *var_name, const char *value) {Cvar_SetLatched565,11372
void Cvar_SetValue( const char *var_name, float value) {Cvar_SetValue574,11524
void Cvar_Reset( const char *var_name ) {Cvar_Reset591,11811
void Cvar_ForceReset(const char *var_name)Cvar_ForceReset600,11942
void Cvar_SetCheatState( void ) {Cvar_SetCheatState612,12132
qboolean Cvar_Command( void ) {Cvar_Command639,12764
void Cvar_Print_f(void)Cvar_Print_f668,13247
void Cvar_Toggle_f( void ) {Cvar_Toggle_f696,13608
void Cvar_Set_f( void ) {Cvar_Set_f718,13980
void Cvar_Reset_f( void ) {Cvar_Reset_f773,14872
void Cvar_WriteVariables( fileHandle_t f ) {Cvar_WriteVariables789,15169
void Cvar_List_f( void ) {Cvar_List_f824,16241
void Cvar_Restart_f( void ) {Cvar_Restart_f890,17382
char	*Cvar_InfoString( int bit ) {Cvar_InfoString942,18376
char	*Cvar_InfoString_Big( int bit ) {Cvar_InfoString_Big963,18749
void Cvar_InfoStringBuffer( int bit, char* buff, int buffsize ) {Cvar_InfoStringBuffer984,19086
void Cvar_CheckRange( cvar_t *var, float min, float max, qboolean integral )Cvar_CheckRange993,19270
void	Cvar_Register( vmCvar_t *vmCvar, const char *varName, const char *defaultValue, int flags ) {Cvar_Register1011,19640
void	Cvar_Update( vmCvar_t *vmCvar ) {Cvar_Update1031,20043
void Cvar_CompleteCvarName( char *args, int argNum )Cvar_CompleteCvarName1063,20881
void Cvar_Init (void) {Cvar_Init1082,21162

qcommon/cm_load.c,2742
void SetPlaneSignbits (cplane_t *out) {SetPlaneSignbits30,1071
#define	BOX_BRUSHES	BOX_BRUSHES46,1407
#define	BOX_SIDES	BOX_SIDES47,1430
#define	BOX_LEAFS	BOX_LEAFS48,1451
#define	BOX_PLANES	BOX_PLANES49,1472
#define	LL(LL51,1496
clipMap_t	cm;cm54,1528
int			c_pointcontents;c_pointcontents55,1542
int			c_traces, c_brush_traces, c_patch_traces;c_traces56,1565
int			c_traces, c_brush_traces, c_patch_traces;c_brush_traces56,1565
int			c_traces, c_brush_traces, c_patch_traces;c_patch_traces56,1565
byte		*cmod_base;cmod_base59,1615
cvar_t		*cm_noAreas;cm_noAreas62,1647
cvar_t		*cm_noCurves;cm_noCurves63,1668
cvar_t		*cm_playerCurveClip;cm_playerCurveClip64,1690
cmodel_t	box_model;box_model67,1727
cplane_t	*box_planes;box_planes68,1747
cbrush_t	*box_brush;box_brush69,1769
void CMod_LoadShaders( lump_t *l ) {CMod_LoadShaders90,2105
void CMod_LoadSubmodels( lump_t *l ) {CMod_LoadSubmodels121,2819
void CMod_LoadNodes( lump_t *l ) {CMod_LoadNodes179,4366
void CM_BoundBrush( cbrush_t *b ) {CM_BoundBrush215,5062
void CMod_LoadBrushes( lump_t *l ) {CMod_LoadBrushes233,5431
void CMod_LoadLeafs (lump_t *l)CMod_LoadLeafs269,6311
void CMod_LoadPlanes (lump_t *l)CMod_LoadPlanes312,7478
void CMod_LoadLeafBrushes (lump_t *l)CMod_LoadLeafBrushes353,8304
void CMod_LoadLeafSurfaces( lump_t *l )CMod_LoadLeafSurfaces380,8846
void CMod_LoadBrushSides (lump_t *l)CMod_LoadBrushSides407,9376
void CMod_LoadEntityString( lump_t *l ) {CMod_LoadEntityString443,10255
#define	VIS_HEADER	VIS_HEADER454,10515
void CMod_LoadVisibility( lump_t *l ) {CMod_LoadVisibility455,10536
#define	MAX_PATCH_VERTS	MAX_PATCH_VERTS483,11204
void CMod_LoadPatches( lump_t *surfs, lump_t *verts ) {CMod_LoadPatches484,11234
unsigned CM_LumpChecksum(lump_t *lump) {CM_LumpChecksum541,13017
unsigned CM_Checksum(dheader_t *header) {CM_Checksum545,13144
void CM_LoadMap( const char *name, qboolean clientload, int *checksum ) {CM_LoadMap569,14067
void CM_ClearMap( void ) {CM_ClearMap668,16619
cmodel_t	*CM_ClipHandleToModel( clipHandle_t handle ) {CM_ClipHandleToModel678,16776
clipHandle_t	CM_InlineModel( int index ) {CM_InlineModel703,17376
int		CM_NumClusters( void ) {CM_NumClusters710,17542
int		CM_NumInlineModels( void ) {CM_NumInlineModels714,17599
char	*CM_EntityString( void ) {CM_EntityString718,17661
int		CM_LeafCluster( int leafnum ) {CM_LeafCluster722,17721
int		CM_LeafArea( int leafnum ) {CM_LeafArea729,17899
void CM_InitBoxHull (void)CM_InitBoxHull747,18342
clipHandle_t CM_TempBoxModel( const vec3_t mins, const vec3_t maxs, int capsule ) {CM_TempBoxModel801,19494
void CM_ModelBounds( clipHandle_t model, vec3_t mins, vec3_t maxs ) {CM_ModelBounds834,20265

qcommon/cm_test.c,1575
int CM_PointLeafnum_r( const vec3_t p, int num ) {CM_PointLeafnum_r31,1061
int CM_PointLeafnum( const vec3_t p ) {CM_PointLeafnum56,1493
void CM_StoreLeafs( leafList_t *ll, int nodenum ) {CM_StoreLeafs73,1792
void CM_StoreBrushes( leafList_t *ll, int nodenum ) {CM_StoreBrushes90,2127
void CM_BoxLeafnums_r( leafList_t *ll, int nodenum ) {CM_BoxLeafnums_r140,3172
int	CM_BoxLeafnums( const vec3_t mins, const vec3_t maxs, int *list, int listsize, int *lastLeaf) {CM_BoxLeafnums172,3752
int CM_BoxBrushes( const vec3_t mins, const vec3_t maxs, cbrush_t **list, int listsize ) {CM_BoxBrushes197,4226
int CM_PointContents( const vec3_t p, clipHandle_t model ) {CM_PointContents226,4754
int	CM_TransformedPointContents( const vec3_t p, clipHandle_t model, const vec3_t origin, const vec3_t angles) {CM_TransformedPointContents283,5882
byte	*CM_ClusterPVS (int cluster) {CM_ClusterPVS316,6661
void CM_FloodArea_r( int areaNum, int floodnum) {CM_FloodArea_r334,7025
void	CM_FloodAreaConnections( void ) {CM_FloodAreaConnections363,7576
void	CM_AdjustAreaPortalState( int area1, int area2, qboolean open ) {CM_AdjustAreaPortalState389,8004
qboolean	CM_AreasConnected( int area1, int area2 ) {CM_AreasConnected418,8726
int CM_WriteAreaBits (byte *buffer, int area)CM_WriteAreaBits454,9484
qboolean CM_BoundsIntersect( const vec3_t mins, const vec3_t maxs, const vec3_t mins2, const vec3_t maxs2 )CM_BoundsIntersect488,10023
qboolean CM_BoundsIntersectPoint( const vec3_t mins, const vec3_t maxs, const vec3_t point )CM_BoundsIntersectPoint508,10530

qcommon/cm_trace.c,2527
void RotatePoint(vec3_t point, /*const*/ vec3_t matrix[3]) { // FIXME RotatePoint44,1485
void TransposeMatrix(/*const*/ vec3_t matrix[3], vec3_t transpose[3]) { // FIXMETransposeMatrix58,1779
void CreateRotationMatrix(const vec3_t angles, vec3_t matrix[3]) {CreateRotationMatrix72,2032
void CM_ProjectPointOntoVector( vec3_t point, vec3_t vStart, vec3_t vDir, vec3_t vProj )CM_ProjectPointOntoVector82,2251
float CM_DistanceFromLineSquared(vec3_t p, vec3_t lp1, vec3_t lp2, vec3_t dir) {CM_DistanceFromLineSquared96,2584
float CM_VectorDistanceSquared(vec3_t p1, vec3_t p2) {CM_VectorDistanceSquared121,3166
float SquareRootFloat(float number) {SquareRootFloat133,3358
void CM_TestBoxInBrush( traceWork_t *tw, cbrush_t *brush ) {CM_TestBoxInBrush161,3864
void CM_TestInLeaf( traceWork_t *tw, cLeaf_t *leaf ) {CM_TestInLeaf242,5809
void CM_TestCapsuleInCapsule( traceWork_t *tw, clipHandle_t model ) {CM_TestCapsuleInCapsule304,7174
void CM_TestBoundingBoxInCapsule( traceWork_t *tw, clipHandle_t model ) {CM_TestBoundingBoxInCapsule373,9125
#define	MAX_POSITION_LEAFS	MAX_POSITION_LEAFS409,10095
void CM_PositionTest( traceWork_t *tw ) {CM_PositionTest410,10127
void CM_TraceThroughPatch( traceWork_t *tw, cPatch_t *patch ) {CM_TraceThroughPatch462,11065
void CM_TraceThroughBrush( traceWork_t *tw, cbrush_t *brush ) {CM_TraceThroughBrush482,11441
void CM_TraceThroughLeaf( traceWork_t *tw, cLeaf_t *leaf ) {CM_TraceThroughLeaf665,15617
#define RADIUS_EPSILON	RADIUS_EPSILON724,16907
void CM_TraceThroughSphere( traceWork_t *tw, vec3_t origin, float radius, vec3_t start, vec3_t end ) {CM_TraceThroughSphere733,17054
void CM_TraceThroughVerticalCylinder( traceWork_t *tw, vec3_t origin, float radius, float halfheight, vec3_t start, vec3_t end) {CM_TraceThroughVerticalCylinder821,19740
void CM_TraceCapsuleThroughCapsule( traceWork_t *tw, clipHandle_t model ) {CM_TraceCapsuleThroughCapsule924,23023
void CM_TraceBoundingBoxThroughCapsule( traceWork_t *tw, clipHandle_t model ) {CM_TraceBoundingBoxThroughCapsule986,25228
void CM_TraceThroughTree( traceWork_t *tw, int num, float p1f, float p2f, vec3_t p1, vec3_t p2) {CM_TraceThroughTree1029,26545
void CM_Trace( trace_t *results, const vec3_t start, const vec3_t end, vec3_t mins, vec3_t maxs,CM_Trace1142,29047
void CM_BoxTrace( trace_t *results, const vec3_t start, const vec3_t end,CM_BoxTrace1360,34945
void CM_TransformedBoxTrace( trace_t *results, const vec3_t start, const vec3_t end,CM_TransformedBoxTrace1374,35357

qcommon/vm_powerpc_asm.c,11312
#define ASM_ERROR_OPC ASM_ERROR_OPC49,1833
#define ppc_cpu_t ppc_cpu_t55,1895
struct powerpc_opcodepowerpc_opcode57,1918
	const char *name;name59,1942
	unsigned long opcode;opcode60,1961
	unsigned long mask;mask61,1984
	ppc_cpu_t flags;flags62,2005
	unsigned char operands[8];operands63,2023
static const struct powerpc_opcode powerpc_opcodes[];powerpc_opcodes66,2055
static const int powerpc_num_opcodes;powerpc_num_opcodes67,2109
#define PPC_OPCODE_PPC	PPC_OPCODE_PPC69,2148
#define PPC_OPCODE_POWER	PPC_OPCODE_POWER70,2176
#define PPC_OPCODE_POWER2	PPC_OPCODE_POWER271,2205
#define PPC_OPCODE_32	PPC_OPCODE_3272,2235
#define PPC_OPCODE_64	PPC_OPCODE_6473,2262
#define PPC_OPCODE_601	PPC_OPCODE_60174,2296
#define PPC_OPCODE_COMMON	PPC_OPCODE_COMMON75,2331
#define PPC_OPCODE_ANY	PPC_OPCODE_ANY76,2368
#define PPC_OPCODE_64_BRIDGE	PPC_OPCODE_64_BRIDGE77,2403
#define PPC_OPCODE_ALTIVEC	PPC_OPCODE_ALTIVEC78,2443
#define PPC_OPCODE_403	PPC_OPCODE_40379,2481
#define PPC_OPCODE_BOOKE	PPC_OPCODE_BOOKE80,2516
#define PPC_OPCODE_BOOKE64	PPC_OPCODE_BOOKE6481,2552
#define PPC_OPCODE_440	PPC_OPCODE_44082,2590
#define PPC_OPCODE_POWER4	PPC_OPCODE_POWER483,2625
#define PPC_OPCODE_NOPOWER4	PPC_OPCODE_NOPOWER484,2662
#define PPC_OPCODE_CLASSIC	PPC_OPCODE_CLASSIC85,2701
#define PPC_OPCODE_SPE	PPC_OPCODE_SPE86,2739
#define PPC_OPCODE_ISEL	PPC_OPCODE_ISEL87,2774
#define PPC_OPCODE_EFS	PPC_OPCODE_EFS88,2810
#define PPC_OPCODE_BRLOCK	PPC_OPCODE_BRLOCK89,2845
#define PPC_OPCODE_PMR	PPC_OPCODE_PMR90,2882
#define PPC_OPCODE_CACHELCK	PPC_OPCODE_CACHELCK91,2917
#define PPC_OPCODE_RFMCI	PPC_OPCODE_RFMCI92,2956
#define PPC_OPCODE_POWER5	PPC_OPCODE_POWER593,2992
#define PPC_OPCODE_E300	PPC_OPCODE_E30094,3029
#define PPC_OPCODE_POWER6	PPC_OPCODE_POWER695,3065
#define PPC_OPCODE_CELL	PPC_OPCODE_CELL96,3102
#define PPC_OPCODE_PPCPS	PPC_OPCODE_PPCPS97,3138
#define PPC_OPCODE_E500MC	PPC_OPCODE_E500MC98,3174
#define PPC_OPCODE_405	PPC_OPCODE_40599,3211
#define PPC_OPCODE_VSX	PPC_OPCODE_VSX100,3246
#define PPC_OP(PPC_OP102,3282
struct powerpc_operandpowerpc_operand104,3322
	unsigned int bitm;bitm106,3347
	int shift;shift107,3367
	unsigned long (*insert)insert108,3379
	unsigned long flags;flags110,3449
static const struct powerpc_operand powerpc_operands[];powerpc_operands113,3475
static const unsigned int num_powerpc_operands;num_powerpc_operands114,3531
#define PPC_OPERAND_SIGNED PPC_OPERAND_SIGNED116,3580
#define PPC_OPERAND_SIGNOPT PPC_OPERAND_SIGNOPT117,3613
#define PPC_OPERAND_FAKE PPC_OPERAND_FAKE118,3647
#define PPC_OPERAND_PARENS PPC_OPERAND_PARENS119,3678
#define PPC_OPERAND_CR PPC_OPERAND_CR120,3711
#define PPC_OPERAND_GPR PPC_OPERAND_GPR121,3741
#define PPC_OPERAND_GPR_0 PPC_OPERAND_GPR_0122,3772
#define PPC_OPERAND_FPR PPC_OPERAND_FPR123,3805
#define PPC_OPERAND_RELATIVE PPC_OPERAND_RELATIVE124,3836
#define PPC_OPERAND_ABSOLUTE PPC_OPERAND_ABSOLUTE125,3873
#define PPC_OPERAND_OPTIONAL PPC_OPERAND_OPTIONAL126,3910
#define PPC_OPERAND_NEXT PPC_OPERAND_NEXT127,3947
#define PPC_OPERAND_NEGATIVE PPC_OPERAND_NEGATIVE128,3980
#define PPC_OPERAND_VR PPC_OPERAND_VR129,4018
#define PPC_OPERAND_DS PPC_OPERAND_DS130,4050
#define PPC_OPERAND_DQ PPC_OPERAND_DQ131,4082
#define PPC_OPERAND_PLUS1 PPC_OPERAND_PLUS1132,4114
#define PPC_OPERAND_FSL PPC_OPERAND_FSL133,4150
#define PPC_OPERAND_FCR PPC_OPERAND_FCR134,4184
#define PPC_OPERAND_UDI PPC_OPERAND_UDI135,4218
#define PPC_OPERAND_VSR PPC_OPERAND_VSR136,4252
#define PPC_DEST_ARCH PPC_DEST_ARCH142,4312
asm_instruction( powerpc_iname_t sname, const int argc, const long int *argv )asm_instruction145,4368
#define ATTRIBUTE_UNUSEDATTRIBUTE_UNUSED227,6489
#define _(_228,6514
#define UNUSED UNUSED246,7108
#define BA BA250,7196
#define BI BI252,7276
#define BI_MASK BI_MASK253,7290
#define BD BD258,7450
#define BDM BDM263,7666
#define BF BF268,7818
#define CRFD CRFD270,7887
#define OBF OBF275,8067
#define BO BO280,8228
#define BO_MASK BO_MASK281,8247
#define CR CR288,8553
#define D D294,8792
#define DS DS299,8987
#define FRA FRA304,9144
#define FRA_MASK FRA_MASK305,9163
#define FRB FRB309,9287
#define FRB_MASK FRB_MASK310,9307
#define FRC FRC314,9426
#define FRC_MASK FRC_MASK315,9446
#define FRS FRS320,9617
#define FRT FRT321,9637
#define LI LI326,9786
#define ME ME330,9923
#define ME_MASK ME_MASK331,9941
#define MBE MBE338,10253
#define RA RA342,10409
#define RA_MASK RA_MASK343,10428
#define RA0 RA0347,10558
#define RAS RAS353,10790
#define RB RB357,10921
#define RB_MASK RB_MASK358,10940
#define RBS RBS364,11173
#define RS RS370,11384
#define RT RT371,11403
#define RT_MASK RT_MASK372,11417
#define SH SH376,11539
#define SH_MASK SH_MASK377,11557
#define EVUIMM EVUIMM379,11643
#define SI SI383,11734
#define UI UI387,11843
static const struct powerpc_operand powerpc_operands[] =powerpc_operands242,6967
static const unsigned int num_powerpc_operands =num_powerpc_operands392,11892
insert_bdm (unsigned long insn,insert_bdm415,13127
valid_bo (long value, int dialect, int extract)valid_bo439,13603
insert_bo (unsigned long insn,insert_bo499,14766
insert_ras (unsigned long insn,insert_ras514,15171
insert_rbs (unsigned long insn,insert_rbs531,15757
#define OP(OP543,16015
#define OP_MASK OP_MASK544,16067
#define OPTO(OPTO549,16246
#define OPTO_MASK OPTO_MASK550,16315
#define OPL(OPL555,16531
#define OPL_MASK OPL_MASK556,16594
#define A(A559,16655
#define A_MASK A_MASK560,16759
#define AFRB_MASK AFRB_MASK563,16836
#define AFRC_MASK AFRC_MASK566,16918
#define AFRAFRC_MASK AFRAFRC_MASK569,17009
#define AFRALFRC_MASK AFRALFRC_MASK572,17108
#define B(B575,17204
#define B_MASK B_MASK576,17286
#define BBO(BBO579,17367
#define BBO_MASK BBO_MASK580,17459
#define Y_MASK Y_MASK585,17707
#define AT1_MASK AT1_MASK586,17752
#define AT2_MASK AT2_MASK587,17797
#define BBOY_MASK BBOY_MASK588,17842
#define BBOAT_MASK BBOAT_MASK589,17882
#define BBOCB(BBOCB593,18017
#define BBOCB_MASK BBOCB_MASK595,18126
#define BBOYCB_MASK BBOYCB_MASK598,18236
#define BBOATCB_MASK BBOATCB_MASK599,18279
#define BBOAT2CB_MASK BBOAT2CB_MASK600,18325
#define BBOYBI_MASK BBOYBI_MASK603,18426
#define BBOATBI_MASK BBOATBI_MASK604,18470
#define CTX(CTX607,18554
#define CTX_MASK CTX_MASK608,18620
#define UCTX(UCTX611,18694
#define UCTX_MASK UCTX_MASK612,18761
#define DRA_MASK DRA_MASK615,18850
#define DSO(DSO618,18918
#define DS_MASK DS_MASK619,18965
#define DEO(DEO622,19026
#define DE_MASK DE_MASK623,19073
#define EVSEL(EVSEL626,19140
#define EVSEL_MASK EVSEL_MASK627,19212
#define M(M630,19280
#define M_MASK M_MASK631,19321
#define MME(MME634,19407
#define MMBME_MASK MMBME_MASK637,19539
#define MSHME_MASK MSHME_MASK640,19638
#define MD(MD643,19718
#define MD_MASK MD_MASK644,19805
#define MDMB_MASK MDMB_MASK647,19883
#define MDSH_MASK MDSH_MASK650,19966
#define MDS(MDS653,20038
#define MDS_MASK MDS_MASK654,20126
#define MDSMB_MASK MDSMB_MASK657,20207
#define SC(SC660,20280
#define SC_MASK SC_MASK661,20363
#define VX(VX664,20486
#define VX_MASK	VX_MASK667,20596
#define VXA(VXA670,20660
#define VXA_MASK VXA_MASK673,20771
#define VXR(VXR676,20837
#define VXR_MASK VXR_MASK679,20973
#define X(X682,21041
#define Z(Z685,21142
#define XRC(XRC688,21270
#define ZRC(ZRC691,21382
#define X_MASK X_MASK694,21482
#define Z_MASK Z_MASK697,21561
#define Z2_MASK Z2_MASK698,21597
#define XRA_MASK XRA_MASK701,21676
#define XWRA_MASK XWRA_MASK704,21756
#define XRB_MASK XRB_MASK707,21857
#define XRT_MASK XRT_MASK710,21936
#define XLRT_MASK XLRT_MASK713,22020
#define XRARB_MASK XRARB_MASK716,22131
#define XRLARB_MASK XRLARB_MASK719,22228
#define XRTRA_MASK XRTRA_MASK722,22341
#define XRTLRA_MASK XRTLRA_MASK725,22434
#define XOPL(XOPL728,22552
#define XCMP_MASK XCMP_MASK731,22687
#define XCMPL_MASK XCMPL_MASK735,22824
#define XTO(XTO738,22948
#define XTO_MASK XTO_MASK739,23032
#define XTLB(XTLB742,23131
#define XTLB_MASK XTLB_MASK743,23216
#define XSYNC(XSYNC746,23289
#define XSYNC_MASK XSYNC_MASK749,23452
#define XEH_MASK XEH_MASK752,23530
#define XDSS(XDSS755,23622
#define XDSS_MASK XDSS_MASK756,23702
#define XFL(XFL759,23774
#define XFL_MASK XFL_MASK760,23881
#define XISEL(XISEL763,23955
#define XISEL_MASK XISEL_MASK764,24030
#define XL(XL767,24131
#define XLLK(XLLK770,24259
#define XL_MASK XL_MASK773,24362
#define XLO(XLO776,24467
#define XLO_MASK XLO_MASK778,24568
#define XLYLK(XLYLK782,24688
#define XLYLK_MASK XLYLK_MASK783,24782
#define XLOCB(XLOCB787,24918
#define XLOCB_MASK XLOCB_MASK789,25027
#define BB_MASK BB_MASK791,25081
#define XLBB_MASK XLBB_MASK793,25181
#define XLYBB_MASK XLYBB_MASK794,25219
#define XLBOCBBB_MASK XLBOCBBB_MASK795,25261
#define XLBH_MASK XLBH_MASK798,25365
#define XLBOBB_MASK XLBOBB_MASK801,25460
#define XLBOBIBB_MASK XLBOBIBB_MASK804,25566
#define XO(XO807,25660
#define XO_MASK XO_MASK809,25812
#define XORB_MASK XORB_MASK812,25895
#define XS(XS815,25965
#define XS_MASK XS_MASK816,26071
#define XFXFXM_MASK XFXFXM_MASK819,26170
#define XFXM(XFXM822,26285
#define SPR_MASK SPR_MASK826,26416
#define XSPR(XSPR828,26508
#define XSPR_MASK XSPR_MASK830,26641
#define XSPRBAT_MASK XSPRBAT_MASK834,26772
#define XSPRG_MASK XSPRG_MASK838,26911
#define XE_MASK XE_MASK841,27034
#define XUC(XUC844,27107
#define XUC_MASK XUC_MASK845,27173
#define BODNZF	BODNZF848,27283
#define BODNZFP	BODNZFP849,27304
#define BODZF	BODZF850,27326
#define BODZFP	BODZFP851,27346
#define BODNZT	BODNZT852,27367
#define BODNZTP	BODNZTP853,27388
#define BODZT	BODZT854,27410
#define BODZTP	BODZTP855,27430
#define BOF	BOF857,27452
#define BOFP	BOFP858,27470
#define BOFM4	BOFM4859,27489
#define BOFP4	BOFP4860,27509
#define BOT	BOT861,27529
#define BOTP	BOTP862,27547
#define BOTM4	BOTM4863,27566
#define BOTP4	BOTP4864,27586
#define BODNZ	BODNZ866,27607
#define BODNZP	BODNZP867,27628
#define BODZ	BODZ868,27650
#define BODZP	BODZP869,27670
#define BODNZM4 BODNZM4870,27691
#define BODNZP4 BODNZP4871,27714
#define BODZM4	BODZM4872,27737
#define BODZP4	BODZP4873,27759
#define BOU	BOU875,27782
#define CBLT	CBLT879,27890
#define CBGT	CBGT880,27907
#define CBEQ	CBEQ881,27924
#define CBSO	CBSO882,27941
#define TOLGT	TOLGT885,28016
#define TOLLT	TOLLT886,28036
#define TOEQ	TOEQ887,28056
#define TOLGE	TOLGE888,28075
#define TOLNL	TOLNL889,28095
#define TOLLE	TOLLE890,28115
#define TOLNG	TOLNG891,28135
#define TOGT	TOGT892,28155
#define TOGE	TOGE893,28174
#define TONL	TONL894,28193
#define TOLT	TOLT895,28212
#define TOLE	TOLE896,28232
#define TONG	TONG897,28252
#define TONE	TONE898,28272
#define TOU	TOU899,28292
#undef	PPCPPC903,28412
#define PPC PPC904,28423
#define PPCCOM	PPCCOM905,28454
#define PPC64 PPC64906,28504
#define	COM COM907,28551
#define	COM32 COM32908,28621
static const struct powerpc_opcode powerpc_opcodes[] = {powerpc_opcodes928,29358
static const int powerpc_num_opcodes =powerpc_num_opcodes1008,33631

qcommon/files.c,10389
#define	DEMO_PAK0_CHECKSUM	DEMO_PAK0_CHECKSUM177,7295
static const unsigned pak_checksums[] = {pak_checksums178,7334
#define MAX_ZPATH	MAX_ZPATH198,7906
#define	MAX_SEARCH_PATHS	MAX_SEARCH_PATHS199,7930
#define MAX_FILEHASH_SIZE	MAX_FILEHASH_SIZE200,7960
typedef struct fileInPack_s {fileInPack_s202,7992
	char					*name;		// name of the filename203,8022
	unsigned long			pos;		// file info position in zippos204,8060
	struct	fileInPack_s*	next;		// next file in the hashnext205,8112
} fileInPack_t;fileInPack_t206,8166
	char			pakFilename[MAX_OSPATH];	// c:\quake3\baseq3\pak0.pk3pakFilename209,8200
	char			pakBasename[MAX_OSPATH];	// pak0pakBasename210,8262
	char			pakGamename[MAX_OSPATH];	// baseq3pakGamename211,8303
	unzFile			handle;						// handle to zip filehandle212,8346
	int				checksum;					// regular checksumchecksum213,8392
	int				pure_checksum;				// checksum for purepure_checksum214,8434
	int				numfiles;					// number of files in pk3numfiles215,8481
	int				referenced;					// referenced file flagsreferenced216,8529
	int				hashSize;					// hash table size (power of 2)hashSize217,8578
	fileInPack_t*	*hashTable;					// hash tablehashTable218,8632
	fileInPack_t*	buildBuffer;				// buffer with the filenames etc.buildBuffer219,8677
} pack_t;pack_t220,8742
	char		path[MAX_OSPATH];		// c:\quake3path223,8770
	char		gamedir[MAX_OSPATH];	// baseq3gamedir224,8809
} directory_t;directory_t225,8847
typedef struct searchpath_s {searchpath_s227,8863
	struct searchpath_s *next;next228,8893
	pack_t		*pack;		// only one of pack / dir will be non NULLpack230,8922
	directory_t	*dir;dir231,8982
} searchpath_t;searchpath_t232,9001
static	char		fs_gamedir[MAX_OSPATH];	// this will be a single file name with no separatorsfs_gamedir234,9018
static	cvar_t		*fs_debug;fs_debug235,9109
static	cvar_t		*fs_homepath;fs_homepath236,9135
static  cvar_t          *fs_apppath;fs_apppath240,9226
static	cvar_t		*fs_basepath;fs_basepath243,9271
static	cvar_t		*fs_basegame;fs_basegame244,9300
static	cvar_t		*fs_gamedirvar;fs_gamedirvar245,9329
static	searchpath_t	*fs_searchpaths;fs_searchpaths246,9360
static	int			fs_readCount;			// total bytes readfs_readCount247,9397
static	int			fs_loadCount;			// total files readfs_loadCount248,9446
static	int			fs_loadStack;			// total files in memoryfs_loadStack249,9495
static	int			fs_packFiles;			// total number of files in packsfs_packFiles250,9549
static int fs_fakeChkSum;fs_fakeChkSum252,9613
static int fs_checksumFeed;fs_checksumFeed253,9639
typedef union qfile_gus {qfile_gus255,9668
	FILE*		o;o256,9694
	unzFile		z;z257,9705
} qfile_gut;qfile_gut258,9718
typedef struct qfile_us {qfile_us260,9732
	qfile_gut	file;file261,9758
	qboolean	unique;unique262,9775
} qfile_ut;qfile_ut263,9793
	qfile_ut	handleFiles;handleFiles266,9823
	qboolean	handleSync;handleSync267,9846
	int			baseOffset;baseOffset268,9868
	int			fileSize;fileSize269,9887
	int			zipFilePos;zipFilePos270,9904
	qboolean	zipFile;zipFile271,9923
	qboolean	streamed;streamed272,9942
	char		name[MAX_ZPATH];name273,9962
} fileHandleData_t;fileHandleData_t274,9986
static fileHandleData_t	fsh[MAX_FILE_HANDLES];fsh276,10007
static qboolean fs_reordered;fs_reordered280,10205
static int		fs_numServerPaks;fs_numServerPaks283,10319
static int		fs_serverPaks[MAX_SEARCH_PATHS];				// checksumsfs_serverPaks284,10349
static char		*fs_serverPakNames[MAX_SEARCH_PATHS];			// pk3 namesfs_serverPakNames285,10410
static int		fs_numServerReferencedPaks;fs_numServerReferencedPaks289,10605
static int		fs_serverReferencedPaks[MAX_SEARCH_PATHS];			// checksumsfs_serverReferencedPaks290,10645
static char		*fs_serverReferencedPakNames[MAX_SEARCH_PATHS];		// pk3 namesfs_serverReferencedPakNames291,10715
char lastValidBase[MAX_OSPATH];lastValidBase294,10822
char lastValidGame[MAX_OSPATH];lastValidGame295,10854
FILE*		missingFiles = NULL;missingFiles298,10905
#define __func__ __func__303,10985
qboolean FS_Initialized( void ) {FS_Initialized312,11074
qboolean FS_PakIsPure( pack_t *pack ) {FS_PakIsPure321,11200
int FS_LoadStack( void )FS_LoadStack345,11825
static long FS_HashFileName( const char *fname, int hashSize ) {FS_HashFileName355,11954
static fileHandle_t	FS_HandleForFile(void) {FS_HandleForFile375,12432
static FILE	*FS_FileForHandle( fileHandle_t f ) {FS_FileForHandle387,12667
void	FS_ForceFlush( fileHandle_t f ) {FS_ForceFlush401,13059
int FS_filelength( fileHandle_t f ) {FS_filelength417,13368
static void FS_ReplaceSeparators( char *path ) {FS_ReplaceSeparators438,13683
char *FS_BuildOSPath( const char *base, const char *game, const char *qpath ) {FS_BuildOSPath455,13950
static qboolean FS_CreatePath (char *OSPath) {FS_CreatePath481,14528
static void FS_FilenameIsExecutable( const char *filename, const char *function )FS_FilenameIsExecutable509,15150
static void FS_CopyFile( char *fromOSPath, char *toOSPath ) {FS_CopyFile527,15604
void FS_Remove( const char *osPath ) {FS_Remove576,16616
void FS_HomeRemove( const char *homePath ) {FS_HomeRemove588,16769
qboolean FS_FileExists( const char *file )FS_FileExists605,17275
qboolean FS_SV_FileExists( const char *file )FS_SV_FileExists627,17595
fileHandle_t FS_SV_FOpenFileWrite( const char *filename ) {FS_SV_FOpenFileWrite650,17916
int FS_SV_FOpenFileRead( const char *filename, fileHandle_t *fp ) {FS_SV_FOpenFileRead694,18823
void FS_SV_Rename( const char *from, const char *to ) {FS_SV_Rename760,20161
void FS_Rename( const char *from, const char *to ) {FS_Rename796,20984
void FS_FCloseFile( fileHandle_t f ) {FS_FCloseFile832,21888
fileHandle_t FS_FOpenFileWrite( const char *filename ) {FS_FOpenFileWrite859,22492
fileHandle_t FS_FOpenFileAppend( const char *filename ) {FS_FOpenFileAppend902,23417
qboolean FS_FilenameCompare( const char *s1, const char *s2 ) {FS_FilenameCompare945,24268
int FS_FOpenFileRead( const char *filename, fileHandle_t *file, qboolean uniqueFILE ) {FS_FOpenFileRead986,24961
int FS_Read2( void *buffer, int len, fileHandle_t f ) {FS_Read21219,32402
int FS_Read( void *buffer, int len, fileHandle_t f ) {FS_Read1238,32775
int FS_Write( const void *buffer, int len, fileHandle_t h ) {FS_Write1291,33805
void QDECL FS_Printf( fileHandle_t h, const char *fmt, ... ) {FS_Printf1337,34573
#define PK3_SEEK_BUFFER_SIZE PK3_SEEK_BUFFER_SIZE1348,34804
int FS_Seek( fileHandle_t f, long offset, int origin ) {FS_Seek1356,34891
int	FS_FileIsInPAK(const char *filename, int *pChecksum ) {FS_FileIsInPAK1434,36710
int FS_ReadFile( const char *qpath, void **buffer ) {FS_ReadFile1502,38435
void FS_FreeFile( void *buffer ) {FS_FreeFile1616,41239
void FS_WriteFile( const char *qpath, const void *buffer, int size ) {FS_WriteFile1640,41714
static pack_t *FS_LoadZipFile( char *zipfile, const char *basename )FS_LoadZipFile1680,42467
#define	MAX_FOUND_FILES	MAX_FOUND_FILES1790,45708
static int FS_ReturnPath( const char *zname, char *zpath, int *depth ) {FS_ReturnPath1792,45740
static int FS_AddFileToList( char *name, char *list[MAX_FOUND_FILES], int nfiles ) {FS_AddFileToList1820,46130
char **FS_ListFilteredFiles( const char *path, const char *extension, char *filter, int *numfiles ) {FS_ListFilteredFiles1845,46617
char **FS_ListFiles( const char *path, const char *extension, int *numfiles ) {FS_ListFiles1977,49724
void FS_FreeFileList( char **list ) {FS_FreeFileList1986,49930
int	FS_GetFileList(  const char *path, const char *extension, char *listbuf, int bufsize ) {FS_GetFileList2010,50247
static unsigned int Sys_CountFileList(char **list)Sys_CountFileList2053,51130
static char** Sys_ConcatenateFileLists( char **list0, char **list1 )Sys_ConcatenateFileLists2068,51270
int	FS_GetModList( char *listbuf, int bufsize ) {FS_GetModList2111,52175
void FS_Dir_f( void ) {FS_Dir_f2224,55353
void FS_ConvertPath( char *s ) {FS_ConvertPath2260,55995
int FS_PathCmp( const char *s1, const char *s2 ) {FS_PathCmp2276,56192
void FS_SortFileList(char **filelist, int numfiles) {FS_SortFileList2313,56717
void FS_NewDir_f( void ) {FS_NewDir_f2341,57361
void FS_Path_f( void ) {FS_Path_f2375,57953
void FS_TouchFile_f( void ) {FS_TouchFile_f2409,58660
static int QDECL paksort( const void *a, const void *b ) {paksort2426,58961
void FS_AddGameDirectory( const char *path, const char *dir ) {FS_AddGameDirectory2443,59258
qboolean FS_idPak( char *pak, char *base ) {FS_idPak2502,60797
qboolean FS_CheckDirTraversal(const char *checkdir)FS_CheckDirTraversal2525,61207
qboolean FS_ComparePaks( char *neededpaks, int len, qboolean dlstring ) {FS_ComparePaks2559,62026
void FS_Shutdown( qboolean closemfp ) {FS_Shutdown2664,64996
static void FS_ReorderPurePaks( void )FS_ReorderPurePaks2716,66078
static void FS_Startup( const char *gameName )FS_Startup2754,67082
static void FS_CheckPak0( void )FS_CheckPak02856,70348
const char *FS_GamePureChecksum( void ) {FS_GamePureChecksum2958,73205
const char *FS_LoadedPakChecksums( void ) {FS_LoadedPakChecksums2984,73822
const char *FS_LoadedPakNames( void ) {FS_LoadedPakNames3010,74396
const char *FS_LoadedPakPureChecksums( void ) {FS_LoadedPakPureChecksums3040,75071
const char *FS_ReferencedPakChecksums( void ) {FS_ReferencedPakChecksums3066,75699
const char *FS_ReferencedPakPureChecksums( void ) {FS_ReferencedPakPureChecksums3095,76479
const char *FS_ReferencedPakNames( void ) {FS_ReferencedPakNames3144,77978
void FS_ClearPakReferences( int flags ) {FS_ClearPakReferences3174,78757
void FS_PureServerSetLoadedPaks( const char *pakSums, const char *pakNames ) {FS_PureServerSetLoadedPaks3199,79339
void FS_PureServerSetReferencedPaks( const char *pakSums, const char *pakNames ) {FS_PureServerSetReferencedPaks3259,80649
void FS_InitFilesystem( void ) {FS_InitFilesystem3309,81668
void FS_Restart( int checksumFeed ) {FS_Restart3342,82608
qboolean FS_ConditionalRestart( int checksumFeed ) {FS_ConditionalRestart3397,84065
int		FS_FOpenFileByMode( const char *qpath, fileHandle_t *f, fsMode_t mode ) {FS_FOpenFileByMode3413,84486
int		FS_FTell( fileHandle_t f ) {FS_FTell3466,85387
void	FS_Flush( fileHandle_t f ) {FS_Flush3476,85578
void	FS_FilenameCompletion( const char *dir, const char *ext,FS_FilenameCompletion3480,85651

qcommon/vm_x86_64_assembler.c,9041
typedef unsigned char u8;u828,1079
typedef unsigned short u16;u1629,1105
typedef unsigned int u32;u3230,1133
typedef unsigned long u64;u6431,1159
static char* out;out33,1187
static unsigned compiledOfs;compiledOfs34,1205
static unsigned assembler_pass;assembler_pass35,1234
static const char* cur_line;cur_line37,1267
static FILE* fout;fout39,1297
#define MIN(MIN41,1317
#define MAX(MAX42,1359
#define crap(crap44,1402
#define CRAP_INVALID_ARGS CRAP_INVALID_ARGS48,1485
#define debug(debug51,1606
#define debug(debug53,1660
static void _crap(const char* func, const char* fmt, ...)_crap56,1696
static void emit1(unsigned char v)emit169,1969
static inline void emit2(u16 v)emit283,2148
static inline void emit4(u32 v)emit489,2222
static inline void emit8(u64 v)emit897,2340
	REX_W = 0x08,REX_W104,2434
	REX_R = 0x04,REX_R105,2449
	REX_X = 0x02,REX_X106,2464
	REX_B = 0x01,REX_B107,2479
	MODRM_MOD_00 = 0x00,MODRM_MOD_00111,2505
	MODRM_MOD_01 = 0x01 << 6,MODRM_MOD_01112,2527
	MODRM_MOD_10 = 0x02 << 6,MODRM_MOD_10113,2554
	MODRM_MOD_11 = 0x03 << 6,MODRM_MOD_11114,2581
	MODRM_RM_SIB = 0x04,MODRM_RM_SIB115,2608
	T_NONE      = 0x00,T_NONE120,2649
	T_REGISTER  = 0x01,T_REGISTER121,2670
	T_IMMEDIATE = 0x02,T_IMMEDIATE122,2691
	T_MEMORY    = 0x04,T_MEMORY123,2712
	T_LABEL     = 0x08,T_LABEL124,2733
	T_ABSOLUTE  = 0x80T_ABSOLUTE125,2754
} argtype_t;argtype_t126,2774
	R_8   = 0x100, R_8129,2803
	R_16  = 0x200, R_16130,2820
	R_64  = 0x800, R_64131,2837
	R_MSZ = 0xF00,  // size maskR_MSZ132,2854
	R_XMM = 0x2000, // xmm register. year, sucksR_XMM133,2884
	R_EAX =  0x00,R_EAX134,2930
	R_EBX =  0x03,R_EBX135,2946
	R_ECX =  0x01,R_ECX136,2962
	R_EDX =  0x02,R_EDX137,2978
	R_ESI =  0x06,R_ESI138,2994
	R_EDI =  0x07,R_EDI139,3010
	R_ESP =  0x04,R_ESP140,3026
	R_RAX =  R_EAX | R_64,R_RAX141,3042
	R_RBX =  R_EBX | R_64,R_RBX142,3066
	R_RCX =  R_ECX | R_64,R_RCX143,3090
	R_RDX =  R_EDX | R_64,R_RDX144,3114
	R_RSI =  R_ESI | R_64,R_RSI145,3138
	R_RDI =  R_EDI | R_64,R_RDI146,3162
	R_RSP =  R_ESP | R_64,R_RSP147,3186
	R_R8  =  0x08  | R_64,R_R8148,3210
	R_R9  =  0x09  | R_64,R_R9149,3234
	R_R10 =  0x0A  | R_64,R_R10150,3258
	R_R15 =  0x0F  | R_64,R_R15151,3282
	R_AL  =  R_EAX | R_8,R_AL152,3306
	R_AX  =  R_EAX | R_16,R_AX153,3329
	R_CL  =  R_ECX | R_8,R_CL154,3353
	R_XMM0 = 0x00  | R_XMM,R_XMM0155,3376
	R_MGP =  0x0F, // mask for general purpose registersR_MGP156,3401
} reg_t;reg_t157,3455
	MODRM_SIB = 0,MODRM_SIB160,3480
	MODRM_NOSIB = 0x3,MODRM_NOSIB161,3496
} modrm_sib_t;modrm_sib_t162,3516
	unsigned disp;disp165,3549
	argtype_t basetype;basetype166,3565
		u64 imm;imm168,3595
		reg_t reg;reg169,3606
	} base;base170,3619
	argtype_t indextype;indextype171,3628
		u64 imm;imm173,3659
		reg_t reg;reg174,3670
	} index;index175,3683
	unsigned scale;scale176,3693
} memref_t;memref_t177,3710
#define LABELLEN LABELLEN179,3723
	argtype_t type;type182,3761
		u64 imm;imm184,3787
		reg_t reg;reg185,3798
		memref_t mem;mem186,3811
		char label[LABELLEN];label187,3827
	} v;v188,3851
	int absolute:1;absolute189,3857
} arg_t;arg_t190,3874
typedef void (*emitfunc)(const char* op, arg_t arg1, arg_t arg2, void* data);emitfunc192,3884
	char* mnemonic;mnemonic195,3980
	emitfunc func;func196,3997
	void* data;data197,4013
} op_t;op_t198,4026
	u8 xmmprefix;xmmprefix201,4052
	u8 subcode; // in modrmsubcode202,4067
	u8 rmcode;  // opcode for reg/mem, regrmcode203,4092
	u8 mrcode;  // opcode for reg, reg/memmrcode204,4132
	u8 rcode8;  // opcode for reg8/mem8rcode8205,4172
	u8 rcode;  // opcode for reg/memrcode206,4209
} opparam_t;opparam_t207,4243
static unsigned hashkey(const char *string, unsigned len) {hashkey211,4290
struct hashentry {hashentry222,4539
	char* label;label223,4558
	unsigned address;address224,4572
	struct hashentry* next;next225,4591
static struct hashentry* labelhash[1021];labelhash227,4619
static void hash_add_label(const char* label, unsigned address)hash_add_label230,4679
static unsigned lookup_label(const char* label)lookup_label242,4984
static void labelhash_free(void)labelhash_free257,5307
static const char* argtype2str(argtype_t t)argtype2str287,5922
static inline int iss8(u64 v)iss8304,6263
static inline int isu8(u64 v)isu8309,6325
static inline int iss16(u64 v)iss16314,6381
static inline int isu16(u64 v)isu16319,6446
static inline int iss32(u64 v)iss32324,6505
static inline int isu32(u64 v)isu32329,6574
static void emit_opsingle(const char* mnemonic, arg_t arg1, arg_t arg2, void* data)emit_opsingle334,6637
static void emit_opsingle16(const char* mnemonic, arg_t arg1, arg_t arg2, void* data)emit_opsingle16344,6846
static void compute_rexmodrmsib(u8* rex_r, u8* modrm_r, u8* sib_r, arg_t* arg1, arg_t* arg2)compute_rexmodrmsib350,6995
static void maybe_emit_displacement(arg_t* arg)maybe_emit_displacement474,9478
static void emit_opreg(const char* mnemonic, arg_t arg1, arg_t arg2, void* data)emit_opreg497,9836
static void emit_op_rm(const char* mnemonic, arg_t arg1, arg_t arg2, void* data)emit_op_rm513,10173
static void emit_op_rm_cl(const char* mnemonic, arg_t arg1, arg_t arg2, void* data)emit_op_rm_cl541,10816
static void emit_mov(const char* mnemonic, arg_t arg1, arg_t arg2, void* data)emit_mov573,11551
static void emit_subaddand(const char* mnemonic, arg_t arg1, arg_t arg2, void* data)emit_subaddand685,13978
static void emit_condjump(const char* mnemonic, arg_t arg1, arg_t arg2, void* data)emit_condjump748,15302
static void emit_jmp(const char* mnemonic, arg_t arg1, arg_t arg2, void* data)emit_jmp767,15792
static void emit_call(const char* mnemonic, arg_t arg1, arg_t arg2, void* data)emit_call810,16631
static void emit_twobyte(const char* mnemonic, arg_t arg1, arg_t arg2, void* data)emit_twobyte835,17113
static opparam_t params_add = { subcode: 0, rmcode: 0x01, };params_add873,18036
static opparam_t params_or = { subcode: 1, rmcode: 0x09, };params_or874,18097
static opparam_t params_and = { subcode: 4, rmcode: 0x21, };params_and875,18157
static opparam_t params_sub = { subcode: 5, rmcode: 0x29, };params_sub876,18218
static opparam_t params_xor = { subcode: 6, rmcode: 0x31, };params_xor877,18279
static opparam_t params_cmp = { subcode: 6, rmcode: 0x39, mrcode: 0x3b, };params_cmp878,18340
static opparam_t params_dec = { subcode: 1, rcode: 0xff, rcode8: 0xfe, };params_dec879,18415
static opparam_t params_sar = { subcode: 7, rcode: 0xd3, rcode8: 0xd2, };params_sar880,18489
static opparam_t params_shl = { subcode: 4, rcode: 0xd3, rcode8: 0xd2, };params_shl881,18563
static opparam_t params_shr = { subcode: 5, rcode: 0xd3, rcode8: 0xd2, };params_shr882,18637
static opparam_t params_idiv = { subcode: 7, rcode: 0xf7, rcode8: 0xf6, };params_idiv883,18711
static opparam_t params_div = { subcode: 6, rcode: 0xf7, rcode8: 0xf6, };params_div884,18786
static opparam_t params_imul = { subcode: 5, rcode: 0xf7, rcode8: 0xf6, };params_imul885,18860
static opparam_t params_mul = { subcode: 4, rcode: 0xf7, rcode8: 0xf6, };params_mul886,18935
static opparam_t params_neg = { subcode: 3, rcode: 0xf7, rcode8: 0xf6, };params_neg887,19009
static opparam_t params_not = { subcode: 2, rcode: 0xf7, rcode8: 0xf6, };params_not888,19083
static opparam_t params_cvtsi2ss = { xmmprefix: 0xf3, rmcode: 0x2a };params_cvtsi2ss890,19158
static opparam_t params_cvttss2si = { xmmprefix: 0xf3, rmcode: 0x2c };params_cvttss2si891,19228
static opparam_t params_addss = { xmmprefix: 0xf3, mrcode: 0x58 };params_addss892,19299
static opparam_t params_divss = { xmmprefix: 0xf3, mrcode: 0x5e };params_divss893,19366
static opparam_t params_movss = { xmmprefix: 0xf3, mrcode: 0x10, rmcode: 0x11 };params_movss894,19433
static opparam_t params_mulss = { xmmprefix: 0xf3, mrcode: 0x59 };params_mulss895,19514
static opparam_t params_subss = { xmmprefix: 0xf3, mrcode: 0x5c };params_subss896,19581
static opparam_t params_ucomiss = { mrcode: 0x2e };params_ucomiss897,19648
static int ops_sorted = 0;ops_sorted899,19701
static op_t ops[] = {ops900,19728
static int opsort(const void* A, const void* B)opsort971,22427
static op_t* getop(const char* n)getop978,22562
static reg_t parsereg(const char* str)parsereg1016,22981
	TOK_LABEL = 0x80,TOK_LABEL1099,24265
	TOK_INT = 0x81,TOK_INT1100,24284
	TOK_END = 0x82,TOK_END1101,24301
	TOK_INVALID = 0x83,TOK_INVALID1102,24318
} token_t;token_t1103,24339
static unsigned char nexttok(const char** str, char* label, u64* val)nexttok1105,24351
static arg_t parsearg(const char** str)parsearg1150,25246
void assembler_init(int pass)assembler_init1271,27915
size_t assembler_get_code_size(void)assembler_get_code_size1287,28157
void assembler_set_output(char* buf)assembler_set_output1292,28220
void assemble_line(const char* input, size_t len)assemble_line1297,28274
int main(int argc, char* argv[])main1362,29327

qcommon/vm_none.c,132
int VM_CallCompiled( vm_t *vm, int *args ) {VM_CallCompiled3,23
void VM_Compile( vm_t *vm, vmHeader_t *header ) {VM_Compile8,93

cgame/cg_public.h,6348
#define	CMD_BACKUP	CMD_BACKUP25,979
#define	CMD_MASK	CMD_MASK26,1004
#define	MAX_ENTITIES_IN_SNAPSHOT	MAX_ENTITIES_IN_SNAPSHOT32,1206
	int				snapFlags;			// SNAPFLAG_RATE_DELAYED, etcsnapFlags40,1492
	int				ping;ping41,1543
	int				serverTime;		// server time the message is valid for (in msec)serverTime43,1558
	byte			areamask[MAX_MAP_AREA_BYTES];		// portalarea visibility bitsareamask45,1630
	playerState_t	ps;						// complete information about the current player at this timeps47,1700
	int				numEntities;			// all of the entities that need to be presentednumEntities49,1787
	entityState_t	entities[MAX_ENTITIES_IN_SNAPSHOT];	// at the time of this snapshotentities50,1859
	int				numServerCommands;		// text based server commands to execute when thisnumServerCommands52,1943
	int				serverCommandSequence;	// snapshot becomes currentserverCommandSequence53,2022
} snapshot_t;snapshot_t54,2081
  CGAME_EVENT_NONE,CGAME_EVENT_NONE57,2103
  CGAME_EVENT_TEAMMENU,CGAME_EVENT_TEAMMENU58,2123
  CGAME_EVENT_SCOREBOARD,CGAME_EVENT_SCOREBOARD59,2147
  CGAME_EVENT_EDITHUDCGAME_EVENT_EDITHUD60,2173
#define	CGAME_IMPORT_API_VERSION	CGAME_IMPORT_API_VERSION72,2387
	CG_PRINT,CG_PRINT75,2438
	CG_ERROR,CG_ERROR76,2449
	CG_MILLISECONDS,CG_MILLISECONDS77,2460
	CG_CVAR_REGISTER,CG_CVAR_REGISTER78,2478
	CG_CVAR_UPDATE,CG_CVAR_UPDATE79,2497
	CG_CVAR_SET,CG_CVAR_SET80,2514
	CG_CVAR_VARIABLESTRINGBUFFER,CG_CVAR_VARIABLESTRINGBUFFER81,2528
	CG_ARGC,CG_ARGC82,2559
	CG_ARGV,CG_ARGV83,2569
	CG_ARGS,CG_ARGS84,2579
	CG_FS_FOPENFILE,CG_FS_FOPENFILE85,2589
	CG_FS_READ,CG_FS_READ86,2607
	CG_FS_WRITE,CG_FS_WRITE87,2620
	CG_FS_FCLOSEFILE,CG_FS_FCLOSEFILE88,2634
	CG_SENDCONSOLECOMMAND,CG_SENDCONSOLECOMMAND89,2653
	CG_ADDCOMMAND,CG_ADDCOMMAND90,2677
	CG_SENDCLIENTCOMMAND,CG_SENDCLIENTCOMMAND91,2693
	CG_UPDATESCREEN,CG_UPDATESCREEN92,2716
	CG_CM_LOADMAP,CG_CM_LOADMAP93,2734
	CG_CM_NUMINLINEMODELS,CG_CM_NUMINLINEMODELS94,2750
	CG_CM_INLINEMODEL,CG_CM_INLINEMODEL95,2774
	CG_CM_LOADMODEL,CG_CM_LOADMODEL96,2794
	CG_CM_TEMPBOXMODEL,CG_CM_TEMPBOXMODEL97,2812
	CG_CM_POINTCONTENTS,CG_CM_POINTCONTENTS98,2833
	CG_CM_TRANSFORMEDPOINTCONTENTS,CG_CM_TRANSFORMEDPOINTCONTENTS99,2855
	CG_CM_BOXTRACE,CG_CM_BOXTRACE100,2888
	CG_CM_TRANSFORMEDBOXTRACE,CG_CM_TRANSFORMEDBOXTRACE101,2905
	CG_CM_MARKFRAGMENTS,CG_CM_MARKFRAGMENTS102,2933
	CG_S_STARTSOUND,CG_S_STARTSOUND103,2955
	CG_S_STARTLOCALSOUND,CG_S_STARTLOCALSOUND104,2973
	CG_S_CLEARLOOPINGSOUNDS,CG_S_CLEARLOOPINGSOUNDS105,2996
	CG_S_ADDLOOPINGSOUND,CG_S_ADDLOOPINGSOUND106,3022
	CG_S_UPDATEENTITYPOSITION,CG_S_UPDATEENTITYPOSITION107,3045
	CG_S_RESPATIALIZE,CG_S_RESPATIALIZE108,3073
	CG_S_REGISTERSOUND,CG_S_REGISTERSOUND109,3093
	CG_S_STARTBACKGROUNDTRACK,CG_S_STARTBACKGROUNDTRACK110,3114
	CG_R_LOADWORLDMAP,CG_R_LOADWORLDMAP111,3142
	CG_R_REGISTERMODEL,CG_R_REGISTERMODEL112,3162
	CG_R_REGISTERSKIN,CG_R_REGISTERSKIN113,3183
	CG_R_REGISTERSHADER,CG_R_REGISTERSHADER114,3203
	CG_R_CLEARSCENE,CG_R_CLEARSCENE115,3225
	CG_R_ADDREFENTITYTOSCENE,CG_R_ADDREFENTITYTOSCENE116,3243
	CG_R_ADDPOLYTOSCENE,CG_R_ADDPOLYTOSCENE117,3270
	CG_R_ADDLIGHTTOSCENE,CG_R_ADDLIGHTTOSCENE118,3292
	CG_R_RENDERSCENE,CG_R_RENDERSCENE119,3315
	CG_R_SETCOLOR,CG_R_SETCOLOR120,3334
	CG_R_DRAWSTRETCHPIC,CG_R_DRAWSTRETCHPIC121,3350
	CG_R_MODELBOUNDS,CG_R_MODELBOUNDS122,3372
	CG_R_LERPTAG,CG_R_LERPTAG123,3391
	CG_GETGLCONFIG,CG_GETGLCONFIG124,3406
	CG_GETGAMESTATE,CG_GETGAMESTATE125,3423
	CG_GETCURRENTSNAPSHOTNUMBER,CG_GETCURRENTSNAPSHOTNUMBER126,3441
	CG_GETSNAPSHOT,CG_GETSNAPSHOT127,3471
	CG_GETSERVERCOMMAND,CG_GETSERVERCOMMAND128,3488
	CG_GETCURRENTCMDNUMBER,CG_GETCURRENTCMDNUMBER129,3510
	CG_GETUSERCMD,CG_GETUSERCMD130,3535
	CG_SETUSERCMDVALUE,CG_SETUSERCMDVALUE131,3551
	CG_R_REGISTERSHADERNOMIP,CG_R_REGISTERSHADERNOMIP132,3572
	CG_MEMORY_REMAINING,CG_MEMORY_REMAINING133,3599
	CG_R_REGISTERFONT,CG_R_REGISTERFONT134,3621
	CG_KEY_ISDOWN,CG_KEY_ISDOWN135,3641
	CG_KEY_GETCATCHER,CG_KEY_GETCATCHER136,3657
	CG_KEY_SETCATCHER,CG_KEY_SETCATCHER137,3677
	CG_KEY_GETKEY,CG_KEY_GETKEY138,3697
 	CG_PC_ADD_GLOBAL_DEFINE,CG_PC_ADD_GLOBAL_DEFINE139,3713
	CG_PC_LOAD_SOURCE,CG_PC_LOAD_SOURCE140,3740
	CG_PC_FREE_SOURCE,CG_PC_FREE_SOURCE141,3760
	CG_PC_READ_TOKEN,CG_PC_READ_TOKEN142,3780
	CG_PC_SOURCE_FILE_AND_LINE,CG_PC_SOURCE_FILE_AND_LINE143,3799
	CG_S_STOPBACKGROUNDTRACK,CG_S_STOPBACKGROUNDTRACK144,3828
	CG_REAL_TIME,CG_REAL_TIME145,3855
	CG_SNAPVECTOR,CG_SNAPVECTOR146,3870
	CG_REMOVECOMMAND,CG_REMOVECOMMAND147,3886
	CG_R_LIGHTFORPOINT,CG_R_LIGHTFORPOINT148,3905
	CG_CIN_PLAYCINEMATIC,CG_CIN_PLAYCINEMATIC149,3926
	CG_CIN_STOPCINEMATIC,CG_CIN_STOPCINEMATIC150,3949
	CG_CIN_RUNCINEMATIC,CG_CIN_RUNCINEMATIC151,3972
	CG_CIN_DRAWCINEMATIC,CG_CIN_DRAWCINEMATIC152,3994
	CG_CIN_SETEXTENTS,CG_CIN_SETEXTENTS153,4017
	CG_R_REMAP_SHADER,CG_R_REMAP_SHADER154,4037
	CG_S_ADDREALLOOPINGSOUND,CG_S_ADDREALLOOPINGSOUND155,4057
	CG_S_STOPLOOPINGSOUND,CG_S_STOPLOOPINGSOUND156,4084
	CG_CM_TEMPCAPSULEMODEL,CG_CM_TEMPCAPSULEMODEL158,4109
	CG_CM_CAPSULETRACE,CG_CM_CAPSULETRACE159,4134
	CG_CM_TRANSFORMEDCAPSULETRACE,CG_CM_TRANSFORMEDCAPSULETRACE160,4155
	CG_R_ADDADDITIVELIGHTTOSCENE,CG_R_ADDADDITIVELIGHTTOSCENE161,4187
	CG_GET_ENTITY_TOKEN,CG_GET_ENTITY_TOKEN162,4218
	CG_R_ADDPOLYSTOSCENE,CG_R_ADDPOLYSTOSCENE163,4240
	CG_R_INPVS,CG_R_INPVS164,4263
	CG_FS_SEEK,CG_FS_SEEK166,4285
	CG_MEMSET = 100,CG_MEMSET174,4358
	CG_MEMCPY,CG_MEMCPY175,4376
	CG_STRNCPY,CG_STRNCPY176,4388
	CG_SIN,CG_SIN177,4401
	CG_COS,CG_COS178,4410
	CG_ATAN2,CG_ATAN2179,4419
	CG_SQRT,CG_SQRT180,4430
	CG_FLOOR,CG_FLOOR181,4440
	CG_CEIL,CG_CEIL182,4451
	CG_TESTPRINTINT,CG_TESTPRINTINT183,4461
	CG_TESTPRINTFLOAT,CG_TESTPRINTFLOAT184,4479
	CG_ACOSCG_ACOS185,4499
} cgameImport_t;cgameImport_t186,4508
	CG_INIT,CG_INIT198,4727
	CG_SHUTDOWN,CG_SHUTDOWN207,5175
	CG_CONSOLE_COMMAND,CG_CONSOLE_COMMAND211,5271
	CG_DRAW_ACTIVE_FRAME,CG_DRAW_ACTIVE_FRAME218,5544
	CG_CROSSHAIR_PLAYER,CG_CROSSHAIR_PLAYER223,5819
	CG_LAST_ATTACKER,CG_LAST_ATTACKER226,5880
	CG_KEY_EVENT, CG_KEY_EVENT229,5935
	CG_MOUSE_EVENT,CG_MOUSE_EVENT232,6002
	CG_EVENT_HANDLINGCG_EVENT_HANDLING234,6063
} cgameExport_t;cgameExport_t236,6121

cgame/cg_servercmds.c,3744
	const char *order;order31,1233
	int taskNum;taskNum32,1253
} orderTask_t;orderTask_t33,1267
static const orderTask_t validOrders[] = {validOrders35,1283
static const int numValidOrders = sizeof(validOrders) / sizeof(orderTask_t);numValidOrders47,1756
static int CG_ValidOrder(const char *p) {CG_ValidOrder50,1853
static void CG_ParseScores( void ) {CG_ParseScores67,2113
static void CG_ParseTeamInfo( void ) {CG_ParseTeamInfo116,3652
void CG_ParseServerinfo( void ) {CG_ParseServerinfo144,4416
static void CG_ParseWarmup( void ) {CG_ParseWarmup170,5488
void CG_SetConfigValues( void ) {CG_SetConfigValues202,6139
void CG_ShaderStateChanged(void) {CG_ShaderStateChanged227,6765
static void CG_ConfigStringModified( void ) {CG_ConfigStringModified268,7484
static void CG_AddToTeamChat( const char *str ) {CG_AddToTeamChat358,10523
static void CG_MapRestart( void ) {CG_MapRestart436,12038
#define MAX_VOICEFILESIZE	MAX_VOICEFILESIZE478,13145
#define MAX_VOICEFILES	MAX_VOICEFILES479,13177
#define MAX_VOICECHATS	MAX_VOICECHATS480,13203
#define MAX_VOICESOUNDS	MAX_VOICESOUNDS481,13230
#define MAX_CHATSIZE	MAX_CHATSIZE482,13258
#define MAX_HEADMODELS	MAX_HEADMODELS483,13283
typedef struct voiceChat_svoiceChat_s485,13311
	char id[64];id487,13340
	int numSounds;numSounds488,13354
	sfxHandle_t sounds[MAX_VOICESOUNDS];sounds489,13370
	char chats[MAX_VOICESOUNDS][MAX_CHATSIZE];chats490,13408
} voiceChat_t;voiceChat_t491,13452
typedef struct voiceChatList_svoiceChatList_s493,13468
	char name[64];name495,13501
	int gender;gender496,13517
	int numVoiceChats;numVoiceChats497,13530
	voiceChat_t voiceChats[MAX_VOICECHATS];voiceChats498,13550
} voiceChatList_t;voiceChatList_t499,13591
typedef struct headModelVoiceChat_sheadModelVoiceChat_s501,13611
	char headmodel[64];headmodel503,13649
	int voiceChatNum;voiceChatNum504,13670
} headModelVoiceChat_t;headModelVoiceChat_t505,13689
voiceChatList_t voiceChatLists[MAX_VOICEFILES];voiceChatLists507,13714
headModelVoiceChat_t headModelVoiceChat[MAX_HEADMODELS];headModelVoiceChat508,13762
int CG_ParseVoiceChats( const char *filename, voiceChatList_t *voiceChatList, int maxVoiceChats ) {CG_ParseVoiceChats515,13881
void CG_LoadVoiceChats( void ) {CG_LoadVoiceChats616,16746
int CG_HeadModelVoiceChats( char *filename ) {CG_HeadModelVoiceChats636,17629
int CG_GetVoiceChat( voiceChatList_t *voiceChatList, const char *id, sfxHandle_t *snd, char **chat) {CG_GetVoiceChat683,18566
voiceChatList_t *CG_VoiceChatListForClient( int clientNum ) {CG_VoiceChatListForClient702,19074
#define MAX_VOICECHATBUFFER	MAX_VOICECHATBUFFER789,21943
typedef struct bufferedVoiceChat_sbufferedVoiceChat_s791,21976
	int clientNum;clientNum793,22013
	sfxHandle_t snd;snd794,22029
	int voiceOnly;voiceOnly795,22047
	char cmd[MAX_SAY_TEXT];cmd796,22063
	char message[MAX_SAY_TEXT];message797,22088
} bufferedVoiceChat_t;bufferedVoiceChat_t798,22117
bufferedVoiceChat_t voiceChatBuffer[MAX_VOICECHATBUFFER];voiceChatBuffer800,22141
void CG_PlayVoiceChat( bufferedVoiceChat_t *vchat ) {CG_PlayVoiceChat807,22259
void CG_PlayBufferedVoiceChats( void ) {CG_PlayBufferedVoiceChats841,23173
void CG_AddBufferedVoiceChat( bufferedVoiceChat_t *vchat ) {CG_AddBufferedVoiceChat860,23652
void CG_VoiceChatLocal( int mode, qboolean voiceOnly, int clientNum, int color, const char *cmd ) {CG_VoiceChatLocal881,24221
void CG_VoiceChat( int mode ) {CG_VoiceChat930,25551
static void CG_RemoveChatEscapeChar( char *text ) {CG_RemoveChatEscapeChar958,26164
static void CG_ServerCommand( void ) {CG_ServerCommand978,26491
void CG_ExecuteNewServerCommands( int latestSequence ) {CG_ExecuteNewServerCommands1104,29371

cgame/cg_localents.c,1925
#define	MAX_LOCAL_ENTITIES	MAX_LOCAL_ENTITIES29,1135
localEntity_t	cg_localEntities[MAX_LOCAL_ENTITIES];cg_localEntities30,1166
localEntity_t	cg_activeLocalEntities;		// double linked listcg_activeLocalEntities31,1218
localEntity_t	*cg_freeLocalEntities;		// single linked listcg_freeLocalEntities32,1279
void	CG_InitLocalEntities( void ) {CG_InitLocalEntities41,1462
void CG_FreeLocalEntity( localEntity_t *le ) {CG_FreeLocalEntity59,1897
localEntity_t	*CG_AllocLocalEntity( void ) {CG_AllocLocalEntity80,2362
void CG_BloodTrail( localEntity_t *le ) {CG_BloodTrail121,3357
void CG_FragmentBounceMark( localEntity_t *le, trace_t *trace ) {CG_FragmentBounceMark156,4109
void CG_FragmentBounceSound( localEntity_t *le, trace_t *trace ) {CG_FragmentBounceSound182,4781
void CG_ReflectVelocity( localEntity_t *le, trace_t *trace ) {CG_ReflectVelocity213,5495
void CG_AddFragment( localEntity_t *le ) {CG_AddFragment245,6383
void CG_AddFadeRGB( localEntity_t *le ) {CG_AddFadeRGB332,8613
static void CG_AddMoveScaleFade( localEntity_t *le ) {CG_AddMoveScaleFade354,9026
static void CG_AddScaleFade( localEntity_t *le ) {CG_AddScaleFade401,10143
static void CG_AddFallScaleFade( localEntity_t *le ) {CG_AddFallScaleFade438,10991
static void CG_AddExplosion( localEntity_t *ex ) {CG_AddExplosion474,11709
static void CG_AddSpriteExplosion( localEntity_t *le ) {CG_AddSpriteExplosion502,12287
void CG_AddKamikaze( localEntity_t *le ) {CG_AddKamikaze545,13204
void CG_AddInvulnerabilityImpact( localEntity_t *le ) {CG_AddInvulnerabilityImpact673,17751
void CG_AddInvulnerabilityJuiced( localEntity_t *le ) {CG_AddInvulnerabilityJuiced682,17931
void CG_AddRefEntity( localEntity_t *le ) {CG_AddRefEntity705,18466
#define NUMBER_SIZE	NUMBER_SIZE719,18700
void CG_AddScorePlum( localEntity_t *le ) {CG_AddScorePlum721,18724
void CG_AddLocalEntities( void ) {CG_AddLocalEntities811,20694

cgame/cg_view.c,1510
void CG_TestModel_f (void) {CG_TestModel_f71,2631
void CG_TestGun_f (void) {CG_TestGun_f109,3512
void CG_TestModelNextFrame_f (void) {CG_TestModelNextFrame_f116,3660
void CG_TestModelPrevFrame_f (void) {CG_TestModelPrevFrame_f121,3784
void CG_TestModelNextSkin_f (void) {CG_TestModelNextSkin_f129,3982
void CG_TestModelPrevSkin_f (void) {CG_TestModelPrevSkin_f134,4108
static void CG_AddTestModel (void) {CG_AddTestModel142,4312
static void CG_CalcVrect (void) {CG_CalcVrect182,5478
#define	FOCUS_DISTANCE	FOCUS_DISTANCE220,6337
static void CG_OffsetThirdPersonView( void ) {CG_OffsetThirdPersonView221,6364
static void CG_StepOffset( void ) {CG_StepOffset294,8819
static void CG_OffsetFirstPersonView( void ) {CG_OffsetFirstPersonView311,9125
void CG_ZoomDown_f( void ) { CG_ZoomDown_f445,12524
void CG_ZoomUp_f( void ) { CG_ZoomUp_f453,12634
#define	WAVE_AMPLITUDE	WAVE_AMPLITUDE469,12879
#define	WAVE_FREQUENCY	WAVE_FREQUENCY470,12904
static int CG_CalcFov( void ) {CG_CalcFov472,12932
static void CG_DamageBlendBlob( void ) {CG_DamageBlendBlob563,14655
static int CG_CalcViewValues( void ) {CG_CalcViewValues613,15720
static void CG_PowerupTimerSounds( void ) {CG_PowerupTimerSounds702,17982
void CG_AddBufferedSound( sfxHandle_t sfx ) {CG_AddBufferedSound726,18527
static void CG_PlayBufferedSounds( void ) {CG_PlayBufferedSounds741,18846
void CG_DrawActiveFrame( int serverTime, stereoFrame_t stereoView, qboolean demoPlayback ) {CG_DrawActiveFrame761,19450

cgame/cg_local.h,37779
#define CG_FONT_THRESHOLD CG_FONT_THRESHOLD35,1400
#define	POWERUP_BLINKS	POWERUP_BLINKS38,1438
#define	POWERUP_BLINK_TIME	POWERUP_BLINK_TIME40,1465
#define	FADE_TIME	FADE_TIME41,1497
#define	PULSE_TIME	PULSE_TIME42,1521
#define	DAMAGE_DEFLECT_TIME	DAMAGE_DEFLECT_TIME43,1546
#define	DAMAGE_RETURN_TIME	DAMAGE_RETURN_TIME44,1578
#define DAMAGE_TIME	DAMAGE_TIME45,1609
#define	LAND_DEFLECT_TIME	LAND_DEFLECT_TIME46,1635
#define	LAND_RETURN_TIME	LAND_RETURN_TIME47,1665
#define	STEP_TIME	STEP_TIME48,1694
#define	DUCK_TIME	DUCK_TIME49,1718
#define	PAIN_TWITCH_TIME	PAIN_TWITCH_TIME50,1742
#define	WEAPON_SELECT_TIME	WEAPON_SELECT_TIME51,1771
#define	ITEM_SCALEUP_TIME	ITEM_SCALEUP_TIME52,1803
#define	ZOOM_TIME	ZOOM_TIME53,1834
#define	ITEM_BLOB_TIME	ITEM_BLOB_TIME54,1858
#define	MUZZLE_FLASH_TIME	MUZZLE_FLASH_TIME55,1886
#define	SINK_TIME	SINK_TIME56,1915
#define	ATTACKER_HEAD_TIME	ATTACKER_HEAD_TIME57,2001
#define	REWARD_TIME	REWARD_TIME58,2034
#define	PULSE_SCALE	PULSE_SCALE60,2062
#define	MAX_STEP_CHANGE	MAX_STEP_CHANGE62,2139
#define	MAX_VERTS_ON_POLY	MAX_VERTS_ON_POLY64,2168
#define	MAX_MARK_POLYS	MAX_MARK_POLYS65,2197
#define STAT_MINUS	STAT_MINUS67,2226
#define	ICON_SIZE	ICON_SIZE69,2284
#define	CHAR_WIDTH	CHAR_WIDTH70,2307
#define	CHAR_HEIGHT	CHAR_HEIGHT71,2331
#define	TEXT_ICON_SPACE	TEXT_ICON_SPACE72,2356
#define	TEAMCHAT_WIDTH	TEAMCHAT_WIDTH74,2384
#define TEAMCHAT_HEIGHT	TEAMCHAT_HEIGHT75,2411
#define	GIANT_WIDTH	GIANT_WIDTH78,2464
#define	GIANT_HEIGHT	GIANT_HEIGHT79,2489
#define	NUM_CROSSHAIRS	NUM_CROSSHAIRS81,2515
#define TEAM_OVERLAY_MAXNAME_WIDTH	TEAM_OVERLAY_MAXNAME_WIDTH83,2543
#define TEAM_OVERLAY_MAXLOCATION_WIDTH	TEAM_OVERLAY_MAXLOCATION_WIDTH84,2581
#define	DEFAULT_MODEL	DEFAULT_MODEL86,2624
#define	DEFAULT_TEAM_MODEL	DEFAULT_TEAM_MODEL88,2675
#define	DEFAULT_TEAM_HEAD	DEFAULT_TEAM_HEAD89,2711
#define	DEFAULT_TEAM_MODEL	DEFAULT_TEAM_MODEL91,2753
#define	DEFAULT_TEAM_HEAD	DEFAULT_TEAM_HEAD92,2789
#define DEFAULT_REDTEAM_NAME	DEFAULT_REDTEAM_NAME95,2832
#define DEFAULT_BLUETEAM_NAME	DEFAULT_BLUETEAM_NAME96,2872
	FOOTSTEP_NORMAL,FOOTSTEP_NORMAL99,2928
	FOOTSTEP_BOOT,FOOTSTEP_BOOT100,2946
	FOOTSTEP_FLESH,FOOTSTEP_FLESH101,2962
	FOOTSTEP_MECH,FOOTSTEP_MECH102,2979
	FOOTSTEP_ENERGY,FOOTSTEP_ENERGY103,2995
	FOOTSTEP_METAL,FOOTSTEP_METAL104,3013
	FOOTSTEP_SPLASH,FOOTSTEP_SPLASH105,3030
	FOOTSTEP_TOTALFOOTSTEP_TOTAL107,3049
} footstep_t;footstep_t108,3065
	IMPACTSOUND_DEFAULT,IMPACTSOUND_DEFAULT111,3095
	IMPACTSOUND_METAL,IMPACTSOUND_METAL112,3117
	IMPACTSOUND_FLESHIMPACTSOUND_FLESH113,3137
} impactSound_t;impactSound_t114,3156
	int			oldFrame;oldFrame128,3619
	int			oldFrameTime;		// time when ->oldFrame was exactly onoldFrameTime129,3636
	int			frame;frame131,3698
	int			frameTime;			// time when ->frame will be exactly onframeTime132,3712
	float		backlerp;backlerp134,3773
	float		yawAngle;yawAngle136,3792
	qboolean	yawing;yawing137,3810
	float		pitchAngle;pitchAngle138,3828
	qboolean	pitching;pitching139,3848
	int			animationNumber;	// may include ANIM_TOGGLEBITanimationNumber141,3869
	animation_t	*animation;animation142,3923
	int			animationTime;		// time when the first frame of the animation will be exactanimationTime143,3948
} lerpFrame_t;lerpFrame_t144,4031
	lerpFrame_t		legs, torso, flag;legs148,4065
	lerpFrame_t		legs, torso, flag;torso148,4065
	lerpFrame_t		legs, torso, flag;flag148,4065
	int				painTime;painTime149,4098
	int				painDirection;	// flip from 0 to 1painDirection150,4116
	int				lightningFiring;lightningFiring151,4159
	vec3_t			railgunImpact;railgunImpact154,4212
	qboolean		railgunFlash;railgunFlash155,4237
	float			barrelAngle;barrelAngle158,4287
	int				barrelTime;barrelTime159,4309
	qboolean		barrelSpinning;barrelSpinning160,4329
} playerEntity_t;playerEntity_t161,4356
typedef struct centity_s {centity_s169,4567
	entityState_t	currentState;	// from cg.framecurrentState170,4594
	entityState_t	nextState;		// from cg.nextFrame, if availablenextState171,4640
	qboolean		interpolate;	// true if next is valid to interpolate tointerpolate172,4702
	qboolean		currentValid;	// true if cg.frame holds this entitycurrentValid173,4769
	int				muzzleFlashTime;	// move to playerEntity?muzzleFlashTime175,4833
	int				previousEvent;previousEvent176,4883
	int				teleportFlag;teleportFlag177,4906
	int				trailTime;		// so missile trails can handle dropped initial packetstrailTime179,4929
	int				dustTrailTime;dustTrailTime180,5005
	int				miscTime;miscTime181,5028
	int				snapShotTime;	// last time this entity was found in a snapshotsnapShotTime183,5047
	playerEntity_t	pe;pe185,5119
	int				errorTime;		// decay the error from this timeerrorTime187,5140
	vec3_t			errorOrigin;errorOrigin188,5194
	vec3_t			errorAngles;errorAngles189,5217
	qboolean		extrapolated;	// false if origin / angles is an interpolationextrapolated191,5242
	vec3_t			rawOrigin;rawOrigin192,5315
	vec3_t			rawAngles;rawAngles193,5336
	vec3_t			beamEnd;beamEnd195,5358
	vec3_t			lerpOrigin;lerpOrigin198,5434
	vec3_t			lerpAngles;lerpAngles199,5456
} centity_t;centity_t200,5478
typedef struct markPoly_s {markPoly_s208,5705
	struct markPoly_s	*prevMark, *nextMark;prevMark209,5733
	struct markPoly_s	*prevMark, *nextMark;nextMark209,5733
	int			time;time210,5774
	qhandle_t	markShader;markShader211,5787
	qboolean	alphaFade;		// fade alpha instead of rgbalphaFade212,5810
	float		color[4];color213,5861
	poly_t		poly;poly214,5879
	polyVert_t	verts[MAX_VERTS_ON_POLY];verts215,5894
} markPoly_t;markPoly_t216,5932
	LE_MARK,LE_MARK220,5963
	LE_EXPLOSION,LE_EXPLOSION221,5973
	LE_SPRITE_EXPLOSION,LE_SPRITE_EXPLOSION222,5988
	LE_FRAGMENT,LE_FRAGMENT223,6010
	LE_MOVE_SCALE_FADE,LE_MOVE_SCALE_FADE224,6024
	LE_FALL_SCALE_FADE,LE_FALL_SCALE_FADE225,6045
	LE_FADE_RGB,LE_FADE_RGB226,6066
	LE_SCALE_FADE,LE_SCALE_FADE227,6080
	LE_SCOREPLUM,LE_SCOREPLUM228,6096
	LE_KAMIKAZE,LE_KAMIKAZE230,6130
	LE_INVULIMPACT,LE_INVULIMPACT231,6144
	LE_INVULJUICED,LE_INVULJUICED232,6161
	LE_SHOWREFENTITYLE_SHOWREFENTITY233,6178
} leType_t;leType_t235,6203
	LEF_PUFF_DONT_SCALE  = 0x0001,			// do not scale size over timeLEF_PUFF_DONT_SCALE238,6231
	LEF_TUMBLE			 = 0x0002,			// tumble over time, used for ejecting shellsLEF_TUMBLE239,6296
	LEF_SOUND1			 = 0x0004,			// sound 1 for kamikazeLEF_SOUND1240,6369
	LEF_SOUND2			 = 0x0008			// sound 2 for kamikazeLEF_SOUND2241,6420
} leFlag_t;leFlag_t242,6470
	LEMT_NONE,LEMT_NONE245,6498
	LEMT_BURN,LEMT_BURN246,6510
	LEMT_BLOODLEMT_BLOOD247,6522
} leMarkType_t;			// fragment local entities can leave marks on wallsleMarkType_t248,6534
	LEBS_NONE,LEBS_NONE251,6620
	LEBS_BLOOD,LEBS_BLOOD252,6632
	LEBS_BRASSLEBS_BRASS253,6645
} leBounceSoundType_t;	// fragment local entities can make sounds on impactsleBounceSoundType_t254,6657
typedef struct localEntity_s {localEntity_s256,6735
	struct localEntity_s	*prev, *next;prev257,6766
	struct localEntity_s	*prev, *next;next257,6766
	leType_t		leType;leType258,6802
	int				leFlags;leFlags259,6821
	int				startTime;startTime261,6839
	int				endTime;endTime262,6858
	int				fadeInTime;fadeInTime263,6875
	float			lifeRate;			// 1.0 / (endTime - startTime)lifeRate265,6896
	trajectory_t	pos;pos267,6949
	trajectory_t	angles;angles268,6968
	float			bounceFactor;		// 0.0 = no bounce, 1.0 = perfectbounceFactor270,6991
	float			color[4];color272,7050
	float			radius;radius274,7070
	float			light;light276,7088
	vec3_t			lightColor;lightColor277,7104
	leMarkType_t		leMarkType;		// mark to leave on fragment impactleMarkType279,7127
	leBounceSoundType_t	leBounceSoundType;leBounceSoundType280,7191
	refEntity_t		refEntity;		refEntity282,7232
} localEntity_t;localEntity_t283,7259
	int				client;client289,7369
	int				score;score290,7385
	int				ping;ping291,7400
	int				time;time292,7414
	int				scoreFlags;scoreFlags293,7428
	int				powerUps;powerUps294,7448
	int				accuracy;accuracy295,7466
	int				impressiveCount;impressiveCount296,7484
	int				excellentCount;excellentCount297,7509
	int				guantletCount;guantletCount298,7533
	int				defendCount;defendCount299,7556
	int				assistCount;assistCount300,7577
	int				captures;captures301,7598
	qboolean	perfect;perfect302,7616
	int				team;team303,7635
} score_t;score_t304,7649
#define	MAX_CUSTOM_SOUNDS	MAX_CUSTOM_SOUNDS311,7941
	qboolean		infoValid;infoValid314,7988
	char			name[MAX_QPATH];name316,8011
	team_t			team;team317,8036
	int				botSkill;		// 0 = not bot, 1-5 = botbotSkill319,8053
	vec3_t			color1;color1321,8099
	vec3_t			color2;color2322,8117
	int				score;			// updated by score servercmdsscore324,8136
	int				location;		// location index for team modelocation325,8184
	int				health;			// you only get this info about your teammateshealth326,8235
	int				armor;armor327,8300
	int				curWeapon;curWeapon328,8315
	int				handicap;handicap330,8335
	int				wins, losses;	// in tourney modewins331,8353
	int				wins, losses;	// in tourney modelosses331,8353
	int				teamTask;		// task in teamplay (offence/defence)teamTask333,8395
	qboolean		teamLeader;		// true when this is a team leaderteamLeader334,8452
	int				powerups;		// so can display quad/flag statuspowerups336,8512
	int				medkitUsageTime;medkitUsageTime338,8567
	int				invulnerabilityStartTime;invulnerabilityStartTime339,8592
	int				invulnerabilityStopTime;invulnerabilityStopTime340,8626
	int				breathPuffTime;breathPuffTime342,8660
	char			modelName[MAX_QPATH];modelName347,8827
	char			skinName[MAX_QPATH];skinName348,8857
	char			headModelName[MAX_QPATH];headModelName349,8886
	char			headSkinName[MAX_QPATH];headSkinName350,8920
	char			redTeam[MAX_TEAMNAME];redTeam351,8953
	char			blueTeam[MAX_TEAMNAME];blueTeam352,8984
	qboolean		deferred;deferred353,9016
	qboolean		newAnims;		// true if using the new mission pack animationsnewAnims355,9038
	qboolean		fixedlegs;		// true if legs yaw is always the same as torso yawfixedlegs356,9109
	qboolean		fixedtorso;		// true if torso never changes yawfixedtorso357,9184
	vec3_t			headOffset;		// move head in icon viewsheadOffset359,9244
	footstep_t		footsteps;footsteps360,9294
	gender_t		gender;			// from modelgender361,9318
	qhandle_t		legsModel;legsModel363,9354
	qhandle_t		legsSkin;legsSkin364,9377
	qhandle_t		torsoModel;torsoModel366,9400
	qhandle_t		torsoSkin;torsoSkin367,9424
	qhandle_t		headModel;headModel369,9448
	qhandle_t		headSkin;headSkin370,9471
	qhandle_t		modelIcon;modelIcon372,9494
	animation_t		animations[MAX_TOTALANIMATIONS];animations374,9518
	sfxHandle_t		sounds[MAX_CUSTOM_SOUNDS];sounds376,9566
} clientInfo_t;clientInfo_t377,9607
typedef struct weaponInfo_s {weaponInfo_s383,9766
	qboolean		registered;registered384,9796
	gitem_t			*item;item385,9819
	qhandle_t		handsModel;			// the hands don't actually draw, they just position the weaponhandsModel387,9838
	qhandle_t		weaponModel;weaponModel388,9928
	qhandle_t		barrelModel;barrelModel389,9953
	qhandle_t		flashModel;flashModel390,9978
	vec3_t			weaponMidpoint;		// so it will rotate centered instead of by tagweaponMidpoint392,10003
	float			flashDlight;flashDlight394,10079
	vec3_t			flashDlightColor;flashDlightColor395,10101
	sfxHandle_t		flashSound[4];		// fast firing weapons randomly chooseflashSound396,10129
	qhandle_t		weaponIcon;weaponIcon398,10199
	qhandle_t		ammoIcon;ammoIcon399,10223
	qhandle_t		ammoModel;ammoModel401,10246
	qhandle_t		missileModel;missileModel403,10270
	sfxHandle_t		missileSound;missileSound404,10296
	void			(*missileTrailFunc)( centity_t *, const struct weaponInfo_s *wi );missileTrailFunc405,10324
	float			missileDlight;missileDlight406,10399
	vec3_t			missileDlightColor;missileDlightColor407,10423
	int				missileRenderfx;missileRenderfx408,10453
	void			(*ejectBrassFunc)( centity_t * );ejectBrassFunc410,10479
	float			trailRadius;trailRadius412,10522
	float			wiTrailTime;wiTrailTime413,10544
	sfxHandle_t		readySound;readySound415,10567
	sfxHandle_t		firingSound;firingSound416,10593
	qboolean		loopFireSound;loopFireSound417,10620
} weaponInfo_t;weaponInfo_t418,10646
	qboolean		registered;registered425,10812
	qhandle_t		models[MAX_ITEM_MODELS];models426,10835
	qhandle_t		icon;icon427,10872
} itemInfo_t;itemInfo_t428,10890
	int				itemNum;itemNum432,10923
} powerupInfo_t;powerupInfo_t433,10940
#define MAX_SKULLTRAIL	MAX_SKULLTRAIL436,10959
	vec3_t positions[MAX_SKULLTRAIL];positions439,11004
	int numpositions;numpositions440,11039
} skulltrail_t;skulltrail_t441,11058
#define MAX_REWARDSTACK	MAX_REWARDSTACK444,11076
#define MAX_SOUNDBUFFER	MAX_SOUNDBUFFER445,11104
#define MAX_PREDICTED_EVENTS	MAX_PREDICTED_EVENTS452,11384
	int			clientFrame;		// incremented each frameclientFrame455,11435
	int			clientNum;clientNum457,11483
	qboolean	demoPlayback;demoPlayback459,11503
	qboolean	levelShot;			// taking a level menu screenshotlevelShot460,11527
	int			deferredPlayerLoading;deferredPlayerLoading461,11584
	qboolean	loading;			// don't defer players at initial startuploading462,11614
	qboolean	intermissionStarted;	// don't play voice rewards, because game will end shortlyintermissionStarted463,11677
	int			latestSnapshotNum;	// the number of snapshots the client system has receivedlatestSnapshotNum466,11837
	int			latestSnapshotTime;	// the time from latestSnapshotNum, so we don't need to read the snapshot yetlatestSnapshotTime467,11921
	snapshot_t	*snap;				// cg.snap->serverTime <= cg.timesnap469,12027
	snapshot_t	*nextSnap;			// cg.nextSnap->serverTime > cg.time, or NULLnextSnap470,12083
	snapshot_t	activeSnapshots[2];activeSnapshots471,12154
	float		frameInterpolation;	// (float)( cg.time - cg.frame->serverTime ) / (cg.nextFrame->serverTime - cg.frame->serverTime)frameInterpolation473,12187
	qboolean	thisFrameTeleport;thisFrameTeleport475,12313
	qboolean	nextFrameTeleport;nextFrameTeleport476,12342
	int			frametime;		// cg.time - cg.oldTimeframetime478,12372
	int			time;			// this is the time value that the clienttime480,12416
	int			oldTime;		// time at last frame, used for missile trails and prediction checkingoldTime482,12501
	int			physicsTime;	// either cg.snap->time or cg.nextSnap->timephysicsTime484,12590
	int			timelimitWarnings;	// 5 min, 1 min, overtimetimelimitWarnings486,12656
	int			fraglimitWarnings;fraglimitWarnings487,12708
	qboolean	mapRestart;			// set on a map restart to set back the weaponmapRestart489,12735
	qboolean	renderingThirdPerson;		// during deaths, chasecams, etcrenderingThirdPerson491,12807
	qboolean	hyperspace;				// true if prediction has hit a trigger_teleporthyperspace494,12895
	playerState_t	predictedPlayerState;predictedPlayerState495,12969
	centity_t		predictedPlayerEntity;predictedPlayerEntity496,13006
	qboolean	validPPS;				// clear until the first call to CG_PredictPlayerStatevalidPPS497,13041
	int			predictedErrorTime;predictedErrorTime498,13119
	vec3_t		predictedError;predictedError499,13146
	int			eventSequence;eventSequence501,13172
	int			predictableEvents[MAX_PREDICTED_EVENTS];predictableEvents502,13194
	float		stepChange;				// for stair up smoothingstepChange504,13243
	int			stepTime;stepTime505,13292
	float		duckChange;				// for duck viewheight smoothingduckChange507,13310
	int			duckTime;duckTime508,13366
	float		landChange;				// for landing hardlandChange510,13384
	int			landTime;landTime511,13427
	int			weaponSelect;weaponSelect514,13476
	vec3_t		autoAngles;autoAngles517,13522
	vec3_t		autoAxis[3];autoAxis518,13543
	vec3_t		autoAnglesFast;autoAnglesFast519,13565
	vec3_t		autoAxisFast[3];autoAxisFast520,13590
	refdef_t	refdef;refdef523,13636
	vec3_t		refdefViewAngles;		// will be converted to refdef.viewaxisrefdefViewAngles524,13654
	qboolean	zoomed;zoomed527,13736
	int			zoomTime;zoomTime528,13754
	float		zoomSensitivity;zoomSensitivity529,13771
	char		infoScreenText[MAX_STRING_CHARS];infoScreenText532,13840
	int			scoresRequestTime;scoresRequestTime535,13897
	int			numScores;numScores536,13923
	int			selectedScore;selectedScore537,13941
	int			teamScores[2];teamScores538,13963
	score_t		scores[MAX_CLIENTS];scores539,13985
	qboolean	showScores;showScores540,14016
	qboolean	scoreBoardShowing;scoreBoardShowing541,14038
	int			scoreFadeTime;scoreFadeTime542,14067
	char		killerName[MAX_NAME_LENGTH];killerName543,14089
	char			spectatorList[MAX_STRING_CHARS];		// list of namesspectatorList544,14125
	int				spectatorLen;												// length of listspectatorLen545,14184
	float			spectatorWidth;											// width in device unitsspectatorWidth546,14235
	int				spectatorTime;											// next time to offsetspectatorTime547,14295
	int				spectatorPaintX;										// current paint xspectatorPaintX548,14351
	int				spectatorPaintX2;										// current paint xspectatorPaintX2549,14404
	int				spectatorOffset;										// current offset from startspectatorOffset550,14458
	int				spectatorPaintLen; 									// current offset from startspectatorPaintLen551,14521
	skulltrail_t	skulltrails[MAX_CLIENTS];skulltrails554,14604
	int			centerPrintTime;centerPrintTime557,14664
	int			centerPrintCharWidth;centerPrintCharWidth558,14688
	int			centerPrintY;centerPrintY559,14717
	char		centerPrint[1024];centerPrint560,14738
	int			centerPrintLines;centerPrintLines561,14764
	int			lowAmmoWarning;		// 1 = low, 2 = emptylowAmmoWarning564,14817
	int			lastKillTime;lastKillTime567,14899
	int			crosshairClientNum;crosshairClientNum570,14945
	int			crosshairClientTime;crosshairClientTime571,14972
	int			powerupActive;powerupActive574,15029
	int			powerupTime;powerupTime575,15051
	int			attackerTime;attackerTime578,15093
	int			voiceTime;voiceTime579,15114
	int			rewardStack;rewardStack582,15151
	int			rewardTime;rewardTime583,15171
	int			rewardCount[MAX_REWARDSTACK];rewardCount584,15190
	qhandle_t	rewardShader[MAX_REWARDSTACK];rewardShader585,15227
	qhandle_t	rewardSound[MAX_REWARDSTACK];rewardSound586,15269
	int			soundBufferIn;soundBufferIn589,15356
	int			soundBufferOut;soundBufferOut590,15378
	int			soundTime;soundTime591,15401
	qhandle_t	soundBuffer[MAX_SOUNDBUFFER];soundBuffer592,15419
	int			voiceChatTime;voiceChatTime595,15487
	int			voiceChatBufferIn;voiceChatBufferIn596,15509
	int			voiceChatBufferOut;voiceChatBufferOut597,15535
	int			warmup;warmup600,15584
	int			warmupCount;warmupCount601,15599
	int			itemPickup;itemPickup605,15651
	int			itemPickupTime;itemPickupTime606,15670
	int			itemPickupBlendTime;	// the pulse around the crosshair is timed seperatelyitemPickupBlendTime607,15693
	int			weaponSelectTime;weaponSelectTime609,15776
	int			weaponAnimation;weaponAnimation610,15801
	int			weaponAnimationTime;weaponAnimationTime611,15825
	float		damageTime;damageTime614,15870
	float		damageX, damageY, damageValue;damageX615,15890
	float		damageX, damageY, damageValue;damageY615,15890
	float		damageX, damageY, damageValue;damageValue615,15890
	float		headYaw;headYaw618,15950
	float		headEndPitch;headEndPitch619,15967
	float		headEndYaw;headEndYaw620,15989
	int			headEndTime;headEndTime621,16009
	float		headStartPitch;headStartPitch622,16029
	float		headStartYaw;headStartYaw623,16053
	int			headStartTime;headStartTime624,16075
	float		v_dmg_time;v_dmg_time627,16116
	float		v_dmg_pitch;v_dmg_pitch628,16136
	float		v_dmg_roll;v_dmg_roll629,16157
	vec3_t		kick_angles;	// weapon kickskick_angles631,16178
	vec3_t		kick_origin;kick_origin632,16216
	float		bobfracsin;bobfracsin635,16282
	int			bobcycle;bobcycle636,16302
	float		xyspeed;xyspeed637,16319
	int     nextOrbitTime;nextOrbitTime638,16336
	refEntity_t		testModelEntity;testModelEntity644,16446
	char			testModelName[MAX_QPATH];testModelName645,16477
	qboolean		testGun;testGun646,16511
} cg_t;cg_t648,16532
	qhandle_t	charsetShader;charsetShader656,16811
	qhandle_t	charsetProp;charsetProp657,16837
	qhandle_t	charsetPropGlow;charsetPropGlow658,16861
	qhandle_t	charsetPropB;charsetPropB659,16889
	qhandle_t	whiteShader;whiteShader660,16914
	qhandle_t	redCubeModel;redCubeModel662,16939
	qhandle_t	blueCubeModel;blueCubeModel663,16964
	qhandle_t	redCubeIcon;redCubeIcon664,16990
	qhandle_t	blueCubeIcon;blueCubeIcon665,17014
	qhandle_t	redFlagModel;redFlagModel666,17039
	qhandle_t	blueFlagModel;blueFlagModel667,17064
	qhandle_t	neutralFlagModel;neutralFlagModel668,17090
	qhandle_t	redFlagShader[3];redFlagShader669,17119
	qhandle_t	blueFlagShader[3];blueFlagShader670,17148
	qhandle_t	flagShader[4];flagShader671,17178
	qhandle_t	flagPoleModel;flagPoleModel673,17205
	qhandle_t	flagFlapModel;flagFlapModel674,17231
	qhandle_t	redFlagFlapSkin;redFlagFlapSkin676,17258
	qhandle_t	blueFlagFlapSkin;blueFlagFlapSkin677,17286
	qhandle_t	neutralFlagFlapSkin;neutralFlagFlapSkin678,17315
	qhandle_t	redFlagBaseModel;redFlagBaseModel680,17348
	qhandle_t	blueFlagBaseModel;blueFlagBaseModel681,17377
	qhandle_t	neutralFlagBaseModel;neutralFlagBaseModel682,17407
	qhandle_t	overloadBaseModel;overloadBaseModel685,17460
	qhandle_t	overloadTargetModel;overloadTargetModel686,17490
	qhandle_t	overloadLightsModel;overloadLightsModel687,17522
	qhandle_t	overloadEnergyModel;overloadEnergyModel688,17554
	qhandle_t	harvesterModel;harvesterModel690,17587
	qhandle_t	harvesterRedSkin;harvesterRedSkin691,17614
	qhandle_t	harvesterBlueSkin;harvesterBlueSkin692,17643
	qhandle_t	harvesterNeutralModel;harvesterNeutralModel693,17673
	qhandle_t	armorModel;armorModel696,17715
	qhandle_t	armorIcon;armorIcon697,17738
	qhandle_t	teamStatusBar;teamStatusBar699,17761
	qhandle_t	deferShader;deferShader701,17788
	qhandle_t	gibAbdomen;gibAbdomen704,17832
	qhandle_t	gibArm;gibArm705,17855
	qhandle_t	gibChest;gibChest706,17874
	qhandle_t	gibFist;gibFist707,17895
	qhandle_t	gibFoot;gibFoot708,17915
	qhandle_t	gibForearm;gibForearm709,17935
	qhandle_t	gibIntestine;gibIntestine710,17958
	qhandle_t	gibLeg;gibLeg711,17983
	qhandle_t	gibSkull;gibSkull712,18002
	qhandle_t	gibBrain;gibBrain713,18023
	qhandle_t	smoke2;smoke2715,18045
	qhandle_t	machinegunBrassModel;machinegunBrassModel717,18065
	qhandle_t	shotgunBrassModel;shotgunBrassModel718,18098
	qhandle_t	railRingsShader;railRingsShader720,18129
	qhandle_t	railCoreShader;railCoreShader721,18157
	qhandle_t	lightningShader;lightningShader723,18185
	qhandle_t	friendShader;friendShader725,18214
	qhandle_t	balloonShader;balloonShader727,18240
	qhandle_t	connectionShader;connectionShader728,18266
	qhandle_t	selectShader;selectShader730,18296
	qhandle_t	viewBloodShader;viewBloodShader731,18321
	qhandle_t	tracerShader;tracerShader732,18349
	qhandle_t	crosshairShader[NUM_CROSSHAIRS];crosshairShader733,18374
	qhandle_t	lagometerShader;lagometerShader734,18418
	qhandle_t	backTileShader;backTileShader735,18446
	qhandle_t	noammoShader;noammoShader736,18473
	qhandle_t	smokePuffShader;smokePuffShader738,18499
	qhandle_t	smokePuffRageProShader;smokePuffRageProShader739,18527
	qhandle_t	shotgunSmokePuffShader;shotgunSmokePuffShader740,18562
	qhandle_t	plasmaBallShader;plasmaBallShader741,18597
	qhandle_t	waterBubbleShader;waterBubbleShader742,18626
	qhandle_t	bloodTrailShader;bloodTrailShader743,18656
	qhandle_t	nailPuffShader;nailPuffShader745,18704
	qhandle_t	blueProxMine;blueProxMine746,18731
	qhandle_t	numberShaders[11];numberShaders749,18764
	qhandle_t	shadowMarkShader;shadowMarkShader751,18795
	qhandle_t	botSkillShaders[5];botSkillShaders753,18825
	qhandle_t	wakeMarkShader;wakeMarkShader756,18879
	qhandle_t	bloodMarkShader;bloodMarkShader757,18906
	qhandle_t	bulletMarkShader;bulletMarkShader758,18934
	qhandle_t	burnMarkShader;burnMarkShader759,18963
	qhandle_t	holeMarkShader;holeMarkShader760,18990
	qhandle_t	energyMarkShader;energyMarkShader761,19017
	qhandle_t	quadShader;quadShader764,19067
	qhandle_t	redQuadShader;redQuadShader765,19090
	qhandle_t	quadWeaponShader;quadWeaponShader766,19116
	qhandle_t	invisShader;invisShader767,19145
	qhandle_t	regenShader;regenShader768,19169
	qhandle_t	battleSuitShader;battleSuitShader769,19193
	qhandle_t	battleWeaponShader;battleWeaponShader770,19222
	qhandle_t	hastePuffShader;hastePuffShader771,19253
	qhandle_t	redKamikazeShader;redKamikazeShader772,19281
	qhandle_t	blueKamikazeShader;blueKamikazeShader773,19311
	qhandle_t	bulletFlashModel;bulletFlashModel776,19368
	qhandle_t	ringFlashModel;ringFlashModel777,19397
	qhandle_t	dishFlashModel;dishFlashModel778,19424
	qhandle_t	lightningExplosionModel;lightningExplosionModel779,19451
	qhandle_t	railExplosionShader;railExplosionShader782,19514
	qhandle_t	plasmaExplosionShader;plasmaExplosionShader783,19546
	qhandle_t	bulletExplosionShader;bulletExplosionShader784,19580
	qhandle_t	rocketExplosionShader;rocketExplosionShader785,19614
	qhandle_t	grenadeExplosionShader;grenadeExplosionShader786,19648
	qhandle_t	bfgExplosionShader;bfgExplosionShader787,19683
	qhandle_t	bloodExplosionShader;bloodExplosionShader788,19714
	qhandle_t	teleportEffectModel;teleportEffectModel791,19775
	qhandle_t	teleportEffectShader;teleportEffectShader792,19807
	qhandle_t	kamikazeEffectModel;kamikazeEffectModel794,19859
	qhandle_t	kamikazeShockWave;kamikazeShockWave795,19891
	qhandle_t	kamikazeHeadModel;kamikazeHeadModel796,19921
	qhandle_t	kamikazeHeadTrail;kamikazeHeadTrail797,19951
	qhandle_t	guardPowerupModel;guardPowerupModel798,19981
	qhandle_t	scoutPowerupModel;scoutPowerupModel799,20011
	qhandle_t	doublerPowerupModel;doublerPowerupModel800,20041
	qhandle_t	ammoRegenPowerupModel;ammoRegenPowerupModel801,20073
	qhandle_t	invulnerabilityImpactModel;invulnerabilityImpactModel802,20107
	qhandle_t	invulnerabilityJuicedModel;invulnerabilityJuicedModel803,20146
	qhandle_t	medkitUsageModel;medkitUsageModel804,20185
	qhandle_t	dustPuffShader;dustPuffShader805,20214
	qhandle_t	heartShader;heartShader806,20241
	qhandle_t	invulnerabilityPowerupModel;invulnerabilityPowerupModel808,20272
	qhandle_t	scoreboardName;scoreboardName811,20336
	qhandle_t	scoreboardPing;scoreboardPing812,20363
	qhandle_t	scoreboardScore;scoreboardScore813,20390
	qhandle_t	scoreboardTime;scoreboardTime814,20418
	qhandle_t	medalImpressive;medalImpressive817,20479
	qhandle_t	medalExcellent;medalExcellent818,20507
	qhandle_t	medalGauntlet;medalGauntlet819,20534
	qhandle_t	medalDefend;medalDefend820,20560
	qhandle_t	medalAssist;medalAssist821,20584
	qhandle_t	medalCapture;medalCapture822,20608
	sfxHandle_t	quadSound;quadSound825,20645
	sfxHandle_t	tracerSound;tracerSound826,20669
	sfxHandle_t	selectSound;selectSound827,20695
	sfxHandle_t	useNothingSound;useNothingSound828,20721
	sfxHandle_t	wearOffSound;wearOffSound829,20751
	sfxHandle_t	footsteps[FOOTSTEP_TOTAL][4];footsteps830,20778
	sfxHandle_t	sfx_lghit1;sfx_lghit1831,20821
	sfxHandle_t	sfx_lghit2;sfx_lghit2832,20846
	sfxHandle_t	sfx_lghit3;sfx_lghit3833,20871
	sfxHandle_t	sfx_ric1;sfx_ric1834,20896
	sfxHandle_t	sfx_ric2;sfx_ric2835,20919
	sfxHandle_t	sfx_ric3;sfx_ric3836,20942
	sfxHandle_t	sfx_railg;sfx_railg837,20965
	sfxHandle_t	sfx_rockexp;sfx_rockexp838,20989
	sfxHandle_t	sfx_plasmaexp;sfx_plasmaexp839,21015
	sfxHandle_t	sfx_proxexp;sfx_proxexp841,21062
	sfxHandle_t	sfx_nghit;sfx_nghit842,21088
	sfxHandle_t	sfx_nghitflesh;sfx_nghitflesh843,21112
	sfxHandle_t	sfx_nghitmetal;sfx_nghitmetal844,21141
	sfxHandle_t	sfx_chghit;sfx_chghit845,21170
	sfxHandle_t	sfx_chghitflesh;sfx_chghitflesh846,21195
	sfxHandle_t	sfx_chghitmetal;sfx_chghitmetal847,21225
	sfxHandle_t kamikazeExplodeSound;kamikazeExplodeSound848,21255
	sfxHandle_t kamikazeImplodeSound;kamikazeImplodeSound849,21290
	sfxHandle_t kamikazeFarSound;kamikazeFarSound850,21325
	sfxHandle_t useInvulnerabilitySound;useInvulnerabilitySound851,21356
	sfxHandle_t invulnerabilityImpactSound1;invulnerabilityImpactSound1852,21394
	sfxHandle_t invulnerabilityImpactSound2;invulnerabilityImpactSound2853,21436
	sfxHandle_t invulnerabilityImpactSound3;invulnerabilityImpactSound3854,21478
	sfxHandle_t invulnerabilityJuicedSound;invulnerabilityJuicedSound855,21520
	sfxHandle_t obeliskHitSound1;obeliskHitSound1856,21561
	sfxHandle_t obeliskHitSound2;obeliskHitSound2857,21592
	sfxHandle_t obeliskHitSound3;obeliskHitSound3858,21623
	sfxHandle_t	obeliskRespawnSound;obeliskRespawnSound859,21654
	sfxHandle_t	winnerSound;winnerSound860,21688
	sfxHandle_t	loserSound;loserSound861,21714
	sfxHandle_t	youSuckSound;youSuckSound862,21739
	sfxHandle_t	gibSound;gibSound864,21773
	sfxHandle_t	gibBounce1Sound;gibBounce1Sound865,21796
	sfxHandle_t	gibBounce2Sound;gibBounce2Sound866,21826
	sfxHandle_t	gibBounce3Sound;gibBounce3Sound867,21856
	sfxHandle_t	teleInSound;teleInSound868,21886
	sfxHandle_t	teleOutSound;teleOutSound869,21912
	sfxHandle_t	noAmmoSound;noAmmoSound870,21939
	sfxHandle_t	respawnSound;respawnSound871,21965
	sfxHandle_t talkSound;talkSound872,21992
	sfxHandle_t landSound;landSound873,22016
	sfxHandle_t fallSound;fallSound874,22040
	sfxHandle_t jumpPadSound;jumpPadSound875,22064
	sfxHandle_t oneMinuteSound;oneMinuteSound877,22092
	sfxHandle_t fiveMinuteSound;fiveMinuteSound878,22121
	sfxHandle_t suddenDeathSound;suddenDeathSound879,22151
	sfxHandle_t threeFragSound;threeFragSound881,22183
	sfxHandle_t twoFragSound;twoFragSound882,22212
	sfxHandle_t oneFragSound;oneFragSound883,22239
	sfxHandle_t hitSound;hitSound885,22267
	sfxHandle_t hitSoundHighArmor;hitSoundHighArmor886,22290
	sfxHandle_t hitSoundLowArmor;hitSoundLowArmor887,22322
	sfxHandle_t hitTeamSound;hitTeamSound888,22353
	sfxHandle_t impressiveSound;impressiveSound889,22380
	sfxHandle_t excellentSound;excellentSound890,22410
	sfxHandle_t deniedSound;deniedSound891,22439
	sfxHandle_t humiliationSound;humiliationSound892,22465
	sfxHandle_t assistSound;assistSound893,22496
	sfxHandle_t defendSound;defendSound894,22522
	sfxHandle_t firstImpressiveSound;firstImpressiveSound895,22548
	sfxHandle_t firstExcellentSound;firstExcellentSound896,22583
	sfxHandle_t firstHumiliationSound;firstHumiliationSound897,22617
	sfxHandle_t takenLeadSound;takenLeadSound899,22654
	sfxHandle_t tiedLeadSound;tiedLeadSound900,22683
	sfxHandle_t lostLeadSound;lostLeadSound901,22711
	sfxHandle_t voteNow;voteNow903,22740
	sfxHandle_t votePassed;votePassed904,22762
	sfxHandle_t voteFailed;voteFailed905,22787
	sfxHandle_t watrInSound;watrInSound907,22813
	sfxHandle_t watrOutSound;watrOutSound908,22839
	sfxHandle_t watrUnSound;watrUnSound909,22866
	sfxHandle_t flightSound;flightSound911,22893
	sfxHandle_t medkitSound;medkitSound912,22919
	sfxHandle_t weaponHoverSound;weaponHoverSound914,22946
	sfxHandle_t captureAwardSound;captureAwardSound917,22998
	sfxHandle_t redScoredSound;redScoredSound918,23030
	sfxHandle_t blueScoredSound;blueScoredSound919,23059
	sfxHandle_t redLeadsSound;redLeadsSound920,23089
	sfxHandle_t blueLeadsSound;blueLeadsSound921,23117
	sfxHandle_t teamsTiedSound;teamsTiedSound922,23146
	sfxHandle_t	captureYourTeamSound;captureYourTeamSound924,23176
	sfxHandle_t	captureOpponentSound;captureOpponentSound925,23211
	sfxHandle_t	returnYourTeamSound;returnYourTeamSound926,23246
	sfxHandle_t	returnOpponentSound;returnOpponentSound927,23280
	sfxHandle_t	takenYourTeamSound;takenYourTeamSound928,23314
	sfxHandle_t	takenOpponentSound;takenOpponentSound929,23347
	sfxHandle_t redFlagReturnedSound;redFlagReturnedSound931,23381
	sfxHandle_t blueFlagReturnedSound;blueFlagReturnedSound932,23416
	sfxHandle_t neutralFlagReturnedSound;neutralFlagReturnedSound933,23452
	sfxHandle_t	enemyTookYourFlagSound;enemyTookYourFlagSound934,23491
	sfxHandle_t	enemyTookTheFlagSound;enemyTookTheFlagSound935,23528
	sfxHandle_t yourTeamTookEnemyFlagSound;yourTeamTookEnemyFlagSound936,23564
	sfxHandle_t yourTeamTookTheFlagSound;yourTeamTookTheFlagSound937,23605
	sfxHandle_t	youHaveFlagSound;youHaveFlagSound938,23644
	sfxHandle_t yourBaseIsUnderAttackSound;yourBaseIsUnderAttackSound939,23675
	sfxHandle_t holyShitSound;holyShitSound940,23716
	sfxHandle_t	count3Sound;count3Sound943,23767
	sfxHandle_t	count2Sound;count2Sound944,23793
	sfxHandle_t	count1Sound;count1Sound945,23819
	sfxHandle_t	countFightSound;countFightSound946,23845
	sfxHandle_t	countPrepareSound;countPrepareSound947,23875
	qhandle_t patrolShader;patrolShader951,23941
	qhandle_t assaultShader;assaultShader952,23966
	qhandle_t campShader;campShader953,23992
	qhandle_t followShader;followShader954,24015
	qhandle_t defendShader;defendShader955,24040
	qhandle_t teamLeaderShader;teamLeaderShader956,24065
	qhandle_t retrieveShader;retrieveShader957,24094
	qhandle_t escortShader;escortShader958,24121
	qhandle_t flagShaders[3];flagShaders959,24146
	sfxHandle_t	countPrepareTeamSound;countPrepareTeamSound960,24173
	sfxHandle_t ammoregenSound;ammoregenSound962,24210
	sfxHandle_t doublerSound;doublerSound963,24239
	sfxHandle_t guardSound;guardSound964,24266
	sfxHandle_t scoutSound;scoutSound965,24291
	qhandle_t cursor;cursor967,24323
	qhandle_t selectCursor;selectCursor968,24342
	qhandle_t sizeCursor;sizeCursor969,24367
	sfxHandle_t	regenSound;regenSound971,24391
	sfxHandle_t	protectSound;protectSound972,24416
	sfxHandle_t	n_healthSound;n_healthSound973,24443
	sfxHandle_t	hgrenb1aSound;hgrenb1aSound974,24471
	sfxHandle_t	hgrenb2aSound;hgrenb2aSound975,24499
	sfxHandle_t	wstbimplSound;wstbimplSound976,24527
	sfxHandle_t	wstbimpmSound;wstbimpmSound977,24555
	sfxHandle_t	wstbimpdSound;wstbimpdSound978,24583
	sfxHandle_t	wstbactvSound;wstbactvSound979,24611
} cgMedia_t;cgMedia_t981,24640
	gameState_t		gameState;			// gamestate from servergameState989,24887
	glconfig_t		glconfig;			// rendering configurationglconfig990,24939
	float			screenXScale;		// derived from glconfigscreenXScale991,24991
	float			screenYScale;screenYScale992,25040
	float			screenXBias;screenXBias993,25063
	int				serverCommandSequence;	// reliable command stream counterserverCommandSequence995,25086
	int				processedSnapshotNum;// the number of snapshots cgame has requestedprocessedSnapshotNum996,25152
	qboolean		localServer;		// detected on startup by checking sv_runninglocalServer998,25229
	gametype_t		gametype;gametype1001,25328
	int				dmflags;dmflags1002,25351
	int				teamflags;teamflags1003,25368
	int				fraglimit;fraglimit1004,25387
	int				capturelimit;capturelimit1005,25406
	int				timelimit;timelimit1006,25428
	int				maxclients;maxclients1007,25447
	char			mapname[MAX_QPATH];mapname1008,25467
	char			redTeam[MAX_QPATH];redTeam1009,25495
	char			blueTeam[MAX_QPATH];blueTeam1010,25523
	int				voteTime;voteTime1012,25553
	int				voteYes;voteYes1013,25571
	int				voteNo;voteNo1014,25588
	qboolean		voteModified;			// beep whenever changedvoteModified1015,25604
	char			voteString[MAX_STRING_TOKENS];voteString1016,25656
	int				teamVoteTime[2];teamVoteTime1018,25696
	int				teamVoteYes[2];teamVoteYes1019,25721
	int				teamVoteNo[2];teamVoteNo1020,25745
	qboolean		teamVoteModified[2];	// beep whenever changedteamVoteModified1021,25768
	char			teamVoteString[2][MAX_STRING_TOKENS];teamVoteString1022,25825
	int				levelStartTime;levelStartTime1024,25872
	int				scores1, scores2;		// from configstringsscores11026,25897
	int				scores1, scores2;		// from configstringsscores21026,25897
	int				redflag, blueflag;		// flag status from configstringsredflag1027,25946
	int				redflag, blueflag;		// flag status from configstringsblueflag1027,25946
	int				flagStatus;flagStatus1028,26008
	qboolean  newHud;newHud1030,26029
	qhandle_t		gameModels[MAX_MODELS];gameModels1035,26104
	sfxHandle_t		gameSounds[MAX_SOUNDS];gameSounds1036,26140
	int				numInlineModels;numInlineModels1038,26179
	qhandle_t		inlineDrawModel[MAX_MODELS];inlineDrawModel1039,26204
	vec3_t			inlineModelMidpoints[MAX_MODELS];inlineModelMidpoints1040,26245
	clientInfo_t	clientinfo[MAX_CLIENTS];clientinfo1042,26290
	char			teamChatMsgs[TEAMCHAT_HEIGHT][TEAMCHAT_WIDTH*3+1];teamChatMsgs1045,26387
	int				teamChatMsgTimes[TEAMCHAT_HEIGHT];teamChatMsgTimes1046,26446
	int				teamChatPos;teamChatPos1047,26489
	int				teamLastChatPos;teamLastChatPos1048,26510
	int cursorX;cursorX1050,26536
	int cursorY;cursorY1051,26550
	qboolean eventHandling;eventHandling1052,26564
	qboolean mouseCaptured;mouseCaptured1053,26589
	qboolean sizingHud;sizingHud1054,26614
	void *capturedItem;capturedItem1055,26635
	qhandle_t activeCursor;activeCursor1056,26656
	int currentOrder;currentOrder1059,26693
	qboolean orderPending;orderPending1060,26712
	int orderTime;orderTime1061,26736
	int currentVoiceClient;currentVoiceClient1062,26752
	int acceptOrderTime;acceptOrderTime1063,26777
	int acceptTask;acceptTask1064,26799
	int acceptLeader;acceptLeader1065,26816
	char acceptVoice[MAX_NAME_LENGTH];acceptVoice1066,26835
	cgMedia_t		media;media1069,26882
} cgs_t;cgs_t1071,26902
  SYSTEM_PRINT,SYSTEM_PRINT1634,47759
  CHAT_PRINT,CHAT_PRINT1635,47775
  TEAMCHAT_PRINTTEAMCHAT_PRINT1636,47789
} q3print_t;q3print_t1637,47806

cgame/cg_newdraw.c,7710
int drawTeamOverlayModificationCount = -1;drawTeamOverlayModificationCount37,1248
void CG_InitTeamChat(void) {CG_InitTeamChat43,1384
void CG_SetPrintString(int type, const char *p) {CG_SetPrintString49,1547
void CG_CheckOrderPending(void) {CG_CheckOrderPending58,1732
static void CG_SetSelectedPlayerName( void ) {CG_SetSelectedPlayerName122,3581
int CG_GetSelectedPlayer( void ) {CG_GetSelectedPlayer134,4103
void CG_SelectNextPlayer( void ) {CG_SelectNextPlayer141,4331
void CG_SelectPrevPlayer( void ) {CG_SelectPrevPlayer151,4619
static void CG_DrawPlayerArmorIcon( rectDef_t *rect, qboolean draw2D ) {CG_DrawPlayerArmorIcon162,4926
static void CG_DrawPlayerArmorValue(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle) {CG_DrawPlayerArmorValue189,5635
static float healthColors[4][4] = { healthColors213,6280
static void CG_DrawPlayerAmmoIcon( rectDef_t *rect, qboolean draw2D ) {CG_DrawPlayerAmmoIcon221,6584
static void CG_DrawPlayerAmmoValue(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle) {CG_DrawPlayerAmmoValue248,7439
static void CG_DrawPlayerHead(rectDef_t *rect, qboolean draw2D) {CG_DrawPlayerHead276,8157
static void CG_DrawSelectedPlayerHealth( rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle ) {CG_DrawSelectedPlayerHealth327,9742
static void CG_DrawSelectedPlayerArmor( rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle ) {CG_DrawSelectedPlayerArmor346,10344
qhandle_t CG_StatusHandle(int task) {CG_StatusHandle366,10980
static void CG_DrawSelectedPlayerStatus( rectDef_t *rect ) {CG_DrawSelectedPlayerStatus397,11614
static void CG_DrawPlayerStatus( rectDef_t *rect ) {CG_DrawPlayerStatus415,12068
static void CG_DrawSelectedPlayerName( rectDef_t *rect, float scale, vec4_t color, qboolean voice, int textStyle) {CG_DrawSelectedPlayerName424,12300
static void CG_DrawSelectedPlayerLocation( rectDef_t *rect, float scale, vec4_t color, int textStyle ) {CG_DrawSelectedPlayerLocation432,12646
static void CG_DrawPlayerLocation( rectDef_t *rect, float scale, vec4_t color, int textStyle  ) {CG_DrawPlayerLocation444,13042
static void CG_DrawSelectedPlayerWeapon( rectDef_t *rect ) {CG_DrawSelectedPlayerWeapon457,13407
static void CG_DrawPlayerScore( rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle ) {CG_DrawPlayerScore470,13810
static void CG_DrawPlayerItem( rectDef_t *rect, float scale, qboolean draw2D) {CG_DrawPlayerItem485,14326
static void CG_DrawSelectedPlayerPowerup( rectDef_t *rect, qboolean draw2D ) {CG_DrawSelectedPlayerPowerup509,14942
static void CG_DrawSelectedPlayerHead( rectDef_t *rect, qboolean draw2D, qboolean voice ) {CG_DrawSelectedPlayerHead536,15477
static void CG_DrawPlayerHealth(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle ) {CG_DrawPlayerHealth585,16801
static void CG_DrawRedScore(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle ) {CG_DrawRedScore606,17356
static void CG_DrawBlueScore(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle ) {CG_DrawBlueScore619,17780
static void CG_DrawRedName(rectDef_t *rect, float scale, vec4_t color, int textStyle ) {CG_DrawRedName634,18234
static void CG_DrawBlueName(rectDef_t *rect, float scale, vec4_t color, int textStyle ) {CG_DrawBlueName638,18426
static void CG_DrawBlueFlagName(rectDef_t *rect, float scale, vec4_t color, int textStyle ) {CG_DrawBlueFlagName642,18619
static void CG_DrawBlueFlagStatus(rectDef_t *rect, qhandle_t shader) {CG_DrawBlueFlagStatus652,19028
static void CG_DrawBlueFlagHead(rectDef_t *rect) {CG_DrawBlueFlagHead679,19884
static void CG_DrawRedFlagName(rectDef_t *rect, float scale, vec4_t color, int textStyle ) {CG_DrawRedFlagName692,20318
static void CG_DrawRedFlagStatus(rectDef_t *rect, qhandle_t shader) {CG_DrawRedFlagStatus702,20726
static void CG_DrawRedFlagHead(rectDef_t *rect) {CG_DrawRedFlagHead729,21575
static void CG_HarvesterSkulls(rectDef_t *rect, float scale, vec4_t color, qboolean force2D, int textStyle ) {CG_HarvesterSkulls742,22008
static void CG_OneFlagStatus(rectDef_t *rect) {CG_OneFlagStatus784,23147
static void CG_DrawCTFPowerUp(rectDef_t *rect) {CG_DrawCTFPowerUp810,23815
static void CG_DrawTeamColor(rectDef_t *rect, vec4_t color) {CG_DrawTeamColor825,24109
static void CG_DrawAreaPowerUp(rectDef_t *rect, int align, float special, float scale, vec4_t color) {CG_DrawAreaPowerUp829,24279
float CG_GetValue(int ownerDraw) {CG_GetValue911,26131
qboolean CG_OtherTeamHasFlag(void) {CG_OtherTeamHasFlag954,27087
qboolean CG_YourTeamHasFlag(void) {CG_YourTeamHasFlag978,27702
qboolean CG_OwnerDrawVisible(int flags) {CG_OwnerDrawVisible1004,28379
static void CG_DrawPlayerHasFlag(rectDef_t *rect, qboolean force2D) {CG_DrawPlayerHasFlag1110,30511
static void CG_DrawAreaSystemChat(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader) {CG_DrawAreaSystemChat1121,31103
static void CG_DrawAreaTeamChat(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader) {CG_DrawAreaTeamChat1125,31284
static void CG_DrawAreaChat(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader) {CG_DrawAreaChat1129,31461
const char *CG_GetKillerText(void) {CG_GetKillerText1133,31635
static void CG_DrawKiller(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle ) {CG_DrawKiller1142,31781
static void CG_DrawCapFragLimit(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle) {CG_DrawCapFragLimit1152,32121
static void CG_Draw1stPlace(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle) {CG_Draw1stPlace1157,32392
static void CG_Draw2ndPlace(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle) {CG_Draw2ndPlace1163,32636
const char *CG_GetGameStatusText(void) {CG_GetGameStatusText1169,32880
static void CG_DrawGameStatus(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle ) {CG_DrawGameStatus1187,33515
const char *CG_GameTypeString(void) {CG_GameTypeString1191,33727
static void CG_DrawGameType(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader, int textStyle ) {CG_DrawGameType1207,34178
static void CG_Text_Paint_Limit(float *maxX, float x, float y, float scale, vec4_t color, const char* text, float adjust, int limit) {CG_Text_Paint_Limit1211,34385
#define PIC_WIDTH PIC_WIDTH1268,35956
void CG_DrawNewTeamInfo(rectDef_t *rect, float text_x, float text_y, float scale, vec4_t color, qhandle_t shader) {CG_DrawNewTeamInfo1270,35978
void CG_DrawTeamSpectators(rectDef_t *rect, float scale, vec4_t color, qhandle_t shader) {CG_DrawTeamSpectators1389,38825
void CG_DrawMedal(int ownerDraw, rectDef_t *rect, float scale, vec4_t color, qhandle_t shader) {CG_DrawMedal1448,40526
void CG_OwnerDraw(float x, float y, float w, float h, float text_x, float text_y, int ownerDraw, int ownerDrawFlags, int align, float special, float scale, vec4_t color, qhandle_t shader, int textStyle) {CG_OwnerDraw1514,41854
void CG_MouseEvent(int x, int y) {CG_MouseEvent1701,47345
void CG_HideTeamMenu( void ) {CG_HideTeamMenu1743,48218
void CG_ShowTeamMenu( void ) {CG_ShowTeamMenu1754,48379
void CG_EventHandling(int type) {CG_EventHandling1770,48579
void CG_KeyEvent(int key, qboolean down) {CG_KeyEvent1783,48824
int CG_ClientNumFromName(const char *p) {CG_ClientNumFromName1814,49575
void CG_ShowResponseHead(void) {CG_ShowResponseHead1824,49793
void CG_RunMenuScript(char **args) {CG_RunMenuScript1830,49926
void CG_GetTeamColor(vec4_t *color) {CG_GetTeamColor1834,49967

cgame/cg_syscalls.c,8618
static intptr_t (QDECL *syscall)( intptr_t arg, ... ) = (intptr_t (QDECL *)( intptr_t, ...))-1;syscall31,1179
void dllEntry( intptr_t (QDECL  *syscallptr)( intptr_t arg,... ) ) {intptr_t34,1277
int PASSFLOAT( float x ) {PASSFLOAT39,1373
void	trap_Print( const char *fmt ) {trap_Print45,1444
void	trap_Error( const char *fmt ) {trap_Error49,1511
int		trap_Milliseconds( void ) {trap_Milliseconds53,1578
void	trap_Cvar_Register( vmCvar_t *vmCvar, const char *varName, const char *defaultValue, int flags ) {trap_Cvar_Register57,1651
void	trap_Cvar_Update( vmCvar_t *vmCvar ) {trap_Cvar_Update61,1826
void	trap_Cvar_Set( const char *var_name, const char *value ) {trap_Cvar_Set65,1909
void trap_Cvar_VariableStringBuffer( const char *var_name, char *buffer, int bufsize ) {trap_Cvar_VariableStringBuffer69,2018
int		trap_Argc( void ) {trap_Argc73,2179
void	trap_Argv( int n, char *buffer, int bufferLength ) {trap_Argv77,2235
void	trap_Args( char *buffer, int bufferLength ) {trap_Args81,2342
int		trap_FS_FOpenFile( const char *qpath, fileHandle_t *f, fsMode_t mode ) {trap_FS_FOpenFile85,2439
void	trap_FS_Read( void *buffer, int len, fileHandle_t f ) {trap_FS_Read89,2572
void	trap_FS_Write( const void *buffer, int len, fileHandle_t f ) {trap_FS_Write93,2676
void	trap_FS_FCloseFile( fileHandle_t f ) {trap_FS_FCloseFile97,2788
int trap_FS_Seek( fileHandle_t f, long offset, int origin ) {trap_FS_Seek101,2868
void	trap_SendConsoleCommand( const char *text ) {trap_SendConsoleCommand105,2983
void	trap_AddCommand( const char *cmdName ) {trap_AddCommand109,3078
void	trap_RemoveCommand( const char *cmdName ) {trap_RemoveCommand113,3163
void	trap_SendClientCommand( const char *s ) {trap_SendClientCommand117,3254
void	trap_UpdateScreen( void ) {trap_UpdateScreen121,3341
void	trap_CM_LoadMap( const char *mapname ) {trap_CM_LoadMap125,3406
int		trap_CM_NumInlineModels( void ) {trap_CM_NumInlineModels129,3491
clipHandle_t trap_CM_InlineModel( int index ) {trap_CM_InlineModel133,3575
clipHandle_t trap_CM_TempBoxModel( const vec3_t mins, const vec3_t maxs ) {trap_CM_TempBoxModel137,3671
clipHandle_t trap_CM_TempCapsuleModel( const vec3_t mins, const vec3_t maxs ) {trap_CM_TempCapsuleModel141,3801
int		trap_CM_PointContents( const vec3_t p, clipHandle_t model ) {trap_CM_PointContents145,3939
int		trap_CM_TransformedPointContents( const vec3_t p, clipHandle_t model, const vec3_t origin, const vec3_t angles ) {trap_CM_TransformedPointContents149,4059
void	trap_CM_BoxTrace( trace_t *results, const vec3_t start, const vec3_t end,trap_CM_BoxTrace153,4259
void	trap_CM_CapsuleTrace( trace_t *results, const vec3_t start, const vec3_t end,trap_CM_CapsuleTrace159,4512
void	trap_CM_TransformedBoxTrace( trace_t *results, const vec3_t start, const vec3_t end,trap_CM_TransformedBoxTrace165,4773
void	trap_CM_TransformedCapsuleTrace( trace_t *results, const vec3_t start, const vec3_t end,trap_CM_TransformedCapsuleTrace172,5114
int		trap_CM_MarkFragments( int numPoints, const vec3_t *points, trap_CM_MarkFragments179,5463
void	trap_S_StartSound( vec3_t origin, int entityNum, int entchannel, sfxHandle_t sfx ) {trap_S_StartSound186,5782
void	trap_S_StartLocalSound( sfxHandle_t sfx, int channelNum ) {trap_S_StartLocalSound190,5940
void	trap_S_ClearLoopingSounds( qboolean killall ) {trap_S_ClearLoopingSounds194,6059
void	trap_S_AddLoopingSound( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfx ) {trap_S_AddLoopingSound198,6161
void	trap_S_AddRealLoopingSound( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfx ) {trap_S_AddRealLoopingSound202,6340
void	trap_S_StopLoopingSound( int entityNum ) {trap_S_StopLoopingSound206,6527
void	trap_S_UpdateEntityPosition( int entityNum, const vec3_t origin ) {trap_S_UpdateEntityPosition210,6624
void	trap_S_Respatialize( int entityNum, const vec3_t origin, vec3_t axis[3], int inwater ) {trap_S_Respatialize214,6758
sfxHandle_t	trap_S_RegisterSound( const char *sample, qboolean compressed ) {trap_S_RegisterSound218,6920
void	trap_S_StartBackgroundTrack( const char *intro, const char *loop ) {trap_S_StartBackgroundTrack222,7060
void	trap_R_LoadWorldMap( const char *mapname ) {trap_R_LoadWorldMap226,7189
qhandle_t trap_R_RegisterModel( const char *name ) {trap_R_RegisterModel230,7282
qhandle_t trap_R_RegisterSkin( const char *name ) {trap_R_RegisterSkin234,7383
qhandle_t trap_R_RegisterShader( const char *name ) {trap_R_RegisterShader238,7482
qhandle_t trap_R_RegisterShaderNoMip( const char *name ) {trap_R_RegisterShaderNoMip242,7585
void trap_R_RegisterFont(const char *fontName, int pointSize, fontInfo_t *font) {trap_R_RegisterFont246,7698
void	trap_R_ClearScene( void ) {trap_R_ClearScene250,7840
void	trap_R_AddRefEntityToScene( const refEntity_t *re ) {trap_R_AddRefEntityToScene254,7905
void	trap_R_AddPolyToScene( qhandle_t hShader , int numVerts, const polyVert_t *verts ) {trap_R_AddPolyToScene258,8009
void	trap_R_AddPolysToScene( qhandle_t hShader , int numVerts, const polyVert_t *verts, int num ) {trap_R_AddPolysToScene262,8161
int		trap_R_LightForPoint( vec3_t point, vec3_t ambientLight, vec3_t directedLight, vec3_t lightDir ) {trap_R_LightForPoint266,8329
void	trap_R_AddLightToScene( const vec3_t org, float intensity, float r, float g, float b ) {trap_R_AddLightToScene270,8521
void	trap_R_AddAdditiveLightToScene( const vec3_t org, float intensity, float r, float g, float b ) {trap_R_AddAdditiveLightToScene274,8721
void	trap_R_RenderScene( const refdef_t *fd ) {trap_R_RenderScene278,8937
void	trap_R_SetColor( const float *rgba ) {trap_R_SetColor282,9022
void	trap_R_DrawStretchPic( float x, float y, float w, float h, trap_R_DrawStretchPic286,9102
void	trap_R_ModelBounds( clipHandle_t model, vec3_t mins, vec3_t maxs ) {trap_R_ModelBounds291,9400
int		trap_R_LerpTag( orientation_t *tag, clipHandle_t mod, int startFrame, int endFrame, trap_R_LerpTag295,9526
void	trap_R_RemapShader( const char *oldShader, const char *newShader, const char *timeOffset ) {trap_R_RemapShader300,9754
void		trap_GetGlconfig( glconfig_t *glconfig ) {trap_GetGlconfig304,9920
void		trap_GetGameState( gameState_t *gamestate ) {trap_GetGameState308,10010
void		trap_GetCurrentSnapshotNumber( int *snapshotNumber, int *serverTime ) {trap_GetCurrentSnapshotNumber312,10105
qboolean	trap_GetSnapshot( int snapshotNumber, snapshot_t *snapshot ) {trap_GetSnapshot316,10255
qboolean	trap_GetServerCommand( int serverCommandNumber ) {trap_GetServerCommand320,10391
int			trap_GetCurrentCmdNumber( void ) {trap_GetCurrentCmdNumber324,10515
qboolean	trap_GetUserCmd( int cmdNumber, usercmd_t *ucmd ) {trap_GetUserCmd328,10602
void		trap_SetUserCmdValue( int stateValue, float sensitivityScale ) {trap_SetUserCmdValue332,10717
void		testPrintInt( char *string, int i ) {testPrintInt336,10864
void		testPrintFloat( char *string, float f ) {testPrintFloat340,10951
int trap_MemoryRemaining( void ) {trap_MemoryRemaining344,11055
qboolean trap_Key_IsDown( int keynum ) {trap_Key_IsDown348,11133
int trap_Key_GetCatcher( void ) {trap_Key_GetCatcher352,11219
void trap_Key_SetCatcher( int catcher ) {trap_Key_SetCatcher356,11294
int trap_Key_GetKey( const char *binding ) {trap_Key_GetKey360,11379
int trap_PC_AddGlobalDefine( char *define ) {trap_PC_AddGlobalDefine364,11470
int trap_PC_LoadSource( const char *filename ) {trap_PC_LoadSource368,11571
int trap_PC_FreeSource( int handle ) {trap_PC_FreeSource372,11671
int trap_PC_ReadToken( int handle, pc_token_t *pc_token ) {trap_PC_ReadToken376,11759
int trap_PC_SourceFileAndLine( int handle, char *filename, int *line ) {trap_PC_SourceFileAndLine380,11877
void	trap_S_StopBackgroundTrack( void ) {trap_S_StopBackgroundTrack384,12024
int trap_RealTime(qtime_t *qtime) {trap_RealTime388,12107
void trap_SnapVector( float *v ) {trap_SnapVector392,12186
int trap_CIN_PlayCinematic( const char *arg0, int xpos, int ypos, int width, int height, int bits) {trap_CIN_PlayCinematic397,12393
e_status trap_CIN_StopCinematic(int handle) {trap_CIN_StopCinematic403,12723
e_status trap_CIN_RunCinematic (int handle) {trap_CIN_RunCinematic409,12947
void trap_CIN_DrawCinematic (int handle) {trap_CIN_DrawCinematic415,13072
void trap_CIN_SetExtents (int handle, int x, int y, int w, int h) {trap_CIN_SetExtents421,13211
qboolean trap_GetEntityToken( char *buffer, int bufferSize ) {trap_GetEntityToken439,13632
qboolean trap_R_inPVS( const vec3_t p1, const vec3_t p2 ) {trap_R_inPVS443,13758

cgame/cg_weapons.c,3221
static void CG_MachineGunEjectBrass( centity_t *cent ) {CG_MachineGunEjectBrass31,1143
static void CG_ShotgunEjectBrass( centity_t *cent ) {CG_ShotgunEjectBrass103,3140
static void CG_NailgunEjectBrass( centity_t *cent ) {CG_NailgunEjectBrass182,5290
void CG_RailTrail (clientInfo_t *ci, vec3_t start, vec3_t end) {CG_RailTrail215,6119
#define RADIUS RADIUS223,6314
#define ROTATION ROTATION224,6333
#define SPACING SPACING225,6352
static void CG_RocketTrail( centity_t *ent, const weaponInfo_t *wi ) {CG_RocketTrail325,9070
static void CG_NailTrail( centity_t *ent, const weaponInfo_t *wi ) {CG_NailTrail393,10506
static void CG_PlasmaTrail( centity_t *cent, const weaponInfo_t *wi ) {CG_PlasmaTrail461,11927
void CG_GrappleTrail( centity_t *ent, const weaponInfo_t *wi ) {CG_GrappleTrail556,14574
static void CG_GrenadeTrail( centity_t *ent, const weaponInfo_t *wi ) {CG_GrenadeTrail594,15613
void CG_RegisterWeapon( int weaponNum ) {CG_RegisterWeapon606,15826
void CG_RegisterItemVisuals( int itemNum ) {CG_RegisterItemVisuals834,25299
static int CG_MapTorsoToWeaponFrame( clientInfo_t *ci, int frame ) {CG_MapTorsoToWeaponFrame886,26493
static void CG_CalculateWeaponPosition( vec3_t origin, vec3_t angles ) {CG_CalculateWeaponPosition915,27242
static void CG_LightningBolt( centity_t *cent, vec3_t origin ) {CG_LightningBolt974,28887
static void CG_SpawnRailTrail( centity_t *cent, vec3_t origin ) {CG_SpawnRailTrail1134,32895
#define		SPIN_SPEED	SPIN_SPEED1154,33309
#define		COAST_TIME	COAST_TIME1155,33333
static float	CG_MachinegunSpinAngle( centity_t *cent ) {CG_MachinegunSpinAngle1156,33358
static void CG_AddWeaponWithPowerups( refEntity_t *gun, int powerups ) {CG_AddWeaponWithPowerups1193,34360
void CG_AddPlayerWeapon( refEntity_t *parent, playerState_t *ps, centity_t *cent, int team ) {CG_AddPlayerWeapon1222,35189
void CG_AddViewWeapon( playerState_t *ps ) {CG_AddViewWeapon1371,39652
void CG_DrawWeaponSelect( void ) {CG_DrawWeaponSelect1467,42157
static qboolean CG_WeaponSelectable( int i ) {CG_WeaponSelectable1543,43639
void CG_NextWeapon_f( void ) {CG_NextWeapon_f1559,43892
void CG_PrevWeapon_f( void ) {CG_PrevWeapon_f1595,44504
void CG_Weapon_f( void ) {CG_Weapon_f1631,45117
void CG_OutOfAmmoChange( void ) {CG_OutOfAmmoChange1663,45604
void CG_FireWeapon( centity_t *cent ) {CG_FireWeapon1693,46118
void CG_MissileHitWall( int weapon, int clientNum, vec3_t origin, vec3_t dir, impactSound_t soundType ) {CG_MissileHitWall1752,47411
void CG_MissileHitPlayer( int weapon, vec3_t origin, vec3_t dir, int entityNum ) {CG_MissileHitPlayer1963,52158
static void CG_ShotgunPellet( vec3_t start, vec3_t end, int skipNum ) {CG_ShotgunPellet1998,52871
static void CG_ShotgunPattern( vec3_t origin, vec3_t origin2, int seed, int otherEntNum ) {CG_ShotgunPattern2051,54456
void CG_ShotgunFire( entityState_t *es ) {CG_ShotgunFire2080,55269
void CG_Tracer( vec3_t source, vec3_t dest ) {CG_Tracer2115,56169
static qboolean	CG_CalcMuzzlePoint( int entityNum, vec3_t muzzle ) {CG_CalcMuzzlePoint2195,58254
void CG_Bullet( vec3_t end, int sourceEntityNum, vec3_t normal, qboolean flesh, int fleshEntityNum ) {CG_Bullet2236,59176

cgame/cg_particles.c,5185
#define BLOODRED	BLOODRED27,1038
#define EMISIVEFADE	EMISIVEFADE28,1057
#define GREY75	GREY7529,1079
typedef struct particle_sparticle_s31,1098
	struct particle_s	*next;next33,1126
	float		time;time35,1153
	float		endtime;endtime36,1167
	vec3_t		org;org38,1185
	vec3_t		vel;vel39,1199
	vec3_t		accel;accel40,1213
	int			color;color41,1229
	float		colorvel;colorvel42,1243
	float		alpha;alpha43,1261
	float		alphavel;alphavel44,1276
	int			type;type45,1294
	qhandle_t	pshader;pshader46,1307
	float		height;height48,1329
	float		width;width49,1345
	float		endheight;endheight51,1365
	float		endwidth;endwidth52,1384
	float		start;start54,1404
	float		end;end55,1419
	float		startfade;startfade57,1433
	qboolean	rotate;rotate58,1452
	int			snum;snum59,1470
	qboolean	link;link61,1485
	int			shaderAnim;shaderAnim64,1512
	int			roll;roll65,1531
	int			accumroll;accumroll67,1545
} cparticle_t;cparticle_t69,1564
	P_NONE,P_NONE73,1595
	P_WEATHER,P_WEATHER74,1604
	P_FLAT,P_FLAT75,1616
	P_SMOKE,P_SMOKE76,1625
	P_ROTATE,P_ROTATE77,1635
	P_WEATHER_TURBULENT,P_WEATHER_TURBULENT78,1646
	P_ANIM,	// RidahP_ANIM79,1668
	P_BAT,P_BAT80,1686
	P_BLEED,P_BLEED81,1694
	P_FLAT_SCALEUP,P_FLAT_SCALEUP82,1704
	P_FLAT_SCALEUP_FADE,P_FLAT_SCALEUP_FADE83,1721
	P_WEATHER_FLURRY,P_WEATHER_FLURRY84,1743
	P_SMOKE_IMPACT,P_SMOKE_IMPACT85,1762
	P_BUBBLE,P_BUBBLE86,1779
	P_BUBBLE_TURBULENT,P_BUBBLE_TURBULENT87,1790
	P_SPRITEP_SPRITE88,1811
} particle_type_t;particle_type_t89,1821
#define	MAX_SHADER_ANIMS	MAX_SHADER_ANIMS91,1841
#define	MAX_SHADER_ANIM_FRAMES	MAX_SHADER_ANIM_FRAMES92,1870
static char *shaderAnimNames[MAX_SHADER_ANIMS] = {shaderAnimNames94,1905
static qhandle_t shaderAnims[MAX_SHADER_ANIMS][MAX_SHADER_ANIM_FRAMES];shaderAnims103,2079
static int	shaderAnimCounts[MAX_SHADER_ANIMS] = {shaderAnimCounts104,2151
static float	shaderAnimSTRatio[MAX_SHADER_ANIMS] = {shaderAnimSTRatio112,2233
static int	numShaderAnims;numShaderAnims120,2333
#define		PARTICLE_GRAVITY	PARTICLE_GRAVITY123,2370
#define		MAX_PARTICLES	MAX_PARTICLES124,2399
cparticle_t	*active_particles, *free_particles;active_particles126,2432
cparticle_t	*active_particles, *free_particles;free_particles126,2432
cparticle_t	particles[MAX_PARTICLES];particles127,2480
int		cl_numparticles = MAX_PARTICLES;cl_numparticles128,2518
qboolean		initparticles = qfalse;initparticles130,2557
vec3_t			vforward, vright, vup;vforward131,2591
vec3_t			vforward, vright, vup;vright131,2591
vec3_t			vforward, vright, vup;vup131,2591
vec3_t			rforward, rright, rup;rforward132,2623
vec3_t			rforward, rright, rup;rright132,2623
vec3_t			rforward, rright, rup;rup132,2623
float			oldtime;oldtime134,2656
void CG_ClearParticles (void)CG_ClearParticles141,2730
void CG_AddParticleToScene (cparticle_t *p, vec3_t org, float alpha)CG_AddParticleToScene179,3394
static float roll = 0.0;roll823,19671
void CG_AddParticles (void)CG_AddParticles830,19751
void CG_ParticleSnowFlurry (qhandle_t pshader, centity_t *cent)CG_ParticleSnowFlurry964,22112
void CG_ParticleSnow (qhandle_t pshader, vec3_t origin, vec3_t origin2, int turb, float range, int snum)CG_ParticleSnow1032,23391
void CG_ParticleBubble (qhandle_t pshader, vec3_t origin, vec3_t origin2, int turb, float range, int snum)CG_ParticleBubble1089,24427
void CG_ParticleSmoke (qhandle_t pshader, centity_t *cent)CG_ParticleSmoke1150,25551
void CG_ParticleBulletDebris (vec3_t org, vec3_t vel, int duration)CG_ParticleBulletDebris1198,26534
void CG_ParticleExplosion (char *animStr, vec3_t origin, vec3_t vel, int duration, int sizeStart, int sizeEnd)CG_ParticleExplosion1245,27305
void CG_AddParticleShrapnel (localEntity_t *le)CG_AddParticleShrapnel1299,28496
int CG_NewParticleArea (int num)CG_NewParticleArea1305,28567
void	CG_SnowLink (centity_t *cent, qboolean particleOn)CG_SnowLink1376,29767
void CG_ParticleImpactSmokePuff (qhandle_t pshader, vec3_t origin)CG_ParticleImpactSmokePuff1401,30139
void CG_Particle_Bleed (qhandle_t pshader, vec3_t start, vec3_t dir, int fleshEntityNum, int duration)CG_Particle_Bleed1441,30895
void CG_Particle_OilParticle (qhandle_t pshader, centity_t *cent)CG_Particle_OilParticle1491,31745
void CG_Particle_OilSlick (qhandle_t pshader, centity_t *cent)CG_Particle_OilSlick1555,32818
void CG_OilSlickRemove (centity_t *cent)CG_OilSlickRemove1621,33985
qboolean ValidBloodPool (vec3_t start)ValidBloodPool1649,34377
#define EXTRUDE_DIST	EXTRUDE_DIST1651,34418
void CG_BloodPool (localEntity_t *le, qhandle_t pshader, trace_t *tr)CG_BloodPool1695,35289
#define NORMALSIZE	NORMALSIZE1755,36240
#define LARGESIZE	LARGESIZE1756,36262
void CG_ParticleBloodCloud (centity_t *cent, vec3_t origin, vec3_t dir)CG_ParticleBloodCloud1758,36284
void CG_ParticleSparks (vec3_t org, vec3_t vel, int duration, float x, float y, float speed)CG_ParticleSparks1835,37491
void CG_ParticleDust (centity_t *cent, vec3_t origin, vec3_t dir)CG_ParticleDust1883,38411
void CG_ParticleMisc (qhandle_t pshader, vec3_t origin, int size, int duration, float alpha)CG_ParticleMisc1979,40087

cgame/cg_consolecmds.c,2559
void CG_TargetCommand_f( void ) {CG_TargetCommand_f34,1192
static void CG_SizeUp_f (void) {CG_SizeUp_f56,1504
static void CG_SizeDown_f (void) {CG_SizeDown_f68,1688
static void CG_Viewpos_f (void) {CG_Viewpos_f80,1894
static void CG_ScoresDown_f( void ) {CG_ScoresDown_f87,2083
static void CG_ScoresUp_f( void ) {CG_ScoresUp_f111,2699
static void CG_LoadHud_f( void) {CG_LoadHud_f122,2938
static void CG_scrollScoresDown_f( void) {CG_scrollScoresDown_f141,3270
static void CG_scrollScoresUp_f( void) {CG_scrollScoresUp_f150,3561
static void CG_spWin_f( void) {CG_spWin_f159,3853
static void CG_spLose_f( void) {CG_spLose_f170,4265
static void CG_TellTarget_f( void ) {CG_TellTarget_f183,4687
static void CG_TellAttacker_f( void ) {CG_TellAttacker_f198,4989
static void CG_VoiceTellTarget_f( void ) {CG_VoiceTellTarget_f213,5290
static void CG_VoiceTellAttacker_f( void ) {CG_VoiceTellAttacker_f228,5598
static void CG_NextTeamMember_f( void ) {CG_NextTeamMember_f244,5924
static void CG_PrevTeamMember_f( void ) {CG_PrevTeamMember_f248,5994
static void CG_NextOrder_f( void ) {CG_NextOrder_f254,6161
static void CG_ConfirmOrder_f (void ) {CG_ConfirmOrder_f284,6797
static void CG_DenyOrder_f (void ) {CG_DenyOrder_f293,7109
static void CG_TaskOffense_f (void ) {CG_TaskOffense_f301,7354
static void CG_TaskDefense_f (void ) {CG_TaskDefense_f310,7680
static void CG_TaskPatrol_f (void ) {CG_TaskPatrol_f315,7859
static void CG_TaskCamp_f (void ) {CG_TaskCamp_f320,8035
static void CG_TaskFollow_f (void ) {CG_TaskFollow_f325,8208
static void CG_TaskRetrieve_f (void ) {CG_TaskRetrieve_f330,8384
static void CG_TaskEscort_f (void ) {CG_TaskEscort_f335,8568
static void CG_TaskOwnFlag_f (void ) {CG_TaskOwnFlag_f340,8751
static void CG_TauntKillInsult_f (void ) {CG_TauntKillInsult_f344,8866
static void CG_TauntPraise_f (void ) {CG_TauntPraise_f348,8964
static void CG_TauntTaunt_f (void ) {CG_TauntTaunt_f352,9053
static void CG_TauntDeathInsult_f (void ) {CG_TauntDeathInsult_f356,9136
static void CG_TauntGauntlet_f (void ) {CG_TauntGauntlet_f360,9236
static void CG_TaskSuicide_f (void ) {CG_TaskSuicide_f364,9334
static void CG_StartOrbit_f( void ) {CG_StartOrbit_f416,10233
	char	*cmd;cmd449,10966
	void	(*function)(void);function450,10978
} consoleCommand_t;consoleCommand_t451,11003
static consoleCommand_t	commands[] = {commands453,11024
qboolean CG_ConsoleCommand( void ) {CG_ConsoleCommand515,12987
void CG_InitConsoleCommands( void ) {CG_InitConsoleCommands540,13414

cgame/cg_predict.c,1086
static	pmove_t		cg_pmove;cg_pmove30,1259
static	int			cg_numSolidEntities;cg_numSolidEntities32,1286
static	centity_t	*cg_solidEntities[MAX_ENTITIES_IN_SNAPSHOT];cg_solidEntities33,1320
static	int			cg_numTriggerEntities;cg_numTriggerEntities34,1382
static	centity_t	*cg_triggerEntities[MAX_ENTITIES_IN_SNAPSHOT];cg_triggerEntities35,1418
void CG_BuildSolidList( void ) {CG_BuildSolidList46,1702
static void CG_ClipMoveToEntities ( const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end,CG_ClipMoveToEntities85,2519
void	CG_Trace( trace_t *result, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end, CG_Trace145,3963
int		CG_PointContents( const vec3_t point, int passEntityNum ) {CG_PointContents162,4426
static void CG_InterpolatePlayerState( qboolean grabAngles ) {CG_InterpolatePlayerState204,5279
static void CG_TouchItem( centity_t *cent ) {CG_TouchItem261,6576
static void CG_TouchTriggerPrediction( void ) {CG_TouchTriggerPrediction328,8294
void CG_PredictPlayerState( void ) {CG_PredictPlayerState414,10598

cgame/cg_info.c,760
#define MAX_LOADING_PLAYER_ICONS	MAX_LOADING_PLAYER_ICONS27,1065
#define MAX_LOADING_ITEM_ICONS	MAX_LOADING_ITEM_ICONS28,1101
static int			loadingPlayerIconCount;loadingPlayerIconCount30,1137
static int			loadingItemIconCount;loadingItemIconCount31,1174
static qhandle_t	loadingPlayerIcons[MAX_LOADING_PLAYER_ICONS];loadingPlayerIcons32,1209
static qhandle_t	loadingItemIcons[MAX_LOADING_ITEM_ICONS];loadingItemIcons33,1272
static void CG_DrawLoadingIcons( void ) {CG_DrawLoadingIcons41,1399
void CG_LoadingString( const char *s ) {CG_LoadingString68,1849
void CG_LoadingItem( int itemNum ) {CG_LoadingItem79,2043
void CG_LoadingClient( int clientNum ) {CG_LoadingClient96,2398
void CG_DrawInformation( void ) {CG_DrawInformation148,4011

cgame/cg_event.c,525
const char	*CG_PlaceString( int rank ) {CG_PlaceString40,1331
static void CG_Obituary( entityState_t *ent ) {CG_Obituary82,2202
static void CG_UseItem( centity_t *cent ) {CG_UseItem344,8183
static void CG_ItemPickup( int itemNum ) {CG_ItemPickup406,9546
void CG_PainEvent( centity_t *cent, int health ) {CG_PainEvent429,10068
#define	DEBUGNAME(DEBUGNAME464,10792
void CG_EntityEvent( centity_t *cent, vec3_t position ) {CG_EntityEvent465,10859
void CG_CheckEvents( centity_t *cent ) {CG_CheckEvents1174,31248

cgame/cg_ents.c,1430
void CG_PositionEntityOnTag( refEntity_t *entity, const refEntity_t *parent, CG_PositionEntityOnTag36,1214
void CG_PositionRotatedEntityOnTag( refEntity_t *entity, const refEntity_t *parent, CG_PositionRotatedEntityOnTag65,2038
void CG_SetEntitySoundPosition( centity_t *cent ) {CG_SetEntitySoundPosition104,3090
static void CG_EntityEffects( centity_t *cent ) {CG_EntityEffects124,3627
static void CG_General( centity_t *cent ) {CG_General162,4511
static void CG_Speaker( centity_t *cent ) {CG_Speaker205,5316
static void CG_Item( centity_t *cent ) {CG_Item226,5889
static void CG_Missile( centity_t *cent ) {CG_Missile405,10868
static void CG_Grapple( centity_t *cent ) {CG_Grapple515,13523
static void CG_Mover( centity_t *cent ) {CG_Mover562,14642
void CG_Beam( centity_t *cent ) {CG_Beam605,15557
static void CG_Portal( centity_t *cent ) {CG_Portal630,15997
void CG_AdjustPositionForMover( const vec3_t in, int moverNum, int fromTime, int toTime, vec3_t out ) {CG_AdjustPositionForMover665,16932
static void CG_InterpolateEntityPosition( centity_t *cent ) {CG_InterpolateEntityPosition701,17926
static void CG_CalcEntityLerpPositions( centity_t *cent ) {CG_CalcEntityLerpPositions737,19188
static void CG_TeamBase( centity_t *cent ) {CG_TeamBase778,20498
static void CG_AddCEntity( centity_t *cent ) {CG_AddCEntity932,24858
void CG_AddPacketEntities( void ) {CG_AddPacketEntities991,25886

cgame/cg_marks.c,6050
markPoly_t	cg_activeMarkPolys;			// double linked listcg_activeMarkPolys36,1186
markPoly_t	*cg_freeMarkPolys;			// single linked listcg_freeMarkPolys37,1241
markPoly_t	cg_markPolys[MAX_MARK_POLYS];cg_markPolys38,1295
static		int	markTotal;markTotal39,1336
void	CG_InitMarkPolys( void ) {CG_InitMarkPolys48,1478
void CG_FreeMarkPoly( markPoly_t *le ) {CG_FreeMarkPoly67,1873
markPoly_t	*CG_AllocMark( void ) {CG_AllocMark88,2347
#define	MAX_MARK_FRAGMENTS	MAX_MARK_FRAGMENTS127,3281
#define	MAX_MARK_POINTS	MAX_MARK_POINTS128,3312
void CG_ImpactMark( qhandle_t markShader, const vec3_t origin, const vec3_t dir, CG_ImpactMark130,3342
#define	MARK_TOTAL_TIME	MARK_TOTAL_TIME230,6242
#define	MARK_FADE_TIME	MARK_FADE_TIME231,6273
void CG_AddMarks( void ) {CG_AddMarks233,6303
#define BLOODRED	BLOODRED297,7850
#define EMISIVEFADE	EMISIVEFADE298,7869
#define GREY75	GREY75299,7891
typedef struct particle_sparticle_s301,7910
	struct particle_s	*next;next303,7938
	float		time;time305,7965
	float		endtime;endtime306,7979
	vec3_t		org;org308,7997
	vec3_t		vel;vel309,8011
	vec3_t		accel;accel310,8025
	int			color;color311,8041
	float		colorvel;colorvel312,8055
	float		alpha;alpha313,8073
	float		alphavel;alphavel314,8088
	int			type;type315,8106
	qhandle_t	pshader;pshader316,8119
	float		height;height318,8141
	float		width;width319,8157
	float		endheight;endheight321,8177
	float		endwidth;endwidth322,8196
	float		start;start324,8216
	float		end;end325,8231
	float		startfade;startfade327,8245
	qboolean	rotate;rotate328,8264
	int			snum;snum329,8282
	qboolean	link;link331,8297
	int			shaderAnim;shaderAnim334,8324
	int			roll;roll335,8343
	int			accumroll;accumroll337,8357
} cparticle_t;cparticle_t339,8376
	P_NONE,P_NONE343,8407
	P_WEATHER,P_WEATHER344,8416
	P_FLAT,P_FLAT345,8428
	P_SMOKE,P_SMOKE346,8437
	P_ROTATE,P_ROTATE347,8447
	P_WEATHER_TURBULENT,P_WEATHER_TURBULENT348,8458
	P_ANIM,	// RidahP_ANIM349,8480
	P_BAT,P_BAT350,8498
	P_BLEED,P_BLEED351,8506
	P_FLAT_SCALEUP,P_FLAT_SCALEUP352,8516
	P_FLAT_SCALEUP_FADE,P_FLAT_SCALEUP_FADE353,8533
	P_WEATHER_FLURRY,P_WEATHER_FLURRY354,8555
	P_SMOKE_IMPACT,P_SMOKE_IMPACT355,8574
	P_BUBBLE,P_BUBBLE356,8591
	P_BUBBLE_TURBULENT,P_BUBBLE_TURBULENT357,8602
	P_SPRITEP_SPRITE358,8623
} particle_type_t;particle_type_t359,8633
#define	MAX_SHADER_ANIMS	MAX_SHADER_ANIMS361,8653
#define	MAX_SHADER_ANIM_FRAMES	MAX_SHADER_ANIM_FRAMES362,8682
static char *shaderAnimNames[MAX_SHADER_ANIMS] = {shaderAnimNames364,8717
static qhandle_t shaderAnims[MAX_SHADER_ANIMS][MAX_SHADER_ANIM_FRAMES];shaderAnims368,8790
static int	shaderAnimCounts[MAX_SHADER_ANIMS] = {shaderAnimCounts369,8862
static float	shaderAnimSTRatio[MAX_SHADER_ANIMS] = {shaderAnimSTRatio372,8919
static int	numShaderAnims;numShaderAnims375,8981
#define		PARTICLE_GRAVITY	PARTICLE_GRAVITY378,9018
#define		MAX_PARTICLES	MAX_PARTICLES379,9047
cparticle_t	*active_particles, *free_particles;active_particles381,9076
cparticle_t	*active_particles, *free_particles;free_particles381,9076
cparticle_t	particles[MAX_PARTICLES];particles382,9124
int		cl_numparticles = MAX_PARTICLES;cl_numparticles383,9162
qboolean		initparticles = qfalse;initparticles385,9201
vec3_t			pvforward, pvright, pvup;pvforward386,9235
vec3_t			pvforward, pvright, pvup;pvright386,9235
vec3_t			pvforward, pvright, pvup;pvup386,9235
vec3_t			rforward, rright, rup;rforward387,9270
vec3_t			rforward, rright, rup;rright387,9270
vec3_t			rforward, rright, rup;rup387,9270
float			oldtime;oldtime389,9303
void CG_ClearParticles (void)CG_ClearParticles396,9377
void CG_AddParticleToScene (cparticle_t *p, vec3_t org, float alpha)CG_AddParticleToScene434,10041
static float roll = 0.0;roll1078,26352
void CG_AddParticles (void)CG_AddParticles1085,26432
void CG_ParticleSnowFlurry (qhandle_t pshader, centity_t *cent)CG_ParticleSnowFlurry1219,28796
void CG_ParticleSnow (qhandle_t pshader, vec3_t origin, vec3_t origin2, int turb, float range, int snum)CG_ParticleSnow1287,30075
void CG_ParticleBubble (qhandle_t pshader, vec3_t origin, vec3_t origin2, int turb, float range, int snum)CG_ParticleBubble1344,31111
void CG_ParticleSmoke (qhandle_t pshader, centity_t *cent)CG_ParticleSmoke1405,32235
void CG_ParticleBulletDebris (vec3_t org, vec3_t vel, int duration)CG_ParticleBulletDebris1453,33218
void CG_ParticleExplosion (char *animStr, vec3_t origin, vec3_t vel, int duration, int sizeStart, int sizeEnd)CG_ParticleExplosion1500,33989
void CG_AddParticleShrapnel (localEntity_t *le)CG_AddParticleShrapnel1554,35180
int CG_NewParticleArea (int num)CG_NewParticleArea1560,35251
void	CG_SnowLink (centity_t *cent, qboolean particleOn)CG_SnowLink1631,36451
void CG_ParticleImpactSmokePuff (qhandle_t pshader, vec3_t origin)CG_ParticleImpactSmokePuff1656,36823
void CG_Particle_Bleed (qhandle_t pshader, vec3_t start, vec3_t dir, int fleshEntityNum, int duration)CG_Particle_Bleed1696,37579
void CG_Particle_OilParticle (qhandle_t pshader, centity_t *cent)CG_Particle_OilParticle1746,38429
void CG_Particle_OilSlick (qhandle_t pshader, centity_t *cent)CG_Particle_OilSlick1810,39502
void CG_OilSlickRemove (centity_t *cent)CG_OilSlickRemove1876,40669
qboolean ValidBloodPool (vec3_t start)ValidBloodPool1904,41061
#define EXTRUDE_DIST	EXTRUDE_DIST1906,41102
void CG_BloodPool (localEntity_t *le, qhandle_t pshader, trace_t *tr)CG_BloodPool1950,41973
#define NORMALSIZE	NORMALSIZE2010,42924
#define LARGESIZE	LARGESIZE2011,42946
void CG_ParticleBloodCloud (centity_t *cent, vec3_t origin, vec3_t dir)CG_ParticleBloodCloud2013,42968
void CG_ParticleSparks (vec3_t org, vec3_t vel, int duration, float x, float y, float speed)CG_ParticleSparks2090,44175
void CG_ParticleDust (centity_t *cent, vec3_t origin, vec3_t dir)CG_ParticleDust2138,45095
void CG_ParticleMisc (qhandle_t pshader, vec3_t origin, int size, int duration, float alpha)CG_ParticleMisc2234,46771

cgame/cg_snapshot.c,521
static void CG_ResetEntity( centity_t *cent ) {CG_ResetEntity35,1172
static void CG_TransitionEntity( centity_t *cent ) {CG_TransitionEntity58,1819
void CG_SetInitialSnapshot( snapshot_t *snap ) {CG_SetInitialSnapshot86,2451
static void CG_TransitionSnapshot( void ) {CG_TransitionSnapshot128,3390
static void CG_SetNextSnap( snapshot_t *snap ) {CG_SetNextSnap199,5378
static snapshot_t *CG_ReadNextSnapshot( void ) {CG_ReadNextSnapshot259,7047
void CG_ProcessSnapshots( void ) {CG_ProcessSnapshots327,8961

cgame/cg_drawtools.c,2651
void CG_AdjustFrom640( float *x, float *y, float *w, float *h ) {CG_AdjustFrom64033,1191
void CG_FillRect( float x, float y, float width, float height, const float *color ) {CG_FillRect54,1675
void CG_DrawSides(float x, float y, float w, float h, float size) {CG_DrawSides70,2028
void CG_DrawTopBottom(float x, float y, float w, float h, float size) {CG_DrawTopBottom77,2326
void CG_DrawRect( float x, float y, float width, float height, float size, const float *color ) {CG_DrawRect90,2720
void CG_DrawPic( float x, float y, float width, float height, qhandle_t hShader ) {CG_DrawPic108,3060
void CG_DrawChar( int x, int y, int width, int height, int ch ) {CG_DrawChar122,3366
void CG_DrawStringExt( int x, int y, const char *string, const float *setColor, CG_DrawStringExt164,4056
void CG_DrawBigString( int x, int y, const char *s, float alpha ) {CG_DrawBigString217,5168
void CG_DrawBigStringColor( int x, int y, const char *s, vec4_t color ) {CG_DrawBigStringColor225,5401
void CG_DrawSmallString( int x, int y, const char *s, float alpha ) {CG_DrawSmallString229,5563
void CG_DrawSmallStringColor( int x, int y, const char *s, vec4_t color ) {CG_DrawSmallStringColor237,5803
int CG_DrawStrlen( const char *str ) {CG_DrawStrlen248,6081
static void CG_TileClearBox( int x, int y, int w, int h, qhandle_t hShader ) {CG_TileClearBox272,6415
void CG_TileClear( void ) {CG_TileClear291,6733
float *CG_FadeColor( int startMsec, int totalMsec ) {CG_FadeColor328,7591
float *CG_TeamColor( int team ) {CG_TeamColor359,8032
void CG_GetColorForHealth( int health, int armor, vec4_t hcolor ) {CG_GetColorForHealth384,8457
void CG_ColorForHealth( vec4_t hcolor ) {CG_ColorForHealth427,9289
static int	propMap[128][3] = {propMap439,9504
static int propMapB[26][3] = {propMapB549,11806
#define PROPB_GAP_WIDTH	PROPB_GAP_WIDTH581,12227
#define PROPB_SPACE_WIDTH	PROPB_SPACE_WIDTH582,12254
#define PROPB_HEIGHT	PROPB_HEIGHT583,12283
static void UI_DrawBannerString2( int x, int y, const char* str, vec4_t color )UI_DrawBannerString2590,12371
void UI_DrawBannerString( int x, int y, const char* str, int style, vec4_t color ) {UI_DrawBannerString633,13405
int UI_ProportionalStringWidth( const char* str ) {UI_ProportionalStringWidth678,14211
static void UI_DrawProportionalString2( int x, int y, const char* str, vec4_t color, float sizeScale, qhandle_t charset )UI_DrawProportionalString2700,14549
float UI_ProportionalSizeScale( int style ) {UI_ProportionalSizeScale749,15694
void UI_DrawProportionalString( int x, int y, const char* str, int style, vec4_t color ) {UI_DrawProportionalString763,15876

cgame/cg_effects.c,1430
void CG_BubbleTrail( vec3_t start, vec3_t end, float spacing ) {CG_BubbleTrail36,1188
localEntity_t *CG_SmokePuff( const vec3_t p, const vec3_t vel, CG_SmokePuff99,2563
void CG_SpawnEffect( vec3_t org ) {CG_SpawnEffect172,4281
void CG_LightningBoltBeam( vec3_t start, vec3_t end ) {CG_LightningBoltBeam211,5034
void CG_KamikazeEffect( vec3_t org ) {CG_KamikazeEffect236,5536
void CG_ObeliskExplode( vec3_t org, int entityNum ) {CG_ObeliskExplode267,6139
void CG_ObeliskPain( vec3_t org ) {CG_ObeliskPain289,6602
void CG_InvulnerabilityImpact( vec3_t org, vec3_t angles ) {CG_InvulnerabilityImpact311,6992
void CG_InvulnerabilityJuiced( vec3_t org ) {CG_InvulnerabilityJuiced352,7928
void CG_ScorePlum( int client, vec3_t org, int score ) {CG_ScorePlum387,8678
localEntity_t *CG_MakeExplosion( vec3_t origin, vec3_t dir, CG_MakeExplosion433,9704
void CG_Bleed( vec3_t origin, int entityNum ) {CG_Bleed496,11163
void CG_LaunchGib( vec3_t origin, vec3_t velocity, qhandle_t hModel ) {CG_LaunchGib529,11805
#define	GIB_VELOCITY	GIB_VELOCITY562,12533
#define	GIB_JUMP	GIB_JUMP563,12558
void CG_GibPlayer( vec3_t playerOrigin ) {CG_GibPlayer564,12580
void CG_LaunchExplode( vec3_t origin, vec3_t velocity, qhandle_t hModel ) {CG_LaunchExplode646,15135
#define	EXP_VELOCITY	EXP_VELOCITY672,15742
#define	EXP_JUMP	EXP_JUMP673,15767
void CG_BigExplode( vec3_t playerOrigin ) {CG_BigExplode681,15914

cgame/cg_main.c,9091
displayContextDef_t cgDC;cgDC29,1149
int forceModelModificationCount = -1;forceModelModificationCount32,1183
intptr_t vmMain( int command, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11  ) {vmMain46,1497
cg_t				cg;cg85,2392
cgs_t				cgs;cgs86,2404
centity_t			cg_entities[MAX_GENTITIES];cg_entities87,2418
weaponInfo_t		cg_weapons[MAX_WEAPONS];cg_weapons88,2458
itemInfo_t			cg_items[MAX_ITEMS];cg_items89,2497
vmCvar_t	cg_railTrailTime;cg_railTrailTime92,2533
vmCvar_t	cg_centertime;cg_centertime93,2560
vmCvar_t	cg_runpitch;cg_runpitch94,2584
vmCvar_t	cg_runroll;cg_runroll95,2606
vmCvar_t	cg_bobup;cg_bobup96,2627
vmCvar_t	cg_bobpitch;cg_bobpitch97,2646
vmCvar_t	cg_bobroll;cg_bobroll98,2668
vmCvar_t	cg_swingSpeed;cg_swingSpeed99,2689
vmCvar_t	cg_shadows;cg_shadows100,2713
vmCvar_t	cg_gibs;cg_gibs101,2734
vmCvar_t	cg_drawTimer;cg_drawTimer102,2752
vmCvar_t	cg_drawFPS;cg_drawFPS103,2775
vmCvar_t	cg_drawSnapshot;cg_drawSnapshot104,2796
vmCvar_t	cg_draw3dIcons;cg_draw3dIcons105,2822
vmCvar_t	cg_drawIcons;cg_drawIcons106,2847
vmCvar_t	cg_drawAmmoWarning;cg_drawAmmoWarning107,2870
vmCvar_t	cg_drawCrosshair;cg_drawCrosshair108,2899
vmCvar_t	cg_drawCrosshairNames;cg_drawCrosshairNames109,2926
vmCvar_t	cg_drawRewards;cg_drawRewards110,2958
vmCvar_t	cg_crosshairSize;cg_crosshairSize111,2983
vmCvar_t	cg_crosshairX;cg_crosshairX112,3010
vmCvar_t	cg_crosshairY;cg_crosshairY113,3034
vmCvar_t	cg_crosshairHealth;cg_crosshairHealth114,3058
vmCvar_t	cg_draw2D;cg_draw2D115,3087
vmCvar_t	cg_drawStatus;cg_drawStatus116,3107
vmCvar_t	cg_animSpeed;cg_animSpeed117,3131
vmCvar_t	cg_debugAnim;cg_debugAnim118,3154
vmCvar_t	cg_debugPosition;cg_debugPosition119,3177
vmCvar_t	cg_debugEvents;cg_debugEvents120,3204
vmCvar_t	cg_errorDecay;cg_errorDecay121,3229
vmCvar_t	cg_nopredict;cg_nopredict122,3253
vmCvar_t	cg_noPlayerAnims;cg_noPlayerAnims123,3276
vmCvar_t	cg_showmiss;cg_showmiss124,3303
vmCvar_t	cg_footsteps;cg_footsteps125,3325
vmCvar_t	cg_addMarks;cg_addMarks126,3348
vmCvar_t	cg_brassTime;cg_brassTime127,3370
vmCvar_t	cg_viewsize;cg_viewsize128,3393
vmCvar_t	cg_drawGun;cg_drawGun129,3415
vmCvar_t	cg_gun_frame;cg_gun_frame130,3436
vmCvar_t	cg_gun_x;cg_gun_x131,3459
vmCvar_t	cg_gun_y;cg_gun_y132,3478
vmCvar_t	cg_gun_z;cg_gun_z133,3497
vmCvar_t	cg_tracerChance;cg_tracerChance134,3516
vmCvar_t	cg_tracerWidth;cg_tracerWidth135,3542
vmCvar_t	cg_tracerLength;cg_tracerLength136,3567
vmCvar_t	cg_autoswitch;cg_autoswitch137,3593
vmCvar_t	cg_ignore;cg_ignore138,3617
vmCvar_t	cg_simpleItems;cg_simpleItems139,3637
vmCvar_t	cg_fov;cg_fov140,3662
vmCvar_t	cg_zoomFov;cg_zoomFov141,3679
vmCvar_t	cg_thirdPerson;cg_thirdPerson142,3700
vmCvar_t	cg_thirdPersonRange;cg_thirdPersonRange143,3725
vmCvar_t	cg_thirdPersonAngle;cg_thirdPersonAngle144,3755
vmCvar_t	cg_lagometer;cg_lagometer145,3785
vmCvar_t	cg_drawAttacker;cg_drawAttacker146,3808
vmCvar_t	cg_synchronousClients;cg_synchronousClients147,3834
vmCvar_t 	cg_teamChatTime;cg_teamChatTime148,3866
vmCvar_t 	cg_teamChatHeight;cg_teamChatHeight149,3893
vmCvar_t 	cg_stats;cg_stats150,3922
vmCvar_t 	cg_buildScript;cg_buildScript151,3942
vmCvar_t 	cg_forceModel;cg_forceModel152,3968
vmCvar_t	cg_paused;cg_paused153,3993
vmCvar_t	cg_blood;cg_blood154,4013
vmCvar_t	cg_predictItems;cg_predictItems155,4032
vmCvar_t	cg_deferPlayers;cg_deferPlayers156,4058
vmCvar_t	cg_drawTeamOverlay;cg_drawTeamOverlay157,4084
vmCvar_t	cg_teamOverlayUserinfo;cg_teamOverlayUserinfo158,4113
vmCvar_t	cg_drawFriend;cg_drawFriend159,4146
vmCvar_t	cg_teamChatsOnly;cg_teamChatsOnly160,4170
vmCvar_t	cg_noVoiceChats;cg_noVoiceChats161,4197
vmCvar_t	cg_noVoiceText;cg_noVoiceText162,4223
vmCvar_t	cg_hudFiles;cg_hudFiles163,4248
vmCvar_t 	cg_scorePlum;cg_scorePlum164,4270
vmCvar_t 	cg_smoothClients;cg_smoothClients165,4294
vmCvar_t	pmove_fixed;pmove_fixed166,4322
vmCvar_t	pmove_msec;pmove_msec168,4371
vmCvar_t	cg_pmove_msec;cg_pmove_msec169,4392
vmCvar_t	cg_cameraMode;cg_cameraMode170,4416
vmCvar_t	cg_cameraOrbit;cg_cameraOrbit171,4440
vmCvar_t	cg_cameraOrbitDelay;cg_cameraOrbitDelay172,4465
vmCvar_t	cg_timescaleFadeEnd;cg_timescaleFadeEnd173,4495
vmCvar_t	cg_timescaleFadeSpeed;cg_timescaleFadeSpeed174,4525
vmCvar_t	cg_timescale;cg_timescale175,4557
vmCvar_t	cg_smallFont;cg_smallFont176,4580
vmCvar_t	cg_bigFont;cg_bigFont177,4603
vmCvar_t	cg_noTaunt;cg_noTaunt178,4624
vmCvar_t	cg_noProjectileTrail;cg_noProjectileTrail179,4645
vmCvar_t	cg_oldRail;cg_oldRail180,4676
vmCvar_t	cg_oldRocket;cg_oldRocket181,4697
vmCvar_t	cg_oldPlasma;cg_oldPlasma182,4720
vmCvar_t	cg_trueLightning;cg_trueLightning183,4743
vmCvar_t 	cg_redTeamName;cg_redTeamName186,4790
vmCvar_t 	cg_blueTeamName;cg_blueTeamName187,4816
vmCvar_t	cg_currentSelectedPlayer;cg_currentSelectedPlayer188,4843
vmCvar_t	cg_currentSelectedPlayerName;cg_currentSelectedPlayerName189,4878
vmCvar_t	cg_singlePlayer;cg_singlePlayer190,4917
vmCvar_t	cg_enableDust;cg_enableDust191,4943
vmCvar_t	cg_enableBreath;cg_enableBreath192,4967
vmCvar_t	cg_singlePlayerActive;cg_singlePlayerActive193,4993
vmCvar_t	cg_recordSPDemo;cg_recordSPDemo194,5025
vmCvar_t	cg_recordSPDemoName;cg_recordSPDemoName195,5051
vmCvar_t	cg_obeliskRespawnDelay;cg_obeliskRespawnDelay196,5081
	vmCvar_t	*vmCvar;vmCvar200,5139
	char		*cvarName;cvarName201,5158
	char		*defaultString;defaultString202,5176
	int			cvarFlags;cvarFlags203,5199
} cvarTable_t;cvarTable_t204,5217
static cvarTable_t cvarTable[] = {cvarTable206,5233
static int  cvarTableSize = sizeof( cvarTable ) / sizeof( cvarTable[0] );cvarTableSize319,11537
void CG_RegisterCvars( void ) {CG_RegisterCvars326,11671
static void CG_ForceModelChange( void ) {CG_ForceModelChange353,12601
void CG_UpdateCvars( void ) {CG_UpdateCvars372,12895
int CG_CrosshairPlayer( void ) {CG_CrosshairPlayer401,13705
int CG_LastAttacker( void ) {CG_LastAttacker408,13842
void QDECL CG_Printf( const char *msg, ... ) {CG_Printf415,13965
void QDECL CG_Error( const char *msg, ... ) {CG_Error426,14166
void QDECL Com_Error( int level, const char *error, ... ) {Com_Error437,14366
void QDECL Com_Printf( const char *msg, ... ) {Com_Printf448,14587
const char *CG_Argv( int arg ) {CG_Argv464,14841
static void CG_RegisterItemSounds( int itemNum ) {CG_RegisterItemSounds482,15169
static void CG_RegisterSounds( void ) {CG_RegisterSounds531,16001
static void CG_RegisterGraphics( void ) {CG_RegisterGraphics800,31655
void CG_BuildSpectatorString(void) {CG_BuildSpectatorString1108,46134
static void CG_RegisterClients( void ) {CG_RegisterClients1129,46643
const char *CG_ConfigString( int index ) {CG_ConfigString1159,47180
void CG_StartMusic( void ) {CG_StartMusic1174,47544
char *CG_GetMenuBuffer(const char *filename) {CG_GetMenuBuffer1186,47879
qboolean CG_Asset_Parse(int handle) {CG_Asset_Parse1214,48543
void CG_ParseMenu(const char *menuFile) {CG_ParseMenu1361,52061
qboolean CG_Load_Menu(char **p) {CG_Load_Menu1407,52857
void CG_LoadMenus(const char *menuFile) {CG_LoadMenus1435,53204
static qboolean CG_OwnerDrawHandleKey(int ownerDraw, int flags, float *special, int key) {CG_OwnerDrawHandleKey1504,54597
static int CG_FeederCount(float feederID) {CG_FeederCount1509,54708
void CG_SetScoreSelection(void *p) {CG_SetScoreSelection1531,55160
static clientInfo_t * CG_InfoFromScoreIndex(int index, int team, int *scoreIndex) {CG_InfoFromScoreIndex1566,55985
static const char *CG_FeederItemText(float feederID, int index, int column, qhandle_t *handle) {CG_FeederItemText1584,56412
static qhandle_t CG_FeederItemImage(float feederID, int index) {CG_FeederItemImage1668,58484
static void CG_FeederSelection(float feederID, int index) {CG_FeederSelection1672,58563
static float CG_Cvar_Get(const char *cvar) {CG_Cvar_Get1692,58983
void CG_Text_PaintWithCursor(float x, float y, float scale, vec4_t color, const char *text, int cursorPos, char cursor, int limit, int style) {CG_Text_PaintWithCursor1701,59185
static int CG_OwnerDrawWidth(int ownerDraw, float scale) {CG_OwnerDrawWidth1705,59391
static int CG_PlayCinematic(const char *name, float x, float y, float w, float h) {CG_PlayCinematic1727,59926
static void CG_StopCinematic(int handle) {CG_StopCinematic1731,60074
static void CG_DrawCinematic(int handle, float x, float y, float w, float h) {CG_DrawCinematic1735,60154
static void CG_RunCinematicFrame(int handle) {CG_RunCinematicFrame1740,60313
void CG_LoadHudMenu( void ) {CG_LoadHudMenu1750,60457
void CG_AssetCache( void ) {CG_AssetCache1817,62815
void CG_Init( int serverMessageNum, int serverCommandSequence, int clientNum ) {CG_Init1850,64532
void CG_Shutdown( void ) {CG_Shutdown1961,67209
void CG_EventHandling(int type) {CG_EventHandling1977,67488
void CG_KeyEvent(int key, qboolean down) {CG_KeyEvent1982,67527
void CG_MouseEvent(int x, int y) {CG_MouseEvent1985,67573

cgame/cg_playerstate.c,702
void CG_CheckAmmo( void ) {CG_CheckAmmo37,1397
void CG_DamageFeedback( int yawByte, int pitchByte, int damage ) {CG_DamageFeedback89,2368
void CG_Respawn( void ) {CG_Respawn191,4331
void CG_CheckPlayerstateEvents( playerState_t *ps, playerState_t *ops ) {CG_CheckPlayerstateEvents209,4673
void CG_CheckChangedPredictableEvents( playerState_t *ps ) {CG_CheckChangedPredictableEvents247,6009
static void pushReward(sfxHandle_t sfx, qhandle_t shader, int rewardCount) {pushReward283,7041
void CG_CheckLocalSounds( playerState_t *ps, playerState_t *ops ) {CG_CheckLocalSounds297,7385
void CG_TransitionPlayerState( playerState_t *ps, playerState_t *ops ) {CG_TransitionPlayerState486,13999

cgame/cg_scoreboard.c,1534
#define	SCOREBOARD_X	SCOREBOARD_X27,1067
#define SB_HEADER	SB_HEADER29,1094
#define SB_TOP	SB_TOP30,1117
#define SB_STATUSBAR	SB_STATUSBAR33,1208
#define SB_NORMAL_HEIGHT	SB_NORMAL_HEIGHT35,1235
#define SB_INTER_HEIGHT	SB_INTER_HEIGHT36,1263
#define SB_MAXCLIENTS_NORMAL SB_MAXCLIENTS_NORMAL38,1314
#define SB_MAXCLIENTS_INTER SB_MAXCLIENTS_INTER39,1389
#define SB_LEFT_BOTICON_X	SB_LEFT_BOTICON_X45,1496
#define SB_LEFT_HEAD_X	SB_LEFT_HEAD_X46,1539
#define SB_RIGHT_BOTICON_X	SB_RIGHT_BOTICON_X47,1581
#define SB_RIGHT_HEAD_X	SB_RIGHT_HEAD_X48,1626
#define SB_BOTICON_X	SB_BOTICON_X50,1679
#define SB_HEAD_X	SB_HEAD_X51,1719
#define SB_SCORELINE_X	SB_SCORELINE_X53,1758
#define SB_RATING_WIDTH	SB_RATING_WIDTH55,1787
#define SB_SCORE_X	SB_SCORE_X56,1846
#define SB_RATING_X	SB_RATING_X57,1911
#define SB_PING_X	SB_PING_X58,1981
#define SB_TIME_X	SB_TIME_X59,2054
#define SB_NAME_X	SB_NAME_X60,2127
static qboolean localClient; // true if local client has been displayedlocalClient73,2502
static void CG_DrawClientScore( int y, score_t *score, float *color, float fade, qboolean largeFormat ) {CG_DrawClientScore81,2644
static int CG_TeamScoreboard( int y, team_t team, float fade, int maxClients, int lineHeight ) {CG_TeamScoreboard232,7011
qboolean CG_DrawOldScoreboard( void ) {CG_DrawOldScoreboard266,7661
static void CG_CenterGiantLine( float y, const char *string ) {CG_CenterGiantLine431,12596
void CG_DrawOldTourneyScoreboard( void ) {CG_DrawOldTourneyScoreboard452,13012

cgame/cg_draw.c,4928
menuDef_t *menuScoreboard = NULL;menuScoreboard33,1199
int drawTeamOverlayModificationCount = -1;drawTeamOverlayModificationCount35,1239
int sortedTeamPlayers[TEAM_MAXOVERLAY];sortedTeamPlayers38,1290
int	numSortedTeamPlayers;numSortedTeamPlayers39,1330
char systemChat[256];systemChat41,1357
char teamChat1[256];teamChat142,1379
char teamChat2[256];teamChat243,1400
int CG_Text_Width(const char *text, float scale, int limit) {CG_Text_Width47,1442
int CG_Text_Height(const char *text, float scale, int limit) {CG_Text_Height84,2336
void CG_Text_PaintChar(float x, float y, float width, float height, float scale, float s, float t, float s2, float t2, qhandle_t hShader) {CG_Text_PaintChar123,3255
void CG_Text_Paint(float x, float y, float scale, vec4_t color, const char *text, float adjust, int limit, int style) {CG_Text_Paint131,3555
static void CG_DrawField (int x, int y, int width, int value) {CG_DrawField212,6090
void CG_Draw3DModel( float x, float y, float w, float h, qhandle_t model, qhandle_t skin, vec3_t origin, vec3_t angles ) {CG_Draw3DModel273,7107
void CG_DrawHead( float x, float y, float w, float h, int clientNum, vec3_t headAngles ) {CG_DrawHead318,8025
void CG_DrawFlagModel( float x, float y, float w, float h, int team, qboolean force2D ) {CG_DrawFlagModel365,9168
static void CG_DrawStatusBarHead( float x ) {CG_DrawStatusBarHead427,10665
static void CG_DrawStatusBarFlag( float x, int team ) {CG_DrawStatusBarFlag486,12321
void CG_DrawTeamBackground( int x, int y, int w, int h, float alpha, int team )CG_DrawTeamBackground497,12542
static void CG_DrawStatusBar( void ) {CG_DrawStatusBar525,13036
static float CG_DrawAttacker( float y ) {CG_DrawAttacker667,16955
static float CG_DrawSnapshot( float y ) {CG_DrawSnapshot714,17917
#define	FPS_FRAMES	FPS_FRAMES732,18269
static float CG_DrawFPS( float y ) {CG_DrawFPS733,18290
static float CG_DrawTimer( float y ) {CG_DrawTimer776,19191
static float CG_DrawTeamOverlay( float y, qboolean right, qboolean upper ) {CG_DrawTeamOverlay805,19676
static void CG_DrawUpperRight(stereoFrame_t stereoFrame)CG_DrawUpperRight979,23556
static float CG_DrawScores( float y ) {CG_DrawScores1019,24388
static float CG_DrawPowerups( float y ) {CG_DrawPowerups1172,28048
static void CG_DrawLowerRight( void ) {CG_DrawLowerRight1274,30239
static int CG_DrawPickupItem( int y ) {CG_DrawPickupItem1294,30594
static void CG_DrawLowerLeft( void ) {CG_DrawLowerLeft1327,31287
static void CG_DrawTeamInfo( void ) {CG_DrawTeamInfo1350,31710
#define CHATLOC_Y CHATLOC_Y1356,31808
#define CHATLOC_X CHATLOC_X1357,31844
static void CG_DrawHoldableItem( void ) { CG_DrawHoldableItem1423,33479
static void CG_DrawReward( void ) { CG_DrawReward1460,34266
#define	LAG_SAMPLES	LAG_SAMPLES1536,36066
	int		frameSamples[LAG_SAMPLES];frameSamples1540,36110
	int		frameCount;frameCount1541,36143
	int		snapshotFlags[LAG_SAMPLES];snapshotFlags1542,36161
	int		snapshotSamples[LAG_SAMPLES];snapshotSamples1543,36195
	int		snapshotCount;snapshotCount1544,36231
} lagometer_t;lagometer_t1545,36252
lagometer_t		lagometer;lagometer1547,36268
void CG_AddLagometerFrameInfo( void ) {CG_AddLagometerFrameInfo1556,36417
void CG_AddLagometerSnapshotInfo( snapshot_t *snap ) {CG_AddLagometerSnapshotInfo1574,36830
static void CG_DrawDisconnect( void ) {CG_DrawDisconnect1595,37404
#define	MAX_LAGOMETER_PING	MAX_LAGOMETER_PING1627,38123
#define	MAX_LAGOMETER_RANGE	MAX_LAGOMETER_RANGE1628,38154
static void CG_DrawLagometer( void ) {CG_DrawLagometer1635,38240
void CG_CenterPrint( const char *str, int y, int charWidth ) {CG_CenterPrint1761,41052
static void CG_DrawCenterString( void ) {CG_DrawCenterString1786,41509
static void CG_DrawCrosshair(void)CG_DrawCrosshair1865,42981
static void CG_DrawCrosshair3D(void)CG_DrawCrosshair3D1925,44115
static void CG_ScanForCrosshairEntity( void ) {CG_ScanForCrosshairEntity2003,46209
static void CG_DrawCrosshairNames( void ) {CG_DrawCrosshairNames2039,47045
static void CG_DrawSpectator(void) {CG_DrawSpectator2084,48046
static void CG_DrawVote(void) {CG_DrawVote2099,48433
static void CG_DrawTeamVote(void) {CG_DrawTeamVote2133,49224
static qboolean CG_DrawScoreboard( void ) {CG_DrawScoreboard2164,49975
static void CG_DrawIntermission( void ) {CG_DrawIntermission2238,51647
static qboolean CG_DrawFollow( void ) {CG_DrawFollow2260,52025
static void CG_DrawAmmoWarning( void ) {CG_DrawAmmoWarning2292,52580
static void CG_DrawProxWarning( void ) {CG_DrawProxWarning2320,53010
static void CG_DrawWarmup( void ) {CG_DrawWarmup2360,53790
void CG_DrawTimedMenus( void ) {CG_DrawTimedMenus2504,56923
static void CG_Draw2D(stereoFrame_t stereoFrame)CG_Draw2D2520,57195
static void CG_DrawTourneyScoreboard( void ) {CG_DrawTourneyScoreboard2621,58983
void CG_DrawActive( stereoFrame_t stereoView ) {CG_DrawActive2635,59219

cgame/cg_players.c,4128
char	*cg_customSoundNames[MAX_CUSTOM_SOUNDS] = {cg_customSoundNames26,1070
sfxHandle_t	CG_CustomSound( int clientNum, const char *soundName ) {CG_CustomSound49,1392
static qboolean	CG_ParseAnimationFile( const char *filename, clientInfo_t *ci ) {CG_ParseAnimationFile90,2272
static qboolean	CG_FileExists(const char *filename) {CG_FileExists298,8124
static qboolean	CG_FindClientModelFile( char *filename, int length, clientInfo_t *ci, const char *teamName, const char *modelName, const char *skinName, const char *base, const char *ext ) {CG_FindClientModelFile313,8377
static qboolean	CG_FindClientHeadFile( char *filename, int length, clientInfo_t *ci, const char *teamName, const char *headModelName, const char *headSkinName, const char *base, const char *ext ) {CG_FindClientHeadFile388,10714
static qboolean	CG_RegisterClientSkin( clientInfo_t *ci, const char *teamName, const char *modelName, const char *skinName, const char *headModelName, const char *headSkinName ) {CG_RegisterClientSkin464,12721
static qboolean CG_RegisterClientModelname( clientInfo_t *ci, const char *modelName, const char *skinName, const char *headModelName, const char *headSkinName, const char *teamName ) {CG_RegisterClientModelname522,14823
static void CG_ColorFromString( const char *v, vec3_t color ) {CG_ColorFromString621,18592
static void CG_LoadClientInfo( int clientNum, clientInfo_t *ci ) {CG_LoadClientInfo652,19052
static void CG_CopyClientInfoModel( clientInfo_t *from, clientInfo_t *to ) {CG_CopyClientInfoModel741,21770
static qboolean CG_ScanForExistingClientInfo( clientInfo_t *ci ) {CG_ScanForExistingClientInfo765,22443
static void CG_SetDeferredClientInfo( int clientNum, clientInfo_t *ci ) {CG_SetDeferredClientInfo806,23480
void CG_NewClientInfo( int clientNum ) {CG_NewClientInfo876,25450
void CG_LoadDeferredPlayers( void ) {CG_LoadDeferredPlayers1065,30793
static void CG_SetLerpFrameAnimation( clientInfo_t *ci, lerpFrame_t *lf, int newAnimation ) {CG_SetLerpFrameAnimation1100,31538
static void CG_RunLerpFrame( clientInfo_t *ci, lerpFrame_t *lf, int newAnimation, float speedScale ) {CG_RunLerpFrame1128,32215
static void CG_ClearLerpFrame( clientInfo_t *ci, lerpFrame_t *lf, int animationNumber ) {CG_ClearLerpFrame1216,34495
static void CG_PlayerAnimation( centity_t *cent, int *legsOld, int *legs, float *legsBackLerp,CG_PlayerAnimation1228,34800
static void CG_SwingAngles( float destination, float swingTolerance, float clampTolerance,CG_SwingAngles1280,36140
static void CG_AddPainTwitch( centity_t *cent, vec3_t torsoAngles ) {CG_AddPainTwitch1341,37573
static void CG_PlayerAngles( centity_t *cent, vec3_t legs[3], vec3_t torso[3], vec3_t head[3] ) {CG_PlayerAngles1374,38158
static void CG_HasteTrail( centity_t *cent ) {CG_HasteTrail1490,41491
static void CG_BreathPuffs( centity_t *cent, refEntity_t *head) {CG_BreathPuffs1530,42216
static void CG_DustTrail( centity_t *cent ) {CG_DustTrail1566,43139
static void CG_TrailItem( centity_t *cent, qhandle_t hModel ) {CG_TrailItem1617,44105
static void CG_PlayerFlag( centity_t *cent, qhandle_t hSkin, refEntity_t *torso ) {CG_PlayerFlag1643,44623
static void CG_PlayerTokens( centity_t *cent, int renderfx ) {CG_PlayerTokens1761,47623
static void CG_PlayerPowerups( centity_t *cent, refEntity_t *torso ) {CG_PlayerPowerups1828,49451
static void CG_PlayerFloatSprite( centity_t *cent, qhandle_t shader ) {CG_PlayerFloatSprite1895,51096
static void CG_PlayerSprites( centity_t *cent ) {CG_PlayerSprites1928,51794
#define	SHADOW_DISTANCE	SHADOW_DISTANCE1991,53306
static qboolean CG_PlayerShadow( centity_t *cent, float *shadowPlane ) {CG_PlayerShadow1992,53335
static void CG_PlayerSplash( centity_t *cent ) {CG_PlayerSplash2047,54687
void CG_AddRefEntityWithPowerups( refEntity_t *ent, entityState_t *state, int team ) {CG_AddRefEntityWithPowerups2137,56927
int CG_LightVerts( vec3_t normal, int numVerts, polyVert_t *verts )CG_LightVerts2181,58047
void CG_Player( centity_t *cent ) {CG_Player2228,59042
void CG_ResetPlayerEntity( centity_t *cent ) {CG_ResetPlayerEntity2589,69057

game/g_mover.c,3469
	gentity_t	*ent;ent39,1265
	vec3_t	origin;origin40,1282
	vec3_t	angles;angles41,1298
	float	deltayaw;deltayaw42,1314
} pushed_t;pushed_t43,1331
pushed_t	pushed[MAX_GENTITIES], *pushed_p;pushed44,1343
pushed_t	pushed[MAX_GENTITIES], *pushed_p;pushed_p44,1343
gentity_t	*G_TestEntityPosition( gentity_t *ent ) {G_TestEntityPosition53,1442
void G_CreateRotationMatrix(vec3_t angles, vec3_t matrix[3]) {G_CreateRotationMatrix79,2002
void G_TransposeMatrix(vec3_t matrix[3], vec3_t transpose[3]) {G_TransposeMatrix89,2209
void G_RotatePoint(vec3_t point, vec3_t matrix[3]) {G_RotatePoint103,2438
qboolean	G_TryPushingEntity( gentity_t *check, gentity_t *pusher, vec3_t move, vec3_t amove ) {G_TryPushingEntity119,2760
qboolean G_CheckProxMinePosition( gentity_t *check ) {G_CheckProxMinePosition208,5486
qboolean G_TryPushingProxMine( gentity_t *check, gentity_t *pusher, vec3_t move, vec3_t amove ) {G_TryPushingProxMine227,5909
qboolean G_MoverPush( gentity_t *pusher, vec3_t move, vec3_t amove, gentity_t **obstacle ) {G_MoverPush266,7020
void G_MoverTeam( gentity_t *ent ) {G_MoverTeam422,11591
void G_RunMover( gentity_t *ent ) {G_RunMover480,13242
void SetMoverState( gentity_t *ent, moverState_t moverState, int time ) {SetMoverState511,13974
void MatchTeam( gentity_t *teamLeader, int moverState, int time ) {MatchTeam554,15111
void ReturnToPos1( gentity_t *ent ) {ReturnToPos1569,15370
void Reached_BinaryMover( gentity_t *ent ) {Reached_BinaryMover587,15673
void Use_BinaryMover( gentity_t *ent, gentity_t *other, gentity_t *activator ) {Use_BinaryMover634,16682
void InitMover( gentity_t *ent ) {InitMover715,18517
void Blocked_Door( gentity_t *ent, gentity_t *other ) {Blocked_Door802,20549
static void Touch_DoorTriggerSpectator( gentity_t *ent, gentity_t *other, trace_t *trace ) {Touch_DoorTriggerSpectator831,21198
void Touch_DoorTrigger( gentity_t *ent, gentity_t *other, trace_t *trace ) {Touch_DoorTrigger859,21866
void Think_SpawnNewDoorTrigger( gentity_t *ent ) {Think_SpawnNewDoorTrigger881,22493
void Think_MatchTeam( gentity_t *ent ) {Think_MatchTeam925,23626
void SP_func_door (gentity_t *ent) {SP_func_door946,24577
void Touch_Plat( gentity_t *ent, gentity_t *other, trace_t *trace ) {Touch_Plat1031,26480
void Touch_PlatCenterTrigger(gentity_t *ent, gentity_t *other, trace_t *trace ) {Touch_PlatCenterTrigger1049,26876
void SpawnPlatTrigger( gentity_t *ent ) {SpawnPlatTrigger1069,27319
void SP_func_plat (gentity_t *ent) {SP_func_plat1116,28664
void Touch_Button(gentity_t *ent, gentity_t *other, trace_t *trace ) {Touch_Button1174,30004
void SP_func_button( gentity_t *ent ) {SP_func_button1198,30863
#define TRAIN_START_ON	TRAIN_START_ON1253,32027
#define TRAIN_TOGGLE	TRAIN_TOGGLE1254,32053
#define TRAIN_BLOCK_STOPS	TRAIN_BLOCK_STOPS1255,32077
void Think_BeginMoving( gentity_t *ent ) {Think_BeginMoving1264,32226
void Reached_Train( gentity_t *ent ) {Reached_Train1274,32394
void Think_SetupTrainTargets( gentity_t *ent ) {Think_SetupTrainTargets1333,33622
void SP_path_corner( gentity_t *self ) {SP_path_corner1383,34860
void SP_func_train (gentity_t *self) {SP_func_train1406,35525
void SP_func_static( gentity_t *ent ) {SP_func_static1453,36583
void SP_func_rotating (gentity_t *ent) {SP_func_rotating1481,37470
void SP_func_bobbing (gentity_t *ent) {SP_func_bobbing1530,38660
void SP_func_pendulum(gentity_t *ent) {SP_func_pendulum1579,40165

game/g_arenas.c,981
gentity_t	*podium1;podium130,1021
gentity_t	*podium2;podium231,1041
gentity_t	*podium3;podium332,1061
void UpdateTournamentInfo( void ) {UpdateTournamentInfo40,1148
static gentity_t *SpawnModelOnVictoryPad( gentity_t *pad, vec3_t offset, gentity_t *ent, int place ) {SpawnModelOnVictoryPad139,4663
static void CelebrateStop( gentity_t *player ) {CelebrateStop203,6503
#define	TIMER_GESTURE	TIMER_GESTURE216,6761
static void CelebrateStart( gentity_t *player ) {CelebrateStart217,6794
static vec3_t	offsetFirst  = {0, 0, 74};offsetFirst231,7294
static vec3_t	offsetSecond = {-10, 60, 54};offsetSecond232,7335
static vec3_t	offsetThird  = {-19, -60, 45};offsetThird233,7379
static void PodiumPlacementThink( gentity_t *podium ) {PodiumPlacementThink235,7425
static gentity_t *SpawnPodium( void ) {SpawnPodium291,9187
void SpawnModelsOnVictoryPads( void ) {SpawnModelsOnVictoryPads328,10150
void Svcmd_AbortPodium_f( void ) {Svcmd_AbortPodium_f367,11165

game/syn.h,608
#define CONTEXT_ALL	CONTEXT_ALL23,975
#define CONTEXT_NORMAL	CONTEXT_NORMAL24,1011
#define CONTEXT_NEARBYITEM	CONTEXT_NEARBYITEM25,1040
#define CONTEXT_CTFREDTEAM	CONTEXT_CTFREDTEAM26,1072
#define CONTEXT_CTFBLUETEAM	CONTEXT_CTFBLUETEAM27,1104
#define CONTEXT_REPLY	CONTEXT_REPLY28,1137
#define CONTEXT_OBELISKREDTEAM	CONTEXT_OBELISKREDTEAM29,1166
#define CONTEXT_OBELISKBLUETEAM	CONTEXT_OBELISKBLUETEAM30,1202
#define CONTEXT_HARVESTERREDTEAM	CONTEXT_HARVESTERREDTEAM31,1239
#define CONTEXT_HARVESTERBLUETEAM	CONTEXT_HARVESTERBLUETEAM32,1277
#define CONTEXT_NAMES CONTEXT_NAMES34,1317

game/ai_vcmd.c,1870
typedef struct voiceCommand_svoiceCommand_s61,1936
	char *cmd;cmd63,1968
	void (*func)(bot_state_t *bs, int client, int mode);func64,1980
} voiceCommand_t;voiceCommand_t65,2034
void BotVoiceChat_GetFlag(bot_state_t *bs, int client, int mode) {BotVoiceChat_GetFlag72,2118
void BotVoiceChat_Offense(bot_state_t *bs, int client, int mode) {BotVoiceChat_Offense116,3160
void BotVoiceChat_Defend(bot_state_t *bs, int client, int mode) {BotVoiceChat_Defend172,4474
void BotVoiceChat_DefendFlag(bot_state_t *bs, int client, int mode) {BotVoiceChat_DefendFlag225,5772
void BotVoiceChat_Patrol(bot_state_t *bs, int client, int mode) {BotVoiceChat_Patrol234,5949
void BotVoiceChat_Camp(bot_state_t *bs, int client, int mode) {BotVoiceChat_Camp257,6404
void BotVoiceChat_FollowMe(bot_state_t *bs, int client, int mode) {BotVoiceChat_FollowMe313,7993
void BotVoiceChat_FollowFlagCarrier(bot_state_t *bs, int client, int mode) {BotVoiceChat_FollowFlagCarrier367,9537
void BotVoiceChat_ReturnFlag(bot_state_t *bs, int client, int mode) {BotVoiceChat_ReturnFlag383,9849
void BotVoiceChat_StartLeader(bot_state_t *bs, int client, int mode) {BotVoiceChat_StartLeader415,10536
void BotVoiceChat_StopLeader(bot_state_t *bs, int client, int mode) {BotVoiceChat_StopLeader424,10739
void BotVoiceChat_WhoIsLeader(bot_state_t *bs, int client, int mode) {BotVoiceChat_WhoIsLeader438,11056
void BotVoiceChat_WantOnDefense(bot_state_t *bs, int client, int mode) {BotVoiceChat_WantOnDefense457,11543
void BotVoiceChat_WantOnOffense(bot_state_t *bs, int client, int mode) {BotVoiceChat_WantOnOffense478,12165
void BotVoiceChat_Dummy(bot_state_t *bs, int client, int mode) {BotVoiceChat_Dummy494,12716
voiceCommand_t voiceCommands[] = {voiceCommands497,12784
int BotVoiceChatCommand(bot_state_t *bs, int mode, char *voiceChat) {BotVoiceChatCommand515,13550

game/g_rankings.c,1272
void G_RankRunFrame()G_RankRunFrame32,1130
void G_RankFireWeapon( int self, int weapon )G_RankFireWeapon172,4352
void G_RankDamage( int self, int attacker, int damage, int means_of_death )G_RankDamage227,5635
void G_RankPlayerDie( int self, int attacker, int means_of_death )G_RankPlayerDie490,12540
void G_RankWeaponTime( int self, int weapon )G_RankWeaponTime642,16212
void G_RankPickupWeapon( int self, int weapon )G_RankPickupWeapon706,17659
void G_RankPickupAmmo( int self, int weapon, int quantity )G_RankPickupAmmo757,18896
void G_RankPickupHealth( int self, int quantity )G_RankPickupHealth812,20567
void G_RankPickupArmor( int self, int quantity )G_RankPickupArmor847,21246
void G_RankPickupPowerup( int self, int powerup )G_RankPickupPowerup879,21850
void G_RankPickupHoldable( int self, int holdable )G_RankPickupHoldable926,22811
void G_RankUseHoldable( int self, int holdable )G_RankUseHoldable952,23227
void G_RankReward( int self, int award )G_RankReward978,23643
void G_RankCapture( int self )G_RankCapture1004,24059
void G_RankUserTeamName( int self, char* team_name )G_RankUserTeamName1020,24299
void G_RankClientDisconnect( int self )G_RankClientDisconnect1036,24567
void G_RankGameOver( void )G_RankGameOver1067,25106

game/ai_main.c,3759
#define MAX_PATH	MAX_PATH59,1811
bot_state_t	*botstates[MAX_CLIENTS];botstates64,1855
int numbots;numbots66,1909
float floattime;floattime68,1944
float regularupdate_time;regularupdate_time70,1991
int bot_interbreed;bot_interbreed72,2020
int bot_interbreedmatchcount;bot_interbreedmatchcount73,2040
vmCvar_t bot_thinktime;bot_thinktime75,2073
vmCvar_t bot_memorydump;bot_memorydump76,2097
vmCvar_t bot_saveroutingcache;bot_saveroutingcache77,2122
vmCvar_t bot_pause;bot_pause78,2153
vmCvar_t bot_report;bot_report79,2173
vmCvar_t bot_testsolid;bot_testsolid80,2194
vmCvar_t bot_testclusters;bot_testclusters81,2218
vmCvar_t bot_developer;bot_developer82,2245
vmCvar_t bot_interbreedchar;bot_interbreedchar83,2269
vmCvar_t bot_interbreedbots;bot_interbreedbots84,2298
vmCvar_t bot_interbreedcycle;bot_interbreedcycle85,2327
vmCvar_t bot_interbreedwrite;bot_interbreedwrite86,2357
void QDECL BotAI_Print(int type, char *fmt, ...) {BotAI_Print97,2471
void BotAI_Trace(bsp_trace_t *bsptrace, vec3_t start, vec3_t mins, vec3_t maxs, vec3_t end, int passent, int contentmask) {BotAI_Trace139,3153
int BotAI_GetClientState( int clientNum, playerState_t *state ) {BotAI_GetClientState164,3968
int BotAI_GetEntityState( int entityNum, entityState_t *state ) {BotAI_GetEntityState184,4311
int BotAI_GetSnapshotEntity( int clientNum, int sequence, entityState_t *state ) {BotAI_GetSnapshotEntity201,4726
void QDECL BotAI_BotInitialChat( bot_state_t *bs, char *type, ... ) {BotAI_BotInitialChat220,5098
void BotTestAAS(vec3_t origin) {BotTestAAS249,5666
void BotReportStatus(bot_state_t *bs) {BotReportStatus278,6430
void BotTeamplayReport(void) {BotTeamplayReport389,9579
void BotSetInfoConfigString(bot_state_t *bs) {BotSetInfoConfigString426,10608
void BotUpdateInfoConfigStrings(void) {BotUpdateInfoConfigStrings544,13447
void BotInterbreedBots(void) {BotInterbreedBots566,13912
void BotWriteInterbreeded(char *filename) {BotWriteInterbreeded599,14740
void BotInterbreedEndMatch(void) {BotInterbreedEndMatch631,15344
void BotInterbreeding(void) {BotInterbreeding652,15810
void BotEntityInfo(int entnum, aas_entityinfo_t *info) {BotEntityInfo686,16759
int NumBots(void) {NumBots695,16899
int BotTeamLeader(bot_state_t *bs) {BotTeamLeader704,16989
float AngleDifference(float ang1, float ang2) {AngleDifference718,17253
float BotChangeViewAngle(float angle, float ideal_angle, float speed) {BotChangeViewAngle736,17513
void BotChangeViewAngles(bot_state_t *bs, float thinktime) {BotChangeViewAngles763,18038
void BotInputToUserCommand(bot_input_t *bi, usercmd_t *ucmd, int delta_angles[3], int time) {BotInputToUserCommand820,20130
void BotUpdateInput(bot_state_t *bs, int time, int elapsed_time) {BotUpdateInput901,23463
void BotAIRegularUpdate(void) {BotAIRegularUpdate930,24381
void RemoveColorEscapeSequences( char *text ) {RemoveColorEscapeSequences942,24596
int BotAI(int client, float thinktime) {BotAI963,24878
void BotScheduleBotThink(void) {BotScheduleBotThink1059,27704
void BotWriteSessionData(bot_state_t *bs) {BotWriteSessionData1079,28066
void BotReadSessionData(bot_state_t *bs) {BotReadSessionData1117,28907
int BotAISetupClient(int client, struct bot_settings_s *settings, qboolean restart) {BotAISetupClient1154,29802
int BotAIShutdownClient(int client, qboolean restart) {BotAIShutdownClient1250,32907
void BotResetState(bot_state_t *bs) {BotResetState1299,34012
int BotAILoadMap( int restart ) {BotAILoadMap1349,35491
int BotAIStartFrame(int time) {BotAIStartFrame1379,36065
int BotInitLibrary(void) {BotInitLibrary1572,41088
int BotAISetup( int restart ) {BotAISetup1645,44139
int BotAIShutdown( int restart ) {BotAIShutdown1679,45354

game/g_public.h,15206
#define	GAME_API_VERSION	GAME_API_VERSION26,1038
#define	SVF_NOCLIENT	SVF_NOCLIENT32,1244
#define SVF_CLIENTMASK SVF_CLIENTMASK36,1408
#define SVF_BOT	SVF_BOT38,1443
#define	SVF_BROADCAST	SVF_BROADCAST39,1504
#define	SVF_PORTAL	SVF_PORTAL40,1572
#define	SVF_USE_CURRENT_ORIGIN	SVF_USE_CURRENT_ORIGIN41,1653
#define SVF_SINGLECLIENT	SVF_SINGLECLIENT43,1804
#define SVF_NOSERVERINFO	SVF_NOSERVERINFO44,1904
#define SVF_CAPSULE	SVF_CAPSULE47,2085
#define SVF_NOTSINGLECLIENT	SVF_NOTSINGLECLIENT48,2174
	entityState_t	s;				// communicated by server to clientss57,2389
	qboolean	linked;				// qfalse if not in any good clusterlinked59,2448
	int			linkcount;linkcount60,2506
	int			svFlags;			// SVF_NOCLIENT, SVF_BROADCAST, etcsvFlags62,2525
	int			singleClient;		singleClient66,2762
	qboolean	bmodel;				// if false, assume an explicit mins / maxs bounding boxbmodel68,2786
	vec3_t		mins, maxs;mins70,2907
	vec3_t		mins, maxs;maxs70,2907
	int			contents;			// CONTENTS_TRIGGER, CONTENTS_SOLID, CONTENTS_BODY, etccontents71,2928
	vec3_t		absmin, absmax;		// derived from mins/maxs and origin + rotationabsmin74,3051
	vec3_t		absmin, absmax;		// derived from mins/maxs and origin + rotationabsmax74,3051
	vec3_t		currentOrigin;currentOrigin80,3413
	vec3_t		currentAngles;currentAngles81,3437
	int			ownerNum;ownerNum88,3813
} entityShared_t;entityShared_t89,3830
	entityState_t	s;				// communicated by server to clientss95,3960
	entityShared_t	r;				// shared by both the server system and gamer96,4018
} sharedEntity_t;sharedEntity_t97,4085
	G_PRINT,		// ( const char *string );G_PRINT109,4299
	G_ERROR,		// ( const char *string );G_ERROR112,4377
	G_MILLISECONDS,	// ( void );G_MILLISECONDS115,4435
	G_CVAR_REGISTER,	// ( vmCvar_t *vmCvar, const char *varName, const char *defaultValue, int flags );G_CVAR_REGISTER121,4630
	G_CVAR_UPDATE,	// ( vmCvar_t *vmCvar );G_CVAR_UPDATE122,4731
	G_CVAR_SET,		// ( const char *var_name, const char *value );G_CVAR_SET123,4772
	G_CVAR_VARIABLE_INTEGER_VALUE,	// ( const char *var_name );G_CVAR_VARIABLE_INTEGER_VALUE124,4834
	G_CVAR_VARIABLE_STRING_BUFFER,	// ( const char *var_name, char *buffer, int bufsize );G_CVAR_VARIABLE_STRING_BUFFER126,4896
	G_ARGC,			// ( void );G_ARGC128,4985
	G_ARGV,			// ( int n, char *buffer, int bufferLength );G_ARGV131,5063
	G_FS_FOPEN_FILE,	// ( const char *qpath, fileHandle_t *file, fsMode_t mode );G_FS_FOPEN_FILE133,5121
	G_FS_READ,		// ( void *buffer, int len, fileHandle_t f );G_FS_READ134,5200
	G_FS_WRITE,		// ( const void *buffer, int len, fileHandle_t f );G_FS_WRITE135,5259
	G_FS_FCLOSE_FILE,		// ( fileHandle_t f );G_FS_FCLOSE_FILE136,5325
	G_SEND_CONSOLE_COMMAND,	// ( const char *text );G_SEND_CONSOLE_COMMAND138,5369
	G_LOCATE_GAME_DATA,		// ( gentity_t *gEnts, int numGEntities, int sizeofGEntity_t,G_LOCATE_GAME_DATA145,5564
	G_DROP_CLIENT,		// ( int clientNum, const char *reason );G_DROP_CLIENT150,5864
	G_SEND_SERVER_COMMAND,	// ( int clientNum, const char *fmt, ... );G_SEND_SERVER_COMMAND153,5972
	G_SET_CONFIGSTRING,	// ( int num, const char *string );G_SET_CONFIGSTRING157,6172
	G_GET_CONFIGSTRING,	// ( int num, char *buffer, int bufferSize );G_GET_CONFIGSTRING164,6537
	G_GET_USERINFO,		// ( int num, char *buffer, int bufferSize );G_GET_USERINFO166,6605
	G_SET_USERINFO,		// ( int num, const char *buffer );G_SET_USERINFO171,6833
	G_GET_SERVERINFO,	// ( char *buffer, int bufferSize );G_GET_SERVERINFO173,6888
	G_SET_BRUSH_MODEL,	// ( gentity_t *ent, const char *name );G_SET_BRUSH_MODEL176,7021
	G_TRACE,	// ( trace_t *results, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end, int passEntityNum, int contentmask );G_TRACE179,7135
	G_POINT_CONTENTS,	// ( const vec3_t point, int passEntityNum );G_POINT_CONTENTS182,7335
	G_IN_PVS,			// ( const vec3_t p1, const vec3_t p2 );G_IN_PVS185,7448
	G_IN_PVS_IGNORE_PORTALS,	// ( const vec3_t p1, const vec3_t p2 );G_IN_PVS_IGNORE_PORTALS187,7503
	G_ADJUST_AREA_PORTAL_STATE,	// ( gentity_t *ent, qboolean open );G_ADJUST_AREA_PORTAL_STATE189,7571
	G_AREAS_CONNECTED,	// ( int area1, int area2 );G_AREAS_CONNECTED191,7639
	G_LINKENTITY,		// ( gentity_t *ent );G_LINKENTITY193,7689
	G_UNLINKENTITY,		// ( gentity_t *ent );		G_UNLINKENTITY198,7905
	G_ENTITIES_IN_BOX,	// ( const vec3_t mins, const vec3_t maxs, gentity_t **list, int maxcount );G_ENTITIES_IN_BOX201,7996
	G_ENTITY_CONTACT,	// ( const vec3_t mins, const vec3_t maxs, const gentity_t *ent );G_ENTITY_CONTACT205,8231
	G_BOT_ALLOCATE_CLIENT,	// ( void );G_BOT_ALLOCATE_CLIENT209,8454
	G_BOT_FREE_CLIENT,	// ( int clientNum );G_BOT_FREE_CLIENT211,8492
	G_GET_USERCMD,	// ( int clientNum, usercmd_t *cmd )G_GET_USERCMD213,8535
	G_GET_ENTITY_TOKEN,	// qboolean ( char *buffer, int bufferSize )G_GET_ENTITY_TOKEN215,8589
	G_FS_GETFILELIST,G_FS_GETFILELIST220,8822
	G_DEBUG_POLYGON_CREATE,G_DEBUG_POLYGON_CREATE221,8841
	G_DEBUG_POLYGON_DELETE,G_DEBUG_POLYGON_DELETE222,8866
	G_REAL_TIME,G_REAL_TIME223,8891
	G_SNAPVECTOR,G_SNAPVECTOR224,8905
	G_TRACECAPSULE,	// ( trace_t *results, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end, int passEntityNum, int contentmask );G_TRACECAPSULE226,8921
	G_ENTITY_CONTACTCAPSULE,	// ( const vec3_t mins, const vec3_t maxs, const gentity_t *ent );G_ENTITY_CONTACTCAPSULE227,9075
	G_FS_SEEK,G_FS_SEEK230,9179
	BOTLIB_SETUP = 200,				// ( void );BOTLIB_SETUP232,9192
	BOTLIB_SHUTDOWN,				// ( void );BOTLIB_SHUTDOWN233,9229
	BOTLIB_LIBVAR_SET,BOTLIB_LIBVAR_SET234,9263
	BOTLIB_LIBVAR_GET,BOTLIB_LIBVAR_GET235,9283
	BOTLIB_PC_ADD_GLOBAL_DEFINE,BOTLIB_PC_ADD_GLOBAL_DEFINE236,9303
	BOTLIB_START_FRAME,BOTLIB_START_FRAME237,9333
	BOTLIB_LOAD_MAP,BOTLIB_LOAD_MAP238,9354
	BOTLIB_UPDATENTITY,BOTLIB_UPDATENTITY239,9372
	BOTLIB_TEST,BOTLIB_TEST240,9393
	BOTLIB_GET_SNAPSHOT_ENTITY,		// ( int client, int ent );BOTLIB_GET_SNAPSHOT_ENTITY242,9408
	BOTLIB_GET_CONSOLE_MESSAGE,		// ( int client, char *message, int size );BOTLIB_GET_CONSOLE_MESSAGE243,9466
	BOTLIB_USER_COMMAND,			// ( int client, usercmd_t *ucmd );BOTLIB_USER_COMMAND244,9540
	BOTLIB_AAS_ENABLE_ROUTING_AREA = 300,BOTLIB_AAS_ENABLE_ROUTING_AREA246,9601
	BOTLIB_AAS_BBOX_AREAS,BOTLIB_AAS_BBOX_AREAS247,9640
	BOTLIB_AAS_AREA_INFO,BOTLIB_AAS_AREA_INFO248,9664
	BOTLIB_AAS_ENTITY_INFO,BOTLIB_AAS_ENTITY_INFO249,9687
	BOTLIB_AAS_INITIALIZED,BOTLIB_AAS_INITIALIZED251,9713
	BOTLIB_AAS_PRESENCE_TYPE_BOUNDING_BOX,BOTLIB_AAS_PRESENCE_TYPE_BOUNDING_BOX252,9738
	BOTLIB_AAS_TIME,BOTLIB_AAS_TIME253,9778
	BOTLIB_AAS_POINT_AREA_NUM,BOTLIB_AAS_POINT_AREA_NUM255,9797
	BOTLIB_AAS_TRACE_AREAS,BOTLIB_AAS_TRACE_AREAS256,9825
	BOTLIB_AAS_POINT_CONTENTS,BOTLIB_AAS_POINT_CONTENTS258,9851
	BOTLIB_AAS_NEXT_BSP_ENTITY,BOTLIB_AAS_NEXT_BSP_ENTITY259,9879
	BOTLIB_AAS_VALUE_FOR_BSP_EPAIR_KEY,BOTLIB_AAS_VALUE_FOR_BSP_EPAIR_KEY260,9908
	BOTLIB_AAS_VECTOR_FOR_BSP_EPAIR_KEY,BOTLIB_AAS_VECTOR_FOR_BSP_EPAIR_KEY261,9945
	BOTLIB_AAS_FLOAT_FOR_BSP_EPAIR_KEY,BOTLIB_AAS_FLOAT_FOR_BSP_EPAIR_KEY262,9983
	BOTLIB_AAS_INT_FOR_BSP_EPAIR_KEY,BOTLIB_AAS_INT_FOR_BSP_EPAIR_KEY263,10020
	BOTLIB_AAS_AREA_REACHABILITY,BOTLIB_AAS_AREA_REACHABILITY265,10056
	BOTLIB_AAS_AREA_TRAVEL_TIME_TO_GOAL_AREA,BOTLIB_AAS_AREA_TRAVEL_TIME_TO_GOAL_AREA267,10088
	BOTLIB_AAS_SWIMMING,BOTLIB_AAS_SWIMMING269,10132
	BOTLIB_AAS_PREDICT_CLIENT_MOVEMENT,BOTLIB_AAS_PREDICT_CLIENT_MOVEMENT270,10154
	BOTLIB_EA_SAY = 400,BOTLIB_EA_SAY272,10192
	BOTLIB_EA_SAY_TEAM,BOTLIB_EA_SAY_TEAM273,10214
	BOTLIB_EA_COMMAND,BOTLIB_EA_COMMAND274,10235
	BOTLIB_EA_ACTION,BOTLIB_EA_ACTION276,10256
	BOTLIB_EA_GESTURE,BOTLIB_EA_GESTURE277,10275
	BOTLIB_EA_TALK,BOTLIB_EA_TALK278,10295
	BOTLIB_EA_ATTACK,BOTLIB_EA_ATTACK279,10312
	BOTLIB_EA_USE,BOTLIB_EA_USE280,10331
	BOTLIB_EA_RESPAWN,BOTLIB_EA_RESPAWN281,10347
	BOTLIB_EA_CROUCH,BOTLIB_EA_CROUCH282,10367
	BOTLIB_EA_MOVE_UP,BOTLIB_EA_MOVE_UP283,10386
	BOTLIB_EA_MOVE_DOWN,BOTLIB_EA_MOVE_DOWN284,10406
	BOTLIB_EA_MOVE_FORWARD,BOTLIB_EA_MOVE_FORWARD285,10428
	BOTLIB_EA_MOVE_BACK,BOTLIB_EA_MOVE_BACK286,10453
	BOTLIB_EA_MOVE_LEFT,BOTLIB_EA_MOVE_LEFT287,10475
	BOTLIB_EA_MOVE_RIGHT,BOTLIB_EA_MOVE_RIGHT288,10497
	BOTLIB_EA_SELECT_WEAPON,BOTLIB_EA_SELECT_WEAPON290,10521
	BOTLIB_EA_JUMP,BOTLIB_EA_JUMP291,10547
	BOTLIB_EA_DELAYED_JUMP,BOTLIB_EA_DELAYED_JUMP292,10564
	BOTLIB_EA_MOVE,BOTLIB_EA_MOVE293,10589
	BOTLIB_EA_VIEW,BOTLIB_EA_VIEW294,10606
	BOTLIB_EA_END_REGULAR,BOTLIB_EA_END_REGULAR296,10624
	BOTLIB_EA_GET_INPUT,BOTLIB_EA_GET_INPUT297,10648
	BOTLIB_EA_RESET_INPUT,BOTLIB_EA_RESET_INPUT298,10670
	BOTLIB_AI_LOAD_CHARACTER = 500,BOTLIB_AI_LOAD_CHARACTER301,10696
	BOTLIB_AI_FREE_CHARACTER,BOTLIB_AI_FREE_CHARACTER302,10729
	BOTLIB_AI_CHARACTERISTIC_FLOAT,BOTLIB_AI_CHARACTERISTIC_FLOAT303,10756
	BOTLIB_AI_CHARACTERISTIC_BFLOAT,BOTLIB_AI_CHARACTERISTIC_BFLOAT304,10789
	BOTLIB_AI_CHARACTERISTIC_INTEGER,BOTLIB_AI_CHARACTERISTIC_INTEGER305,10823
	BOTLIB_AI_CHARACTERISTIC_BINTEGER,BOTLIB_AI_CHARACTERISTIC_BINTEGER306,10858
	BOTLIB_AI_CHARACTERISTIC_STRING,BOTLIB_AI_CHARACTERISTIC_STRING307,10894
	BOTLIB_AI_ALLOC_CHAT_STATE,BOTLIB_AI_ALLOC_CHAT_STATE309,10929
	BOTLIB_AI_FREE_CHAT_STATE,BOTLIB_AI_FREE_CHAT_STATE310,10958
	BOTLIB_AI_QUEUE_CONSOLE_MESSAGE,BOTLIB_AI_QUEUE_CONSOLE_MESSAGE311,10986
	BOTLIB_AI_REMOVE_CONSOLE_MESSAGE,BOTLIB_AI_REMOVE_CONSOLE_MESSAGE312,11020
	BOTLIB_AI_NEXT_CONSOLE_MESSAGE,BOTLIB_AI_NEXT_CONSOLE_MESSAGE313,11055
	BOTLIB_AI_NUM_CONSOLE_MESSAGE,BOTLIB_AI_NUM_CONSOLE_MESSAGE314,11088
	BOTLIB_AI_INITIAL_CHAT,BOTLIB_AI_INITIAL_CHAT315,11120
	BOTLIB_AI_REPLY_CHAT,BOTLIB_AI_REPLY_CHAT316,11145
	BOTLIB_AI_CHAT_LENGTH,BOTLIB_AI_CHAT_LENGTH317,11168
	BOTLIB_AI_ENTER_CHAT,BOTLIB_AI_ENTER_CHAT318,11192
	BOTLIB_AI_STRING_CONTAINS,BOTLIB_AI_STRING_CONTAINS319,11215
	BOTLIB_AI_FIND_MATCH,BOTLIB_AI_FIND_MATCH320,11243
	BOTLIB_AI_MATCH_VARIABLE,BOTLIB_AI_MATCH_VARIABLE321,11266
	BOTLIB_AI_UNIFY_WHITE_SPACES,BOTLIB_AI_UNIFY_WHITE_SPACES322,11293
	BOTLIB_AI_REPLACE_SYNONYMS,BOTLIB_AI_REPLACE_SYNONYMS323,11324
	BOTLIB_AI_LOAD_CHAT_FILE,BOTLIB_AI_LOAD_CHAT_FILE324,11353
	BOTLIB_AI_SET_CHAT_GENDER,BOTLIB_AI_SET_CHAT_GENDER325,11380
	BOTLIB_AI_SET_CHAT_NAME,BOTLIB_AI_SET_CHAT_NAME326,11408
	BOTLIB_AI_RESET_GOAL_STATE,BOTLIB_AI_RESET_GOAL_STATE328,11435
	BOTLIB_AI_RESET_AVOID_GOALS,BOTLIB_AI_RESET_AVOID_GOALS329,11464
	BOTLIB_AI_PUSH_GOAL,BOTLIB_AI_PUSH_GOAL330,11494
	BOTLIB_AI_POP_GOAL,BOTLIB_AI_POP_GOAL331,11516
	BOTLIB_AI_EMPTY_GOAL_STACK,BOTLIB_AI_EMPTY_GOAL_STACK332,11537
	BOTLIB_AI_DUMP_AVOID_GOALS,BOTLIB_AI_DUMP_AVOID_GOALS333,11566
	BOTLIB_AI_DUMP_GOAL_STACK,BOTLIB_AI_DUMP_GOAL_STACK334,11595
	BOTLIB_AI_GOAL_NAME,BOTLIB_AI_GOAL_NAME335,11623
	BOTLIB_AI_GET_TOP_GOAL,BOTLIB_AI_GET_TOP_GOAL336,11645
	BOTLIB_AI_GET_SECOND_GOAL,BOTLIB_AI_GET_SECOND_GOAL337,11670
	BOTLIB_AI_CHOOSE_LTG_ITEM,BOTLIB_AI_CHOOSE_LTG_ITEM338,11698
	BOTLIB_AI_CHOOSE_NBG_ITEM,BOTLIB_AI_CHOOSE_NBG_ITEM339,11726
	BOTLIB_AI_TOUCHING_GOAL,BOTLIB_AI_TOUCHING_GOAL340,11754
	BOTLIB_AI_ITEM_GOAL_IN_VIS_BUT_NOT_VISIBLE,BOTLIB_AI_ITEM_GOAL_IN_VIS_BUT_NOT_VISIBLE341,11780
	BOTLIB_AI_GET_LEVEL_ITEM_GOAL,BOTLIB_AI_GET_LEVEL_ITEM_GOAL342,11825
	BOTLIB_AI_AVOID_GOAL_TIME,BOTLIB_AI_AVOID_GOAL_TIME343,11857
	BOTLIB_AI_INIT_LEVEL_ITEMS,BOTLIB_AI_INIT_LEVEL_ITEMS344,11885
	BOTLIB_AI_UPDATE_ENTITY_ITEMS,BOTLIB_AI_UPDATE_ENTITY_ITEMS345,11914
	BOTLIB_AI_LOAD_ITEM_WEIGHTS,BOTLIB_AI_LOAD_ITEM_WEIGHTS346,11946
	BOTLIB_AI_FREE_ITEM_WEIGHTS,BOTLIB_AI_FREE_ITEM_WEIGHTS347,11976
	BOTLIB_AI_SAVE_GOAL_FUZZY_LOGIC,BOTLIB_AI_SAVE_GOAL_FUZZY_LOGIC348,12006
	BOTLIB_AI_ALLOC_GOAL_STATE,BOTLIB_AI_ALLOC_GOAL_STATE349,12040
	BOTLIB_AI_FREE_GOAL_STATE,BOTLIB_AI_FREE_GOAL_STATE350,12069
	BOTLIB_AI_RESET_MOVE_STATE,BOTLIB_AI_RESET_MOVE_STATE352,12098
	BOTLIB_AI_MOVE_TO_GOAL,BOTLIB_AI_MOVE_TO_GOAL353,12127
	BOTLIB_AI_MOVE_IN_DIRECTION,BOTLIB_AI_MOVE_IN_DIRECTION354,12152
	BOTLIB_AI_RESET_AVOID_REACH,BOTLIB_AI_RESET_AVOID_REACH355,12182
	BOTLIB_AI_RESET_LAST_AVOID_REACH,BOTLIB_AI_RESET_LAST_AVOID_REACH356,12212
	BOTLIB_AI_REACHABILITY_AREA,BOTLIB_AI_REACHABILITY_AREA357,12247
	BOTLIB_AI_MOVEMENT_VIEW_TARGET,BOTLIB_AI_MOVEMENT_VIEW_TARGET358,12277
	BOTLIB_AI_ALLOC_MOVE_STATE,BOTLIB_AI_ALLOC_MOVE_STATE359,12310
	BOTLIB_AI_FREE_MOVE_STATE,BOTLIB_AI_FREE_MOVE_STATE360,12339
	BOTLIB_AI_INIT_MOVE_STATE,BOTLIB_AI_INIT_MOVE_STATE361,12367
	BOTLIB_AI_CHOOSE_BEST_FIGHT_WEAPON,BOTLIB_AI_CHOOSE_BEST_FIGHT_WEAPON363,12396
	BOTLIB_AI_GET_WEAPON_INFO,BOTLIB_AI_GET_WEAPON_INFO364,12433
	BOTLIB_AI_LOAD_WEAPON_WEIGHTS,BOTLIB_AI_LOAD_WEAPON_WEIGHTS365,12461
	BOTLIB_AI_ALLOC_WEAPON_STATE,BOTLIB_AI_ALLOC_WEAPON_STATE366,12493
	BOTLIB_AI_FREE_WEAPON_STATE,BOTLIB_AI_FREE_WEAPON_STATE367,12524
	BOTLIB_AI_RESET_WEAPON_STATE,BOTLIB_AI_RESET_WEAPON_STATE368,12554
	BOTLIB_AI_GENETIC_PARENTS_AND_CHILD_SELECTION,BOTLIB_AI_GENETIC_PARENTS_AND_CHILD_SELECTION370,12586
	BOTLIB_AI_INTERBREED_GOAL_FUZZY_LOGIC,BOTLIB_AI_INTERBREED_GOAL_FUZZY_LOGIC371,12634
	BOTLIB_AI_MUTATE_GOAL_FUZZY_LOGIC,BOTLIB_AI_MUTATE_GOAL_FUZZY_LOGIC372,12674
	BOTLIB_AI_GET_NEXT_CAMP_SPOT_GOAL,BOTLIB_AI_GET_NEXT_CAMP_SPOT_GOAL373,12710
	BOTLIB_AI_GET_MAP_LOCATION_GOAL,BOTLIB_AI_GET_MAP_LOCATION_GOAL374,12746
	BOTLIB_AI_NUM_INITIAL_CHATS,BOTLIB_AI_NUM_INITIAL_CHATS375,12780
	BOTLIB_AI_GET_CHAT_MESSAGE,BOTLIB_AI_GET_CHAT_MESSAGE376,12810
	BOTLIB_AI_REMOVE_FROM_AVOID_GOALS,BOTLIB_AI_REMOVE_FROM_AVOID_GOALS377,12839
	BOTLIB_AI_PREDICT_VISIBLE_POSITION,BOTLIB_AI_PREDICT_VISIBLE_POSITION378,12875
	BOTLIB_AI_SET_AVOID_GOAL_TIME,BOTLIB_AI_SET_AVOID_GOAL_TIME380,12913
	BOTLIB_AI_ADD_AVOID_SPOT,BOTLIB_AI_ADD_AVOID_SPOT381,12945
	BOTLIB_AAS_ALTERNATIVE_ROUTE_GOAL,BOTLIB_AAS_ALTERNATIVE_ROUTE_GOAL382,12972
	BOTLIB_AAS_PREDICT_ROUTE,BOTLIB_AAS_PREDICT_ROUTE383,13008
	BOTLIB_AAS_POINT_REACHABILITY_AREA_INDEX,BOTLIB_AAS_POINT_REACHABILITY_AREA_INDEX384,13035
	BOTLIB_PC_LOAD_SOURCE,BOTLIB_PC_LOAD_SOURCE386,13079
	BOTLIB_PC_FREE_SOURCE,BOTLIB_PC_FREE_SOURCE387,13103
	BOTLIB_PC_READ_TOKEN,BOTLIB_PC_READ_TOKEN388,13127
	BOTLIB_PC_SOURCE_FILE_AND_LINEBOTLIB_PC_SOURCE_FILE_AND_LINE389,13150
} gameImport_t;gameImport_t391,13183
	GAME_INIT,	// ( int levelTime, int randomSeed, int restart );GAME_INIT398,13266
	GAME_SHUTDOWN,	// (void);GAME_SHUTDOWN403,13506
	GAME_CLIENT_CONNECT,	// ( int clientNum, qboolean firstTime, qboolean isBot );GAME_CLIENT_CONNECT405,13534
	GAME_CLIENT_BEGIN,				// ( int clientNum );GAME_CLIENT_BEGIN409,13730
	GAME_CLIENT_USERINFO_CHANGED,	// ( int clientNum );GAME_CLIENT_USERINFO_CHANGED411,13776
	GAME_CLIENT_DISCONNECT,			// ( int clientNum );GAME_CLIENT_DISCONNECT413,13830
	GAME_CLIENT_COMMAND,			// ( int clientNum );GAME_CLIENT_COMMAND415,13880
	GAME_CLIENT_THINK,				// ( int clientNum );GAME_CLIENT_THINK417,13927
	GAME_RUN_FRAME,					// ( int levelTime );GAME_RUN_FRAME419,13973
	GAME_CONSOLE_COMMAND,			// ( void );GAME_CONSOLE_COMMAND421,14017
	BOTAI_START_FRAME				// ( int time );BOTAI_START_FRAME427,14330
} gameExport_t;gameExport_t428,14369

game/g_syscalls.c,17703
static intptr_t (QDECL *syscall)( intptr_t arg, ... ) = (intptr_t (QDECL *)( intptr_t, ...))-1;syscall31,1160
void dllEntry( intptr_t (QDECL *syscallptr)( intptr_t arg,... ) ) {intptr_t34,1258
int PASSFLOAT( float x ) {PASSFLOAT38,1352
void	trap_Printf( const char *fmt ) {trap_Printf44,1423
void	trap_Error( const char *fmt ) {trap_Error48,1490
int		trap_Milliseconds( void ) {trap_Milliseconds52,1556
int		trap_Argc( void ) {trap_Argc55,1627
void	trap_Argv( int n, char *buffer, int bufferLength ) {trap_Argv59,1682
int		trap_FS_FOpenFile( const char *qpath, fileHandle_t *f, fsMode_t mode ) {trap_FS_FOpenFile63,1788
void	trap_FS_Read( void *buffer, int len, fileHandle_t f ) {trap_FS_Read67,1921
void	trap_FS_Write( const void *buffer, int len, fileHandle_t f ) {trap_FS_Write71,2024
void	trap_FS_FCloseFile( fileHandle_t f ) {trap_FS_FCloseFile75,2135
int trap_FS_GetFileList(  const char *path, const char *extension, char *listbuf, int bufsize ) {trap_FS_GetFileList79,2215
int trap_FS_Seek( fileHandle_t f, long offset, int origin ) {trap_FS_Seek83,2388
void	trap_SendConsoleCommand( int exec_when, const char *text ) {trap_SendConsoleCommand87,2502
void	trap_Cvar_Register( vmCvar_t *cvar, const char *var_name, const char *value, int flags ) {trap_Cvar_Register91,2624
void	trap_Cvar_Update( vmCvar_t *cvar ) {trap_Cvar_Update95,2782
void trap_Cvar_Set( const char *var_name, const char *value ) {trap_Cvar_Set99,2860
int trap_Cvar_VariableIntegerValue( const char *var_name ) {trap_Cvar_VariableIntegerValue103,2968
void trap_Cvar_VariableStringBuffer( const char *var_name, char *buffer, int bufsize ) {trap_Cvar_VariableStringBuffer107,3092
void trap_LocateGameData( gentity_t *gEnts, int numGEntities, int sizeofGEntity_t,trap_LocateGameData112,3255
void trap_DropClient( int clientNum, const char *reason ) {trap_DropClient117,3488
void trap_SendServerCommand( int clientNum, const char *text ) {trap_SendServerCommand121,3597
void trap_SetConfigstring( int num, const char *string ) {trap_SetConfigstring125,3717
void trap_GetConfigstring( int num, char *buffer, int bufferSize ) {trap_GetConfigstring129,3824
void trap_GetUserinfo( int num, char *buffer, int bufferSize ) {trap_GetUserinfo133,3953
void trap_SetUserinfo( int num, const char *buffer ) {trap_SetUserinfo137,4074
void trap_GetServerinfo( char *buffer, int bufferSize ) {trap_GetServerinfo141,4173
void trap_SetBrushModel( gentity_t *ent, const char *name ) {trap_SetBrushModel145,4284
void trap_Trace( trace_t *results, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end, int passEntityNum, int contentmask ) {trap_Trace149,4391
void trap_TraceCapsule( trace_t *results, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end, int passEntityNum, int contentmask ) {trap_TraceCapsule153,4626
int trap_PointContents( const vec3_t point, int passEntityNum ) {trap_PointContents157,4875
qboolean trap_InPVS( const vec3_t p1, const vec3_t p2 ) {trap_InPVS162,5004
qboolean trap_InPVSIgnorePortals( const vec3_t p1, const vec3_t p2 ) {trap_InPVSIgnorePortals166,5102
void trap_AdjustAreaPortalState( gentity_t *ent, qboolean open ) {trap_AdjustAreaPortalState170,5228
qboolean trap_AreasConnected( int area1, int area2 ) {trap_AreasConnected174,5349
void trap_LinkEntity( gentity_t *ent ) {trap_LinkEntity178,5459
void trap_UnlinkEntity( gentity_t *ent ) {trap_UnlinkEntity182,5534
int trap_EntitiesInBox( const vec3_t mins, const vec3_t maxs, int *list, int maxcount ) {trap_EntitiesInBox186,5613
qboolean trap_EntityContact( const vec3_t mins, const vec3_t maxs, const gentity_t *ent ) {trap_EntityContact190,5772
qboolean trap_EntityContactCapsule( const vec3_t mins, const vec3_t maxs, const gentity_t *ent ) {trap_EntityContactCapsule194,5921
int trap_BotAllocateClient( void ) {trap_BotAllocateClient198,6084
void trap_BotFreeClient( int clientNum ) {trap_BotFreeClient202,6166
void trap_GetUsercmd( int clientNum, usercmd_t *cmd ) {trap_GetUsercmd206,6254
qboolean trap_GetEntityToken( char *buffer, int bufferSize ) {trap_GetEntityToken210,6356
int trap_DebugPolygonCreate(int color, int numPoints, vec3_t *points) {trap_DebugPolygonCreate214,6481
void trap_DebugPolygonDelete(int id) {trap_DebugPolygonDelete218,6625
int trap_RealTime( qtime_t *qtime ) {trap_RealTime222,6707
void trap_SnapVector( float *v ) {trap_SnapVector226,6787
int trap_BotLibSetup( void ) {trap_BotLibSetup232,6890
int trap_BotLibShutdown( void ) {trap_BotLibShutdown236,6957
int trap_BotLibVarSet(char *var_name, char *value) {trap_BotLibVarSet240,7030
int trap_BotLibVarGet(char *var_name, char *value, int size) {trap_BotLibVarGet244,7141
int trap_BotLibDefine(char *string) {trap_BotLibDefine248,7268
int trap_BotLibStartFrame(float time) {trap_BotLibStartFrame252,7365
int trap_BotLibLoadMap(const char *mapname) {trap_BotLibLoadMap256,7466
int trap_BotLibUpdateEntity(int ent, void /* struct bot_updateentity_s */ *bue) {trap_BotLibUpdateEntity260,7560
int trap_BotLibTest(int parm0, char *parm1, vec3_t parm2, vec3_t parm3) {trap_BotLibTest264,7694
int trap_BotGetSnapshotEntity( int clientNum, int sequence ) {trap_BotGetSnapshotEntity268,7831
int trap_BotGetServerCommand(int clientNum, char *message, int size) {trap_BotGetServerCommand272,7965
void trap_BotUserCommand(int clientNum, usercmd_t *ucmd) {trap_BotUserCommand276,8112
void trap_AAS_EntityInfo(int entnum, void /* struct aas_entityinfo_s */ *info) {trap_AAS_EntityInfo280,8224
int trap_AAS_Initialized(void) {trap_AAS_Initialized284,8358
void trap_AAS_PresenceTypeBoundingBox(int presencetype, vec3_t mins, vec3_t maxs) {trap_AAS_PresenceTypeBoundingBox288,8437
float trap_AAS_Time(void) {trap_AAS_Time292,8601
int trap_AAS_PointAreaNum(vec3_t point) {trap_AAS_PointAreaNum298,8698
int trap_AAS_PointReachabilityAreaIndex(vec3_t point) {trap_AAS_PointReachabilityAreaIndex302,8796
int trap_AAS_TraceAreas(vec3_t start, vec3_t end, int *areas, vec3_t *points, int maxareas) {trap_AAS_TraceAreas306,8923
int trap_AAS_BBoxAreas(vec3_t absmins, vec3_t absmaxs, int *areas, int maxareas) {trap_AAS_BBoxAreas310,9100
int trap_AAS_AreaInfo( int areanum, void /* struct aas_areainfo_s */ *info ) {trap_AAS_AreaInfo314,9263
int trap_AAS_PointContents(vec3_t point) {trap_AAS_PointContents318,9401
int trap_AAS_NextBSPEntity(int ent) {trap_AAS_NextBSPEntity322,9500
int trap_AAS_ValueForBSPEpairKey(int ent, char *key, char *value, int size) {trap_AAS_ValueForBSPEpairKey326,9593
int trap_AAS_VectorForBSPEpairKey(int ent, char *key, vec3_t v) {trap_AAS_VectorForBSPEpairKey330,9752
int trap_AAS_FloatForBSPEpairKey(int ent, char *key, float *value) {trap_AAS_FloatForBSPEpairKey334,9890
int trap_AAS_IntForBSPEpairKey(int ent, char *key, int *value) {trap_AAS_IntForBSPEpairKey338,10034
int trap_AAS_AreaReachability(int areanum) {trap_AAS_AreaReachability342,10172
int trap_AAS_AreaTravelTimeToGoalArea(int areanum, vec3_t origin, int goalareanum, int travelflags) {trap_AAS_AreaTravelTimeToGoalArea346,10278
int trap_AAS_EnableRoutingArea( int areanum, int enable ) {trap_AAS_EnableRoutingArea350,10487
int trap_AAS_PredictRoute(void /*struct aas_predictroute_s*/ *route, int areanum, vec3_t origin,trap_AAS_PredictRoute354,10618
int trap_AAS_AlternativeRouteGoals(vec3_t start, int startareanum, vec3_t goal, int goalareanum, int travelflags,trap_AAS_AlternativeRouteGoals360,11019
int trap_AAS_Swimming(vec3_t origin) {trap_AAS_Swimming366,11387
int trap_AAS_PredictClientMovement(void /* struct aas_clientmove_s */ *move, int entnum, vec3_t origin, int presencetype, int onground, vec3_t velocity, vec3_t cmdmove, int cmdframes, int maxframes, float frametime, int stopevent, int stopareanum, int visualize) {trap_AAS_PredictClientMovement370,11477
void trap_EA_Say(int client, char *str) {trap_EA_Say374,11944
void trap_EA_SayTeam(int client, char *str) {trap_EA_SayTeam378,12029
void trap_EA_Command(int client, char *command) {trap_EA_Command382,12123
void trap_EA_Action(int client, int action) {trap_EA_Action386,12224
void trap_EA_Gesture(int client) {trap_EA_Gesture390,12319
void trap_EA_Talk(int client) {trap_EA_Talk394,12396
void trap_EA_Attack(int client) {trap_EA_Attack398,12467
void trap_EA_Use(int client) {trap_EA_Use402,12542
void trap_EA_Respawn(int client) {trap_EA_Respawn406,12611
void trap_EA_Crouch(int client) {trap_EA_Crouch410,12688
void trap_EA_MoveUp(int client) {trap_EA_MoveUp414,12763
void trap_EA_MoveDown(int client) {trap_EA_MoveDown418,12839
void trap_EA_MoveForward(int client) {trap_EA_MoveForward422,12919
void trap_EA_MoveBack(int client) {trap_EA_MoveBack426,13005
void trap_EA_MoveLeft(int client) {trap_EA_MoveLeft430,13085
void trap_EA_MoveRight(int client) {trap_EA_MoveRight434,13165
void trap_EA_SelectWeapon(int client, int weapon) {trap_EA_SelectWeapon438,13247
void trap_EA_Jump(int client) {trap_EA_Jump442,13355
void trap_EA_DelayedJump(int client) {trap_EA_DelayedJump446,13426
void trap_EA_Move(int client, vec3_t dir, float speed) {trap_EA_Move450,13512
void trap_EA_View(int client, vec3_t viewangles) {trap_EA_View454,13631
void trap_EA_EndRegular(int client, float thinktime) {trap_EA_EndRegular458,13733
void trap_EA_GetInput(int client, float thinktime, void /* struct bot_input_s */ *input) {trap_EA_GetInput462,13856
void trap_EA_ResetInput(int client) {trap_EA_ResetInput466,14020
int trap_BotLoadCharacter(char *charfile, float skill) {trap_BotLoadCharacter470,14104
void trap_BotFreeCharacter(int character) {trap_BotFreeCharacter474,14236
float trap_Characteristic_Float(int character, int index) {trap_Characteristic_Float478,14332
float trap_Characteristic_BFloat(int character, int index, float min, float max) {trap_Characteristic_BFloat484,14494
int trap_Characteristic_Integer(int character, int index) {trap_Characteristic_Integer490,14712
int trap_Characteristic_BInteger(int character, int index, int min, int max) {trap_Characteristic_BInteger494,14846
void trap_Characteristic_String(int character, int index, char *buf, int size) {trap_Characteristic_String498,15010
int trap_BotAllocChatState(void) {trap_BotAllocChatState502,15168
void trap_BotFreeChatState(int handle) {trap_BotFreeChatState506,15253
void trap_BotQueueConsoleMessage(int chatstate, int type, char *message) {trap_BotQueueConsoleMessage510,15344
void trap_BotRemoveConsoleMessage(int chatstate, int handle) {trap_BotRemoveConsoleMessage514,15493
int trap_BotNextConsoleMessage(int chatstate, void /* struct bot_consolemessage_s */ *cm) {trap_BotNextConsoleMessage518,15624
int trap_BotNumConsoleMessages(int chatstate) {trap_BotNumConsoleMessages522,15785
void trap_BotInitialChat(int chatstate, char *type, int mcontext, char *var0, char *var1, char *var2, char *var3, char *var4, char *var5, char *var6, char *var7 ) {trap_BotInitialChat526,15897
int	trap_BotNumInitialChats(int chatstate, char *type) {trap_BotNumInitialChats530,16176
int trap_BotReplyChat(int chatstate, char *message, int mcontext, int vcontext, char *var0, char *var1, char *var2, char *var3, char *var4, char *var5, char *var6, char *var7 ) {trap_BotReplyChat534,16301
int trap_BotChatLength(int chatstate) {trap_BotChatLength538,16612
void trap_BotEnterChat(int chatstate, int client, int sendto) {trap_BotEnterChat542,16708
void trap_BotGetChatMessage(int chatstate, char *buf, int size) {trap_BotGetChatMessage546,16836
int trap_StringContains(char *str1, char *str2, int casesensitive) {trap_StringContains550,16966
int trap_BotFindMatch(char *str, void /* struct bot_match_s */ *match, unsigned long int context) {trap_BotFindMatch554,17111
void trap_BotMatchVariable(void /* struct bot_match_s */ *match, int variable, char *buf, int size) {trap_BotMatchVariable558,17276
void trap_UnifyWhiteSpaces(char *string) {trap_UnifyWhiteSpaces562,17447
void trap_BotReplaceSynonyms(char *string, unsigned long int context) {trap_BotReplaceSynonyms566,17543
int trap_BotLoadChatFile(int chatstate, char *chatfile, char *chatname) {trap_BotLoadChatFile570,17675
void trap_BotSetChatGender(int chatstate, int gender) {trap_BotSetChatGender574,17828
void trap_BotSetChatName(int chatstate, char *name, int client) {trap_BotSetChatName578,17945
void trap_BotResetGoalState(int goalstate) {trap_BotResetGoalState582,18076
void trap_BotResetAvoidGoals(int goalstate) {trap_BotResetAvoidGoals586,18175
void trap_BotRemoveFromAvoidGoals(int goalstate, int number) {trap_BotRemoveFromAvoidGoals590,18276
void trap_BotPushGoal(int goalstate, void /* struct bot_goal_s */ *goal) {trap_BotPushGoal594,18407
void trap_BotPopGoal(int goalstate) {trap_BotPopGoal598,18535
void trap_BotEmptyGoalStack(int goalstate) {trap_BotEmptyGoalStack602,18619
void trap_BotDumpAvoidGoals(int goalstate) {trap_BotDumpAvoidGoals606,18718
void trap_BotDumpGoalStack(int goalstate) {trap_BotDumpGoalStack610,18817
void trap_BotGoalName(int number, char *name, int size) {trap_BotGoalName614,18914
int trap_BotGetTopGoal(int goalstate, void /* struct bot_goal_s */ *goal) {trap_BotGetTopGoal618,19028
int trap_BotGetSecondGoal(int goalstate, void /* struct bot_goal_s */ *goal) {trap_BotGetSecondGoal622,19167
int trap_BotChooseLTGItem(int goalstate, vec3_t origin, int *inventory, int travelflags) {trap_BotChooseLTGItem626,19312
int trap_BotChooseNBGItem(int goalstate, vec3_t origin, int *inventory, int travelflags, void /* struct bot_goal_s */ *ltg, float maxtime) {trap_BotChooseNBGItem630,19495
int trap_BotTouchingGoal(vec3_t origin, void /* struct bot_goal_s */ *goal) {trap_BotTouchingGoal634,19753
int trap_BotItemGoalInVisButNotVisible(int viewer, vec3_t eye, vec3_t viewangles, void /* struct bot_goal_s */ *goal) {trap_BotItemGoalInVisButNotVisible638,19892
int trap_BotGetLevelItemGoal(int index, char *classname, void /* struct bot_goal_s */ *goal) {trap_BotGetLevelItemGoal642,20109
int trap_BotGetNextCampSpotGoal(int num, void /* struct bot_goal_s */ *goal) {trap_BotGetNextCampSpotGoal646,20281
int trap_BotGetMapLocationGoal(char *name, void /* struct bot_goal_s */ *goal) {trap_BotGetMapLocationGoal650,20428
float trap_BotAvoidGoalTime(int goalstate, int number) {trap_BotAvoidGoalTime654,20576
void trap_BotSetAvoidGoalTime(int goalstate, int number, float avoidtime) {trap_BotSetAvoidGoalTime660,20731
void trap_BotInitLevelItems(void) {trap_BotInitLevelItems664,20893
void trap_BotUpdateEntityItems(void) {trap_BotUpdateEntityItems668,20972
int trap_BotLoadItemWeights(int goalstate, char *filename) {trap_BotLoadItemWeights672,21057
void trap_BotFreeItemWeights(int goalstate) {trap_BotFreeItemWeights676,21190
void trap_BotInterbreedGoalFuzzyLogic(int parent1, int parent2, int child) {trap_BotInterbreedGoalFuzzyLogic680,21291
void trap_BotSaveGoalFuzzyLogic(int goalstate, char *filename) {trap_BotSaveGoalFuzzyLogic684,21447
void trap_BotMutateGoalFuzzyLogic(int goalstate, float range) {trap_BotMutateGoalFuzzyLogic688,21581
int trap_BotAllocGoalState(int state) {trap_BotAllocGoalState692,21713
void trap_BotFreeGoalState(int handle) {trap_BotFreeGoalState696,21810
void trap_BotResetMoveState(int movestate) {trap_BotResetMoveState700,21901
void trap_BotAddAvoidSpot(int movestate, vec3_t origin, float radius, int type) {trap_BotAddAvoidSpot704,22000
void trap_BotMoveToGoal(void /* struct bot_moveresult_s */ *result, int movestate, void /* struct bot_goal_s */ *goal, int travelflags) {trap_BotMoveToGoal708,22166
int trap_BotMoveInDirection(int movestate, vec3_t dir, float speed, int type) {trap_BotMoveInDirection712,22381
void trap_BotResetAvoidReach(int movestate) {trap_BotResetAvoidReach716,22552
void trap_BotResetLastAvoidReach(int movestate) {trap_BotResetLastAvoidReach720,22653
int trap_BotReachabilityArea(vec3_t origin, int testground) {trap_BotReachabilityArea724,22763
int trap_BotMovementViewTarget(int movestate, void /* struct bot_goal_s */ *goal, int travelflags, float lookahead, vec3_t target) {trap_BotMovementViewTarget728,22896
int trap_BotPredictVisiblePosition(vec3_t origin, int areanum, void /* struct bot_goal_s */ *goal, int travelflags, vec3_t target) {trap_BotPredictVisiblePosition732,23143
int trap_BotAllocMoveState(void) {trap_BotAllocMoveState736,23378
void trap_BotFreeMoveState(int handle) {trap_BotFreeMoveState740,23463
void trap_BotInitMoveState(int handle, void /* struct bot_initmove_s */ *initmove) {trap_BotInitMoveState744,23554
int trap_BotChooseBestFightWeapon(int weaponstate, int *inventory) {trap_BotChooseBestFightWeapon748,23699
void trap_BotGetWeaponInfo(int weaponstate, int weapon, void /* struct weaponinfo_s */ *weaponinfo) {trap_BotGetWeaponInfo752,23850
int trap_BotLoadWeaponWeights(int weaponstate, char *filename) {trap_BotLoadWeaponWeights756,24027
int trap_BotAllocWeaponState(void) {trap_BotAllocWeaponState760,24168
void trap_BotFreeWeaponState(int weaponstate) {trap_BotFreeWeaponState764,24257
void trap_BotResetWeaponState(int weaponstate) {trap_BotResetWeaponState768,24362
int trap_GeneticParentsAndChildSelection(int numranks, float *ranks, int *parent1, int *parent2, int *child) {trap_GeneticParentsAndChildSelection772,24469
int trap_PC_LoadSource( const char *filename ) {trap_PC_LoadSource776,24691
int trap_PC_FreeSource( int handle ) {trap_PC_FreeSource780,24795
int trap_PC_ReadToken( int handle, pc_token_t *pc_token ) {trap_PC_ReadToken784,24887
int trap_PC_SourceFileAndLine( int handle, char *filename, int *line ) {trap_PC_SourceFileAndLine788,25009

game/bg_misc.c,1509
gitem_t	bg_itemlist[] = bg_itemlist44,1955
int		bg_numItems = sizeof(bg_itemlist) / sizeof(bg_itemlist[0]) - 1;bg_numItems923,19904
gitem_t	*BG_FindItemForPowerup( powerup_t pw ) {BG_FindItemForPowerup931,20033
gitem_t	*BG_FindItemForHoldable( holdable_t pw ) {BG_FindItemForHoldable952,20425
gitem_t	*BG_FindItemForWeapon( weapon_t weapon ) {BG_FindItemForWeapon973,20769
gitem_t	*BG_FindItem( const char *pickupName ) {BG_FindItem992,21105
qboolean	BG_PlayerTouchesItem( playerState_t *ps, entityState_t *item, int atTime ) {BG_PlayerTouchesItem1011,21465
qboolean BG_CanItemBeGrabbed( int gametype, const entityState_t *ent, const playerState_t *ps ) {BG_CanItemBeGrabbed1039,22114
void BG_EvaluateTrajectory( const trajectory_t *tr, int atTime, vec3_t result ) {BG_EvaluateTrajectory1198,26084
void BG_EvaluateTrajectoryDelta( const trajectory_t *tr, int atTime, vec3_t result ) {BG_EvaluateTrajectoryDelta1244,27420
char *eventnames[] = {eventnames1280,28398
void BG_AddPredictableEventToPlayerstate( int newEvent, int eventParm, playerState_t *ps ) {BG_AddPredictableEventToPlayerstate1390,30580
void BG_TouchJumpPad( playerState_t *ps, entityState_t *jumppad ) {BG_TouchJumpPad1415,31389
void BG_PlayerStateToEntityState( playerState_t *ps, entityState_t *s, qboolean snap ) {BG_PlayerStateToEntityState1458,32487
void BG_PlayerStateToEntityStateExtraPolate( playerState_t *ps, entityState_t *s, int time, qboolean snap ) {BG_PlayerStateToEntityStateExtraPolate1534,34495

game/ai_dmnet.h,51
#define MAX_NODESWITCHES	MAX_NODESWITCHES33,1236

game/g_cmds.c,2865
void DeathmatchScoreboardMessage( gentity_t *ent ) {DeathmatchScoreboardMessage33,1128
void Cmd_Score_f( gentity_t *ent ) {Cmd_Score_f98,2816
qboolean	CheatsOk( gentity_t *ent ) {CheatsOk109,2948
char	*ConcatArgs( int start ) {ConcatArgs127,3357
void SanitizeString( char *in, char *out ) {SanitizeString161,3909
int ClientNumberFromString( gentity_t *to, char *s ) {ClientNumberFromString185,4283
void Cmd_Give_f (gentity_t *ent)Cmd_Give_f230,5367
void Cmd_God_f (gentity_t *ent)Cmd_God_f333,7351
void Cmd_Notarget_f( gentity_t *ent ) {Cmd_Notarget_f360,7729
void Cmd_Noclip_f( gentity_t *ent ) {Cmd_Noclip_f384,8088
void Cmd_LevelShot_f( gentity_t *ent ) {Cmd_LevelShot_f412,8663
void Cmd_TeamTask_f( gentity_t *ent ) {Cmd_TeamTask_f439,9292
void Cmd_Kill_f( gentity_t *ent ) {Cmd_Kill_f464,9790
void BroadcastTeamChange( gclient_t *client, int oldTeam )BroadcastTeamChange483,10175
void SetTeam( gentity_t *ent, char *s ) {SetTeam505,10989
void StopFollowing( gentity_t *ent ) {StopFollowing646,15069
void Cmd_Team_f( gentity_t *ent ) {Cmd_Team_f660,15444
void Cmd_Follow_f( gentity_t *ent ) {Cmd_Follow_f707,16564
void Cmd_FollowCycle_f( gentity_t *ent, int dir ) {Cmd_FollowCycle_f754,17550
static void G_SayTo( gentity_t *ent, gentity_t *other, int mode, int color, const char *name, const char *message ) {G_SayTo809,18785
#define EC	EC837,19493
void G_Say( gentity_t *ent, gentity_t *target, int mode, const char *chatText ) {G_Say839,19513
static void Cmd_Say_f( gentity_t *ent, int mode, qboolean arg0 ) {Cmd_Say_f905,21484
static void Cmd_Tell_f( gentity_t *ent ) {Cmd_Tell_f929,21777
static void G_VoiceTo( gentity_t *ent, gentity_t *other, int mode, const char *id, qboolean voiceonly ) {G_VoiceTo962,22550
void G_Voice( gentity_t *ent, gentity_t *target, int mode, const char *id, qboolean voiceonly ) {G_Voice999,23257
static void Cmd_Voice_f( gentity_t *ent, int mode, qboolean arg0, qboolean voiceonly ) {Cmd_Voice_f1029,23895
static void Cmd_VoiceTell_f( gentity_t *ent, qboolean voiceonly ) {Cmd_VoiceTell_f1053,24228
static void Cmd_VoiceTaunt_f( gentity_t *ent ) {Cmd_VoiceTaunt_f1091,25119
static char	*gc_orders[] = {gc_orders1160,27187
void Cmd_GameCommand_f( gentity_t *ent ) {Cmd_GameCommand_f1170,27345
void Cmd_Where_f( gentity_t *ent ) {Cmd_Where_f1195,27871
static const char *gameNames[] = {gameNames1199,28000
void Cmd_CallVote_f( gentity_t *ent ) {Cmd_CallVote_f1215,28232
void Cmd_Vote_f( gentity_t *ent ) {Cmd_Vote_f1328,32512
void Cmd_CallTeamVote_f( gentity_t *ent ) {Cmd_CallTeamVote_f1367,33542
void Cmd_TeamVote_f( gentity_t *ent ) {Cmd_TeamVote_f1494,37558
void Cmd_SetViewpos_f( gentity_t *ent ) {Cmd_SetViewpos_f1543,38893
void Cmd_Stats_f( gentity_t *ent ) {Cmd_Stats_f1576,39587
void ClientCommand( int clientNum ) {ClientCommand1598,40056

game/chars.h,3762
#define CHARACTERISTIC_NAME	CHARACTERISTIC_NAME26,1100
#define CHARACTERISTIC_GENDER	CHARACTERISTIC_GENDER28,1165
#define CHARACTERISTIC_ATTACK_SKILL	CHARACTERISTIC_ATTACK_SKILL35,1474
#define CHARACTERISTIC_WEAPONWEIGHTS	CHARACTERISTIC_WEAPONWEIGHTS37,1552
#define CHARACTERISTIC_VIEW_FACTOR	CHARACTERISTIC_VIEW_FACTOR39,1650
#define CHARACTERISTIC_VIEW_MAXCHANGE	CHARACTERISTIC_VIEW_MAXCHANGE41,1734
#define CHARACTERISTIC_REACTIONTIME	CHARACTERISTIC_REACTIONTIME43,1821
#define CHARACTERISTIC_AIM_ACCURACY	CHARACTERISTIC_AIM_ACCURACY45,1901
#define CHARACTERISTIC_AIM_ACCURACY_MACHINEGUN	CHARACTERISTIC_AIM_ACCURACY_MACHINEGUN47,1989
#define CHARACTERISTIC_AIM_ACCURACY_SHOTGUN	CHARACTERISTIC_AIM_ACCURACY_SHOTGUN48,2054
#define CHARACTERISTIC_AIM_ACCURACY_ROCKETLAUNCHER	CHARACTERISTIC_AIM_ACCURACY_ROCKETLAUNCHER49,2117
#define CHARACTERISTIC_AIM_ACCURACY_GRENADELAUNCHER	CHARACTERISTIC_AIM_ACCURACY_GRENADELAUNCHER50,2186
#define CHARACTERISTIC_AIM_ACCURACY_LIGHTNING	CHARACTERISTIC_AIM_ACCURACY_LIGHTNING51,2256
#define CHARACTERISTIC_AIM_ACCURACY_PLASMAGUN	CHARACTERISTIC_AIM_ACCURACY_PLASMAGUN52,2306
#define CHARACTERISTIC_AIM_ACCURACY_RAILGUN	CHARACTERISTIC_AIM_ACCURACY_RAILGUN53,2371
#define CHARACTERISTIC_AIM_ACCURACY_BFG10K	CHARACTERISTIC_AIM_ACCURACY_BFG10K54,2420
#define CHARACTERISTIC_AIM_SKILL	CHARACTERISTIC_AIM_SKILL61,2782
#define CHARACTERISTIC_AIM_SKILL_ROCKETLAUNCHER	CHARACTERISTIC_AIM_SKILL_ROCKETLAUNCHER63,2865
#define CHARACTERISTIC_AIM_SKILL_GRENADELAUNCHER	CHARACTERISTIC_AIM_SKILL_GRENADELAUNCHER64,2932
#define CHARACTERISTIC_AIM_SKILL_PLASMAGUN	CHARACTERISTIC_AIM_SKILL_PLASMAGUN65,2999
#define CHARACTERISTIC_AIM_SKILL_BFG10K	CHARACTERISTIC_AIM_SKILL_BFG10K66,3062
#define CHARACTERISTIC_CHAT_FILE	CHARACTERISTIC_CHAT_FILE71,3266
#define CHARACTERISTIC_CHAT_NAME	CHARACTERISTIC_CHAT_NAME73,3344
#define CHARACTERISTIC_CHAT_CPM	CHARACTERISTIC_CHAT_CPM75,3428
#define CHARACTERISTIC_CHAT_INSULT	CHARACTERISTIC_CHAT_INSULT77,3516
#define CHARACTERISTIC_CHAT_MISC	CHARACTERISTIC_CHAT_MISC79,3597
#define CHARACTERISTIC_CHAT_STARTENDLEVEL	CHARACTERISTIC_CHAT_STARTENDLEVEL81,3696
#define CHARACTERISTIC_CHAT_ENTEREXITGAME	CHARACTERISTIC_CHAT_ENTEREXITGAME83,3806
#define CHARACTERISTIC_CHAT_KILL	CHARACTERISTIC_CHAT_KILL85,3907
#define CHARACTERISTIC_CHAT_DEATH	CHARACTERISTIC_CHAT_DEATH87,3991
#define CHARACTERISTIC_CHAT_ENEMYSUICIDE	CHARACTERISTIC_CHAT_ENEMYSUICIDE89,4086
#define CHARACTERISTIC_CHAT_HITTALKING	CHARACTERISTIC_CHAT_HITTALKING91,4189
#define CHARACTERISTIC_CHAT_HITNODEATH	CHARACTERISTIC_CHAT_HITNODEATH93,4300
#define CHARACTERISTIC_CHAT_HITNOKILL	CHARACTERISTIC_CHAT_HITNOKILL95,4423
#define CHARACTERISTIC_CHAT_RANDOM	CHARACTERISTIC_CHAT_RANDOM97,4510
#define CHARACTERISTIC_CHAT_REPLY	CHARACTERISTIC_CHAT_REPLY99,4587
#define CHARACTERISTIC_CROUCHER	CHARACTERISTIC_CROUCHER104,4793
#define CHARACTERISTIC_JUMPER	CHARACTERISTIC_JUMPER106,4867
#define CHARACTERISTIC_WALKER	CHARACTERISTIC_WALKER108,4939
#define CHARACTERISTIC_WEAPONJUMPING	CHARACTERISTIC_WEAPONJUMPING110,5026
#define CHARACTERISTIC_GRAPPLE_USER	CHARACTERISTIC_GRAPPLE_USER112,5134
#define CHARACTERISTIC_ITEMWEIGHTS	CHARACTERISTIC_ITEMWEIGHTS117,5349
#define CHARACTERISTIC_AGGRESSION	CHARACTERISTIC_AGGRESSION119,5428
#define CHARACTERISTIC_SELFPRESERVATION	CHARACTERISTIC_SELFPRESERVATION121,5545
#define CHARACTERISTIC_VENGEFULNESS	CHARACTERISTIC_VENGEFULNESS123,5646
#define CHARACTERISTIC_CAMPER	CHARACTERISTIC_CAMPER125,5736
#define CHARACTERISTIC_EASY_FRAGGER	CHARACTERISTIC_EASY_FRAGGER129,5936
#define CHARACTERISTIC_ALERTNESS	CHARACTERISTIC_ALERTNESS131,6033
#define CHARACTERISTIC_FIRETHROTTLE	CHARACTERISTIC_FIRETHROTTLE133,6125

game/ai_cmd.h,0

game/bg_lib.h,1308
#define BG_LIB_HBG_LIB_H27,1170
#define __attribute__(__attribute__32,1271
#define NULL NULL37,1324
typedef int size_t;size_t40,1357
typedef char *  va_list;va_list42,1378
#define _INTSIZEOF(_INTSIZEOF43,1403
#define va_start(va_start44,1482
#define va_arg(va_arg45,1543
#define va_end(va_end46,1617
#define CHAR_BIT CHAR_BIT48,1662
#define SCHAR_MIN SCHAR_MIN49,1725
#define SCHAR_MAX SCHAR_MAX50,1789
#define UCHAR_MAX UCHAR_MAX51,1853
#define SHRT_MIN SHRT_MIN53,1920
#define SHRT_MAX SHRT_MAX54,1991
#define USHRT_MAX USHRT_MAX55,2062
#define INT_MIN INT_MIN56,2133
#define INT_MAX INT_MAX57,2204
#define UINT_MAX UINT_MAX58,2273
#define LONG_MIN LONG_MIN59,2342
#define LONG_MAX LONG_MAX60,2415
#define ULONG_MAX ULONG_MAX61,2485
#define isalnum(isalnum63,2556
#define isalpha(isalpha64,2603
#define isascii(isascii65,2650
#define iscntrl(iscntrl66,2695
#define isdigit(isdigit67,2764
#define isgraph(isgraph68,2811
#define islower(islower69,2858
#define isprint(isprint70,2906
#define ispunct(ispunct71,2953
#define isspace(isspace72,3016
#define isupper(isupper74,3148
#define isxdigit(isxdigit75,3196
#define isxlower(isxlower76,3245
#define isxupper(isxupper77,3304
typedef int cmp_t(const void *, const void *);cmp_t80,3383

game/bg_public.h,22038
#define	GAME_VERSION	GAME_VERSION28,1200
#define	DEFAULT_GRAVITY	DEFAULT_GRAVITY30,1237
#define	GIB_HEALTH	GIB_HEALTH31,1266
#define	ARMOR_PROTECTION	ARMOR_PROTECTION32,1291
#define	MAX_ITEMS	MAX_ITEMS34,1322
#define	RANK_TIED_FLAG	RANK_TIED_FLAG36,1347
#define DEFAULT_SHOTGUN_SPREAD	DEFAULT_SHOTGUN_SPREAD38,1379
#define DEFAULT_SHOTGUN_COUNT	DEFAULT_SHOTGUN_COUNT39,1414
#define	ITEM_RADIUS	ITEM_RADIUS41,1448
#define	LIGHTNING_RANGE	LIGHTNING_RANGE43,1533
#define	SCORE_NOT_PRESENT	SCORE_NOT_PRESENT45,1563
#define	VOTE_TIME	VOTE_TIME47,1653
#define	MINS_Z	MINS_Z49,1716
#define	DEFAULT_VIEWHEIGHT	DEFAULT_VIEWHEIGHT50,1738
#define CROUCH_VIEWHEIGHT	CROUCH_VIEWHEIGHT51,1768
#define	DEAD_VIEWHEIGHT	DEAD_VIEWHEIGHT52,1797
#define	CS_MUSIC	CS_MUSIC60,2019
#define	CS_MESSAGE	CS_MESSAGE61,2041
#define	CS_MOTD	CS_MOTD62,2109
#define	CS_WARMUP	CS_WARMUP63,2179
#define	CS_SCORES1	CS_SCORES164,2251
#define	CS_SCORES2	CS_SCORES265,2275
#define CS_VOTE_TIME	CS_VOTE_TIME66,2299
#define CS_VOTE_STRING	CS_VOTE_STRING67,2324
#define	CS_VOTE_YES	CS_VOTE_YES68,2351
#define	CS_VOTE_NO	CS_VOTE_NO69,2377
#define CS_TEAMVOTE_TIME	CS_TEAMVOTE_TIME71,2403
#define CS_TEAMVOTE_STRING	CS_TEAMVOTE_STRING72,2432
#define	CS_TEAMVOTE_YES	CS_TEAMVOTE_YES73,2463
#define	CS_TEAMVOTE_NO	CS_TEAMVOTE_NO74,2492
#define	CS_GAME_VERSION	CS_GAME_VERSION76,2521
#define	CS_LEVEL_START_TIME	CS_LEVEL_START_TIME77,2550
#define	CS_INTERMISSION	CS_INTERMISSION78,2628
#define CS_FLAGSTATUS	CS_FLAGSTATUS79,2749
#define CS_SHADERSTATE	CS_SHADERSTATE80,2817
#define CS_BOTINFO	CS_BOTINFO81,2845
#define	CS_ITEMS	CS_ITEMS83,2871
#define	CS_MODELS	CS_MODELS85,2955
#define	CS_SOUNDS	CS_SOUNDS86,2979
#define	CS_PLAYERS	CS_PLAYERS87,3023
#define CS_LOCATIONS	CS_LOCATIONS88,3068
#define CS_PARTICLES	CS_PARTICLES89,3116
#define CS_MAX	CS_MAX91,3170
	GT_FFA,				// free for allGT_FFA98,3321
	GT_TOURNAMENT,		// one on one tournamentGT_TOURNAMENT99,3349
	GT_SINGLE_PLAYER,	// single player ffaGT_SINGLE_PLAYER100,3391
	GT_TEAM,			// team deathmatchGT_TEAM104,3467
	GT_CTF,				// capture the flagGT_CTF105,3498
	GT_1FCTF,GT_1FCTF106,3530
	GT_OBELISK,GT_OBELISK107,3541
	GT_HARVESTER,GT_HARVESTER108,3554
	GT_MAX_GAME_TYPEGT_MAX_GAME_TYPE109,3569
} gametype_t;gametype_t110,3587
typedef enum { GENDER_MALE, GENDER_FEMALE, GENDER_NEUTER } gender_t;GENDER_MALE112,3602
typedef enum { GENDER_MALE, GENDER_FEMALE, GENDER_NEUTER } gender_t;GENDER_FEMALE112,3602
typedef enum { GENDER_MALE, GENDER_FEMALE, GENDER_NEUTER } gender_t;GENDER_NEUTER112,3602
typedef enum { GENDER_MALE, GENDER_FEMALE, GENDER_NEUTER } gender_t;gender_t112,3602
	PM_NORMAL,		// can accelerate and turnPM_NORMAL126,4078
	PM_NOCLIP,		// noclip movementPM_NOCLIP127,4118
	PM_SPECTATOR,	// still run into wallsPM_SPECTATOR128,4150
	PM_DEAD,		// no acceleration or turning, but free fallingPM_DEAD129,4189
	PM_FREEZE,		// stuck in place with no controlPM_FREEZE130,4248
	PM_INTERMISSION,	// no movement or status barPM_INTERMISSION131,4295
	PM_SPINTERMISSION	// no movement or status barPM_SPINTERMISSION132,4342
} pmtype_t;pmtype_t133,4390
	WEAPON_READY, WEAPON_READY136,4418
	WEAPON_RAISING,WEAPON_RAISING137,4434
	WEAPON_DROPPING,WEAPON_DROPPING138,4451
	WEAPON_FIRINGWEAPON_FIRING139,4469
} weaponstate_t;weaponstate_t140,4484
#define	PMF_DUCKED	PMF_DUCKED143,4521
#define	PMF_JUMP_HELD	PMF_JUMP_HELD144,4544
#define	PMF_BACKWARDS_JUMP	PMF_BACKWARDS_JUMP145,4569
#define	PMF_BACKWARDS_RUN	PMF_BACKWARDS_RUN146,4625
#define	PMF_TIME_LAND	PMF_TIME_LAND147,4686
#define	PMF_TIME_KNOCKBACK	PMF_TIME_KNOCKBACK148,4746
#define	PMF_TIME_WATERJUMP	PMF_TIME_WATERJUMP149,4819
#define	PMF_RESPAWNED	PMF_RESPAWNED150,4875
#define	PMF_USE_ITEM_HELD	PMF_USE_ITEM_HELD151,4950
#define PMF_GRAPPLE_PULL	PMF_GRAPPLE_PULL152,4981
#define PMF_FOLLOW	PMF_FOLLOW153,5044
#define PMF_SCOREBOARD	PMF_SCOREBOARD154,5107
#define PMF_INVULEXPAND	PMF_INVULEXPAND155,5164
#define	PMF_ALL_TIMES	PMF_ALL_TIMES157,5239
#define	MAXTOUCH	MAXTOUCH159,5316
	playerState_t	*ps;ps162,5374
	usercmd_t	cmd;cmd165,5412
	int			tracemask;			// collide against these types of surfacestracemask166,5428
	int			debugLevel;			// if set, diagnostic output will be printeddebugLevel167,5491
	qboolean	noFootsteps;		// if the game is setup for no footsteps by the servernoFootsteps168,5557
	qboolean	gauntletHit;		// true if a gauntlet attack would actually hit somethinggauntletHit169,5636
	int			framecount;framecount171,5719
	int			numtouch;numtouch174,5757
	int			touchents[MAXTOUCH];touchents175,5774
	vec3_t		mins, maxs;			// bounding box sizemins177,5803
	vec3_t		mins, maxs;			// bounding box sizemaxs177,5803
	int			watertype;watertype179,5848
	int			waterlevel;waterlevel180,5866
	float		xyspeed;xyspeed182,5886
	int			pmove_fixed;pmove_fixed185,5929
	int			pmove_msec;pmove_msec186,5949
	void		(*trace)( trace_t *results, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end, int passEntityNum, int contentMask );trace190,6061
	int			(*pointcontents)( const vec3_t point, int passEntityNum );pointcontents191,6210
} pmove_t;pmove_t192,6276
	STAT_HEALTH,STAT_HEALTH204,6634
	STAT_HOLDABLE_ITEM,STAT_HOLDABLE_ITEM205,6648
	STAT_PERSISTANT_POWERUP,STAT_PERSISTANT_POWERUP207,6688
	STAT_WEAPONS,					// 16 bit fieldsSTAT_WEAPONS209,6721
	STAT_ARMOR,				STAT_ARMOR210,6757
	STAT_DEAD_YAW,					// look this direction when dead (FIXME: get rid of?)STAT_DEAD_YAW211,6774
	STAT_CLIENTS_READY,				// bit mask of clients wishing to exit the intermission (FIXME: configstring?)STAT_CLIENTS_READY212,6848
	STAT_MAX_HEALTH					// health / armor limit, changable by handicapSTAT_MAX_HEALTH213,6951
} statIndex_t;statIndex_t214,7019
	PERS_SCORE,						// !!! MUST NOT CHANGE, SERVER AND GAME BOTH REFERENCE !!!PERS_SCORE222,7207
	PERS_HITS,						// total points damage inflicted so damage beeps can sound on changePERS_HITS223,7284
	PERS_RANK,						// player rank or team rankPERS_RANK224,7370
	PERS_TEAM,						// player teamPERS_TEAM225,7415
	PERS_SPAWN_COUNT,				// incremented every respawnPERS_SPAWN_COUNT226,7447
	PERS_PLAYEREVENTS,				// 16 bits that can be flipped for eventsPERS_PLAYEREVENTS227,7498
	PERS_ATTACKER,					// clientnum of last damage inflicterPERS_ATTACKER228,7563
	PERS_ATTACKEE_ARMOR,			// health/armor of last person we attackedPERS_ATTACKEE_ARMOR229,7621
	PERS_KILLED,					// count of the number of times you diedPERS_KILLED230,7688
	PERS_IMPRESSIVE_COUNT,			// two railgun hits in a rowPERS_IMPRESSIVE_COUNT232,7774
	PERS_EXCELLENT_COUNT,			// two successive kills in a short amount of timePERS_EXCELLENT_COUNT233,7829
	PERS_DEFEND_COUNT,				// defend awardsPERS_DEFEND_COUNT234,7904
	PERS_ASSIST_COUNT,				// assist awardsPERS_ASSIST_COUNT235,7944
	PERS_GAUNTLET_FRAG_COUNT,		// kills with the guantletPERS_GAUNTLET_FRAG_COUNT236,7984
	PERS_CAPTURES					// capturesPERS_CAPTURES237,8039
} persEnum_t;persEnum_t238,8070
#define	EF_DEAD	EF_DEAD242,8111
#define EF_TICKING	EF_TICKING244,8214
#define	EF_TELEPORT_BIT	EF_TELEPORT_BIT246,8311
#define	EF_AWARD_EXCELLENT	EF_AWARD_EXCELLENT247,8398
#define EF_PLAYER_EVENT	EF_PLAYER_EVENT248,8465
#define	EF_BOUNCE	EF_BOUNCE249,8501
#define	EF_BOUNCE_HALF	EF_BOUNCE_HALF250,8549
#define	EF_AWARD_GAUNTLET	EF_AWARD_GAUNTLET251,8601
#define	EF_NODRAW	EF_NODRAW252,8665
#define	EF_FIRING	EF_FIRING253,8750
#define	EF_KAMIKAZE	EF_KAMIKAZE254,8803
#define	EF_MOVER_STOP	EF_MOVER_STOP255,8836
#define EF_AWARD_CAP	EF_AWARD_CAP256,8894
#define	EF_TALK	EF_TALK257,8955
#define	EF_CONNECTION	EF_CONNECTION258,9009
#define	EF_VOTED	EF_VOTED259,9080
#define	EF_AWARD_IMPRESSIVE	EF_AWARD_IMPRESSIVE260,9134
#define	EF_AWARD_DEFEND	EF_AWARD_DEFEND261,9203
#define	EF_AWARD_ASSIST	EF_AWARD_ASSIST262,9264
#define EF_AWARD_DENIED	EF_AWARD_DENIED263,9325
#define EF_TEAMVOTED	EF_TEAMVOTED264,9372
	PW_NONE,PW_NONE268,9485
	PW_QUAD,PW_QUAD270,9496
	PW_BATTLESUIT,PW_BATTLESUIT271,9506
	PW_HASTE,PW_HASTE272,9522
	PW_INVIS,PW_INVIS273,9533
	PW_REGEN,PW_REGEN274,9544
	PW_FLIGHT,PW_FLIGHT275,9555
	PW_REDFLAG,PW_REDFLAG277,9568
	PW_BLUEFLAG,PW_BLUEFLAG278,9581
	PW_NEUTRALFLAG,PW_NEUTRALFLAG279,9595
	PW_SCOUT,PW_SCOUT281,9613
	PW_GUARD,PW_GUARD282,9624
	PW_DOUBLER,PW_DOUBLER283,9635
	PW_AMMOREGEN,PW_AMMOREGEN284,9648
	PW_INVULNERABILITY,PW_INVULNERABILITY285,9663
	PW_NUM_POWERUPSPW_NUM_POWERUPS287,9685
} powerup_t;powerup_t289,9703
	HI_NONE,HI_NONE292,9732
	HI_TELEPORTER,HI_TELEPORTER294,9743
	HI_MEDKIT,HI_MEDKIT295,9759
	HI_KAMIKAZE,HI_KAMIKAZE296,9771
	HI_PORTAL,HI_PORTAL297,9785
	HI_INVULNERABILITY,HI_INVULNERABILITY298,9797
	HI_NUM_HOLDABLEHI_NUM_HOLDABLE300,9819
} holdable_t;holdable_t301,9836
	WP_NONE,WP_NONE305,9867
	WP_GAUNTLET,WP_GAUNTLET307,9878
	WP_MACHINEGUN,WP_MACHINEGUN308,9892
	WP_SHOTGUN,WP_SHOTGUN309,9908
	WP_GRENADE_LAUNCHER,WP_GRENADE_LAUNCHER310,9921
	WP_ROCKET_LAUNCHER,WP_ROCKET_LAUNCHER311,9943
	WP_LIGHTNING,WP_LIGHTNING312,9964
	WP_RAILGUN,WP_RAILGUN313,9979
	WP_PLASMAGUN,WP_PLASMAGUN314,9992
	WP_BFG,WP_BFG315,10007
	WP_GRAPPLING_HOOK,WP_GRAPPLING_HOOK316,10016
	WP_NAILGUN,WP_NAILGUN318,10055
	WP_PROX_LAUNCHER,WP_PROX_LAUNCHER319,10068
	WP_CHAINGUN,WP_CHAINGUN320,10087
	WP_NUM_WEAPONSWP_NUM_WEAPONS323,10109
} weapon_t;weapon_t324,10125
#define	PLAYEREVENT_DENIEDREWARD	PLAYEREVENT_DENIEDREWARD328,10202
#define	PLAYEREVENT_GAUNTLETREWARD	PLAYEREVENT_GAUNTLETREWARD329,10243
#define PLAYEREVENT_HOLYSHIT	PLAYEREVENT_HOLYSHIT330,10286
#define	EV_EVENT_BIT1	EV_EVENT_BIT1341,10739
#define	EV_EVENT_BIT2	EV_EVENT_BIT2342,10773
#define	EV_EVENT_BITS	EV_EVENT_BITS343,10807
#define	EVENT_VALID_MSEC	EVENT_VALID_MSEC345,10861
	EV_NONE,EV_NONE348,10906
	EV_FOOTSTEP,EV_FOOTSTEP350,10917
	EV_FOOTSTEP_METAL,EV_FOOTSTEP_METAL351,10931
	EV_FOOTSPLASH,EV_FOOTSPLASH352,10951
	EV_FOOTWADE,EV_FOOTWADE353,10967
	EV_SWIM,EV_SWIM354,10981
	EV_STEP_4,EV_STEP_4356,10992
	EV_STEP_8,EV_STEP_8357,11004
	EV_STEP_12,EV_STEP_12358,11016
	EV_STEP_16,EV_STEP_16359,11029
	EV_FALL_SHORT,EV_FALL_SHORT361,11043
	EV_FALL_MEDIUM,EV_FALL_MEDIUM362,11059
	EV_FALL_FAR,EV_FALL_FAR363,11076
	EV_JUMP_PAD,			// boing sound at origin, jump sound on playerEV_JUMP_PAD365,11091
	EV_JUMP,EV_JUMP367,11155
	EV_WATER_TOUCH,	// foot touchesEV_WATER_TOUCH368,11165
	EV_WATER_LEAVE,	// foot leavesEV_WATER_LEAVE369,11198
	EV_WATER_UNDER,	// head touchesEV_WATER_UNDER370,11230
	EV_WATER_CLEAR,	// head leavesEV_WATER_CLEAR371,11263
	EV_ITEM_PICKUP,			// normal item pickups are predictableEV_ITEM_PICKUP373,11296
	EV_GLOBAL_ITEM_PICKUP,	// powerup / team sounds are broadcast to everyoneEV_GLOBAL_ITEM_PICKUP374,11354
	EV_NOAMMO,EV_NOAMMO376,11430
	EV_CHANGE_WEAPON,EV_CHANGE_WEAPON377,11442
	EV_FIRE_WEAPON,EV_FIRE_WEAPON378,11461
	EV_USE_ITEM0,EV_USE_ITEM0380,11479
	EV_USE_ITEM1,EV_USE_ITEM1381,11494
	EV_USE_ITEM2,EV_USE_ITEM2382,11509
	EV_USE_ITEM3,EV_USE_ITEM3383,11524
	EV_USE_ITEM4,EV_USE_ITEM4384,11539
	EV_USE_ITEM5,EV_USE_ITEM5385,11554
	EV_USE_ITEM6,EV_USE_ITEM6386,11569
	EV_USE_ITEM7,EV_USE_ITEM7387,11584
	EV_USE_ITEM8,EV_USE_ITEM8388,11599
	EV_USE_ITEM9,EV_USE_ITEM9389,11614
	EV_USE_ITEM10,EV_USE_ITEM10390,11629
	EV_USE_ITEM11,EV_USE_ITEM11391,11645
	EV_USE_ITEM12,EV_USE_ITEM12392,11661
	EV_USE_ITEM13,EV_USE_ITEM13393,11677
	EV_USE_ITEM14,EV_USE_ITEM14394,11693
	EV_USE_ITEM15,EV_USE_ITEM15395,11709
	EV_ITEM_RESPAWN,EV_ITEM_RESPAWN397,11726
	EV_ITEM_POP,EV_ITEM_POP398,11744
	EV_PLAYER_TELEPORT_IN,EV_PLAYER_TELEPORT_IN399,11758
	EV_PLAYER_TELEPORT_OUT,EV_PLAYER_TELEPORT_OUT400,11782
	EV_GRENADE_BOUNCE,		// eventParm will be the soundindexEV_GRENADE_BOUNCE402,11808
	EV_GENERAL_SOUND,EV_GENERAL_SOUND404,11866
	EV_GLOBAL_SOUND,		// no attenuationEV_GLOBAL_SOUND405,11885
	EV_GLOBAL_TEAM_SOUND,EV_GLOBAL_TEAM_SOUND406,11922
	EV_BULLET_HIT_FLESH,EV_BULLET_HIT_FLESH408,11946
	EV_BULLET_HIT_WALL,EV_BULLET_HIT_WALL409,11968
	EV_MISSILE_HIT,EV_MISSILE_HIT411,11990
	EV_MISSILE_MISS,EV_MISSILE_MISS412,12007
	EV_MISSILE_MISS_METAL,EV_MISSILE_MISS_METAL413,12025
	EV_RAILTRAIL,EV_RAILTRAIL414,12049
	EV_SHOTGUN,EV_SHOTGUN415,12064
	EV_BULLET,				// otherEntity is the shooterEV_BULLET416,12077
	EV_PAIN,EV_PAIN418,12123
	EV_DEATH1,EV_DEATH1419,12133
	EV_DEATH2,EV_DEATH2420,12145
	EV_DEATH3,EV_DEATH3421,12157
	EV_OBITUARY,EV_OBITUARY422,12169
	EV_POWERUP_QUAD,EV_POWERUP_QUAD424,12184
	EV_POWERUP_BATTLESUIT,EV_POWERUP_BATTLESUIT425,12202
	EV_POWERUP_REGEN,EV_POWERUP_REGEN426,12226
	EV_GIB_PLAYER,			// gib a previously living playerEV_GIB_PLAYER428,12246
	EV_SCOREPLUM,			// score plumEV_SCOREPLUM429,12298
	EV_PROXIMITY_MINE_STICK,EV_PROXIMITY_MINE_STICK432,12351
	EV_PROXIMITY_MINE_TRIGGER,EV_PROXIMITY_MINE_TRIGGER433,12377
	EV_KAMIKAZE,			// kamikaze explodesEV_KAMIKAZE434,12405
	EV_OBELISKEXPLODE,		// obelisk explodesEV_OBELISKEXPLODE435,12442
	EV_OBELISKPAIN,			// obelisk is in painEV_OBELISKPAIN436,12483
	EV_INVUL_IMPACT,		// invulnerability sphere impactEV_INVUL_IMPACT437,12524
	EV_JUICED,				// invulnerability juiced effectEV_JUICED438,12576
	EV_LIGHTNINGBOLT,		// lightning bolt bounced of invulnerability sphereEV_LIGHTNINGBOLT439,12624
	EV_DEBUG_LINE,EV_DEBUG_LINE442,12706
	EV_STOPLOOPINGSOUND,EV_STOPLOOPINGSOUND443,12722
	EV_TAUNT,EV_TAUNT444,12744
	EV_TAUNT_YES,EV_TAUNT_YES445,12755
	EV_TAUNT_NO,EV_TAUNT_NO446,12770
	EV_TAUNT_FOLLOWME,EV_TAUNT_FOLLOWME447,12784
	EV_TAUNT_GETFLAG,EV_TAUNT_GETFLAG448,12804
	EV_TAUNT_GUARDBASE,EV_TAUNT_GUARDBASE449,12823
	EV_TAUNT_PATROLEV_TAUNT_PATROL450,12844
} entity_event_t;entity_event_t452,12862
	GTS_RED_CAPTURE,GTS_RED_CAPTURE456,12897
	GTS_BLUE_CAPTURE,GTS_BLUE_CAPTURE457,12915
	GTS_RED_RETURN,GTS_RED_RETURN458,12934
	GTS_BLUE_RETURN,GTS_BLUE_RETURN459,12951
	GTS_RED_TAKEN,GTS_RED_TAKEN460,12969
	GTS_BLUE_TAKEN,GTS_BLUE_TAKEN461,12985
	GTS_REDOBELISK_ATTACKED,GTS_REDOBELISK_ATTACKED462,13002
	GTS_BLUEOBELISK_ATTACKED,GTS_BLUEOBELISK_ATTACKED463,13028
	GTS_REDTEAM_SCORED,GTS_REDTEAM_SCORED464,13055
	GTS_BLUETEAM_SCORED,GTS_BLUETEAM_SCORED465,13076
	GTS_REDTEAM_TOOK_LEAD,GTS_REDTEAM_TOOK_LEAD466,13098
	GTS_BLUETEAM_TOOK_LEAD,GTS_BLUETEAM_TOOK_LEAD467,13122
	GTS_TEAMS_ARE_TIED,GTS_TEAMS_ARE_TIED468,13147
	GTS_KAMIKAZEGTS_KAMIKAZE469,13168
} global_team_sound_t;global_team_sound_t470,13182
	BOTH_DEATH1,BOTH_DEATH1474,13235
	BOTH_DEAD1,BOTH_DEAD1475,13249
	BOTH_DEATH2,BOTH_DEATH2476,13262
	BOTH_DEAD2,BOTH_DEAD2477,13276
	BOTH_DEATH3,BOTH_DEATH3478,13289
	BOTH_DEAD3,BOTH_DEAD3479,13303
	TORSO_GESTURE,TORSO_GESTURE481,13317
	TORSO_ATTACK,TORSO_ATTACK483,13334
	TORSO_ATTACK2,TORSO_ATTACK2484,13349
	TORSO_DROP,TORSO_DROP486,13366
	TORSO_RAISE,TORSO_RAISE487,13379
	TORSO_STAND,TORSO_STAND489,13394
	TORSO_STAND2,TORSO_STAND2490,13408
	LEGS_WALKCR,LEGS_WALKCR492,13424
	LEGS_WALK,LEGS_WALK493,13438
	LEGS_RUN,LEGS_RUN494,13450
	LEGS_BACK,LEGS_BACK495,13461
	LEGS_SWIM,LEGS_SWIM496,13473
	LEGS_JUMP,LEGS_JUMP498,13486
	LEGS_LAND,LEGS_LAND499,13498
	LEGS_JUMPB,LEGS_JUMPB501,13511
	LEGS_LANDB,LEGS_LANDB502,13524
	LEGS_IDLE,LEGS_IDLE504,13538
	LEGS_IDLECR,LEGS_IDLECR505,13550
	LEGS_TURN,LEGS_TURN507,13565
	TORSO_GETFLAG,TORSO_GETFLAG509,13578
	TORSO_GUARDBASE,TORSO_GUARDBASE510,13594
	TORSO_PATROL,TORSO_PATROL511,13612
	TORSO_FOLLOWME,TORSO_FOLLOWME512,13627
	TORSO_AFFIRMATIVE,TORSO_AFFIRMATIVE513,13644
	TORSO_NEGATIVE,TORSO_NEGATIVE514,13664
	MAX_ANIMATIONS,MAX_ANIMATIONS516,13682
	LEGS_BACKCR,LEGS_BACKCR518,13700
	LEGS_BACKWALK,LEGS_BACKWALK519,13714
	FLAG_RUN,FLAG_RUN520,13730
	FLAG_STAND,FLAG_STAND521,13741
	FLAG_STAND2RUN,FLAG_STAND2RUN522,13754
	MAX_TOTALANIMATIONSMAX_TOTALANIMATIONS524,13772
} animNumber_t;animNumber_t525,13793
typedef struct animation_s {animation_s528,13811
	int		firstFrame;firstFrame529,13840
	int		numFrames;numFrames530,13858
	int		loopFrames;			// 0 to numFramesloopFrames531,13875
	int		frameLerp;			// msec between framesframeLerp532,13913
	int		initialLerp;		// msec to get to first frameinitialLerp533,13955
	int		reversed;			// true if animation is reversedreversed534,14005
	int		flipflop;			// true if animation should flipflop back to baseflipflop535,14056
} animation_t;animation_t536,14124
#define	ANIM_TOGGLEBIT	ANIM_TOGGLEBIT541,14244
	TEAM_FREE,TEAM_FREE545,14289
	TEAM_RED,TEAM_RED546,14301
	TEAM_BLUE,TEAM_BLUE547,14312
	TEAM_SPECTATOR,TEAM_SPECTATOR548,14324
	TEAM_NUM_TEAMSTEAM_NUM_TEAMS550,14342
} team_t;team_t551,14358
#define TEAM_LOCATION_UPDATE_TIME	TEAM_LOCATION_UPDATE_TIME554,14402
#define TEAM_MAXOVERLAY	TEAM_MAXOVERLAY557,14478
	TEAMTASK_NONE,TEAMTASK_NONE561,14534
	TEAMTASK_OFFENSE, TEAMTASK_OFFENSE562,14550
	TEAMTASK_DEFENSE,TEAMTASK_DEFENSE563,14570
	TEAMTASK_PATROL,TEAMTASK_PATROL564,14589
	TEAMTASK_FOLLOW,TEAMTASK_FOLLOW565,14607
	TEAMTASK_RETRIEVE,TEAMTASK_RETRIEVE566,14625
	TEAMTASK_ESCORT,TEAMTASK_ESCORT567,14645
	TEAMTASK_CAMPTEAMTASK_CAMP568,14663
} teamtask_t;teamtask_t569,14678
	MOD_UNKNOWN,MOD_UNKNOWN573,14726
	MOD_SHOTGUN,MOD_SHOTGUN574,14740
	MOD_GAUNTLET,MOD_GAUNTLET575,14754
	MOD_MACHINEGUN,MOD_MACHINEGUN576,14769
	MOD_GRENADE,MOD_GRENADE577,14786
	MOD_GRENADE_SPLASH,MOD_GRENADE_SPLASH578,14800
	MOD_ROCKET,MOD_ROCKET579,14821
	MOD_ROCKET_SPLASH,MOD_ROCKET_SPLASH580,14834
	MOD_PLASMA,MOD_PLASMA581,14854
	MOD_PLASMA_SPLASH,MOD_PLASMA_SPLASH582,14867
	MOD_RAILGUN,MOD_RAILGUN583,14887
	MOD_LIGHTNING,MOD_LIGHTNING584,14901
	MOD_BFG,MOD_BFG585,14917
	MOD_BFG_SPLASH,MOD_BFG_SPLASH586,14927
	MOD_WATER,MOD_WATER587,14944
	MOD_SLIME,MOD_SLIME588,14956
	MOD_LAVA,MOD_LAVA589,14968
	MOD_CRUSH,MOD_CRUSH590,14979
	MOD_TELEFRAG,MOD_TELEFRAG591,14991
	MOD_FALLING,MOD_FALLING592,15006
	MOD_SUICIDE,MOD_SUICIDE593,15020
	MOD_TARGET_LASER,MOD_TARGET_LASER594,15034
	MOD_TRIGGER_HURT,MOD_TRIGGER_HURT595,15053
	MOD_NAIL,MOD_NAIL597,15091
	MOD_CHAINGUN,MOD_CHAINGUN598,15102
	MOD_PROXIMITY_MINE,MOD_PROXIMITY_MINE599,15117
	MOD_KAMIKAZE,MOD_KAMIKAZE600,15138
	MOD_JUICED,MOD_JUICED601,15153
	MOD_GRAPPLEMOD_GRAPPLE603,15173
} meansOfDeath_t;meansOfDeath_t604,15186
	IT_BAD,IT_BAD611,15299
	IT_WEAPON,				// EFX: rotate + upscale + minlightIT_WEAPON612,15308
	IT_AMMO,				// EFX: rotateIT_AMMO613,15359
	IT_ARMOR,				// EFX: rotate + minlightIT_ARMOR614,15387
	IT_HEALTH,				// EFX: static external sphere + rotating internalIT_HEALTH615,15427
	IT_POWERUP,				// instant on, timer basedIT_POWERUP616,15493
	IT_HOLDABLE,			// single use, holdable itemIT_HOLDABLE618,15587
	IT_PERSISTANT_POWERUP,IT_PERSISTANT_POWERUP620,15660
	IT_TEAMIT_TEAM621,15684
} itemType_t;itemType_t622,15693
#define MAX_ITEM_MODELS MAX_ITEM_MODELS624,15708
typedef struct gitem_s {gitem_s626,15735
	char		*classname;	// spawning nameclassname627,15760
	char		*pickup_sound;pickup_sound628,15796
	char		*world_model[MAX_ITEM_MODELS];world_model629,15818
	char		*icon;icon631,15857
	char		*pickup_name;	// for printing on pickuppickup_name632,15871
	int			quantity;		// for ammo how much, or duration of powerupquantity634,15919
	itemType_t  giType;			// IT_* flagsgiType635,15982
	int			giTag;giTag637,16020
	char		*precaches;		// string of all models and images this item will useprecaches639,16035
	char		*sounds;		// string of all sounds this item will usesounds640,16109
} gitem_t;gitem_t641,16169
#define	ITEM_INDEX(ITEM_INDEX651,16481
#define	DF_NO_FALLING	DF_NO_FALLING657,16649
#define DF_FIXED_FOV	DF_FIXED_FOV658,16675
#define	DF_NO_FOOTSTEPS	DF_NO_FOOTSTEPS659,16701
#define	MASK_ALL	MASK_ALL662,16748
#define	MASK_SOLID	MASK_SOLID663,16773
#define	MASK_PLAYERSOLID	MASK_PLAYERSOLID664,16812
#define	MASK_DEADSOLID	MASK_DEADSOLID665,16889
#define	MASK_WATER	MASK_WATER666,16951
#define	MASK_OPAQUE	MASK_OPAQUE667,17019
#define	MASK_SHOT	MASK_SHOT668,17088
	ET_GENERAL,ET_GENERAL675,17203
	ET_PLAYER,ET_PLAYER676,17216
	ET_ITEM,ET_ITEM677,17228
	ET_MISSILE,ET_MISSILE678,17238
	ET_MOVER,ET_MOVER679,17251
	ET_BEAM,ET_BEAM680,17262
	ET_PORTAL,ET_PORTAL681,17272
	ET_SPEAKER,ET_SPEAKER682,17284
	ET_PUSH_TRIGGER,ET_PUSH_TRIGGER683,17297
	ET_TELEPORT_TRIGGER,ET_TELEPORT_TRIGGER684,17315
	ET_INVISIBLE,ET_INVISIBLE685,17337
	ET_GRAPPLE,				// grapple hooked on wallET_GRAPPLE686,17352
	ET_TEAM,ET_TEAM687,17394
	ET_EVENTS				// any of the EV_* events can be added freestandingET_EVENTS689,17405
} entityType_t;entityType_t692,17578
#define ARENAS_PER_TIER	ARENAS_PER_TIER709,18211
#define MAX_ARENAS	MAX_ARENAS710,18238
#define	MAX_ARENAS_TEXT	MAX_ARENAS_TEXT711,18264
#define MAX_BOTS	MAX_BOTS713,18295
#define MAX_BOTS_TEXT	MAX_BOTS_TEXT714,18319
#define KAMI_SHOCKWAVE_STARTTIME	KAMI_SHOCKWAVE_STARTTIME720,18385
#define KAMI_SHOCKWAVEFADE_STARTTIME	KAMI_SHOCKWAVEFADE_STARTTIME721,18421
#define KAMI_SHOCKWAVE_ENDTIME	KAMI_SHOCKWAVE_ENDTIME722,18463
#define KAMI_EXPLODE_STARTTIME	KAMI_EXPLODE_STARTTIME724,18530
#define KAMI_IMPLODE_STARTTIME	KAMI_IMPLODE_STARTTIME725,18567
#define KAMI_IMPLODE_ENDTIME	KAMI_IMPLODE_ENDTIME726,18605
#define KAMI_SHOCKWAVE2_STARTTIME	KAMI_SHOCKWAVE2_STARTTIME728,18664
#define KAMI_SHOCKWAVE2FADE_STARTTIME	KAMI_SHOCKWAVE2FADE_STARTTIME729,18704
#define KAMI_SHOCKWAVE2_ENDTIME	KAMI_SHOCKWAVE2_ENDTIME730,18747
#define KAMI_SHOCKWAVEMODEL_RADIUS	KAMI_SHOCKWAVEMODEL_RADIUS732,18826
#define KAMI_BOOMSPHEREMODEL_RADIUS	KAMI_BOOMSPHEREMODEL_RADIUS733,18865
#define KAMI_SHOCKWAVE_MAXRADIUS	KAMI_SHOCKWAVE_MAXRADIUS735,18955
#define KAMI_BOOMSPHERE_MAXRADIUS	KAMI_BOOMSPHERE_MAXRADIUS736,18994
#define KAMI_SHOCKWAVE2_MAXRADIUS	KAMI_SHOCKWAVE2_MAXRADIUS737,19033

game/ai_team.c,2761
typedef struct bot_ctftaskpreference_sbot_ctftaskpreference_s58,1813
	char		name[36];name60,1854
	int			preference;preference61,1871
} bot_ctftaskpreference_t;bot_ctftaskpreference_t62,1890
bot_ctftaskpreference_t ctftaskpreferences[MAX_CLIENTS];ctftaskpreferences64,1918
int BotValidTeamLeader(bot_state_t *bs) {BotValidTeamLeader72,2040
int BotNumTeamMates(bot_state_t *bs) {BotNumTeamMates83,2263
int BotClientTravelTimeToGoal(int client, bot_goal_t *goal) {BotClientTravelTimeToGoal111,2928
int BotSortTeamMatesByBaseTravelTime(bot_state_t *bs, int *teammates, int maxteammates) {BotSortTeamMatesByBaseTravelTime126,3295
void BotSetTeamMateTaskPreference(bot_state_t *bs, int teammate, int preference) {BotSetTeamMateTaskPreference186,4751
int BotGetTeamMateTaskPreference(bot_state_t *bs, int teammate) {BotGetTeamMateTaskPreference199,5116
int BotSortTeamMatesByTaskPreference(bot_state_t *bs, int *teammates, int numteammates) {BotSortTeamMatesByTaskPreference213,5536
void BotSayTeamOrderAlways(bot_state_t *bs, int toclient) {BotSayTeamOrderAlways251,6670
void BotSayTeamOrder(bot_state_t *bs, int toclient) {BotSayTeamOrder274,7314
void BotVoiceChat(bot_state_t *bs, int toclient, char *voicechat) {BotVoiceChat290,7600
void BotVoiceChatOnly(bot_state_t *bs, int toclient, char *voicechat) {BotVoiceChatOnly306,7978
void BotSayVoiceTeamOrder(bot_state_t *bs, int toclient, char *voicechat) {BotSayVoiceTeamOrder322,8366
void BotCTFOrders_BothFlagsNotAtBase(bot_state_t *bs) {BotCTFOrders_BothFlagsNotAtBase333,8568
void BotCTFOrders_FlagNotAtBase(bot_state_t *bs) {BotCTFOrders_FlagNotAtBase447,12301
void BotCTFOrders_EnemyFlagNotAtBase(bot_state_t *bs) {BotCTFOrders_EnemyFlagNotAtBase588,17158
void BotCTFOrders_BothFlagsAtBase(bot_state_t *bs) {BotCTFOrders_BothFlagsAtBase691,20564
void BotCTFOrders(bot_state_t *bs) {BotCTFOrders832,25584
void BotCreateGroup(bot_state_t *bs, int *teammates, int groupsize) {BotCreateGroup853,26093
void BotTeamOrders(bot_state_t *bs) {BotTeamOrders879,26740
void Bot1FCTFOrders_FlagAtCenter(bot_state_t *bs) {Bot1FCTFOrders_FlagAtCenter948,28171
void Bot1FCTFOrders_TeamHasFlag(bot_state_t *bs) {Bot1FCTFOrders_TeamHasFlag1095,33405
void Bot1FCTFOrders_EnemyHasFlag(bot_state_t *bs) {Bot1FCTFOrders_EnemyHasFlag1298,40502
void Bot1FCTFOrders_EnemyDroppedFlag(bot_state_t *bs) {Bot1FCTFOrders_EnemyDroppedFlag1445,45689
void Bot1FCTFOrders(bot_state_t *bs) {Bot1FCTFOrders1590,50823
void BotObeliskOrders(bot_state_t *bs) {BotObeliskOrders1606,51196
void BotHarvesterOrders(bot_state_t *bs) {BotHarvesterOrders1753,56437
int FindHumanTeamLeader(bot_state_t *bs) {FindHumanTeamLeader1899,61541
void BotTeamAI(bot_state_t *bs) {BotTeamAI1930,62247

game/ai_dmq3.c,11614
#define AREACONTENTS_MOVER	AREACONTENTS_MOVER61,1963
#define AREACONTENTS_MODELNUMSHIFT	AREACONTENTS_MODELNUMSHIFT62,1998
#define AREACONTENTS_MAXMODELNUM	AREACONTENTS_MAXMODELNUM63,2037
#define AREACONTENTS_MODELNUM	AREACONTENTS_MODELNUM64,2076
#define IDEAL_ATTACKDIST	IDEAL_ATTACKDIST66,2166
#define MAX_WAYPOINTS	MAX_WAYPOINTS68,2198
bot_waypoint_t botai_waypoints[MAX_WAYPOINTS];botai_waypoints70,2228
bot_waypoint_t *botai_freewaypoints;botai_freewaypoints71,2275
int gametype;		//game typegametype74,2403
int maxclients;		//maximum number of clientsmaxclients75,2430
vmCvar_t bot_grapple;bot_grapple77,2476
vmCvar_t bot_rocketjump;bot_rocketjump78,2498
vmCvar_t bot_fastchat;bot_fastchat79,2523
vmCvar_t bot_nochat;bot_nochat80,2546
vmCvar_t bot_testrchat;bot_testrchat81,2567
vmCvar_t bot_challenge;bot_challenge82,2591
vmCvar_t bot_predictobstacles;bot_predictobstacles83,2615
vmCvar_t g_spSkill;g_spSkill84,2646
vec3_t lastteleport_origin;		//last teleport event originlastteleport_origin88,2699
float lastteleport_time;		//last teleport event timelastteleport_time89,2757
int max_bspmodelindex;			//maximum BSP model indexmax_bspmodelindex90,2810
bot_goal_t ctf_redflag;ctf_redflag93,2879
bot_goal_t ctf_blueflag;ctf_blueflag94,2903
bot_goal_t ctf_neutralflag;ctf_neutralflag96,2947
bot_goal_t redobelisk;redobelisk97,2975
bot_goal_t blueobelisk;blueobelisk98,2998
bot_goal_t neutralobelisk;neutralobelisk99,3022
#define MAX_ALTROUTEGOALS	MAX_ALTROUTEGOALS102,3057
int altroutegoals_setup;altroutegoals_setup104,3088
aas_altroutegoal_t red_altroutegoals[MAX_ALTROUTEGOALS];red_altroutegoals105,3113
int red_numaltroutegoals;red_numaltroutegoals106,3170
aas_altroutegoal_t blue_altroutegoals[MAX_ALTROUTEGOALS];blue_altroutegoals107,3196
int blue_numaltroutegoals;blue_numaltroutegoals108,3254
void BotSetUserInfo(bot_state_t *bs, char *key, char *value) {BotSetUserInfo116,3342
int BotCTFCarryingFlag(bot_state_t *bs) {BotCTFCarryingFlag130,3687
int BotTeam(bot_state_t *bs) {BotTeam143,3990
int BotOppositeTeam(bot_state_t *bs) {BotOppositeTeam162,4474
bot_goal_t *BotEnemyFlag(bot_state_t *bs) {BotEnemyFlag175,4698
bot_goal_t *BotTeamFlag(bot_state_t *bs) {BotTeamFlag189,4894
qboolean EntityIsDead(aas_entityinfo_t *entinfo) {EntityIsDead204,5091
qboolean EntityCarriesFlag(aas_entityinfo_t *entinfo) {EntityCarriesFlag220,5439
qboolean EntityIsInvisible(aas_entityinfo_t *entinfo) {EntityIsInvisible237,5799
qboolean EntityIsShooting(aas_entityinfo_t *entinfo) {EntityIsShooting253,6084
qboolean EntityIsChatting(aas_entityinfo_t *entinfo) {EntityIsChatting265,6273
qboolean EntityHasQuad(aas_entityinfo_t *entinfo) {EntityHasQuad277,6457
qboolean EntityHasKamikaze(aas_entityinfo_t *entinfo) {EntityHasKamikaze290,6670
qboolean EntityCarriesCubes(aas_entityinfo_t *entinfo) {EntityCarriesCubes302,6864
int Bot1FCTFCarryingFlag(bot_state_t *bs) {Bot1FCTFCarryingFlag319,7217
int BotHarvesterCarryingCubes(bot_state_t *bs) {BotHarvesterCarryingCubes331,7454
void BotRememberLastOrderedTask(bot_state_t *bs) {BotRememberLastOrderedTask345,7762
void BotSetTeamStatus(bot_state_t *bs) {BotSetTeamStatus360,8104
int BotSetLastOrderedTask(bot_state_t *bs) {BotSetLastOrderedTask424,9443
void BotRefuseOrder(bot_state_t *bs) {BotRefuseOrder477,10841
void BotCTFSeekGoals(bot_state_t *bs) {BotCTFSeekGoals493,11202
void BotCTFRetreatGoals(bot_state_t *bs) {BotCTFRetreatGoals776,19791
void Bot1FCTFSeekGoals(bot_state_t *bs) {Bot1FCTFSeekGoals798,20320
void Bot1FCTFRetreatGoals(bot_state_t *bs) {Bot1FCTFRetreatGoals1021,26987
void BotObeliskSeekGoals(bot_state_t *bs) {BotObeliskSeekGoals1044,27621
void BotGoHarvest(bot_state_t *bs) {BotGoHarvest1137,30267
void BotObeliskRetreatGoals(bot_state_t *bs) {BotObeliskRetreatGoals1154,30724
void BotHarvesterSeekGoals(bot_state_t *bs) {BotHarvesterSeekGoals1163,30859
void BotHarvesterRetreatGoals(bot_state_t *bs) {BotHarvesterRetreatGoals1303,34688
void BotTeamGoals(bot_state_t *bs, int retreat) {BotTeamGoals1326,35228
int BotPointAreaNum(vec3_t origin) {BotPointAreaNum1371,36103
char *ClientName(int client, char *name, int size) {ClientName1389,36470
char *ClientSkin(int client, char *skin, int size) {ClientSkin1408,36923
int ClientFromName(char *name) {ClientFromName1426,37363
int ClientOnSameTeamFromName(bot_state_t *bs, char *name) {ClientOnSameTeamFromName1446,37820
char *stristr(char *str, char *charset) {stristr1468,38327
char *EasyClientName(int client, char *buf, int size) {EasyClientName1486,38613
int BotSynonymContext(bot_state_t *bs) {BotSynonymContext1535,39752
void BotChooseWeapon(bot_state_t *bs) {BotChooseWeapon1566,40466
void BotSetupForMovement(bot_state_t *bs) {BotSetupForMovement1587,41052
void BotCheckItemPickup(bot_state_t *bs, int *oldinventory) {BotCheckItemPickup1624,42256
void BotUpdateInventory(bot_state_t *bs) {BotUpdateInventory1718,45373
void BotUpdateBattleInventory(bot_state_t *bs, int enemy) {BotUpdateBattleInventory1796,49780
#define KAMIKAZE_DIST	KAMIKAZE_DIST1814,50246
void BotUseKamikaze(bot_state_t *bs) {BotUseKamikaze1816,50275
void BotUseInvulnerability(bot_state_t *bs) {BotUseInvulnerability1924,53166
void BotBattleUseItems(bot_state_t *bs) {BotBattleUseItems2033,56216
void BotSetTeleportTime(bot_state_t *bs) {BotSetTeleportTime2062,56795
qboolean BotIsDead(bot_state_t *bs) {BotIsDead2074,57035
qboolean BotIsObserver(bot_state_t *bs) {BotIsObserver2083,57175
qboolean BotIntermission(bot_state_t *bs) {BotIntermission2096,57514
qboolean BotInLavaOrSlime(bot_state_t *bs) {BotInLavaOrSlime2107,57802
bot_waypoint_t *BotCreateWayPoint(char *name, vec3_t origin, int areanum) {BotCreateWayPoint2120,58047
bot_waypoint_t *BotFindWayPoint(bot_waypoint_t *waypoints, char *name) {BotFindWayPoint2146,58700
void BotFreeWaypoints(bot_waypoint_t *wp) {BotFreeWaypoints2160,58964
void BotInitWaypoints(void) {BotInitWaypoints2175,59211
int TeamPlayIsOn(void) {TeamPlayIsOn2190,59475
float BotAggression(bot_state_t *bs) {BotAggression2199,59594
float BotFeelingBad(bot_state_t *bs) {BotFeelingBad2247,61313
int BotWantsToRetreat(bot_state_t *bs) {BotWantsToRetreat2268,61660
int BotWantsToChase(bot_state_t *bs) {BotWantsToChase2321,62841
int BotWantsToHelp(bot_state_t *bs) {BotWantsToHelp2372,64059
int BotCanAndWantsToRocketJump(bot_state_t *bs) {BotCanAndWantsToRocketJump2381,64186
int BotHasPersistantPowerupAndWeapon(bot_state_t *bs) {BotHasPersistantPowerupAndWeapon2409,65066
void BotGoCamp(bot_state_t *bs, bot_goal_t *goal) {BotGoCamp2458,66725
int BotWantsToCamp(bot_state_t *bs) {BotWantsToCamp2485,67526
void BotDontAvoid(bot_state_t *bs, char *itemname) {BotDontAvoid2540,69335
void BotGoForPowerups(bot_state_t *bs) {BotGoForPowerups2556,69666
void BotRoamGoal(bot_state_t *bs, vec3_t goal) {BotRoamGoal2575,70142
bot_moveresult_t BotAttackMove(bot_state_t *bs, int tfl) {BotAttackMove2631,71876
int BotSameTeam(bot_state_t *bs, int entnum) {BotSameTeam2768,76054
qboolean InFieldOfVision(vec3_t viewangles, float fov, vec3_t angles)InFieldOfVision2793,76747
float BotEntityVisible(int viewer, vec3_t eye, vec3_t viewangles, float fov, int ent) {BotEntityVisible2825,77371
int BotFindEnemy(bot_state_t *bs, int curenemy) {BotFindEnemy2929,80979
int BotTeamFlagCarrierVisible(bot_state_t *bs) {BotTeamFlagCarrierVisible3054,85079
int BotTeamFlagCarrier(bot_state_t *bs) {BotTeamFlagCarrier3088,85781
int BotEnemyFlagCarrierVisible(bot_state_t *bs) {BotEnemyFlagCarrierVisible3117,86330
void BotVisibleTeamMatesAndEnemies(bot_state_t *bs, int *teammates, int *enemies, float range) {BotVisibleTeamMatesAndEnemies3151,87039
int BotTeamCubeCarrierVisible(bot_state_t *bs) {BotTeamCubeCarrierVisible3198,88072
int BotEnemyCubeCarrierVisible(bot_state_t *bs) {BotEnemyCubeCarrierVisible3227,88768
void BotAimAtEnemy(bot_state_t *bs) {BotAimAtEnemy3261,89466
void BotCheckAttack(bot_state_t *bs) {BotCheckAttack3555,100586
void BotMapScripts(bot_state_t *bs) {BotMapScripts3675,104245
static vec3_t VEC_UP		= {0, -1,  0};VEC_UP3754,106607
static vec3_t MOVEDIR_UP	= {0,  0,  1};MOVEDIR_UP3755,106644
static vec3_t VEC_DOWN		= {0, -2,  0};VEC_DOWN3756,106684
static vec3_t MOVEDIR_DOWN	= {0,  0, -1};MOVEDIR_DOWN3757,106723
void BotSetMovedir(vec3_t angles, vec3_t movedir) {BotSetMovedir3759,106766
int BotModelMinsMaxs(int modelindex, int eType, int contents, vec3_t mins, vec3_t maxs) {BotModelMinsMaxs3778,107113
int BotFuncButtonActivateGoal(bot_state_t *bs, int bspent, bot_activategoal_t *activategoal) {BotFuncButtonActivateGoal3813,107807
int BotFuncDoorActivateGoal(bot_state_t *bs, int bspent, bot_activategoal_t *activategoal) {BotFuncDoorActivateGoal3966,112736
int BotTriggerMultipleActivateGoal(bot_state_t *bs, int bspent, bot_activategoal_t *activategoal) {BotTriggerMultipleActivateGoal4001,113806
int BotPopFromActivateGoalStack(bot_state_t *bs) {BotPopFromActivateGoalStack4053,115239
int BotPushOntoActivateGoalStack(bot_state_t *bs, bot_activategoal_t *activategoal) {BotPushOntoActivateGoalStack4068,115609
void BotClearActivateGoalStack(bot_state_t *bs) {BotClearActivateGoalStack4098,116355
void BotEnableActivateGoalAreas(bot_activategoal_t *activategoal, int enable) {BotEnableActivateGoalAreas4108,116540
int BotIsGoingToActivateEntity(bot_state_t *bs, int entitynum) {BotIsGoingToActivateEntity4123,116908
int BotGetActivateGoal(bot_state_t *bs, int entitynum, bot_activategoal_t *activategoal) {BotGetActivateGoal4156,117681
int BotGoForActivateGoal(bot_state_t *bs, bot_activategoal_t *activategoal) {BotGoForActivateGoal4346,124340
void BotPrintActivateGoalInfo(bot_state_t *bs, bot_activategoal_t *activategoal, int bspent) {BotPrintActivateGoalInfo4373,125082
void BotRandomMove(bot_state_t *bs, bot_moveresult_t *moveresult) {BotRandomMove4404,126045
void BotAIBlocked(bot_state_t *bs, bot_moveresult_t *moveresult, int activate) {BotAIBlocked4429,126736
int BotAIPredictObstacles(bot_state_t *bs, bot_goal_t *goal) {BotAIPredictObstacles4537,130580
void BotCheckConsoleMessages(bot_state_t *bs) {BotCheckConsoleMessages4604,132739
void BotCheckForGrenades(bot_state_t *bs, entityState_t *state) {BotCheckForGrenades4707,136202
void BotCheckForProxMines(bot_state_t *bs, entityState_t *state) {BotCheckForProxMines4721,136565
void BotCheckForKamikazeBody(bot_state_t *bs, entityState_t *state) {BotCheckForKamikazeBody4748,137478
void BotCheckEvents(bot_state_t *bs, entityState_t *state) {BotCheckEvents4765,137850
void BotCheckSnapshot(bot_state_t *bs) {BotCheckSnapshot5012,144256
void BotCheckAir(bot_state_t *bs) {BotCheckAir5051,145313
bot_goal_t *BotAlternateRoute(bot_state_t *bs, bot_goal_t *goal) {BotAlternateRoute5065,145608
int BotGetAlternateRouteGoal(bot_state_t *bs, int base) {BotGetAlternateRouteGoal5090,146277
void BotSetupAlternativeRouteGoals(void) {BotSetupAlternativeRouteGoals5127,147167
void BotDeathmatchAI(bot_state_t *bs, float thinktime) {BotDeathmatchAI5207,150262
void BotSetEntityNumForGoalWithModel(bot_goal_t *goal, int eType, char *modelname) {BotSetEntityNumForGoalWithModel5300,153182
void BotSetEntityNumForGoal(bot_goal_t *goal, char *classname) {BotSetEntityNumForGoal5330,153800
int BotGoalForBSPEntity( char *classname, bot_goal_t *goal ) {BotGoalForBSPEntity5356,154292
void BotSetupDeathmatchAI(void) {BotSetupDeathmatchAI5388,155139
void BotShutdownDeathmatchAI(void) {BotShutdownDeathmatchAI5458,158056

game/g_svcmds.c,944
typedef struct ipFilter_sipFilter_s62,2303
	unsigned	mask;mask64,2331
	unsigned	compare;compare65,2347
} ipFilter_t;ipFilter_t66,2366
#define	MAX_IPFILTERS	MAX_IPFILTERS68,2381
static ipFilter_t	ipFilters[MAX_IPFILTERS];ipFilters70,2409
static int			numIPFilters;numIPFilters71,2453
static qboolean StringToFilter (char *s, ipFilter_t *f)StringToFilter78,2538
static void UpdateIPBans (void)UpdateIPBans133,3244
qboolean G_FilterPacket (char *from)G_FilterPacket177,4094
static void AddIP( char *str )AddIP211,4599
void G_ProcessIPBans(void) G_ProcessIPBans239,5054
void Svcmd_AddIP_f (void)Svcmd_AddIP_f264,5402
void Svcmd_RemoveIP_f (void)Svcmd_RemoveIP_f284,5657
void	Svcmd_EntityList_f (void) {Svcmd_EntityList_f319,6238
gclient_t	*ClientForString( const char *s ) {ClientForString378,7444
void	Svcmd_ForceTeam_f( void ) {Svcmd_ForceTeam_f422,8311
qboolean	ConsoleCommand( void ) {ConsoleCommand446,8702

game/ai_chat.h,0

game/g_team.h,1967
#define CTF_CAPTURE_BONUS	CTF_CAPTURE_BONUS26,998
#define CTF_TEAM_BONUS	CTF_TEAM_BONUS27,1058
#define CTF_RECOVERY_BONUS	CTF_RECOVERY_BONUS28,1122
#define CTF_FLAG_BONUS	CTF_FLAG_BONUS29,1183
#define CTF_FRAG_CARRIER_BONUS	CTF_FRAG_CARRIER_BONUS30,1254
#define CTF_FLAG_RETURN_TIME	CTF_FLAG_RETURN_TIME31,1337
#define CTF_CARRIER_DANGER_PROTECT_BONUS	CTF_CARRIER_DANGER_PROTECT_BONUS33,1402
#define CTF_CARRIER_PROTECT_BONUS	CTF_CARRIER_PROTECT_BONUS34,1514
#define CTF_FLAG_DEFENSE_BONUS	CTF_FLAG_DEFENSE_BONUS35,1640
#define CTF_RETURN_FLAG_ASSIST_BONUS	CTF_RETURN_FLAG_ASSIST_BONUS36,1757
#define CTF_FRAG_CARRIER_ASSIST_BONUS	CTF_FRAG_CARRIER_ASSIST_BONUS37,1881
#define CTF_CAPTURE_BONUS	CTF_CAPTURE_BONUS41,2008
#define CTF_TEAM_BONUS	CTF_TEAM_BONUS42,2066
#define CTF_RECOVERY_BONUS	CTF_RECOVERY_BONUS43,2129
#define CTF_FLAG_BONUS	CTF_FLAG_BONUS44,2189
#define CTF_FRAG_CARRIER_BONUS	CTF_FRAG_CARRIER_BONUS45,2259
#define CTF_FLAG_RETURN_TIME	CTF_FLAG_RETURN_TIME46,2341
#define CTF_CARRIER_DANGER_PROTECT_BONUS	CTF_CARRIER_DANGER_PROTECT_BONUS48,2406
#define CTF_CARRIER_PROTECT_BONUS	CTF_CARRIER_PROTECT_BONUS49,2518
#define CTF_FLAG_DEFENSE_BONUS	CTF_FLAG_DEFENSE_BONUS50,2644
#define CTF_RETURN_FLAG_ASSIST_BONUS	CTF_RETURN_FLAG_ASSIST_BONUS51,2760
#define CTF_FRAG_CARRIER_ASSIST_BONUS	CTF_FRAG_CARRIER_ASSIST_BONUS52,2883
#define CTF_TARGET_PROTECT_RADIUS	CTF_TARGET_PROTECT_RADIUS56,3010
#define CTF_ATTACKER_PROTECT_RADIUS	CTF_ATTACKER_PROTECT_RADIUS57,3138
#define CTF_CARRIER_DANGER_PROTECT_TIMEOUT	CTF_CARRIER_DANGER_PROTECT_TIMEOUT59,3285
#define CTF_FRAG_CARRIER_ASSIST_TIMEOUT	CTF_FRAG_CARRIER_ASSIST_TIMEOUT60,3333
#define CTF_RETURN_FLAG_ASSIST_TIMEOUT	CTF_RETURN_FLAG_ASSIST_TIMEOUT61,3380
#define CTF_GRAPPLE_SPEED	CTF_GRAPPLE_SPEED63,3427
#define CTF_GRAPPLE_PULL_SPEED	CTF_GRAPPLE_PULL_SPEED64,3491
#define OVERLOAD_ATTACK_BASE_SOUND_TIME	OVERLOAD_ATTACK_BASE_SOUND_TIME66,3559

game/bg_local.h,784
#define	MIN_WALK_NORMAL	MIN_WALK_NORMAL25,1043
#define	STEPSIZE	STEPSIZE27,1109
#define	JUMP_VELOCITY	JUMP_VELOCITY29,1131
#define	TIMER_LAND	TIMER_LAND31,1158
#define	TIMER_GESTURE	TIMER_GESTURE32,1182
#define	OVERCLIP	OVERCLIP34,1216
	vec3_t		forward, right, up;forward40,1406
	vec3_t		forward, right, up;right40,1406
	vec3_t		forward, right, up;up40,1406
	float		frametime;frametime41,1435
	int			msec;msec43,1455
	qboolean	walking;walking45,1469
	qboolean	groundPlane;groundPlane46,1488
	trace_t		groundTrace;groundTrace47,1511
	float		impactSpeed;impactSpeed49,1535
	vec3_t		previous_origin;previous_origin51,1557
	vec3_t		previous_velocity;previous_velocity52,1583
	int			previous_waterlevel;previous_waterlevel53,1611
} pml_t;pml_t54,1639

game/bg_pmove.c,3482
pmove_t		*pm;pm30,1186
pml_t		pml;pml31,1200
float	pm_stopspeed = 100.0f;pm_stopspeed34,1236
float	pm_duckScale = 0.25f;pm_duckScale35,1265
float	pm_swimScale = 0.50f;pm_swimScale36,1293
float	pm_wadeScale = 0.70f;pm_wadeScale37,1321
float	pm_accelerate = 10.0f;pm_accelerate39,1350
float	pm_airaccelerate = 1.0f;pm_airaccelerate40,1379
float	pm_wateraccelerate = 4.0f;pm_wateraccelerate41,1410
float	pm_flyaccelerate = 8.0f;pm_flyaccelerate42,1443
float	pm_friction = 6.0f;pm_friction44,1475
float	pm_waterfriction = 1.0f;pm_waterfriction45,1501
float	pm_flightfriction = 3.0f;pm_flightfriction46,1532
float	pm_spectatorfriction = 5.0f;pm_spectatorfriction47,1564
int		c_pmove = 0;c_pmove49,1600
void PM_AddEvent( int newEvent ) {PM_AddEvent58,1671
void PM_AddTouchEnt( int entityNum ) {PM_AddTouchEnt67,1823
static void PM_StartTorsoAnim( int anim ) {PM_StartTorsoAnim94,2245
static void PM_StartLegsAnim( int anim ) {PM_StartLegsAnim101,2432
static void PM_ContinueLegsAnim( int anim ) {PM_ContinueLegsAnim112,2703
static void PM_ContinueTorsoAnim( int anim ) {PM_ContinueTorsoAnim122,2935
static void PM_ForceLegsAnim( int anim ) {PM_ForceLegsAnim132,3171
void PM_ClipVelocity( vec3_t in, vec3_t normal, vec3_t out, float overbounce ) {PM_ClipVelocity145,3365
static void PM_Friction( void ) {PM_Friction172,3808
static void PM_Accelerate( vec3_t wishdir, float wishspeed, float accel ) {PM_Accelerate240,5188
static float PM_CmdScale( usercmd_t *cmd ) {PM_CmdScale290,6335
static void PM_SetMovementDir( void ) {PM_SetMovementDir322,6937
static qboolean PM_CheckJump( void ) {PM_CheckJump359,8125
static qboolean	PM_CheckWaterJump( void ) {PM_CheckWaterJump400,9011
static void PM_WaterJumpMove( void ) {PM_WaterJumpMove452,9984
static void PM_WaterMove( void ) {PM_WaterMove471,10358
static void PM_InvulnerabilityMove( void ) {PM_InvulnerabilityMove545,12023
static void PM_FlyMove( void ) {PM_FlyMove560,12268
static void PM_AirMove( void ) {PM_AirMove601,12953
static void PM_GrappleMove( void ) {PM_GrappleMove666,14367
static void PM_WalkMove( void ) {PM_WalkMove692,14820
static void PM_DeadMove( void ) {PM_DeadMove817,17979
static void PM_NoclipMove( void ) {PM_NoclipMove842,18372
static int PM_FootstepForSurface( void ) {PM_FootstepForSurface906,19732
static void PM_CrashLand( void ) {PM_CrashLand924,20064
static int PM_CorrectAllSolid( trace_t *trace ) {PM_CorrectAllSolid1024,22041
static void PM_GroundTraceMissed( void ) {PM_GroundTraceMissed1069,23056
static void PM_GroundTrace( void ) {PM_GroundTrace1107,24020
static void PM_SetWaterLevel( void ) {PM_SetWaterLevel1205,26444
static void PM_CheckDuck (void)PM_CheckDuck1249,27369
static void PM_Footsteps( void ) {PM_Footsteps1322,28761
static void PM_WaterEvents( void ) {		// FIXME?PM_WaterEvents1433,31510
static void PM_BeginWeaponChange( int weapon ) {PM_BeginWeaponChange1469,32216
static void PM_FinishWeaponChange( void ) {PM_FinishWeaponChange1494,32674
static void PM_TorsoAnimation( void ) {PM_TorsoAnimation1519,33110
static void PM_Weapon( void ) {PM_Weapon1538,33452
static void PM_Animate( void ) {PM_Animate1714,37075
static void PM_DropTimers( void ) {PM_DropTimers1762,38440
void PM_UpdateViewAngles( playerState_t *ps, const usercmd_t *cmd ) {PM_UpdateViewAngles1797,39148
void PmoveSingle (pmove_t *pmove) {PmoveSingle1836,40013
void Pmove (pmove_t *pmove) {Pmove2026,44564

game/g_client.c,2142
static vec3_t	playerMins = {-15, -15, -24};playerMins27,1064
static vec3_t	playerMaxs = {15, 15, 32};playerMaxs28,1108
void SP_info_player_deathmatch( gentity_t *ent ) {SP_info_player_deathmatch37,1510
void SP_info_player_start(gentity_t *ent) {SP_info_player_start53,1831
void SP_info_player_intermission( gentity_t *ent ) {SP_info_player_intermission61,2124
qboolean SpotWouldTelefrag( gentity_t *spot ) {SpotWouldTelefrag81,2414
#define	MAX_SPAWN_POINTS	MAX_SPAWN_POINTS110,3012
gentity_t *SelectNearestDeathmatchSpawnPoint( vec3_t from ) {SelectNearestDeathmatchSpawnPoint111,3041
#define	MAX_SPAWN_POINTS	MAX_SPAWN_POINTS142,3642
gentity_t *SelectRandomDeathmatchSpawnPoint( void ) {SelectRandomDeathmatchSpawnPoint143,3671
gentity_t *SelectRandomFurthestSpawnPoint ( vec3_t avoidPoint, vec3_t origin, vec3_t angles ) {SelectRandomFurthestSpawnPoint175,4308
gentity_t *SelectSpawnPoint ( vec3_t avoidPoint, vec3_t origin, vec3_t angles ) {SelectSpawnPoint241,5860
gentity_t *SelectInitialSpawnPoint( vec3_t origin, vec3_t angles ) {SelectInitialSpawnPoint281,6764
gentity_t *SelectSpectatorSpawnPoint( vec3_t origin, vec3_t angles ) {SelectSpectatorSpawnPoint308,7277
void InitBodyQue (void) {InitBodyQue330,7703
void BodySink( gentity_t *ent ) {BodySink350,8044
void CopyToBodyQue( gentity_t *ent ) {CopyToBodyQue369,8480
void SetClientViewAngle( gentity_t *ent, vec3_t angle ) {SetClientViewAngle480,11197
void respawn( gentity_t *ent ) {respawn499,11597
team_t TeamCount( int ignoreClientNum, int team ) {TeamCount517,11922
int TeamLeader( int team ) {TeamLeader543,12364
team_t PickTeam( int ignoreClientNum ) {PickTeam566,12713
static void ClientCleanName( const char *in, char *out, int outSize ) {ClientCleanName610,13577
void ClientUserinfoChanged( int clientNum ) {ClientUserinfoChanged703,15078
char *ClientConnect( int clientNum, qboolean firstTime, qboolean isBot ) {ClientConnect907,21379
void ClientBegin( int clientNum ) {ClientBegin997,23930
void ClientSpawn(gentity_t *ent) {ClientSpawn1055,25444
void ClientDisconnect( int clientNum ) {ClientDisconnect1280,31990

game/g_main.c,5569
level_locals_t	level;level26,1000
	vmCvar_t	*vmCvar;vmCvar29,1040
	char		*cvarName;cvarName30,1059
	char		*defaultString;defaultString31,1077
	int			cvarFlags;cvarFlags32,1100
	int			modificationCount;  // for tracking changesmodificationCount33,1118
	qboolean	trackChange;	    // track this variable, and announce if changedtrackChange34,1169
  qboolean teamShader;        // track and if changed, update shader stateteamShader35,1244
} cvarTable_t;cvarTable_t36,1319
gentity_t		g_entities[MAX_GENTITIES];g_entities38,1335
gclient_t		g_clients[MAX_CLIENTS];g_clients39,1373
vmCvar_t	g_gametype;g_gametype41,1409
vmCvar_t	g_dmflags;g_dmflags42,1430
vmCvar_t	g_fraglimit;g_fraglimit43,1450
vmCvar_t	g_timelimit;g_timelimit44,1472
vmCvar_t	g_capturelimit;g_capturelimit45,1494
vmCvar_t	g_friendlyFire;g_friendlyFire46,1519
vmCvar_t	g_password;g_password47,1544
vmCvar_t	g_needpass;g_needpass48,1565
vmCvar_t	g_maxclients;g_maxclients49,1586
vmCvar_t	g_maxGameClients;g_maxGameClients50,1609
vmCvar_t	g_dedicated;g_dedicated51,1636
vmCvar_t	g_speed;g_speed52,1658
vmCvar_t	g_gravity;g_gravity53,1676
vmCvar_t	g_cheats;g_cheats54,1696
vmCvar_t	g_knockback;g_knockback55,1715
vmCvar_t	g_quadfactor;g_quadfactor56,1737
vmCvar_t	g_forcerespawn;g_forcerespawn57,1760
vmCvar_t	g_inactivity;g_inactivity58,1785
vmCvar_t	g_debugMove;g_debugMove59,1808
vmCvar_t	g_debugDamage;g_debugDamage60,1830
vmCvar_t	g_debugAlloc;g_debugAlloc61,1854
vmCvar_t	g_weaponRespawn;g_weaponRespawn62,1877
vmCvar_t	g_weaponTeamRespawn;g_weaponTeamRespawn63,1903
vmCvar_t	g_motd;g_motd64,1933
vmCvar_t	g_synchronousClients;g_synchronousClients65,1950
vmCvar_t	g_warmup;g_warmup66,1981
vmCvar_t	g_doWarmup;g_doWarmup67,2000
vmCvar_t	g_restarted;g_restarted68,2021
vmCvar_t	g_logfile;g_logfile69,2043
vmCvar_t	g_logfileSync;g_logfileSync70,2063
vmCvar_t	g_blood;g_blood71,2087
vmCvar_t	g_podiumDist;g_podiumDist72,2105
vmCvar_t	g_podiumDrop;g_podiumDrop73,2128
vmCvar_t	g_allowVote;g_allowVote74,2151
vmCvar_t	g_teamAutoJoin;g_teamAutoJoin75,2173
vmCvar_t	g_teamForceBalance;g_teamForceBalance76,2198
vmCvar_t	g_banIPs;g_banIPs77,2227
vmCvar_t	g_filterBan;g_filterBan78,2246
vmCvar_t	g_smoothClients;g_smoothClients79,2268
vmCvar_t	pmove_fixed;pmove_fixed80,2294
vmCvar_t	pmove_msec;pmove_msec81,2316
vmCvar_t	g_rankings;g_rankings82,2337
vmCvar_t	g_listEntity;g_listEntity83,2358
vmCvar_t	g_obeliskHealth;g_obeliskHealth85,2400
vmCvar_t	g_obeliskRegenPeriod;g_obeliskRegenPeriod86,2426
vmCvar_t	g_obeliskRegenAmount;g_obeliskRegenAmount87,2457
vmCvar_t	g_obeliskRespawnDelay;g_obeliskRespawnDelay88,2488
vmCvar_t	g_cubeTimeout;g_cubeTimeout89,2520
vmCvar_t	g_redteam;g_redteam90,2544
vmCvar_t	g_blueteam;g_blueteam91,2564
vmCvar_t	g_singlePlayer;g_singlePlayer92,2585
vmCvar_t	g_enableDust;g_enableDust93,2610
vmCvar_t	g_enableBreath;g_enableBreath94,2633
vmCvar_t	g_proxMineTimeout;g_proxMineTimeout95,2658
static cvarTable_t		gameCvarTable[] = {gameCvarTable98,2694
static int gameCvarTableSize = sizeof( gameCvarTable ) / sizeof( gameCvarTable[0] );gameCvarTableSize184,6756
intptr_t vmMain( int command, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11  ) {vmMain201,7174
void QDECL G_Printf( const char *fmt, ... ) {G_Printf239,8080
void QDECL G_Error( const char *fmt, ... ) {G_Error250,8281
void G_FindTeams( void ) {G_FindTeams272,8805
void G_RemapTeamShaders( void ) {G_RemapTeamShaders317,9656
void G_RegisterCvars( void ) {G_RegisterCvars337,10254
void G_UpdateCvars( void ) {G_UpdateCvars371,11025
void G_InitGame( int levelTime, int randomSeed, int restart ) {G_InitGame406,11686
void G_ShutdownGame( int restart ) {G_ShutdownGame516,14546
void QDECL Com_Error ( int level, const char *error, ... ) {Com_Error537,15056
void QDECL Com_Printf( const char *msg, ... ) {Com_Printf548,15277
void AddTournamentPlayer( void ) {AddTournamentPlayer575,15811
void RemoveTournamentLoser( void ) {RemoveTournamentLoser627,16861
void RemoveTournamentWinner( void ) {RemoveTournamentWinner649,17240
void AdjustTournamentScores( void ) {AdjustTournamentScores671,17620
int QDECL SortRanks( const void *a, const void *b ) {SortRanks694,18107
void CalculateRanks( void ) {CalculateRanks755,19453
void SendScoreboardMessageToAllClients( void ) {SendScoreboardMessageToAllClients880,23750
void MoveClientToIntermission( gentity_t *ent ) {MoveClientToIntermission898,24198
void FindIntermissionPoint( void ) {FindIntermissionPoint930,25010
void BeginIntermission( void ) {BeginIntermission958,25798
void ExitLevel (void) {ExitLevel1014,26916
void QDECL G_LogPrintf( const char *fmt, ... ) {G_LogPrintf1080,28720
void LogExit( const char *string ) {LogExit1116,29374
void CheckIntermissionExit( void ) {CheckIntermissionExit1189,31211
qboolean ScoreIsTied( void ) {ScoreIsTied1274,32876
void CheckExitRules( void ) {CheckExitRules1300,33462
void CheckTournament( void ) {CheckTournament1409,36119
void CheckVote( void ) {CheckVote1525,39268
void PrintTeam(int team, char *message) {PrintTeam1559,40206
void SetLeader(int team, int client) {SetLeader1574,40465
void CheckTeamLeader( int team ) {CheckTeamLeader1603,41338
void CheckTeamVote( int team ) {CheckTeamVote1635,42031
void CheckCvars( void ) {CheckCvars1681,43262
void G_RunThink (gentity_t *ent) {G_RunThink1701,43671
void G_RunFrame( int levelTime ) {G_RunFrame1726,44031

game/g_spawn.c,1888
qboolean	G_SpawnString( const char *key, const char *defaultString, char **out ) {G_SpawnString26,1000
qboolean	G_SpawnFloat( const char *key, const char *defaultString, float *out ) {G_SpawnFloat45,1423
qboolean	G_SpawnInt( const char *key, const char *defaultString, int *out ) {G_SpawnInt54,1627
qboolean	G_SpawnVector( const char *key, const char *defaultString, float *out ) {G_SpawnVector63,1827
	F_INT, F_INT78,2146
	F_FLOAT,F_FLOAT79,2155
	F_LSTRING,			// string on disk, pointer in memory, TAG_LEVELF_LSTRING80,2165
	F_GSTRING,			// string on disk, pointer in memory, TAG_GAMEF_GSTRING81,2227
	F_VECTOR,F_VECTOR82,2288
	F_ANGLEHACK,F_ANGLEHACK83,2299
	F_ENTITY,			// index on disk, pointer in memoryF_ENTITY84,2313
	F_ITEM,				// index on disk, pointer in memoryF_ITEM85,2362
	F_CLIENT,			// index on disk, pointer in memoryF_CLIENT86,2410
	F_IGNOREF_IGNORE87,2459
} fieldtype_t;fieldtype_t88,2469
	char	*name;name92,2502
	int		ofs;ofs93,2515
	fieldtype_t	type;type94,2526
	int		flags;flags95,2545
} field_t;field_t96,2558
field_t fields[] = {fields98,2570
	char	*name;name125,3405
	void	(*spawn)(gentity_t *ent);spawn126,3418
} spawn_t;spawn_t127,3450
void SP_item_botroam( gentity_t *ent ) { }SP_item_botroam194,5728
spawn_t	spawns[] = {spawns196,5772
qboolean G_CallSpawn( gentity_t *ent ) {G_CallSpawn280,8576
char *G_NewString( const char *string ) {G_NewString317,9333
void G_ParseField( const char *key, const char *value, gentity_t *ent ) {G_ParseField355,9847
void G_SpawnGEntityFromSpawnVars( void ) {G_SpawnGEntityFromSpawnVars408,10933
char *G_AddSpawnVarToken( const char *string ) {G_AddSpawnVarToken487,12622
qboolean G_ParseSpawnVars( void ) {G_ParseSpawnVars514,13186
void SP_worldspawn( void ) {SP_worldspawn569,14572
void G_SpawnEntitiesFromString( void ) {G_SpawnEntitiesFromString623,16026

game/ai_dmnet.c,3069
#define GFL_AIR	GFL_AIR60,1989
int numnodeswitches;numnodeswitches62,2012
char nodeswitch[MAX_NODESWITCHES+1][144];nodeswitch63,2033
#define LOOKAHEAD_DISTANCE	LOOKAHEAD_DISTANCE65,2076
void BotResetNodeSwitches(void) {BotResetNodeSwitches72,2175
void BotDumpNodeSwitches(bot_state_t *bs) {BotDumpNodeSwitches81,2298
void BotRecordNodeSwitch(bot_state_t *bs, char *node, char *str, char *s) {BotRecordNodeSwitch98,2734
int BotGetAirGoal(bot_state_t *bs, bot_goal_t *goal) {BotGetAirGoal116,3199
int BotGoForAir(bot_state_t *bs, int tfl, bot_goal_t *ltg, float range) {BotGoForAir156,4270
int BotNearbyGoal(bot_state_t *bs, int tfl, bot_goal_t *ltg, float range) {BotNearbyGoal191,5120
int BotReachedGoal(bot_state_t *bs, bot_goal_t *goal) {BotReachedGoal225,6003
int BotGetItemLongTermGoal(bot_state_t *bs, int tfl, bot_goal_t *goal) {BotGetItemLongTermGoal278,7503
int BotGetLongTermGoal(bot_state_t *bs, int tfl, int retreat, bot_goal_t *goal) {BotGetLongTermGoal332,9263
int BotLongTermGoal(bot_state_t *bs, int tfl, int retreat, bot_goal_t *goal) {BotLongTermGoal1042,34334
void AIEnter_Intermission(bot_state_t *bs, char *s) {AIEnter_Intermission1130,37445
int AINode_Intermission(bot_state_t *bs) {AINode_Intermission1146,37797
void AIEnter_Observer(bot_state_t *bs, char *s) {AIEnter_Observer1165,38160
int AINode_Observer(bot_state_t *bs) {AINode_Observer1177,38392
void AIEnter_Stand(bot_state_t *bs, char *s) {AIEnter_Stand1190,38618
int AINode_Stand(bot_state_t *bs) {AINode_Stand1201,38839
void AIEnter_Respawn(bot_state_t *bs, char *s) {AIEnter_Respawn1234,39628
int AINode_Respawn(bot_state_t *bs) {AINode_Respawn1260,40252
int BotSelectActivateWeapon(bot_state_t *bs) {BotSelectActivateWeapon1293,40936
void BotClearPath(bot_state_t *bs, bot_moveresult_t *moveresult) {BotClearPath1327,42245
void AIEnter_Seek_ActivateEntity(bot_state_t *bs, char *s) {AIEnter_Seek_ActivateEntity1433,45915
int AINode_Seek_ActivateEntity(bot_state_t *bs) {AINode_Seek_ActivateEntity1443,46145
void AIEnter_Seek_NBG(bot_state_t *bs, char *s) {AIEnter_Seek_NBG1643,52408
int AINode_Seek_NBG(bot_state_t *bs) {AINode_Seek_NBG1662,52786
void AIEnter_Seek_LTG(bot_state_t *bs, char *s) {AIEnter_Seek_LTG1776,56156
int AINode_Seek_LTG(bot_state_t *bs)AINode_Seek_LTG1795,56534
void AIEnter_Battle_Fight(bot_state_t *bs, char *s) {AIEnter_Battle_Fight1963,61142
void AIEnter_Battle_SuicidalFight(bot_state_t *bs, char *s) {AIEnter_Battle_SuicidalFight1974,61386
int AINode_Battle_Fight(bot_state_t *bs) {AINode_Battle_Fight1986,61670
void AIEnter_Battle_Chase(bot_state_t *bs, char *s) {AIEnter_Battle_Chase2140,65768
int AINode_Battle_Chase(bot_state_t *bs)AINode_Battle_Chase2151,66004
void AIEnter_Battle_Retreat(bot_state_t *bs, char *s) {AIEnter_Battle_Retreat2280,69835
int AINode_Battle_Retreat(bot_state_t *bs) {AINode_Battle_Retreat2290,70048
void AIEnter_Battle_NBG(bot_state_t *bs, char *s) {AIEnter_Battle_NBG2469,75265
int AINode_Battle_NBG(bot_state_t *bs) {AINode_Battle_NBG2479,75462

game/g_missile.c,1691
#define	MISSILE_PRESTEP_TIME	MISSILE_PRESTEP_TIME25,999
void G_BounceMissile( gentity_t *ent, trace_t *trace ) {G_BounceMissile33,1089
void G_ExplodeMissile( gentity_t *ent ) {G_ExplodeMissile66,2040
static void ProximityMine_Explode( gentity_t *mine ) {ProximityMine_Explode101,2795
static void ProximityMine_Die( gentity_t *ent, gentity_t *inflictor, gentity_t *attacker, int damage, int mod ) {ProximityMine_Die115,3067
void ProximityMine_Trigger( gentity_t *trigger, gentity_t *other, trace_t *trace ) {ProximityMine_Trigger125,3317
static void ProximityMine_Activate( gentity_t *ent ) {ProximityMine_Activate166,4267
static void ProximityMine_ExplodeOnPlayer( gentity_t *mine ) {ProximityMine_ExplodeOnPlayer205,5168
static void ProximityMine_Player( gentity_t *mine, gentity_t *player ) {ProximityMine_Player230,5880
void G_MissileImpact( gentity_t *ent, trace_t *trace ) {G_MissileImpact269,6768
void G_RunMissile( gentity_t *ent ) {G_RunMissile447,11797
gentity_t *fire_plasma (gentity_t *self, vec3_t start, vec3_t dir) {fire_plasma521,13879
gentity_t *fire_grenade (gentity_t *self, vec3_t start, vec3_t dir) {fire_grenade562,14965
gentity_t *fire_bfg (gentity_t *self, vec3_t start, vec3_t dir) {fire_bfg604,16093
gentity_t *fire_rocket (gentity_t *self, vec3_t start, vec3_t dir) {fire_rocket644,17161
gentity_t *fire_grapple (gentity_t *self, vec3_t start, vec3_t dir) {fire_grapple681,18171
#define NAILGUN_SPREAD	NAILGUN_SPREAD719,19175
gentity_t *fire_nail( gentity_t *self, vec3_t start, vec3_t forward, vec3_t right, vec3_t up ) {fire_nail721,19203
gentity_t *fire_prox( gentity_t *self, vec3_t start, vec3_t dir ) {fire_prox769,20390

game/g_session.c,371
void G_WriteClientSessionData( gclient_t *client ) {G_WriteClientSessionData43,1354
void G_ReadSessionData( gclient_t *client ) {G_ReadSessionData69,1840
void G_InitSessionData( gclient_t *client, char *userinfo ) {G_InitSessionData102,2558
void G_InitWorldSession( void ) {G_InitWorldSession159,3883
void G_WriteSessionData( void ) {G_WriteSessionData180,4314

game/bg_slidemove.c,184
#define	MAX_CLIP_PLANES	MAX_CLIP_PLANES44,1343
qboolean	PM_SlideMove( qboolean gravity ) {PM_SlideMove45,1369
void PM_StepSlideMove( qboolean gravity ) {PM_StepSlideMove233,6308

game/g_trigger.c,1689
void InitTrigger( gentity_t *self ) {InitTrigger26,1000
void multi_wait( gentity_t *ent ) {multi_wait37,1366
void multi_trigger( gentity_t *ent, gentity_t *activator ) {multi_trigger45,1588
void Use_Multi( gentity_t *ent, gentity_t *other, gentity_t *activator ) {Use_Multi76,2396
void Touch_Multi( gentity_t *self, gentity_t *other, trace_t *trace ) {Touch_Multi80,2508
void SP_trigger_multiple( gentity_t *ent ) {SP_trigger_multiple94,2974
void trigger_always_think( gentity_t *ent ) {trigger_always_think120,3544
void SP_trigger_always (gentity_t *ent) {SP_trigger_always128,3759
void trigger_push_touch (gentity_t *self, gentity_t *other, trace_t *trace ) {trigger_push_touch143,4126
void AimAtTarget( gentity_t *self ) {AimAtTarget160,4405
void SP_trigger_push( gentity_t *self ) {SP_trigger_push199,5336
void Use_target_push( gentity_t *self, gentity_t *other, gentity_t *activator ) {Use_target_push216,5760
void SP_target_push( gentity_t *self ) {SP_target_push242,6511
void trigger_teleporter_touch (gentity_t *self, gentity_t *other, trace_t *trace ) {trigger_teleporter_touch271,7291
void SP_trigger_teleport( gentity_t *self ) {SP_trigger_teleport305,8187
void hurt_use( gentity_t *self, gentity_t *other, gentity_t *activator ) {hurt_use346,9239
void hurt_touch( gentity_t *self, gentity_t *other, trace_t *trace ) {hurt_touch354,9411
void SP_trigger_hurt( gentity_t *self ) {SP_trigger_hurt383,9991
void func_timer_think( gentity_t *self ) {func_timer_think426,10947
void func_timer_use( gentity_t *self, gentity_t *other, gentity_t *activator ) {func_timer_use432,11146
void SP_func_timer( gentity_t *self ) {SP_func_timer445,11388

game/g_bot.c,2380
static int		g_numBots;g_numBots28,1012
static char		*g_botInfos[MAX_BOTS];g_botInfos29,1035
int				g_numArenas;g_numArenas32,1073
static char		*g_arenaInfos[MAX_ARENAS];g_arenaInfos33,1093
#define BOT_BEGIN_DELAY_BASE	BOT_BEGIN_DELAY_BASE36,1135
#define BOT_BEGIN_DELAY_INCREMENT	BOT_BEGIN_DELAY_INCREMENT37,1170
#define BOT_SPAWN_QUEUE_DEPTH	BOT_SPAWN_QUEUE_DEPTH39,1210
	int		clientNum;clientNum42,1261
	int		spawnTime;spawnTime43,1278
} botSpawnQueue_t;botSpawnQueue_t44,1295
static botSpawnQueue_t	botSpawnQueue[BOT_SPAWN_QUEUE_DEPTH];botSpawnQueue46,1315
vmCvar_t bot_minplayers;bot_minplayers48,1377
float trap_Cvar_VariableValue( const char *var_name ) {trap_Cvar_VariableValue54,1485
int G_ParseInfos( char *buf, int max, char *infos[] ) {G_ParseInfos68,1694
static void G_LoadArenasFromFile( char *filename ) {G_LoadArenasFromFile124,2787
static void G_LoadArenas( void ) {G_LoadArenas152,3452
const char *G_GetArenaInfoByMap( const char *map ) {G_GetArenaInfoByMap193,4373
static void PlayerIntroSound( const char *modelAndSkin ) {PlayerIntroSound211,4663
void G_AddRandomBot( int team ) {G_AddRandomBot236,5119
int G_RemoveRandomBot( int team ) {G_RemoveRandomBot306,6778
int G_CountHumanPlayers( int team ) {G_CountHumanPlayers332,7305
int G_CountBotPlayers( int team ) {G_CountBotPlayers358,7751
void G_CheckMinimumPlayers( void ) {G_CheckMinimumPlayers393,8388
void G_CheckBotSpawn( void ) {G_CheckBotSpawn468,10545
static void AddBotToSpawnQueue( int clientNum, int delay ) {AddBotToSpawnQueue497,11153
void G_RemoveQueuedBotBegin( int clientNum ) {G_RemoveQueuedBotBegin521,11663
qboolean G_BotConnect( int clientNum, qboolean restart ) {G_BotConnect538,11926
static void G_AddBot( const char *name, float skill, const char *team, int delay, char *altname) {G_AddBot562,12588
void Svcmd_AddBot_f( void ) {Svcmd_AddBot_f703,15949
void Svcmd_BotList_f( void ) {Svcmd_BotList_f762,17199
static void G_SpawnBots( char *botList, int baseDelay ) {G_SpawnBots797,18086
static void G_LoadBotsFromFile( char *filename ) {G_LoadBotsFromFile855,19092
static void G_LoadBots( void ) {G_LoadBots883,19737
char *G_GetBotInfoByNumber( int num ) {G_GetBotInfoByNumber925,20587
char *G_GetBotInfoByName( const char *name ) {G_GetBotInfoByName939,20836
void G_InitBots( qboolean restart ) {G_InitBots958,21134

game/g_mem.c,280
#define POOLSIZE	POOLSIZE31,1019
static char		memoryPool[POOLSIZE];memoryPool33,1050
static int		allocPoint;allocPoint34,1085
void *G_Alloc( int size ) {G_Alloc36,1110
void G_InitMemory( void ) {G_InitMemory55,1495
void Svcmd_GameMem_f( void ) {Svcmd_GameMem_f59,1543

game/g_combat.c,1842
void ScorePlum( gentity_t *ent, vec3_t origin, int score ) {ScorePlum33,1057
void AddScore( gentity_t *ent, vec3_t origin, int score ) {AddScore52,1466
void TossClientItems( gentity_t *self ) {TossClientItems76,1987
void TossClientCubes( gentity_t *self ) {TossClientCubes138,3612
void TossClientPersistantPowerups( gentity_t *ent ) {TossClientPersistantPowerups188,4692
void LookAtKiller( gentity_t *self, gentity_t *inflictor, gentity_t *attacker ) {LookAtKiller217,5207
void GibEntity( gentity_t *self, int killer ) {GibEntity242,5822
void body_die( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int meansOfDeath ) {body_die272,6460
char	*modNames[] = {modNames286,6782
void Kamikaze_DeathActivate( gentity_t *ent ) {Kamikaze_DeathActivate326,7411
void Kamikaze_DeathTimer( gentity_t *self ) {Kamikaze_DeathTimer336,7569
void CheckAlmostCapture( gentity_t *self, gentity_t *attacker ) {CheckAlmostCapture356,7950
void CheckAlmostScored( gentity_t *self, gentity_t *attacker ) {CheckAlmostScored406,9306
void player_die( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int meansOfDeath ) {player_die439,10144
int CheckArmor (gentity_t *ent, int damage, int dflags)CheckArmor690,17202
int RaySphereIntersections( vec3_t origin, float radius, vec3_t point, vec3_t dir, vec3_t intersections[2] ) {RaySphereIntersections726,17704
int G_InvulnerabilityEffect( gentity_t *targ, vec3_t dir, vec3_t point, vec3_t impactpoint, vec3_t bouncedir ) {G_InvulnerabilityEffect764,18863
void G_Damage( gentity_t *targ, gentity_t *inflictor, gentity_t *attacker,G_Damage821,20589
qboolean CanDamage (gentity_t *targ, vec3_t origin) {CanDamage1078,26791
qboolean G_RadiusDamage ( vec3_t origin, gentity_t *attacker, float damage, float radius,G_RadiusDamage1133,28258

game/ai_vcmd.h,0

game/g_rankings.h,16884
#define _G_RANKINGS_H__G_RANKINGS_H_25,1048
#define QGR_KEY_MATCH_RATING	QGR_KEY_MATCH_RATING70,1795
#define QGR_KEY_PLAYED_WITH	QGR_KEY_PLAYED_WITH71,1837
#define QGR_KEY_HOSTNAME	QGR_KEY_HOSTNAME74,1896
#define QGR_KEY_MAP	QGR_KEY_MAP75,1935
#define QGR_KEY_MOD	QGR_KEY_MOD76,1971
#define QGR_KEY_GAMETYPE	QGR_KEY_GAMETYPE77,2007
#define QGR_KEY_FRAGLIMIT	QGR_KEY_FRAGLIMIT78,2046
#define QGR_KEY_TIMELIMIT	QGR_KEY_TIMELIMIT79,2086
#define QGR_KEY_MAXCLIENTS	QGR_KEY_MAXCLIENTS80,2126
#define QGR_KEY_MAXRATE	QGR_KEY_MAXRATE81,2167
#define QGR_KEY_MINPING	QGR_KEY_MINPING82,2206
#define QGR_KEY_MAXPING	QGR_KEY_MAXPING83,2245
#define QGR_KEY_DEDICATED	QGR_KEY_DEDICATED84,2284
#define QGR_KEY_VERSION	QGR_KEY_VERSION85,2324
#define QGR_KEY_FRAG	QGR_KEY_FRAG88,2379
#define QGR_KEY_SUICIDE	QGR_KEY_SUICIDE89,2415
#define QGR_KEY_SHOT_FIRED	QGR_KEY_SHOT_FIRED90,2454
#define QGR_KEY_HIT_GIVEN	QGR_KEY_HIT_GIVEN91,2495
#define QGR_KEY_HIT_TAKEN	QGR_KEY_HIT_TAKEN92,2535
#define QGR_KEY_DAMAGE_GIVEN	QGR_KEY_DAMAGE_GIVEN93,2575
#define QGR_KEY_DAMAGE_TAKEN	QGR_KEY_DAMAGE_TAKEN94,2617
#define QGR_KEY_SPLASH_GIVEN	QGR_KEY_SPLASH_GIVEN95,2659
#define QGR_KEY_SPLASH_TAKEN	QGR_KEY_SPLASH_TAKEN96,2701
#define QGR_KEY_PICKUP_WEAPON	QGR_KEY_PICKUP_WEAPON97,2743
#define QGR_KEY_TIME	QGR_KEY_TIME98,2786
#define QGR_KEY_FRAG_GAUNTLET	QGR_KEY_FRAG_GAUNTLET100,2823
#define QGR_KEY_SUICIDE_GAUNTLET	QGR_KEY_SUICIDE_GAUNTLET101,2866
#define QGR_KEY_SHOT_FIRED_GAUNTLET	QGR_KEY_SHOT_FIRED_GAUNTLET102,2911
#define QGR_KEY_HIT_GIVEN_GAUNTLET	QGR_KEY_HIT_GIVEN_GAUNTLET103,2959
#define QGR_KEY_HIT_TAKEN_GAUNTLET	QGR_KEY_HIT_TAKEN_GAUNTLET104,3006
#define QGR_KEY_DAMAGE_GIVEN_GAUNTLET	QGR_KEY_DAMAGE_GIVEN_GAUNTLET105,3053
#define QGR_KEY_DAMAGE_TAKEN_GAUNTLET	QGR_KEY_DAMAGE_TAKEN_GAUNTLET106,3102
#define QGR_KEY_SPLASH_GIVEN_GAUNTLET	QGR_KEY_SPLASH_GIVEN_GAUNTLET107,3151
#define QGR_KEY_SPLASH_TAKEN_GAUNTLET	QGR_KEY_SPLASH_TAKEN_GAUNTLET108,3200
#define QGR_KEY_PICKUP_GAUNTLET	QGR_KEY_PICKUP_GAUNTLET109,3249
#define QGR_KEY_TIME_GAUNTLET	QGR_KEY_TIME_GAUNTLET110,3294
#define QGR_KEY_FRAG_MACHINEGUN	QGR_KEY_FRAG_MACHINEGUN112,3338
#define QGR_KEY_SUICIDE_MACHINEGUN	QGR_KEY_SUICIDE_MACHINEGUN113,3383
#define QGR_KEY_SHOT_FIRED_MACHINEGUN	QGR_KEY_SHOT_FIRED_MACHINEGUN114,3430
#define QGR_KEY_HIT_GIVEN_MACHINEGUN	QGR_KEY_HIT_GIVEN_MACHINEGUN115,3479
#define QGR_KEY_HIT_TAKEN_MACHINEGUN	QGR_KEY_HIT_TAKEN_MACHINEGUN116,3527
#define QGR_KEY_DAMAGE_GIVEN_MACHINEGUN	QGR_KEY_DAMAGE_GIVEN_MACHINEGUN117,3575
#define QGR_KEY_DAMAGE_TAKEN_MACHINEGUN	QGR_KEY_DAMAGE_TAKEN_MACHINEGUN118,3626
#define QGR_KEY_SPLASH_GIVEN_MACHINEGUN	QGR_KEY_SPLASH_GIVEN_MACHINEGUN119,3677
#define QGR_KEY_SPLASH_TAKEN_MACHINEGUN	QGR_KEY_SPLASH_TAKEN_MACHINEGUN120,3728
#define QGR_KEY_PICKUP_MACHINEGUN	QGR_KEY_PICKUP_MACHINEGUN121,3779
#define QGR_KEY_TIME_MACHINEGUN	QGR_KEY_TIME_MACHINEGUN122,3825
#define QGR_KEY_FRAG_SHOTGUN	QGR_KEY_FRAG_SHOTGUN124,3871
#define QGR_KEY_SUICIDE_SHOTGUN	QGR_KEY_SUICIDE_SHOTGUN125,3913
#define QGR_KEY_SHOT_FIRED_SHOTGUN	QGR_KEY_SHOT_FIRED_SHOTGUN126,3958
#define QGR_KEY_HIT_GIVEN_SHOTGUN	QGR_KEY_HIT_GIVEN_SHOTGUN127,4005
#define QGR_KEY_HIT_TAKEN_SHOTGUN	QGR_KEY_HIT_TAKEN_SHOTGUN128,4051
#define QGR_KEY_DAMAGE_GIVEN_SHOTGUN	QGR_KEY_DAMAGE_GIVEN_SHOTGUN129,4097
#define QGR_KEY_DAMAGE_TAKEN_SHOTGUN	QGR_KEY_DAMAGE_TAKEN_SHOTGUN130,4145
#define QGR_KEY_SPLASH_GIVEN_SHOTGUN	QGR_KEY_SPLASH_GIVEN_SHOTGUN131,4193
#define QGR_KEY_SPLASH_TAKEN_SHOTGUN	QGR_KEY_SPLASH_TAKEN_SHOTGUN132,4241
#define QGR_KEY_PICKUP_SHOTGUN	QGR_KEY_PICKUP_SHOTGUN133,4289
#define QGR_KEY_TIME_SHOTGUN	QGR_KEY_TIME_SHOTGUN134,4333
#define QGR_KEY_FRAG_GRENADE	QGR_KEY_FRAG_GRENADE136,4376
#define QGR_KEY_SUICIDE_GRENADE	QGR_KEY_SUICIDE_GRENADE137,4418
#define QGR_KEY_SHOT_FIRED_GRENADE	QGR_KEY_SHOT_FIRED_GRENADE138,4463
#define QGR_KEY_HIT_GIVEN_GRENADE	QGR_KEY_HIT_GIVEN_GRENADE139,4510
#define QGR_KEY_HIT_TAKEN_GRENADE	QGR_KEY_HIT_TAKEN_GRENADE140,4556
#define QGR_KEY_DAMAGE_GIVEN_GRENADE	QGR_KEY_DAMAGE_GIVEN_GRENADE141,4602
#define QGR_KEY_DAMAGE_TAKEN_GRENADE	QGR_KEY_DAMAGE_TAKEN_GRENADE142,4650
#define QGR_KEY_SPLASH_GIVEN_GRENADE	QGR_KEY_SPLASH_GIVEN_GRENADE143,4698
#define QGR_KEY_SPLASH_TAKEN_GRENADE	QGR_KEY_SPLASH_TAKEN_GRENADE144,4746
#define QGR_KEY_PICKUP_GRENADE	QGR_KEY_PICKUP_GRENADE145,4794
#define QGR_KEY_TIME_GRENADE	QGR_KEY_TIME_GRENADE146,4838
#define QGR_KEY_FRAG_ROCKET	QGR_KEY_FRAG_ROCKET148,4881
#define QGR_KEY_SUICIDE_ROCKET	QGR_KEY_SUICIDE_ROCKET149,4923
#define QGR_KEY_SHOT_FIRED_ROCKET	QGR_KEY_SHOT_FIRED_ROCKET150,4967
#define QGR_KEY_HIT_GIVEN_ROCKET	QGR_KEY_HIT_GIVEN_ROCKET151,5013
#define QGR_KEY_HIT_TAKEN_ROCKET	QGR_KEY_HIT_TAKEN_ROCKET152,5058
#define QGR_KEY_DAMAGE_GIVEN_ROCKET	QGR_KEY_DAMAGE_GIVEN_ROCKET153,5103
#define QGR_KEY_DAMAGE_TAKEN_ROCKET	QGR_KEY_DAMAGE_TAKEN_ROCKET154,5151
#define QGR_KEY_SPLASH_GIVEN_ROCKET	QGR_KEY_SPLASH_GIVEN_ROCKET155,5199
#define QGR_KEY_SPLASH_TAKEN_ROCKET	QGR_KEY_SPLASH_TAKEN_ROCKET156,5247
#define QGR_KEY_PICKUP_ROCKET	QGR_KEY_PICKUP_ROCKET157,5295
#define QGR_KEY_TIME_ROCKET	QGR_KEY_TIME_ROCKET158,5338
#define QGR_KEY_FRAG_PLASMA	QGR_KEY_FRAG_PLASMA160,5381
#define QGR_KEY_SUICIDE_PLASMA	QGR_KEY_SUICIDE_PLASMA161,5423
#define QGR_KEY_SHOT_FIRED_PLASMA	QGR_KEY_SHOT_FIRED_PLASMA162,5467
#define QGR_KEY_HIT_GIVEN_PLASMA	QGR_KEY_HIT_GIVEN_PLASMA163,5513
#define QGR_KEY_HIT_TAKEN_PLASMA	QGR_KEY_HIT_TAKEN_PLASMA164,5558
#define QGR_KEY_DAMAGE_GIVEN_PLASMA	QGR_KEY_DAMAGE_GIVEN_PLASMA165,5603
#define QGR_KEY_DAMAGE_TAKEN_PLASMA	QGR_KEY_DAMAGE_TAKEN_PLASMA166,5651
#define QGR_KEY_SPLASH_GIVEN_PLASMA	QGR_KEY_SPLASH_GIVEN_PLASMA167,5699
#define QGR_KEY_SPLASH_TAKEN_PLASMA	QGR_KEY_SPLASH_TAKEN_PLASMA168,5747
#define QGR_KEY_PICKUP_PLASMA	QGR_KEY_PICKUP_PLASMA169,5795
#define QGR_KEY_TIME_PLASMA	QGR_KEY_TIME_PLASMA170,5838
#define QGR_KEY_FRAG_RAILGUN	QGR_KEY_FRAG_RAILGUN172,5881
#define QGR_KEY_SUICIDE_RAILGUN	QGR_KEY_SUICIDE_RAILGUN173,5923
#define QGR_KEY_SHOT_FIRED_RAILGUN	QGR_KEY_SHOT_FIRED_RAILGUN174,5968
#define QGR_KEY_HIT_GIVEN_RAILGUN	QGR_KEY_HIT_GIVEN_RAILGUN175,6015
#define QGR_KEY_HIT_TAKEN_RAILGUN	QGR_KEY_HIT_TAKEN_RAILGUN176,6061
#define QGR_KEY_DAMAGE_GIVEN_RAILGUN	QGR_KEY_DAMAGE_GIVEN_RAILGUN177,6107
#define QGR_KEY_DAMAGE_TAKEN_RAILGUN	QGR_KEY_DAMAGE_TAKEN_RAILGUN178,6155
#define QGR_KEY_SPLASH_GIVEN_RAILGUN	QGR_KEY_SPLASH_GIVEN_RAILGUN179,6203
#define QGR_KEY_SPLASH_TAKEN_RAILGUN	QGR_KEY_SPLASH_TAKEN_RAILGUN180,6251
#define QGR_KEY_PICKUP_RAILGUN	QGR_KEY_PICKUP_RAILGUN181,6299
#define QGR_KEY_TIME_RAILGUN	QGR_KEY_TIME_RAILGUN182,6343
#define QGR_KEY_FRAG_LIGHTNING	QGR_KEY_FRAG_LIGHTNING184,6386
#define QGR_KEY_SUICIDE_LIGHTNING	QGR_KEY_SUICIDE_LIGHTNING185,6430
#define QGR_KEY_SHOT_FIRED_LIGHTNING	QGR_KEY_SHOT_FIRED_LIGHTNING186,6476
#define QGR_KEY_HIT_GIVEN_LIGHTNING	QGR_KEY_HIT_GIVEN_LIGHTNING187,6524
#define QGR_KEY_HIT_TAKEN_LIGHTNING	QGR_KEY_HIT_TAKEN_LIGHTNING188,6572
#define QGR_KEY_DAMAGE_GIVEN_LIGHTNING	QGR_KEY_DAMAGE_GIVEN_LIGHTNING189,6620
#define QGR_KEY_DAMAGE_TAKEN_LIGHTNING	QGR_KEY_DAMAGE_TAKEN_LIGHTNING190,6670
#define QGR_KEY_SPLASH_GIVEN_LIGHTNING	QGR_KEY_SPLASH_GIVEN_LIGHTNING191,6720
#define QGR_KEY_SPLASH_TAKEN_LIGHTNING	QGR_KEY_SPLASH_TAKEN_LIGHTNING192,6770
#define QGR_KEY_PICKUP_LIGHTNING	QGR_KEY_PICKUP_LIGHTNING193,6820
#define QGR_KEY_TIME_LIGHTNING	QGR_KEY_TIME_LIGHTNING194,6865
#define QGR_KEY_FRAG_BFG	QGR_KEY_FRAG_BFG196,6910
#define QGR_KEY_SUICIDE_BFG	QGR_KEY_SUICIDE_BFG197,6949
#define QGR_KEY_SHOT_FIRED_BFG	QGR_KEY_SHOT_FIRED_BFG198,6991
#define QGR_KEY_HIT_GIVEN_BFG	QGR_KEY_HIT_GIVEN_BFG199,7035
#define QGR_KEY_HIT_TAKEN_BFG	QGR_KEY_HIT_TAKEN_BFG200,7078
#define QGR_KEY_DAMAGE_GIVEN_BFG	QGR_KEY_DAMAGE_GIVEN_BFG201,7121
#define QGR_KEY_DAMAGE_TAKEN_BFG	QGR_KEY_DAMAGE_TAKEN_BFG202,7166
#define QGR_KEY_SPLASH_GIVEN_BFG	QGR_KEY_SPLASH_GIVEN_BFG203,7211
#define QGR_KEY_SPLASH_TAKEN_BFG	QGR_KEY_SPLASH_TAKEN_BFG204,7256
#define QGR_KEY_PICKUP_BFG	QGR_KEY_PICKUP_BFG205,7301
#define QGR_KEY_TIME_BFG	QGR_KEY_TIME_BFG206,7342
#define QGR_KEY_FRAG_GRAPPLE	QGR_KEY_FRAG_GRAPPLE208,7382
#define QGR_KEY_SUICIDE_GRAPPLE	QGR_KEY_SUICIDE_GRAPPLE209,7424
#define QGR_KEY_SHOT_FIRED_GRAPPLE	QGR_KEY_SHOT_FIRED_GRAPPLE210,7469
#define QGR_KEY_HIT_GIVEN_GRAPPLE	QGR_KEY_HIT_GIVEN_GRAPPLE211,7516
#define QGR_KEY_HIT_TAKEN_GRAPPLE	QGR_KEY_HIT_TAKEN_GRAPPLE212,7562
#define QGR_KEY_DAMAGE_GIVEN_GRAPPLE	QGR_KEY_DAMAGE_GIVEN_GRAPPLE213,7608
#define QGR_KEY_DAMAGE_TAKEN_GRAPPLE	QGR_KEY_DAMAGE_TAKEN_GRAPPLE214,7656
#define QGR_KEY_SPLASH_GIVEN_GRAPPLE	QGR_KEY_SPLASH_GIVEN_GRAPPLE215,7704
#define QGR_KEY_SPLASH_TAKEN_GRAPPLE	QGR_KEY_SPLASH_TAKEN_GRAPPLE216,7752
#define QGR_KEY_PICKUP_GRAPPLE	QGR_KEY_PICKUP_GRAPPLE217,7800
#define QGR_KEY_TIME_GRAPPLE	QGR_KEY_TIME_GRAPPLE218,7844
#define QGR_KEY_FRAG_UNKNOWN	QGR_KEY_FRAG_UNKNOWN220,7887
#define QGR_KEY_SUICIDE_UNKNOWN	QGR_KEY_SUICIDE_UNKNOWN221,7929
#define QGR_KEY_SHOT_FIRED_UNKNOWN	QGR_KEY_SHOT_FIRED_UNKNOWN222,7974
#define QGR_KEY_HIT_GIVEN_UNKNOWN	QGR_KEY_HIT_GIVEN_UNKNOWN223,8021
#define QGR_KEY_HIT_TAKEN_UNKNOWN	QGR_KEY_HIT_TAKEN_UNKNOWN224,8067
#define QGR_KEY_DAMAGE_GIVEN_UNKNOWN	QGR_KEY_DAMAGE_GIVEN_UNKNOWN225,8113
#define QGR_KEY_DAMAGE_TAKEN_UNKNOWN	QGR_KEY_DAMAGE_TAKEN_UNKNOWN226,8161
#define QGR_KEY_SPLASH_GIVEN_UNKNOWN	QGR_KEY_SPLASH_GIVEN_UNKNOWN227,8209
#define QGR_KEY_SPLASH_TAKEN_UNKNOWN	QGR_KEY_SPLASH_TAKEN_UNKNOWN228,8257
#define QGR_KEY_PICKUP_UNKNOWN	QGR_KEY_PICKUP_UNKNOWN229,8305
#define QGR_KEY_TIME_UNKNOWN	QGR_KEY_TIME_UNKNOWN230,8349
#define QGR_KEY_FRAG_NAILGIN	QGR_KEY_FRAG_NAILGIN234,8432
#define QGR_KEY_SUICIDE_NAILGIN	QGR_KEY_SUICIDE_NAILGIN235,8474
#define QGR_KEY_SHOT_FIRED_NAILGIN	QGR_KEY_SHOT_FIRED_NAILGIN236,8519
#define QGR_KEY_HIT_GIVEN_NAILGIN	QGR_KEY_HIT_GIVEN_NAILGIN237,8566
#define QGR_KEY_HIT_TAKEN_NAILGIN	QGR_KEY_HIT_TAKEN_NAILGIN238,8612
#define QGR_KEY_DAMAGE_GIVEN_NAILGIN	QGR_KEY_DAMAGE_GIVEN_NAILGIN239,8658
#define QGR_KEY_DAMAGE_TAKEN_NAILGIN	QGR_KEY_DAMAGE_TAKEN_NAILGIN240,8706
#define QGR_KEY_SPLASH_GIVEN_NAILGIN	QGR_KEY_SPLASH_GIVEN_NAILGIN241,8754
#define QGR_KEY_SPLASH_TAKEN_NAILGIN	QGR_KEY_SPLASH_TAKEN_NAILGIN242,8802
#define QGR_KEY_PICKUP_NAILGIN	QGR_KEY_PICKUP_NAILGIN243,8850
#define QGR_KEY_TIME_NAILGIN	QGR_KEY_TIME_NAILGIN244,8894
#define QGR_KEY_FRAG_PROX_LAUNCHER	QGR_KEY_FRAG_PROX_LAUNCHER246,8957
#define QGR_KEY_SUICIDE_PROX_LAUNCHER	QGR_KEY_SUICIDE_PROX_LAUNCHER247,9005
#define QGR_KEY_SHOT_FIRED_PROX_LAUNCHER QGR_KEY_SHOT_FIRED_PROX_LAUNCHER248,9055
#define QGR_KEY_HIT_GIVEN_PROX_LAUNCHER	QGR_KEY_HIT_GIVEN_PROX_LAUNCHER249,9108
#define QGR_KEY_HIT_TAKEN_PROX_LAUNCHER	QGR_KEY_HIT_TAKEN_PROX_LAUNCHER250,9160
#define QGR_KEY_DAMAGE_GIVEN_PROX_LAUNCHER	QGR_KEY_DAMAGE_GIVEN_PROX_LAUNCHER251,9212
#define QGR_KEY_DAMAGE_TAKEN_PROX_LAUNCHER	QGR_KEY_DAMAGE_TAKEN_PROX_LAUNCHER252,9266
#define QGR_KEY_SPLASH_GIVEN_PROX_LAUNCHER	QGR_KEY_SPLASH_GIVEN_PROX_LAUNCHER253,9320
#define QGR_KEY_SPLASH_TAKEN_PROX_LAUNCHER	QGR_KEY_SPLASH_TAKEN_PROX_LAUNCHER254,9374
#define QGR_KEY_PICKUP_PROX_LAUNCHER	QGR_KEY_PICKUP_PROX_LAUNCHER255,9428
#define QGR_KEY_TIME_PROX_LAUNCHER	QGR_KEY_TIME_PROX_LAUNCHER256,9477
#define QGR_KEY_FRAG_CHAINGUN	QGR_KEY_FRAG_CHAINGUN258,9546
#define QGR_KEY_SUICIDE_CHAINGUN	QGR_KEY_SUICIDE_CHAINGUN259,9589
#define QGR_KEY_SHOT_FIRED_CHAINGUN QGR_KEY_SHOT_FIRED_CHAINGUN260,9634
#define QGR_KEY_HIT_GIVEN_CHAINGUN	QGR_KEY_HIT_GIVEN_CHAINGUN261,9682
#define QGR_KEY_HIT_TAKEN_CHAINGUN	QGR_KEY_HIT_TAKEN_CHAINGUN262,9729
#define QGR_KEY_DAMAGE_GIVEN_CHAINGUN	QGR_KEY_DAMAGE_GIVEN_CHAINGUN263,9776
#define QGR_KEY_DAMAGE_TAKEN_CHAINGUN	QGR_KEY_DAMAGE_TAKEN_CHAINGUN264,9825
#define QGR_KEY_SPLASH_GIVEN_CHAINGUN	QGR_KEY_SPLASH_GIVEN_CHAINGUN265,9874
#define QGR_KEY_SPLASH_TAKEN_CHAINGUN	QGR_KEY_SPLASH_TAKEN_CHAINGUN266,9923
#define QGR_KEY_PICKUP_CHAINGUN	QGR_KEY_PICKUP_CHAINGUN267,9972
#define QGR_KEY_TIME_CHAINGUN	QGR_KEY_TIME_CHAINGUN268,10017
#define QGR_KEY_BOXES	QGR_KEY_BOXES272,10099
#define QGR_KEY_ROUNDS	QGR_KEY_ROUNDS273,10136
#define QGR_KEY_BOXES_BULLETS	QGR_KEY_BOXES_BULLETS275,10175
#define QGR_KEY_ROUNDS_BULLETS	QGR_KEY_ROUNDS_BULLETS276,10218
#define QGR_KEY_BOXES_SHELLS	QGR_KEY_BOXES_SHELLS278,10263
#define QGR_KEY_ROUNDS_SHELLS	QGR_KEY_ROUNDS_SHELLS279,10305
#define QGR_KEY_BOXES_GRENADES	QGR_KEY_BOXES_GRENADES281,10349
#define QGR_KEY_ROUNDS_GRENADES	QGR_KEY_ROUNDS_GRENADES282,10393
#define QGR_KEY_BOXES_ROCKETS	QGR_KEY_BOXES_ROCKETS284,10439
#define QGR_KEY_ROUNDS_ROCKETS	QGR_KEY_ROUNDS_ROCKETS285,10482
#define QGR_KEY_BOXES_CELLS	QGR_KEY_BOXES_CELLS287,10527
#define QGR_KEY_ROUNDS_CELLS	QGR_KEY_ROUNDS_CELLS288,10569
#define QGR_KEY_BOXES_SLUGS	QGR_KEY_BOXES_SLUGS290,10612
#define QGR_KEY_ROUNDS_SLUGS	QGR_KEY_ROUNDS_SLUGS291,10654
#define QGR_KEY_BOXES_LG_AMMO	QGR_KEY_BOXES_LG_AMMO293,10697
#define QGR_KEY_ROUNDS_LG_AMMO	QGR_KEY_ROUNDS_LG_AMMO294,10740
#define QGR_KEY_BOXES_BFG_AMMO	QGR_KEY_BOXES_BFG_AMMO296,10785
#define QGR_KEY_ROUNDS_BFG_AMMO	QGR_KEY_ROUNDS_BFG_AMMO297,10829
#define QGR_KEY_BOXES_NAILGUN_AMMO	QGR_KEY_BOXES_NAILGUN_AMMO301,10915
#define QGR_KEY_ROUNDS_NAILGUN_AMMO	QGR_KEY_ROUNDS_NAILGUN_AMMO302,10962
#define QGR_KEY_BOXES_PROX_LAUNCHER_AMMO QGR_KEY_BOXES_PROX_LAUNCHER_AMMO304,11032
#define QGR_KEY_ROUNDS_PROX_LAUNCHER_AMMO QGR_KEY_ROUNDS_PROX_LAUNCHER_AMMO305,11085
#define QGR_KEY_BOXES_CHAINGUN_AMMO QGR_KEY_BOXES_CHAINGUN_AMMO307,11160
#define QGR_KEY_ROUNDS_CHAINGUN_AMMO QGR_KEY_ROUNDS_CHAINGUN_AMMO308,11208
#define QGR_KEY_HEALTH	QGR_KEY_HEALTH312,11298
#define QGR_KEY_HEALTH_TOTAL	QGR_KEY_HEALTH_TOTAL313,11336
#define QGR_KEY_HEALTH_5	QGR_KEY_HEALTH_5315,11379
#define QGR_KEY_HEALTH_25	QGR_KEY_HEALTH_25316,11418
#define QGR_KEY_HEALTH_50	QGR_KEY_HEALTH_50317,11458
#define QGR_KEY_HEALTH_MEGA	QGR_KEY_HEALTH_MEGA318,11498
#define QGR_KEY_ARMOR	QGR_KEY_ARMOR321,11555
#define QGR_KEY_ARMOR_TOTAL	QGR_KEY_ARMOR_TOTAL322,11592
#define QGR_KEY_ARMOR_SHARD	QGR_KEY_ARMOR_SHARD324,11635
#define QGR_KEY_ARMOR_YELLOW	QGR_KEY_ARMOR_YELLOW325,11677
#define QGR_KEY_ARMOR_RED	QGR_KEY_ARMOR_RED326,11719
#define QGR_KEY_POWERUP	QGR_KEY_POWERUP329,11776
#define QGR_KEY_QUAD	QGR_KEY_QUAD330,11815
#define QGR_KEY_SUIT	QGR_KEY_SUIT331,11851
#define QGR_KEY_HASTE	QGR_KEY_HASTE332,11887
#define QGR_KEY_INVIS	QGR_KEY_INVIS333,11924
#define QGR_KEY_REGEN	QGR_KEY_REGEN334,11961
#define QGR_KEY_FLIGHT	QGR_KEY_FLIGHT335,11998
#define QGR_KEY_SCOUT	QGR_KEY_SCOUT340,12104
#define QGR_KEY_GUARD	QGR_KEY_GUARD341,12141
#define QGR_KEY_DOUBLER	QGR_KEY_DOUBLER342,12178
#define QGR_KEY_AMMOREGEN	QGR_KEY_AMMOREGEN343,12217
#define QGR_KEY_MEDKIT	QGR_KEY_MEDKIT348,12302
#define QGR_KEY_MEDKIT_USE	QGR_KEY_MEDKIT_USE349,12340
#define QGR_KEY_TELEPORTER	QGR_KEY_TELEPORTER351,12382
#define QGR_KEY_TELEPORTER_USE	QGR_KEY_TELEPORTER_USE352,12423
#define QGR_KEY_KAMIKAZE	QGR_KEY_KAMIKAZE356,12508
#define QGR_KEY_KAMIKAZE_USE	QGR_KEY_KAMIKAZE_USE357,12547
#define QGR_KEY_PORTAL	QGR_KEY_PORTAL359,12610
#define QGR_KEY_PORTAL_USE	QGR_KEY_PORTAL_USE360,12648
#define QGR_KEY_INVULNERABILITY	QGR_KEY_INVULNERABILITY362,12710
#define QGR_KEY_INVULNERABILITY_USE	QGR_KEY_INVULNERABILITY_USE363,12755
#define QGR_KEY_HAZARD_DEATH	QGR_KEY_HAZARD_DEATH367,12844
#define QGR_KEY_WATER	QGR_KEY_WATER368,12886
#define QGR_KEY_SLIME	QGR_KEY_SLIME369,12923
#define QGR_KEY_LAVA	QGR_KEY_LAVA370,12960
#define QGR_KEY_CRUSH	QGR_KEY_CRUSH371,12996
#define QGR_KEY_TELEFRAG	QGR_KEY_TELEFRAG372,13033
#define QGR_KEY_FALLING	QGR_KEY_FALLING373,13072
#define QGR_KEY_SUICIDE_CMD	QGR_KEY_SUICIDE_CMD374,13111
#define QGR_KEY_TRIGGER_HURT	QGR_KEY_TRIGGER_HURT375,13153
#define QGR_KEY_HAZARD_MISC	QGR_KEY_HAZARD_MISC376,13195
#define QGR_KEY_IMPRESSIVE	QGR_KEY_IMPRESSIVE379,13253
#define QGR_KEY_EXCELLENT	QGR_KEY_EXCELLENT380,13294
#define QGR_KEY_TEAMMATE_FRAG	QGR_KEY_TEAMMATE_FRAG383,13352
#define QGR_KEY_TEAMMATE_HIT_GIVEN	QGR_KEY_TEAMMATE_HIT_GIVEN384,13395
#define QGR_KEY_TEAMMATE_HIT_TAKEN	QGR_KEY_TEAMMATE_HIT_TAKEN385,13442
#define QGR_KEY_TEAMMATE_DAMAGE_GIVEN	QGR_KEY_TEAMMATE_DAMAGE_GIVEN386,13489
#define QGR_KEY_TEAMMATE_DAMAGE_TAKEN	QGR_KEY_TEAMMATE_DAMAGE_TAKEN387,13538
#define QGR_KEY_TEAMMATE_SPLASH_GIVEN	QGR_KEY_TEAMMATE_SPLASH_GIVEN388,13587
#define QGR_KEY_TEAMMATE_SPLASH_TAKEN	QGR_KEY_TEAMMATE_SPLASH_TAKEN389,13636
#define QGR_KEY_TEAM_NAME	QGR_KEY_TEAM_NAME390,13685
#define QGR_KEY_FLAG_PICKUP	QGR_KEY_FLAG_PICKUP393,13738
#define QGR_KEY_FLAG_CAPTURE	QGR_KEY_FLAG_CAPTURE394,13780

game/ai_main.h,15640
#define CTFCTF34,1251
#define MAX_ITEMS	MAX_ITEMS36,1264
#define BFL_STRAFERIGHT	BFL_STRAFERIGHT38,1302
#define BFL_ATTACKED	BFL_ATTACKED39,1353
#define BFL_ATTACKJUMPED	BFL_ATTACKJUMPED40,1412
#define BFL_AIMATENEMY	BFL_AIMATENEMY41,1479
#define BFL_AVOIDRIGHT	BFL_AVOIDRIGHT42,1543
#define BFL_IDEALVIEWSET	BFL_IDEALVIEWSET43,1612
#define BFL_FIGHTSUICIDAL	BFL_FIGHTSUICIDAL44,1674
#define LTG_TEAMHELP	LTG_TEAMHELP46,1757
#define LTG_TEAMACCOMPANY	LTG_TEAMACCOMPANY47,1802
#define LTG_DEFENDKEYAREA	LTG_DEFENDKEYAREA48,1856
#define LTG_GETFLAG	LTG_GETFLAG49,1906
#define LTG_RUSHBASE	LTG_RUSHBASE50,1953
#define LTG_RETURNFLAG	LTG_RETURNFLAG51,1998
#define LTG_CAMP	LTG_CAMP52,2044
#define LTG_CAMPORDER	LTG_CAMPORDER53,2084
#define LTG_PATROL	LTG_PATROL54,2139
#define LTG_GETITEM	LTG_GETITEM55,2173
#define LTG_KILL	LTG_KILL56,2214
#define LTG_HARVEST	LTG_HARVEST57,2253
#define LTG_ATTACKENEMYBASE	LTG_ATTACKENEMYBASE58,2297
#define LTG_MAKELOVE_UNDER	LTG_MAKELOVE_UNDER59,2354
#define LTG_MAKELOVE_ONTOP	LTG_MAKELOVE_ONTOP60,2386
#define TEAM_HELP_TIME	TEAM_HELP_TIME62,2447
#define TEAM_ACCOMPANY_TIME	TEAM_ACCOMPANY_TIME63,2506
#define TEAM_DEFENDKEYAREA_TIME	TEAM_DEFENDKEYAREA_TIME64,2577
#define TEAM_CAMP_TIME	TEAM_CAMP_TIME65,2648
#define TEAM_PATROL_TIME	TEAM_PATROL_TIME66,2704
#define TEAM_LEAD_TIME	TEAM_LEAD_TIME67,2764
#define TEAM_GETITEM_TIME	TEAM_GETITEM_TIME68,2823
#define	TEAM_KILL_SOMEONE	TEAM_KILL_SOMEONE69,2865
#define TEAM_ATTACKENEMYBASE_TIME	TEAM_ATTACKENEMYBASE_TIME70,2924
#define TEAM_HARVEST_TIME	TEAM_HARVEST_TIME71,2975
#define CTF_GETFLAG_TIME	CTF_GETFLAG_TIME72,3019
#define CTF_RUSHBASE_TIME	CTF_RUSHBASE_TIME73,3081
#define CTF_RETURNFLAG_TIME	CTF_RETURNFLAG_TIME74,3144
#define CTF_ROAM_TIME	CTF_ROAM_TIME75,3209
#define PATROL_LOOP	PATROL_LOOP77,3277
#define PATROL_REVERSE	PATROL_REVERSE78,3303
#define PATROL_BACK	PATROL_BACK79,3331
#define TEAMTP_DEFENDER	TEAMTP_DEFENDER81,3384
#define TEAMTP_ATTACKER	TEAMTP_ATTACKER82,3413
#define CTFS_AGRESSIVE	CTFS_AGRESSIVE84,3457
#define PRESENCE_NONE	PRESENCE_NONE86,3519
#define PRESENCE_NORMAL	PRESENCE_NORMAL87,3546
#define PRESENCE_CROUCH	PRESENCE_CROUCH88,3575
#define MAX_PROXMINES	MAX_PROXMINES90,3607
typedef struct bot_waypoint_sbot_waypoint_s93,3651
	int			inuse;inuse95,3683
	char		name[32];name96,3697
	bot_goal_t	goal;goal97,3714
	struct		bot_waypoint_s *next, *prev;next98,3732
	struct		bot_waypoint_s *next, *prev;prev98,3732
} bot_waypoint_t;bot_waypoint_t99,3770
#define MAX_ACTIVATESTACK	MAX_ACTIVATESTACK101,3789
#define MAX_ACTIVATEAREAS	MAX_ACTIVATEAREAS102,3818
typedef struct bot_activategoal_sbot_activategoal_s104,3849
	int inuse;inuse106,3885
	bot_goal_t goal;						//goal to activate (buttons etc.)goal107,3897
	float time;								//time to activate somethingtime108,3954
	float start_time;						//time starting to activate somethingstart_time109,4003
	float justused_time;					//time the goal was usedjustused_time110,4065
	int shoot;								//true if bot has to shoot to activateshoot111,4116
	int weapon;								//weapon to be used for activationweapon112,4174
	vec3_t target;							//target to shoot at to activate somethingtarget113,4229
	vec3_t origin;							//origin of the blocking entity to activateorigin114,4294
	int areas[MAX_ACTIVATEAREAS];			//routing areas disabled by blocking entityareas115,4360
	int numareas;							//number of disabled routing areasnumareas116,4437
	int areasdisabled;						//true if the areas are disabled for the routingareasdisabled117,4493
	struct bot_activategoal_s *next;		//next activate goal on stacknext118,4567
} bot_activategoal_t;bot_activategoal_t119,4632
typedef struct bot_state_sbot_state_s122,4667
	int inuse;										//true if this state is used by a bot clientinuse124,4696
	int botthink_residual;							//residual for the bot thinksbotthink_residual125,4762
	int client;										//client number of the botclient126,4822
	int entitynum;									//entity number of the botentitynum127,4871
	playerState_t cur_ps;							//current player statecur_ps128,4922
	int last_eFlags;								//last ps flagslast_eFlags129,4974
	usercmd_t lastucmd;								//usercmd from last framelastucmd130,5015
	int entityeventTime[1024];						//last entity event timeentityeventTime131,5069
	bot_settings_t settings;						//several bot settingssettings133,5131
	int (*ainode)(struct bot_state_s *bs);			//current AI nodeainode134,5185
	float thinktime;								//time the bot thinks this framethinktime135,5245
	vec3_t origin;									//origin of the botorigin136,5303
	vec3_t velocity;								//velocity of the botvelocity137,5347
	int presencetype;								//presence type of the botpresencetype138,5394
	vec3_t eye;										//eye coordinates of the boteye139,5447
	int areanum;									//the number of the area the bot is inareanum140,5498
	int inventory[MAX_ITEMS];						//string with items amounts the bot hasinventory141,5559
	int tfl;										//the travel flags the bot usestfl142,5631
	int flags;										//several flagsflags143,5682
	int respawn_wait;								//wait until respawnedrespawn_wait144,5719
	int lasthealth;									//health value previous framelasthealth145,5768
	int lastkilledplayer;							//last killed playerlastkilledplayer146,5823
	int lastkilledby;								//player that last killed this botlastkilledby147,5873
	int botdeathtype;								//the death type of the botbotdeathtype148,5934
	int enemydeathtype;								//the death type of the enemyenemydeathtype149,5988
	int botsuicide;									//true when the bot suicidesbotsuicide150,6046
	int enemysuicide;								//true when the enemy of the bot suicidesenemysuicide151,6100
	int setupcount;									//true when the bot has just been setupsetupcount152,6168
	int map_restart;									//true when the map is being restartedmap_restart153,6233
	int entergamechat;								//true when the bot used an enter game chatentergamechat154,6298
	int num_deaths;									//number of time this bot diednum_deaths155,6369
	int num_kills;									//number of kills of this botnum_kills156,6425
	int revenge_enemy;								//the revenge enemyrevenge_enemy157,6479
	int revenge_kills;								//number of kills the enemy maderevenge_kills158,6526
	int lastframe_health;							//health value the last framelastframe_health159,6586
	int lasthitcount;								//number of hits last framelasthitcount160,6645
	int chatto;										//chat to all or teamchatto161,6699
	float walker;									//walker characterticwalker162,6743
	float ltime;									//local bot timeltime163,6788
	float entergame_time;							//time the bot entered the gameentergame_time164,6827
	float ltg_time;									//long term goal timeltg_time165,6888
	float nbg_time;									//nearby goal timenbg_time166,6935
	float respawn_time;								//time the bot takes to respawnrespawn_time167,6979
	float respawnchat_time;							//time the bot started a chat during respawnrespawnchat_time168,7039
	float chase_time;								//time the bot will chase the enemychase_time169,7115
	float enemyvisible_time;						//time the enemy was last visibleenemyvisible_time170,7177
	float check_time;								//time to check for nearby itemscheck_time171,7242
	float stand_time;								//time the bot is standing stillstand_time172,7301
	float lastchat_time;							//time the bot last selected a chatlastchat_time173,7360
	float kamikaze_time;							//time to check for kamikaze usagekamikaze_time174,7424
	float invulnerability_time;						//time to check for invulnerability usageinvulnerability_time175,7487
	float standfindenemy_time;						//time to find enemy while standingstandfindenemy_time176,7563
	float attackstrafe_time;						//time the bot is strafing in one dirattackstrafe_time177,7632
	float attackcrouch_time;						//time the bot will stop crouchingattackcrouch_time178,7701
	float attackchase_time;							//time the bot chases during actual attackattackchase_time179,7767
	float attackjump_time;							//time the bot jumped during attackattackjump_time180,7841
	float enemysight_time;							//time before reacting to enemyenemysight_time181,7907
	float enemydeath_time;							//time the enemy diedenemydeath_time182,7969
	float enemyposition_time;						//time the position and velocity of the enemy were storedenemyposition_time183,8021
	float defendaway_time;							//time away while defendingdefendaway_time184,8111
	float defendaway_range;							//max travel time away from defend areadefendaway_range185,8169
	float rushbaseaway_time;						//time away from rushing to the baserushbaseaway_time186,8240
	float attackaway_time;							//time away from attacking the enemy baseattackaway_time187,8308
	float harvestaway_time;							//time away from harvestingharvestaway_time188,8380
	float ctfroam_time;								//time the bot is roaming in ctfctfroam_time189,8439
	float killedenemy_time;							//time the bot killed the enemykilledenemy_time190,8500
	float arrive_time;								//time arrived (at companion)arrive_time191,8563
	float lastair_time;								//last time the bot had airlastair_time192,8620
	float teleport_time;							//last time the bot teleportedteleport_time193,8676
	float camp_time;								//last time campedcamp_time194,8735
	float camp_range;								//camp rangecamp_range195,8779
	float weaponchange_time;						//time the bot started changing weaponsweaponchange_time196,8818
	float firethrottlewait_time;					//amount of time to waitfirethrottlewait_time197,8889
	float firethrottleshoot_time;					//amount of time to shootfirethrottleshoot_time198,8948
	float notblocked_time;							//last time the bot was not blockednotblocked_time199,9009
	float blockedbyavoidspot_time;					//time blocked by an avoid spotblockedbyavoidspot_time200,9075
	float predictobstacles_time;					//last time the bot predicted obstaclespredictobstacles_time201,9143
	int predictobstacles_goalareanum;				//last goal areanum the bot predicted obstacles forpredictobstacles_goalareanum202,9217
	vec3_t aimtarget;aimtarget203,9307
	vec3_t enemyvelocity;							//enemy velocity 0.5 secs ago during battleenemyvelocity204,9326
	vec3_t enemyorigin;								//enemy origin 0.5 secs ago during battleenemyorigin205,9399
	int kamikazebody;								//kamikaze bodykamikazebody207,9473
	int proxmines[MAX_PROXMINES];proxmines208,9515
	int numproxmines;numproxmines209,9546
	int character;									//the bot charactercharacter211,9569
	int ms;											//move state of the botms212,9613
	int gs;											//goal state of the botgs213,9656
	int cs;											//chat state of the botcs214,9699
	int ws;											//weapon state of the botws215,9742
	int enemy;										//enemy entity numberenemy217,9791
	int lastenemyareanum;							//last reachability area the enemy was inlastenemyareanum218,9834
	vec3_t lastenemyorigin;							//last origin of the enemy in the reachability arealastenemyorigin219,9905
	int weaponnum;									//current weapon numberweaponnum220,9988
	vec3_t viewangles;								//current view anglesviewangles221,10036
	vec3_t ideal_viewangles;						//ideal view anglesideal_viewangles222,10085
	vec3_t viewanglespeed;viewanglespeed223,10136
	int ltgtype;									//long term goal typeltgtype225,10164
	int teammate;									//team mate involved in this team goalteammate227,10223
	int decisionmaker;								//player who decided to go for this goaldecisionmaker228,10285
	int ordered;									//true if ordered to do somethingordered229,10353
	float order_time;								//time ordered to do somethingorder_time230,10409
	int owndecision_time;							//time the bot made it's own decisionowndecision_time231,10466
	bot_goal_t teamgoal;							//the team goalteamgoal232,10533
	bot_goal_t altroutegoal;						//alternative route goalaltroutegoal233,10577
	float reachedaltroutegoal_time;					//time the bot reached the alt route goalreachedaltroutegoal_time234,10633
	float teammessage_time;							//time to message team mates what the bot is doingteammessage_time235,10712
	float teamgoal_time;							//time to stop helping team mateteamgoal_time236,10794
	float teammatevisible_time;						//last time the team mate was NOT visibleteammatevisible_time237,10855
	int teamtaskpreference;							//team task preferenceteamtaskpreference238,10931
	int lastgoal_decisionmaker;lastgoal_decisionmaker240,11012
	int lastgoal_ltgtype;lastgoal_ltgtype241,11041
	int lastgoal_teammate;lastgoal_teammate242,11064
	bot_goal_t lastgoal_teamgoal;lastgoal_teamgoal243,11088
	int lead_teammate;								//team mate the bot is leadinglead_teammate245,11146
	bot_goal_t lead_teamgoal;						//team goal while leadinglead_teamgoal246,11204
	float lead_time;								//time leading someonelead_time247,11262
	float leadvisible_time;							//last time the team mate was visibleleadvisible_time248,11310
	float leadmessage_time;							//last time a messaged was sent to the team mateleadmessage_time249,11379
	float leadbackup_time;							//time backing up towards team mateleadbackup_time250,11459
	char teamleader[32];							//netname of the team leaderteamleader252,11529
	float askteamleader_time;						//time asked for team leaderaskteamleader_time253,11586
	float becometeamleader_time;					//time the bot will become the team leaderbecometeamleader_time254,11647
	float teamgiveorders_time;						//time to give team ordersteamgiveorders_time255,11724
	float lastflagcapture_time;						//last time a flag was capturedlastflagcapture_time256,11784
	int numteammates;								//number of team matesnumteammates257,11850
	int redflagstatus;								//0 = at base, 1 = not at baseredflagstatus258,11899
	int blueflagstatus;								//0 = at base, 1 = not at baseblueflagstatus259,11957
	int neutralflagstatus;							//0 = at base, 1 = our team has flag, 2 = enemy team has flag, 3 = enemy team dropped the flagneutralflagstatus260,12016
	int flagstatuschanged;							//flag status changedflagstatuschanged261,12141
	int forceorders;								//true if forced to give ordersforceorders262,12193
	int flagcarrier;								//team mate carrying the enemy flagflagcarrier263,12250
	int ctfstrategy;								//ctf strategyctfstrategy264,12311
	char subteam[32];								//sub team namesubteam265,12351
	float formation_dist;							//formation team mate intervening spaceformation_dist266,12393
	char formation_teammate[16];					//netname of the team mate the bot uses for relative positioningformation_teammate267,12462
	float formation_angle;							//angle relative to the formation team mateformation_angle268,12561
	vec3_t formation_dir;							//the direction the formation is moving information_dir269,12635
	vec3_t formation_origin;						//origin the bot uses for relative positioningformation_origin270,12707
	bot_goal_t formation_goal;						//formation goalformation_goal271,12785
	bot_activategoal_t *activatestack;				//first activate goal on the stackactivatestack273,12836
	bot_activategoal_t activategoalheap[MAX_ACTIVATESTACK];	//activate goal heapactivategoalheap274,12910
	bot_waypoint_t *checkpoints;					//check pointscheckpoints276,12989
	bot_waypoint_t *patrolpoints;					//patrol pointspatrolpoints277,13038
	bot_waypoint_t *curpatrolpoint;					//current patrol point the bot is going forcurpatrolpoint278,13089
	int patrolflags;								//patrol flagspatrolflags279,13170
} bot_state_t;bot_state_t280,13210
#define FloatTime(FloatTime290,13465

game/g_active.c,1270
void P_DamageFeedback( gentity_t *player ) {P_DamageFeedback37,1277
void P_WorldEffects( gentity_t *ent ) {P_WorldEffects99,2617
void G_SetClientSound( gentity_t *ent ) {G_SetClientSound184,4568
void ClientImpacts( gentity_t *ent, pmove_t *pm ) {ClientImpacts207,5053
void	G_TouchTriggers( gentity_t *ent ) {G_TouchTriggers245,5761
void SpectatorThink( gentity_t *ent, usercmd_t *ucmd ) {SpectatorThink326,7729
qboolean ClientInactivityTimer( gclient_t *client ) {ClientInactivityTimer371,8762
void ClientTimerActions( gentity_t *ent, int msec ) {ClientTimerActions403,9846
void ClientIntermissionThink( gclient_t *client ) {ClientIntermissionThink513,13266
void ClientEvents( gentity_t *ent, int oldEventSequence ) {ClientEvents537,13944
static int StuckInOtherClient(gentity_t *ent) {StuckInOtherClient671,17127
void SendPendingPredictableEvents( playerState_t *ps ) {SendPendingPredictableEvents715,17934
void ClientThink_real( gentity_t *ent ) {ClientThink_real756,19313
void ClientThink( int clientNum ) {ClientThink1027,26819
void G_RunClient( gentity_t *ent ) {G_RunClient1043,27208
void SpectatorClientEndFrame( gentity_t *ent ) {SpectatorClientEndFrame1058,27476
void ClientEndFrame( gentity_t *ent ) {ClientEndFrame1107,29038

game/g_items.c,2008
#define	RESPAWN_ARMOR	RESPAWN_ARMOR39,1370
#define	RESPAWN_HEALTH	RESPAWN_HEALTH40,1396
#define	RESPAWN_AMMO	RESPAWN_AMMO41,1423
#define	RESPAWN_HOLDABLE	RESPAWN_HOLDABLE42,1448
#define	RESPAWN_MEGAHEALTH	RESPAWN_MEGAHEALTH43,1476
#define	RESPAWN_POWERUP	RESPAWN_POWERUP44,1511
int Pickup_Powerup( gentity_t *ent, gentity_t *other ) {Pickup_Powerup49,1616
int Pickup_PersistantPowerup( gentity_t *ent, gentity_t *other ) {Pickup_PersistantPowerup121,3457
int Pickup_Holdable( gentity_t *ent, gentity_t *other ) {Pickup_Holdable195,5686
void Add_Ammo (gentity_t *ent, int weapon, int count)Add_Ammo209,6010
int Pickup_Ammo (gentity_t *ent, gentity_t *other)Pickup_Ammo217,6195
int Pickup_Weapon (gentity_t *ent, gentity_t *other) {Pickup_Weapon235,6507
int Pickup_Health (gentity_t *ent, gentity_t *other) {Pickup_Health278,7668
int Pickup_Armor( gentity_t *ent, gentity_t *other ) {Pickup_Armor317,8610
void RespawnItem( gentity_t *ent ) {RespawnItem350,9525
void Touch_Item (gentity_t *ent, gentity_t *other, trace_t *trace) {Touch_Item418,11152
gentity_t *LaunchItem( gitem_t *item, vec3_t origin, vec3_t velocity ) {LaunchItem563,14544
gentity_t *Drop_Item( gentity_t *ent, gitem_t *item, float angle ) {Drop_Item613,15989
void Use_Item( gentity_t *ent, gentity_t *other, gentity_t *activator ) {Use_Item636,16454
void FinishSpawningItem( gentity_t *ent ) {FinishSpawningItem650,16791
qboolean	itemRegistered[MAX_ITEMS];itemRegistered709,18348
void G_CheckTeamItems( void ) {G_CheckTeamItems716,18446
void ClearRegisteredItems( void ) {ClearRegisteredItems800,20646
void RegisterItem( gitem_t *item ) {RegisterItem821,21158
void SaveRegisteredItems( void ) {SaveRegisteredItems837,21448
int G_ItemDisabled( gitem_t *item ) {G_ItemDisabled862,21850
void G_SpawnItem (gentity_t *ent, gitem_t *item) {G_SpawnItem880,22233
void G_BounceItem( gentity_t *ent, trace_t *trace ) {G_BounceItem915,23017
void G_RunItem( gentity_t *ent ) {G_RunItem950,24056

game/g_local.h,14389
#define	GAMEVERSION	GAMEVERSION32,1247
#define BODY_QUEUE_SIZE	BODY_QUEUE_SIZE34,1277
#define INFINITE	INFINITE36,1305
#define	FRAMETIME	FRAMETIME38,1333
#define	CARNAGE_REWARD_TIME	CARNAGE_REWARD_TIME39,1369
#define REWARD_SPRITE_TIME	REWARD_SPRITE_TIME40,1402
#define	INTERMISSION_DELAY_TIME	INTERMISSION_DELAY_TIME42,1435
#define	SP_INTERMISSION_DELAY_TIME	SP_INTERMISSION_DELAY_TIME43,1472
#define	FL_GODMODE	FL_GODMODE46,1531
#define	FL_NOTARGET	FL_NOTARGET47,1564
#define	FL_TEAMSLAVE	FL_TEAMSLAVE48,1598
#define FL_NO_KNOCKBACK	FL_NO_KNOCKBACK49,1661
#define FL_DROPPED_ITEM	FL_DROPPED_ITEM50,1698
#define FL_NO_BOTS	FL_NO_BOTS51,1735
#define FL_NO_HUMANS	FL_NO_HUMANS52,1799
#define FL_FORCE_GESTURE	FL_FORCE_GESTURE53,1862
	MOVER_POS1,MOVER_POS157,1995
	MOVER_POS2,MOVER_POS258,2008
	MOVER_1TO2,MOVER_1TO259,2021
	MOVER_2TO1MOVER_2TO160,2034
} moverState_t;moverState_t61,2046
#define SP_PODIUM_MODEL	SP_PODIUM_MODEL63,2063
typedef struct gentity_s gentity_t;gentity_t67,2208
typedef struct gclient_s gclient_t;gclient_t68,2244
struct gentity_s {gentity_s70,2281
	entityState_t	s;				// communicated by server to clientss71,2300
	entityShared_t	r;				// shared by both the server system and gamer72,2358
	struct gclient_s	*client;			// NULL if not a clientclient78,2551
	qboolean	inuse;inuse80,2605
	char		*classname;			// set in QuakeEdclassname82,2623
	int			spawnflags;			// set in QuakeEdspawnflags83,2662
	qboolean	neverFree;			// if true, FreeEntity will only unlinkneverFree85,2702
	int			flags;				// FL_* variablesflags88,2796
	char		*model;model90,2832
	char		*model2;model291,2847
	int			freetime;			// level.time when the object was freedfreetime92,2863
	int			eventTime;			// events will be cleared EVENT_VALID_MSEC after seteventTime94,2924
	qboolean	freeAfterEvent;freeAfterEvent95,2997
	qboolean	unlinkAfterEvent;unlinkAfterEvent96,3023
	qboolean	physicsObject;		// if true, it can be pushed by movers and fall off edgesphysicsObject98,3052
	float		physicsBounce;		// 1.0 = continuous bounce, 0.0 = no bouncephysicsBounce100,3184
	int			clipmask;			// brushes with this content value will be collided againstclipmask101,3252
	moverState_t moverState;moverState106,3444
	int			soundPos1;soundPos1107,3470
	int			sound1to2;sound1to2108,3488
	int			sound2to1;sound2to1109,3506
	int			soundPos2;soundPos2110,3524
	int			soundLoop;soundLoop111,3542
	gentity_t	*parent;parent112,3560
	gentity_t	*nextTrain;nextTrain113,3580
	gentity_t	*prevTrain;prevTrain114,3603
	vec3_t		pos1, pos2;pos1115,3626
	vec3_t		pos1, pos2;pos2115,3626
	char		*message;message117,3648
	int			timestamp;		// body queue sinking, etctimestamp119,3666
	float		angle;			// set in editor, -1 = up, -2 = downangle121,3713
	char		*target;target122,3767
	char		*targetname;targetname123,3783
	char		*team;team124,3803
	char		*targetShaderName;targetShaderName125,3817
	char		*targetShaderNewName;targetShaderNewName126,3843
	gentity_t	*target_ent;target_ent127,3872
	float		speed;speed129,3897
	vec3_t		movedir;movedir130,3912
	int			nextthink;nextthink132,3931
	void		(*think)(gentity_t *self);think133,3949
	void		(*reached)(gentity_t *self);	// movers call this when hitting endpointreached134,3983
	void		(*blocked)(gentity_t *self, gentity_t *other);blocked135,4061
	void		(*touch)(gentity_t *self, gentity_t *other, trace_t *trace);touch136,4115
	void		(*use)(gentity_t *self, gentity_t *other, gentity_t *activator);use137,4183
	void		(*pain)(gentity_t *self, gentity_t *attacker, int damage);pain138,4255
	void		(*die)(gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod);die139,4321
	int			pain_debounce_time;pain_debounce_time141,4418
	int			fly_sound_debounce_time;	// wind tunnelfly_sound_debounce_time142,4445
	int			last_move_time;last_move_time143,4492
	int			health;health145,4516
	qboolean	takedamage;takedamage147,4532
	int			damage;damage149,4555
	int			splashDamage;	// quad will increase this without increasing radiussplashDamage150,4570
	int			splashRadius;splashRadius151,4644
	int			methodOfDeath;methodOfDeath152,4665
	int			splashMethodOfDeath;splashMethodOfDeath153,4687
	int			count;count155,4716
	gentity_t	*chain;chain157,4731
	gentity_t	*enemy;enemy158,4750
	gentity_t	*activator;activator159,4769
	gentity_t	*teamchain;		// next entity in teamteamchain160,4792
	gentity_t	*teammaster;	// master of the teamteammaster161,4839
	int			kamikazeTime;kamikazeTime164,4905
	int			kamikazeShockTime;kamikazeShockTime165,4926
	int			watertype;watertype168,4960
	int			waterlevel;waterlevel169,4978
	int			noise_index;noise_index171,4998
	float		wait;wait174,5040
	float		random;random175,5054
	gitem_t		*item;			// for bonus itemsitem177,5071
	CON_DISCONNECTED,CON_DISCONNECTED182,5129
	CON_CONNECTING,CON_CONNECTING183,5148
	CON_CONNECTEDCON_CONNECTED184,5165
} clientConnected_t;clientConnected_t185,5180
	SPECTATOR_NOT,SPECTATOR_NOT188,5217
	SPECTATOR_FREE,SPECTATOR_FREE189,5233
	SPECTATOR_FOLLOW,SPECTATOR_FOLLOW190,5250
	SPECTATOR_SCOREBOARDSPECTATOR_SCOREBOARD191,5269
} spectatorState_t;spectatorState_t192,5291
	TEAM_BEGIN,		// Beginning a team game, spawn at baseTEAM_BEGIN195,5327
	TEAM_ACTIVE		// Now actively playingTEAM_ACTIVE196,5381
} playerTeamStateState_t;playerTeamStateState_t197,5419
	playerTeamStateState_t	state;state200,5463
	int			location;location202,5495
	int			captures;captures204,5513
	int			basedefense;basedefense205,5530
	int			carrierdefense;carrierdefense206,5550
	int			flagrecovery;flagrecovery207,5573
	int			fragcarrier;fragcarrier208,5594
	int			assists;assists209,5614
	float		lasthurtcarrier;lasthurtcarrier211,5631
	float		lastreturnedflag;lastreturnedflag212,5656
	float		flagsince;flagsince213,5682
	float		lastfraggedcarrier;lastfraggedcarrier214,5701
} playerTeamState_t;playerTeamState_t215,5729
#define	FOLLOW_ACTIVE1	FOLLOW_ACTIVE1219,5871
#define	FOLLOW_ACTIVE2	FOLLOW_ACTIVE2220,5897
	team_t		sessionTeam;sessionTeam227,6251
	int			spectatorTime;		// for determining next-in-line to playspectatorTime228,6273
	spectatorState_t	spectatorState;spectatorState229,6336
	int			spectatorClient;	// for chasecam and follow modespectatorClient230,6370
	int			wins, losses;		// tournament statswins231,6426
	int			wins, losses;		// tournament statslosses231,6426
	qboolean	teamLeader;			// true when this client is a team leaderteamLeader232,6468
} clientSession_t;clientSession_t233,6534
#define MAX_NETNAME	MAX_NETNAME236,6557
#define	MAX_VOTE_COUNT	MAX_VOTE_COUNT237,6582
	clientConnected_t	connected;	connected242,6749
	usercmd_t	cmd;				// we would lose angles if not persistantcmd243,6780
	qboolean	localClient;		// true if "ip" info key is "localhost"localClient244,6841
	qboolean	initialSpawn;		// the first spawn should be at a cool locationinitialSpawn245,6905
	qboolean	predictItemPickup;	// based on cg_predictItems userinfopredictItemPickup246,6978
	qboolean	pmoveFixed;			//pmoveFixed247,7044
	char		netname[MAX_NETNAME];netname248,7071
	int			maxHealth;			// for handicappingmaxHealth249,7100
	int			enterTime;			// level.time the client entered the gameenterTime250,7140
	playerTeamState_t teamState;	// status in teamplay gamesteamState251,7202
	int			voteCount;			// to prevent people from constantly calling votesvoteCount252,7260
	int			teamVoteCount;		// to prevent people from constantly calling votesteamVoteCount253,7331
	qboolean	teamInfo;			// send team overlay updates?teamInfo254,7405
} clientPersistant_t;clientPersistant_t255,7457
struct gclient_s {gclient_s260,7581
	playerState_t	ps;				// communicated by server to clientsps262,7664
	clientPersistant_t	pers;pers265,7773
	clientSession_t		sess;sess266,7799
	qboolean	readyToExit;		// wishes to leave the intermissionreadyToExit268,7824
	qboolean	noclip;noclip270,7885
	int			lastCmdTime;		// level.time of last usercmd_t, for EF_CONNECTIONlastCmdTime272,7904
	int			buttons;buttons275,8080
	int			oldbuttons;oldbuttons276,8096
	int			latched_buttons;latched_buttons277,8115
	vec3_t		oldOrigin;oldOrigin279,8140
	int			damage_armor;		// damage absorbed by armordamage_armor283,8246
	int			damage_blood;		// damage taken out of healthdamage_blood284,8296
	int			damage_knockback;	// impact damagedamage_knockback285,8348
	vec3_t		damage_from;		// origin for vector calculationdamage_from286,8390
	qboolean	damage_fromWorld;	// if true, don't use the damage_from vectordamage_fromWorld287,8446
	int			accurateCount;		// for "impressive" reward soundaccurateCount289,8520
	int			accuracy_shots;		// total number of shotsaccuracy_shots291,8577
	int			accuracy_hits;		// total number of hitsaccuracy_hits292,8626
	int			lastkilled_client;	// last client that this client killedlastkilled_client295,8678
	int			lasthurt_client;	// last client that damaged this clientlasthurt_client296,8743
	int			lasthurt_mod;		// type of damage the client didlasthurt_mod297,8807
	int			respawnTime;		// can respawn when time > this, force after g_forcerespwanrespawnTime300,8874
	int			inactivityTime;		// kick players when time > thisinactivityTime301,8955
	qboolean	inactivityWarning;	// qtrue if the five seoond warning has been giveninactivityWarning302,9012
	int			rewardTime;			// clear the EF_AWARD_IMPRESSIVE, etc when time > thisrewardTime303,9092
	int			airOutTime;airOutTime305,9169
	int			lastKillTime;		// for multiple kill rewardslastKillTime307,9189
	qboolean	fireHeld;			// used for hookfireHeld309,9241
	gentity_t	*hook;				// grapple hook if outhook310,9280
	int			switchTeamTime;		// time the player switched teamsswitchTeamTime312,9325
	int			timeResidual;timeResidual316,9503
	gentity_t	*persistantPowerup;persistantPowerup319,9544
	int			portalID;portalID320,9575
	int			ammoTimes[WP_NUM_WEAPONS];ammoTimes321,9592
	int			invulnerabilityTime;invulnerabilityTime322,9626
	char		*areabits;areabits325,9662
#define	MAX_SPAWN_VARS	MAX_SPAWN_VARS332,9743
#define	MAX_SPAWN_VARS_CHARS	MAX_SPAWN_VARS_CHARS333,9771
	struct gclient_s	*clients;		// [maxclients]clients336,9823
	struct gentity_s	*gentities;gentities338,9869
	int			gentitySize;gentitySize339,9899
	int			num_entities;		// current number, <= MAX_GENTITIESnum_entities340,9919
	int			warmupTime;			// restart match at this timewarmupTime342,9978
	fileHandle_t	logFile;logFile344,10030
	int			maxclients;maxclients347,10112
	int			framenum;framenum349,10132
	int			time;					// in msectime350,10149
	int			previousTime;			// so movers can back up when blockedpreviousTime351,10177
	int			startTime;				// level.time the map was startedstartTime353,10239
	int			teamScores[TEAM_NUM_TEAMS];teamScores355,10295
	int			lastTeamLocationTime;		// last time of client team location updatelastTeamLocationTime356,10330
	qboolean	newSession;				// don't use any old session data, becausenewSession358,10405
	qboolean	restarted;				// waiting for a map_restart to firerestarted361,10507
	int			numConnectedClients;numConnectedClients363,10569
	int			numNonSpectatorClients;	// includes connecting clientsnumNonSpectatorClients364,10597
	int			numPlayingClients;		// connected, non-spectatorsnumPlayingClients365,10659
	int			sortedClients[MAX_CLIENTS];		// sorted by scoresortedClients366,10715
	int			follow1, follow2;		// clientNums for auto-follow spectatorsfollow1367,10770
	int			follow1, follow2;		// clientNums for auto-follow spectatorsfollow2367,10770
	int			snd_fry;				// sound index for standing in lavasnd_fry369,10838
	int			warmupModificationCount;	// for detecting if g_warmup is changedwarmupModificationCount371,10894
	char		voteString[MAX_STRING_CHARS];voteString374,10984
	char		voteDisplayString[MAX_STRING_CHARS];voteDisplayString375,11021
	int			voteTime;				// level.time vote was calledvoteTime376,11065
	int			voteExecuteTime;		// time the vote is executedvoteExecuteTime377,11115
	int			voteYes;voteYes378,11169
	int			voteNo;voteNo379,11185
	int			numVotingClients;		// set by CalculateRanksnumVotingClients380,11200
	char		teamVoteString[2][MAX_STRING_CHARS];teamVoteString383,11274
	int			teamVoteTime[2];		// level.time vote was calledteamVoteTime384,11318
	int			teamVoteYes[2];teamVoteYes385,11373
	int			teamVoteNo[2];teamVoteNo386,11396
	int			numteamVotingClients[2];// set by CalculateRanksnumteamVotingClients387,11418
	qboolean	spawning;				// the G_Spawn*() functions are validspawning390,11495
	int			numSpawnVars;numSpawnVars391,11556
	char		*spawnVars[MAX_SPAWN_VARS][2];	// key / value pairsspawnVars392,11577
	int			numSpawnVarChars;numSpawnVarChars393,11636
	char		spawnVarChars[MAX_SPAWN_VARS_CHARS];spawnVarChars394,11661
	int			intermissionQueued;		// intermission was qualified, butintermissionQueued397,11729
	int			intermissiontime;		// time the intermission was startedintermissiontime402,11974
	char		*changemap;changemap403,12037
	qboolean	readyToExit;			// at least one client wants to exitreadyToExit404,12056
	int			exitTime;exitTime405,12118
	vec3_t		intermission_origin;	// also used for spectator spawnsintermission_origin406,12135
	vec3_t		intermission_angle;intermission_angle407,12199
	qboolean	locationLinked;			// target_locations get linkedlocationLinked409,12229
	gentity_t	*locationHead;			// head of the location listlocationHead410,12288
	int			bodyQueIndex;			// dead bodiesbodyQueIndex411,12345
	gentity_t	*bodyQue[BODY_QUEUE_SIZE];bodyQue412,12383
	int			portalSequence;portalSequence414,12440
} level_locals_t;level_locals_t416,12470
#define DAMAGE_RADIUS	DAMAGE_RADIUS510,15873
#define DAMAGE_NO_ARMOR	DAMAGE_NO_ARMOR511,15932
#define DAMAGE_NO_KNOCKBACK	DAMAGE_NO_KNOCKBACK512,16014
#define DAMAGE_NO_PROTECTION	DAMAGE_NO_PROTECTION513,16099
#define DAMAGE_NO_TEAM_PROTECTION	DAMAGE_NO_TEAM_PROTECTION515,16223
#define MAX_FILEPATH	MAX_FILEPATH691,20755
typedef struct bot_settings_sbot_settings_s694,20798
	char characterfile[MAX_FILEPATH];characterfile696,20830
	float skill;skill697,20865
	char team[MAX_FILEPATH];team698,20879
} bot_settings_t;bot_settings_t699,20905
#define	FOFS(FOFS715,21354

game/ai_chat.c,1682
#define TIME_BETWEENCHATTING	TIME_BETWEENCHATTING60,1919
int BotNumActivePlayers(void) {BotNumActivePlayers68,2017
int BotIsFirstInRankings(bot_state_t *bs) {BotIsFirstInRankings94,2609
int BotIsLastInRankings(bot_state_t *bs) {BotIsLastInRankings122,3348
char *BotFirstClientInRankings(void) {BotFirstClientInRankings150,4091
char *BotLastClientInRankings(void) {BotLastClientInRankings184,4957
char *BotRandomOpponentName(bot_state_t *bs) {BotRandomOpponentName218,5823
char *BotMapTitle(void) {BotMapTitle262,6883
char *BotWeaponNameForMeansOfDeath(int mod) {BotWeaponNameForMeansOfDeath281,7204
char *BotRandomWeaponName(void) {BotRandomWeaponName313,8119
int BotVisibleEnemies(bot_state_t *bs) {BotVisibleEnemies344,8730
int BotValidChatPosition(bot_state_t *bs) {BotValidChatPosition376,9514
int BotChat_EnterGame(bot_state_t *bs) {BotChat_EnterGame415,10807
int BotChat_ExitGame(bot_state_t *bs) {BotChat_ExitGame448,11758
int BotChat_StartLevel(bot_state_t *bs) {BotChat_StartLevel481,12666
int BotChat_EndLevel(bot_state_t *bs) {BotChat_EndLevel513,13534
int BotChat_Death(bot_state_t *bs) {BotChat_Death573,15144
int BotChat_Kill(bot_state_t *bs) {BotChat_Kill674,18540
int BotChat_EnemySuicide(bot_state_t *bs) {BotChat_EnemySuicide738,20442
int BotChat_HitTalking(bot_state_t *bs) {BotChat_HitTalking772,21376
int BotChat_HitNoDeath(bot_state_t *bs) {BotChat_HitNoDeath811,22630
int BotChat_HitNoKill(bot_state_t *bs) {BotChat_HitNoKill856,24012
int BotChat_Random(bot_state_t *bs) {BotChat_Random894,25120
float BotChatTime(bot_state_t *bs) {BotChatTime961,26958
void BotChatTest(bot_state_t *bs) {BotChatTest974,27214

game/g_team.c,4546
typedef struct teamgame_s {teamgame_s27,1001
	float			last_flag_capture;last_flag_capture28,1029
	int				last_capture_team;last_capture_team29,1057
	flagStatus_t	redStatus;	// CTFredStatus30,1084
	flagStatus_t	blueStatus;	// CTFblueStatus31,1116
	flagStatus_t	flagStatus;	// One Flag CTFflagStatus32,1149
	int				redTakenTime;redTakenTime33,1191
	int				blueTakenTime;blueTakenTime34,1213
	int				redObeliskAttackedTime;redObeliskAttackedTime35,1236
	int				blueObeliskAttackedTime;blueObeliskAttackedTime36,1268
} teamgame_t;teamgame_t37,1301
teamgame_t teamgame;teamgame39,1316
gentity_t	*neutralObelisk;neutralObelisk41,1338
void Team_InitGame( void ) {Team_InitGame45,1425
int OtherTeam(int team) {OtherTeam66,1934
const char *TeamName(int team)  {TeamName74,2064
const char *OtherTeamName(int team) {OtherTeamName84,2252
const char *TeamColorString(int team) {TeamColorString94,2444
void QDECL PrintMsg( gentity_t *ent, const char *fmt, ... ) {PrintMsg105,2681
void AddTeamScore(vec3_t origin, int team, int score) {AddTeamScore131,3274
qboolean OnSameTeam( gentity_t *ent1, gentity_t *ent2 ) {OnSameTeam175,4485
static char ctfFlagStatusRemap[] = { '0', '1', '*', '*', '2' };ctfFlagStatusRemap192,4780
static char oneFlagStatusRemap[] = { '0', '1', '2', '3', '4' };oneFlagStatusRemap193,4844
void Team_SetFlagStatus( int team, flagStatus_t status ) {Team_SetFlagStatus195,4909
void Team_CheckDroppedItem( gentity_t *dropped ) {Team_CheckDroppedItem238,5758
void Team_ForceGesture(int team) {Team_ForceGesture255,6172
void Team_FragBonuses(gentity_t *targ, gentity_t *inflictor, gentity_t *attacker)Team_FragBonuses281,6669
void Team_CheckHurtCarrier(gentity_t *targ, gentity_t *attacker)Team_CheckHurtCarrier504,14215
gentity_t *Team_ResetFlag( int team ) {Team_ResetFlag528,14831
void Team_ResetFlags( void ) {Team_ResetFlags561,15363
void Team_ReturnFlagSound( gentity_t *ent, int team ) {Team_ReturnFlagSound573,15604
void Team_TakeFlagSound( gentity_t *ent, int team ) {Team_TakeFlagSound591,15988
void Team_CaptureFlagSound( gentity_t *ent, int team ) {Team_CaptureFlagSound629,16851
void Team_ReturnFlag( int team ) {Team_ReturnFlag647,17239
void Team_FreeEntity( gentity_t *ent ) {Team_FreeEntity657,17481
void Team_DroppedFlagThink(gentity_t *ent) {Team_DroppedFlagThink678,17986
int Team_TouchOurFlag( gentity_t *ent, gentity_t *other, int team ) {Team_TouchOurFlag701,18416
int Team_TouchEnemyFlag( gentity_t *ent, gentity_t *other, int team ) {Team_TouchEnemyFlag814,22362
int Pickup_Team( gentity_t *ent, gentity_t *other ) {Pickup_Team852,23418
gentity_t *Team_GetLocation(gentity_t *ent)Team_GetLocation913,24890
qboolean Team_GetLocationMsg(gentity_t *ent, char *loc, int loclen)Team_GetLocationMsg952,25728
#define	MAX_TEAM_SPAWN_POINTS	MAX_TEAM_SPAWN_POINTS983,26366
gentity_t *SelectRandomTeamSpawnPoint( int teamstate, team_t team ) {SelectRandomTeamSpawnPoint984,26399
gentity_t *SelectCTFSpawnPoint ( team_t team, int teamstate, vec3_t origin, vec3_t angles ) {SelectCTFSpawnPoint1034,27377
static int QDECL SortClients( const void *a, const void *b ) {SortClients1052,27815
void TeamplayInfoMessage( gentity_t *ent ) {TeamplayInfoMessage1066,28041
void CheckTeamStatus(void) {CheckTeamStatus1124,29786
void SP_team_CTF_redplayer( gentity_t *ent ) {SP_team_CTF_redplayer1167,30907
void SP_team_CTF_blueplayer( gentity_t *ent ) {SP_team_CTF_blueplayer1174,31082
void SP_team_CTF_redspawn(gentity_t *ent) {SP_team_CTF_redspawn1182,31306
void SP_team_CTF_bluespawn(gentity_t *ent) {SP_team_CTF_bluespawn1189,31527
static void ObeliskRegen( gentity_t *self ) {ObeliskRegen1200,31645
static void ObeliskRespawn( gentity_t *self ) {ObeliskRespawn1217,32123
static void ObeliskDie( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod ) {ObeliskDie1228,32374
static void ObeliskTouch( gentity_t *self, gentity_t *other, trace_t *trace ) {ObeliskTouch1259,33402
static void ObeliskPain( gentity_t *self, gentity_t *attacker, int damage ) {ObeliskPain1295,34480
gentity_t *SpawnObelisk( vec3_t origin, int team, int spawnflags) {SpawnObelisk1308,34889
void SP_team_redobelisk( gentity_t *ent ) {SP_team_redobelisk1373,36631
void SP_team_blueobelisk( gentity_t *ent ) {SP_team_blueobelisk1398,37286
void SP_team_neutralobelisk( gentity_t *ent ) {SP_team_neutralobelisk1423,37948
qboolean CheckObeliskAttack( gentity_t *obelisk, gentity_t *attacker ) {CheckObeliskAttack1443,38418

game/g_weapon.c,2976
static	float	s_quadFactor;s_quadFactor28,1069
static	vec3_t	forward, right, up;forward29,1096
static	vec3_t	forward, right, up;right29,1096
static	vec3_t	forward, right, up;up29,1096
static	vec3_t	muzzle;muzzle30,1130
#define NUM_NAILSHOTS NUM_NAILSHOTS32,1153
void G_BounceProjectile( vec3_t start, vec3_t impact, vec3_t dir, vec3_t endout ) {G_BounceProjectile39,1238
void Weapon_Gauntlet( gentity_t *ent ) {Weapon_Gauntlet60,1681
qboolean CheckGauntletAttack( gentity_t *ent ) {CheckGauntletAttack69,1784
void SnapVectorTowards( vec3_t v, vec3_t to ) {SnapVectorTowards140,3498
#define CHAINGUN_SPREAD	CHAINGUN_SPREAD153,3698
#define MACHINEGUN_SPREAD	MACHINEGUN_SPREAD155,3734
#define	MACHINEGUN_DAMAGE	MACHINEGUN_DAMAGE156,3764
#define	MACHINEGUN_TEAM_DAMAGE	MACHINEGUN_TEAM_DAMAGE157,3792
void Bullet_Fire (gentity_t *ent, float spread, int damage ) {Bullet_Fire159,3853
void BFG_Fire ( gentity_t *ent ) {BFG_Fire242,5922
#define	DEFAULT_SHOTGUN_DAMAGE	DEFAULT_SHOTGUN_DAMAGE263,6445
qboolean ShotgunPellet( vec3_t start, vec3_t end, gentity_t *ent ) {ShotgunPellet265,6480
void ShotgunPattern( vec3_t origin, vec3_t origin2, int seed, gentity_t *ent ) {ShotgunPattern322,8022
void weapon_supershotgun_fire (gentity_t *ent) {weapon_supershotgun_fire353,8942
void weapon_grenadelauncher_fire (gentity_t *ent) {weapon_grenadelauncher_fire375,9515
void Weapon_RocketLauncher_Fire (gentity_t *ent) {Weapon_RocketLauncher_Fire397,10024
void Weapon_Plasmagun_Fire (gentity_t *ent) {Weapon_Plasmagun_Fire416,10457
#define	MAX_RAIL_HITS	MAX_RAIL_HITS440,10944
void weapon_railgun_fire (gentity_t *ent) {weapon_railgun_fire441,10968
void Weapon_GrapplingHook_Fire (gentity_t *ent)Weapon_GrapplingHook_Fire572,15223
void Weapon_HookFree (gentity_t *ent)Weapon_HookFree580,15399
void Weapon_HookThink (gentity_t *ent)Weapon_HookThink587,15555
void Weapon_LightningFire( gentity_t *ent ) {Weapon_LightningFire612,16308
void Weapon_Nailgun_Fire (gentity_t *ent) {Weapon_Nailgun_Fire700,18688
void weapon_proxlauncher_fire (gentity_t *ent) {weapon_proxlauncher_fire722,19209
qboolean LogAccuracyHit( gentity_t *target, gentity_t *attacker ) {LogAccuracyHit746,19690
void CalcMuzzlePoint ( gentity_t *ent, vec3_t forward, vec3_t right, vec3_t up, vec3_t muzzlePoint ) {CalcMuzzlePoint782,20206
void CalcMuzzlePointOrigin ( gentity_t *ent, vec3_t origin, vec3_t forward, vec3_t right, vec3_t up, vec3_t muzzlePoint ) {CalcMuzzlePointOrigin797,20667
void FireWeapon( gentity_t *ent ) {FireWeapon812,21094
static void KamikazeRadiusDamage( vec3_t origin, gentity_t *attacker, float damage, float radius ) {KamikazeRadiusDamage903,23199
static void KamikazeShockWave( vec3_t origin, gentity_t *attacker, float damage, float push, float radius ) {KamikazeShockWave968,24701
static void KamikazeDamage( gentity_t *self ) {KamikazeDamage1034,26282
void G_StartKamikaze( gentity_t *ent ) {G_StartKamikaze1091,27932

game/bg_lib.c,3247
static const char rcsid[] =rcsid45,1890
#define min(min52,2069
#define swapcode(swapcode58,2193
#define SWAPINIT(SWAPINIT69,2476
swapfunc(a, b, n, swaptype)swapfunc73,2620
#define swap(swap83,2762
#define vecswap(vecswap91,2948
med3(a, b, c, cmp)med394,3030
qsort(a, n, es, cmp)qsort104,3232
size_t strlen( const char *string ) {strlen187,5005
char *strcat( char *strDestination, const char *strSource ) {strcat198,5123
char *strcpy( char *strDestination, const char *strSource ) {strcpy212,5329
int strcmp( const char *string1, const char *string2 ) {strcmp224,5510
char *strchr( const char *string, int c ) {strchr233,5687
char *strstr( const char *string, const char *strCharSet ) {strstr243,5845
int tolower( int c ) {tolower260,6130
int toupper( int c ) {toupper268,6220
void *memmove( void *dest, const void *src, size_t count ) {memmove275,6309
double tan( double x ) {tan742,30073
static int randSeed = 0;randSeed747,30127
void	srand( unsigned seed ) {srand749,30153
int		rand( void ) {rand753,30204
double atof( const char *string ) {atof758,30290
double _atof( const char **stringPtr ) {_atof825,31143
int atoi( const char *string ) {atoi894,32067
int _atoi( const char **stringPtr ) {_atoi940,32610
int abs( int n ) {abs989,33223
double fabs( double x ) {fabs993,33269
#define LDOUBLE LDOUBLE1076,36546
#define LDOUBLE LDOUBLE1078,36580
# define LLONG LLONG1083,36666
# define LLONG LLONG1085,36697
#define DP_S_DEFAULT DP_S_DEFAULT1103,37329
#define DP_S_FLAGS DP_S_FLAGS1104,37352
#define DP_S_MIN DP_S_MIN1105,37375
#define DP_S_DOT DP_S_DOT1106,37398
#define DP_S_MAX DP_S_MAX1107,37421
#define DP_S_MOD DP_S_MOD1108,37444
#define DP_S_MOD_L DP_S_MOD_L1109,37467
#define DP_S_CONV DP_S_CONV1110,37490
#define DP_S_DONE DP_S_DONE1111,37513
#define DP_F_MINUS DP_F_MINUS1114,37563
#define DP_F_PLUS DP_F_PLUS1115,37592
#define DP_F_SPACE DP_F_SPACE1116,37621
#define DP_F_NUM DP_F_NUM1117,37650
#define DP_F_ZERO DP_F_ZERO1118,37679
#define DP_F_UP DP_F_UP1119,37708
#define DP_F_UNSIGNED DP_F_UNSIGNED1120,37737
#define DP_C_SHORT DP_C_SHORT1123,37793
#define DP_C_LONG DP_C_LONG1124,37816
#define DP_C_LLONG DP_C_LLONG1125,37839
#define DP_C_LDOUBLE DP_C_LDOUBLE1126,37862
#define char_to_int(char_to_int1128,37886
#define MAX(MAX1129,37919
#define MIN(MIN1130,37955
static int dopr (char *buffer, size_t maxlen, const char *format, va_list args)dopr1132,37992
static int fmtstr (char *buffer, size_t *currlen, size_t maxlen,fmtstr1423,44417
static int fmtint (char *buffer, size_t *currlen, size_t maxlen,fmtint1464,45305
static LDOUBLE abs_val (LDOUBLE value)abs_val1559,47381
static LDOUBLE pow10 (int exp)pow101569,47508
static long round (LDOUBLE value)round1582,47638
static int fmtfp (char *buffer, size_t *currlen, size_t maxlen,fmtfp1594,47794
static int dopr_outch (char *buffer, size_t *currlen, size_t maxlen, char c)dopr_outch1733,50974
int Q_vsnprintf(char *str, size_t length, const char *fmt, va_list args)Q_vsnprintf1740,51127
int Q_snprintf(char *str, size_t length, const char *fmt, ...)Q_snprintf1747,51275
int sscanf( const char *buffer, const char *fmt, ... ) {sscanf1760,51494

game/g_target.c,2369
void Use_Target_Give( gentity_t *ent, gentity_t *other, gentity_t *activator ) {Use_Target_Give30,1158
void SP_target_give( gentity_t *ent ) {SP_target_give56,1659
void Use_target_remove_powerups( gentity_t *ent, gentity_t *other, gentity_t *activator ) {Use_target_remove_powerups67,1942
void SP_target_remove_powerups( gentity_t *ent ) {SP_target_remove_powerups83,2441
void Think_Target_Delay( gentity_t *ent ) {Think_Target_Delay94,2761
void Use_Target_Delay( gentity_t *ent, gentity_t *other, gentity_t *activator ) {Use_Target_Delay98,2846
void SP_target_delay( gentity_t *ent ) {SP_target_delay104,3073
void Use_Target_Score (gentity_t *ent, gentity_t *other, gentity_t *activator) {Use_Target_Score124,3531
void SP_target_score( gentity_t *ent ) {SP_target_score128,3673
void Use_Target_Print (gentity_t *ent, gentity_t *other, gentity_t *activator) {Use_Target_Print142,4049
void SP_target_print( gentity_t *ent ) {SP_target_print161,4582
void Use_Target_Speaker (gentity_t *ent, gentity_t *other, gentity_t *activator) {Use_Target_Speaker181,5310
void SP_target_speaker( gentity_t *ent ) {SP_target_speaker198,5861
void target_laser_think (gentity_t *self) {target_laser_think254,7305
void target_laser_on (gentity_t *self)target_laser_on284,8211
void target_laser_off (gentity_t *self)target_laser_off291,8332
void target_laser_use (gentity_t *self, gentity_t *other, gentity_t *activator)target_laser_use297,8427
void target_laser_start (gentity_t *self)target_laser_start306,8629
void SP_target_laser (gentity_t *self)SP_target_laser335,9200
void target_teleporter_use( gentity_t *self, gentity_t *other, gentity_t *activator ) {target_teleporter_use345,9444
void SP_target_teleporter( gentity_t *self ) {SP_target_teleporter362,9869
void target_relay_use (gentity_t *self, gentity_t *other, gentity_t *activator) {target_relay_use377,10390
void SP_target_relay (gentity_t *self) {SP_target_relay398,10924
void target_kill_use( gentity_t *self, gentity_t *other, gentity_t *activator ) {target_kill_use408,11137
void SP_target_kill( gentity_t *self ) {SP_target_kill412,11314
void SP_target_position( gentity_t *self ){SP_target_position419,11520
static void target_location_linkup(gentity_t *ent)target_location_linkup423,11605
void SP_target_location( gentity_t *self ){SP_target_location461,12528

game/g_misc.c,1597
void SP_info_camp( gentity_t *self ) {SP_info_camp36,1324
void SP_info_null( gentity_t *self ) {SP_info_null44,1566
void SP_info_notnull( gentity_t *self ){SP_info_notnull53,1797
void SP_light( gentity_t *self ) {SP_light65,2189
void TeleportPlayer( gentity_t *player, vec3_t origin, vec3_t angles ) {TeleportPlayer79,2437
void SP_misc_teleporter_dest( gentity_t *ent ) {SP_misc_teleporter_dest132,4150
void SP_misc_model( gentity_t *ent ) {SP_misc_model141,4362
void locateCamera( gentity_t *ent ) {locateCamera158,4744
void SP_misc_portal_surface(gentity_t *ent) {SP_misc_portal_surface208,5972
void SP_misc_portal_camera(gentity_t *ent) {SP_misc_portal_camera228,6598
void Use_Shooter( gentity_t *ent, gentity_t *other, gentity_t *activator ) {Use_Shooter248,6981
static void InitShooter_Finish( gentity_t *ent ) {InitShooter_Finish289,7847
void InitShooter( gentity_t *ent, int weapon ) {InitShooter295,7982
void SP_shooter_rocket( gentity_t *ent ) {SP_shooter_rocket319,8653
void SP_shooter_plasma( gentity_t *ent ) {SP_shooter_plasma327,8929
void SP_shooter_grenade( gentity_t *ent ) {SP_shooter_grenade335,9199
static void PortalDie (gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod) {PortalDie341,9307
void DropPortalDestination( gentity_t *player ) {DropPortalDestination347,9479
static void PortalTouch( gentity_t *self, gentity_t *other, trace_t *trace) {PortalTouch384,10468
static void PortalEnable( gentity_t *self ) {PortalEnable432,11952
void DropPortalSource( gentity_t *player ) {DropPortalSource439,12106

game/inv.h,6598
#define INVENTORY_NONE	INVENTORY_NONE23,975
#define INVENTORY_ARMOR	INVENTORY_ARMOR25,1011
#define INVENTORY_GAUNTLET	INVENTORY_GAUNTLET27,1050
#define INVENTORY_SHOTGUN	INVENTORY_SHOTGUN28,1081
#define INVENTORY_MACHINEGUN	INVENTORY_MACHINEGUN29,1111
#define INVENTORY_GRENADELAUNCHER	INVENTORY_GRENADELAUNCHER30,1143
#define INVENTORY_ROCKETLAUNCHER	INVENTORY_ROCKETLAUNCHER31,1179
#define INVENTORY_LIGHTNING	INVENTORY_LIGHTNING32,1214
#define INVENTORY_RAILGUN	INVENTORY_RAILGUN33,1246
#define INVENTORY_PLASMAGUN	INVENTORY_PLASMAGUN34,1277
#define INVENTORY_BFG10K	INVENTORY_BFG10K35,1310
#define INVENTORY_GRAPPLINGHOOK	INVENTORY_GRAPPLINGHOOK36,1340
#define INVENTORY_NAILGUN	INVENTORY_NAILGUN37,1376
#define INVENTORY_PROXLAUNCHER	INVENTORY_PROXLAUNCHER38,1407
#define INVENTORY_CHAINGUN	INVENTORY_CHAINGUN39,1442
#define INVENTORY_SHELLS	INVENTORY_SHELLS41,1481
#define INVENTORY_BULLETS	INVENTORY_BULLETS42,1511
#define INVENTORY_GRENADES	INVENTORY_GRENADES43,1542
#define INVENTORY_CELLS	INVENTORY_CELLS44,1574
#define INVENTORY_LIGHTNINGAMMO	INVENTORY_LIGHTNINGAMMO45,1604
#define INVENTORY_ROCKETS	INVENTORY_ROCKETS46,1640
#define INVENTORY_SLUGS	INVENTORY_SLUGS47,1671
#define INVENTORY_BFGAMMO	INVENTORY_BFGAMMO48,1701
#define INVENTORY_NAILS	INVENTORY_NAILS49,1732
#define INVENTORY_MINES	INVENTORY_MINES50,1762
#define INVENTORY_BELT	INVENTORY_BELT51,1792
#define INVENTORY_HEALTH	INVENTORY_HEALTH53,1832
#define INVENTORY_TELEPORTER	INVENTORY_TELEPORTER54,1862
#define INVENTORY_MEDKIT	INVENTORY_MEDKIT55,1895
#define INVENTORY_KAMIKAZE	INVENTORY_KAMIKAZE56,1925
#define INVENTORY_PORTAL	INVENTORY_PORTAL57,1957
#define INVENTORY_INVULNERABILITY	INVENTORY_INVULNERABILITY58,1987
#define INVENTORY_QUAD	INVENTORY_QUAD59,2024
#define INVENTORY_ENVIRONMENTSUIT	INVENTORY_ENVIRONMENTSUIT60,2053
#define INVENTORY_HASTE	INVENTORY_HASTE61,2090
#define INVENTORY_INVISIBILITY	INVENTORY_INVISIBILITY62,2120
#define INVENTORY_REGEN	INVENTORY_REGEN63,2155
#define INVENTORY_FLIGHT	INVENTORY_FLIGHT64,2185
#define INVENTORY_SCOUT	INVENTORY_SCOUT65,2215
#define INVENTORY_GUARD	INVENTORY_GUARD66,2245
#define INVENTORY_DOUBLER	INVENTORY_DOUBLER67,2275
#define INVENTORY_AMMOREGEN	INVENTORY_AMMOREGEN68,2306
#define INVENTORY_REDFLAG	INVENTORY_REDFLAG70,2340
#define INVENTORY_BLUEFLAG	INVENTORY_BLUEFLAG71,2371
#define INVENTORY_NEUTRALFLAG	INVENTORY_NEUTRALFLAG72,2403
#define INVENTORY_REDCUBE	INVENTORY_REDCUBE73,2437
#define INVENTORY_BLUECUBE	INVENTORY_BLUECUBE74,2468
#define ENEMY_HORIZONTAL_DIST	ENEMY_HORIZONTAL_DIST76,2514
#define ENEMY_HEIGHT	ENEMY_HEIGHT77,2549
#define NUM_VISIBLE_ENEMIES	NUM_VISIBLE_ENEMIES78,2577
#define NUM_VISIBLE_TEAMMATES	NUM_VISIBLE_TEAMMATES79,2611
#define MODELINDEX_ARMORSHARD	MODELINDEX_ARMORSHARD89,2813
#define MODELINDEX_ARMORCOMBAT	MODELINDEX_ARMORCOMBAT90,2846
#define MODELINDEX_ARMORBODY	MODELINDEX_ARMORBODY91,2880
#define MODELINDEX_HEALTHSMALL	MODELINDEX_HEALTHSMALL92,2912
#define MODELINDEX_HEALTH	MODELINDEX_HEALTH93,2946
#define MODELINDEX_HEALTHLARGE	MODELINDEX_HEALTHLARGE94,2976
#define MODELINDEX_HEALTHMEGA	MODELINDEX_HEALTHMEGA95,3010
#define MODELINDEX_GAUNTLET	MODELINDEX_GAUNTLET97,3044
#define MODELINDEX_SHOTGUN	MODELINDEX_SHOTGUN98,3076
#define MODELINDEX_MACHINEGUN	MODELINDEX_MACHINEGUN99,3107
#define MODELINDEX_GRENADELAUNCHER	MODELINDEX_GRENADELAUNCHER100,3141
#define MODELINDEX_ROCKETLAUNCHER	MODELINDEX_ROCKETLAUNCHER101,3179
#define MODELINDEX_LIGHTNING	MODELINDEX_LIGHTNING102,3216
#define MODELINDEX_RAILGUN	MODELINDEX_RAILGUN103,3249
#define MODELINDEX_PLASMAGUN	MODELINDEX_PLASMAGUN104,3281
#define MODELINDEX_BFG10K	MODELINDEX_BFG10K105,3314
#define MODELINDEX_GRAPPLINGHOOK	MODELINDEX_GRAPPLINGHOOK106,3345
#define MODELINDEX_SHELLS	MODELINDEX_SHELLS108,3382
#define MODELINDEX_BULLETS	MODELINDEX_BULLETS109,3413
#define MODELINDEX_GRENADES	MODELINDEX_GRENADES110,3445
#define MODELINDEX_CELLS	MODELINDEX_CELLS111,3478
#define MODELINDEX_LIGHTNINGAMMO	MODELINDEX_LIGHTNINGAMMO112,3508
#define MODELINDEX_ROCKETS	MODELINDEX_ROCKETS113,3544
#define MODELINDEX_SLUGS	MODELINDEX_SLUGS114,3576
#define MODELINDEX_BFGAMMO	MODELINDEX_BFGAMMO115,3606
#define MODELINDEX_TELEPORTER	MODELINDEX_TELEPORTER117,3639
#define MODELINDEX_MEDKIT	MODELINDEX_MEDKIT118,3673
#define MODELINDEX_QUAD	MODELINDEX_QUAD119,3704
#define MODELINDEX_ENVIRONMENTSUIT	MODELINDEX_ENVIRONMENTSUIT120,3734
#define MODELINDEX_HASTE	MODELINDEX_HASTE121,3772
#define MODELINDEX_INVISIBILITY	MODELINDEX_INVISIBILITY122,3802
#define MODELINDEX_REGEN	MODELINDEX_REGEN123,3838
#define MODELINDEX_FLIGHT	MODELINDEX_FLIGHT124,3868
#define MODELINDEX_REDFLAG	MODELINDEX_REDFLAG126,3900
#define MODELINDEX_BLUEFLAG	MODELINDEX_BLUEFLAG127,3932
#define MODELINDEX_KAMIKAZE	MODELINDEX_KAMIKAZE131,3996
#define MODELINDEX_PORTAL	MODELINDEX_PORTAL132,4029
#define MODELINDEX_INVULNERABILITY	MODELINDEX_INVULNERABILITY133,4060
#define MODELINDEX_NAILS	MODELINDEX_NAILS135,4099
#define MODELINDEX_MINES	MODELINDEX_MINES136,4129
#define MODELINDEX_BELT	MODELINDEX_BELT137,4159
#define MODELINDEX_SCOUT	MODELINDEX_SCOUT139,4190
#define MODELINDEX_GUARD	MODELINDEX_GUARD140,4220
#define MODELINDEX_DOUBLER	MODELINDEX_DOUBLER141,4250
#define MODELINDEX_AMMOREGEN	MODELINDEX_AMMOREGEN142,4282
#define MODELINDEX_NEUTRALFLAG	MODELINDEX_NEUTRALFLAG144,4316
#define MODELINDEX_REDCUBE	MODELINDEX_REDCUBE145,4351
#define MODELINDEX_BLUECUBE	MODELINDEX_BLUECUBE146,4383
#define MODELINDEX_NAILGUN	MODELINDEX_NAILGUN148,4417
#define MODELINDEX_PROXLAUNCHER	MODELINDEX_PROXLAUNCHER149,4449
#define MODELINDEX_CHAINGUN	MODELINDEX_CHAINGUN150,4485
#define WEAPONINDEX_GAUNTLET	WEAPONINDEX_GAUNTLET154,4523
#define WEAPONINDEX_MACHINEGUN	WEAPONINDEX_MACHINEGUN155,4556
#define WEAPONINDEX_SHOTGUN	WEAPONINDEX_SHOTGUN156,4591
#define WEAPONINDEX_GRENADE_LAUNCHER	WEAPONINDEX_GRENADE_LAUNCHER157,4624
#define WEAPONINDEX_ROCKET_LAUNCHER	WEAPONINDEX_ROCKET_LAUNCHER158,4663
#define WEAPONINDEX_LIGHTNING	WEAPONINDEX_LIGHTNING159,4702
#define WEAPONINDEX_RAILGUN	WEAPONINDEX_RAILGUN160,4736
#define WEAPONINDEX_PLASMAGUN	WEAPONINDEX_PLASMAGUN161,4769
#define WEAPONINDEX_BFG	WEAPONINDEX_BFG162,4803
#define WEAPONINDEX_GRAPPLING_HOOK	WEAPONINDEX_GRAPPLING_HOOK163,4833
#define WEAPONINDEX_NAILGUN	WEAPONINDEX_NAILGUN164,4872
#define WEAPONINDEX_PROXLAUNCHER	WEAPONINDEX_PROXLAUNCHER165,4906
#define WEAPONINDEX_CHAINGUN	WEAPONINDEX_CHAINGUN166,4943

game/ai_team.h,0

game/ai_dmq3.h,242
#define CTF_FLAG_NONE	CTF_FLAG_NONE182,7694
#define CTF_FLAG_RED	CTF_FLAG_RED183,7719
#define CTF_FLAG_BLUE	CTF_FLAG_BLUE184,7743
#define CTF_SKIN_REDTEAM	CTF_SKIN_REDTEAM186,7780
#define CTF_SKIN_BLUETEAM	CTF_SKIN_BLUETEAM187,7811

game/ai_cmd.c,3806
int notleader[MAX_CLIENTS];notleader59,1912
void BotPrintTeamGoal(bot_state_t *bs) {BotPrintTeamGoal67,2015
int BotGetItemTeamGoal(char *goalname, bot_goal_t *goal) {BotGetItemTeamGoal159,4267
int BotGetMessageTeamGoal(bot_state_t *bs, char *goalname, bot_goal_t *goal) {BotGetMessageTeamGoal181,4659
float BotGetTime(bot_match_t *match) {BotGetTime199,5017
int FindClientByName(char *name) {FindClientByName237,6039
int FindEnemyByName(bot_state_t *bs, char *name) {FindEnemyByName260,6553
int NumPlayersOnSameTeam(bot_state_t *bs) {NumPlayersOnSameTeam285,7160
int BotGetPatrolWaypoints(bot_state_t *bs, bot_match_t *match) {BotGetPatrolWaypoints308,7615
int BotAddressedToBot(bot_state_t *bs, bot_match_t *match) {BotAddressedToBot388,9634
int BotGPSToPosition(char *buf, vec3_t position) {BotGPSToPosition449,11533
void BotMatch_HelpAccompany(bot_state_t *bs, bot_match_t *match) {BotMatch_HelpAccompany484,12077
void BotMatch_DefendKeyArea(bot_state_t *bs, bot_match_t *match) {BotMatch_DefendKeyArea610,15735
void BotMatch_GetItem(bot_state_t *bs, bot_match_t *match) {BotMatch_GetItem658,17083
void BotMatch_Camp(bot_state_t *bs, bot_match_t *match) {BotMatch_Camp698,18185
void BotMatch_Patrol(bot_state_t *bs, bot_match_t *match) {BotMatch_Patrol790,21026
void BotMatch_GetFlag(bot_state_t *bs, bot_match_t *match) {BotMatch_GetFlag829,22057
void BotMatch_AttackEnemyBase(bot_state_t *bs, bot_match_t *match) {BotMatch_AttackEnemyBase881,23327
void BotMatch_Harvest(bot_state_t *bs, bot_match_t *match) {BotMatch_Harvest929,24476
void BotMatch_RushBase(bot_state_t *bs, bot_match_t *match) {BotMatch_RushBase972,25476
void BotMatch_TaskPreference(bot_state_t *bs, bot_match_t *match) {BotMatch_TaskPreference1018,26536
void BotMatch_ReturnFlag(bot_state_t *bs, bot_match_t *match) {BotMatch_ReturnFlag1065,27739
void BotMatch_JoinSubteam(bot_state_t *bs, bot_match_t *match) {BotMatch_JoinSubteam1107,28651
void BotMatch_LeaveSubteam(bot_state_t *bs, bot_match_t *match) {BotMatch_LeaveSubteam1132,29362
void BotMatch_WhichTeam(bot_state_t *bs, bot_match_t *match) {BotMatch_WhichTeam1155,29931
void BotMatch_CheckPoint(bot_state_t *bs, bot_match_t *match) {BotMatch_CheckPoint1174,30365
void BotMatch_FormationSpace(bot_state_t *bs, bot_match_t *match) {BotMatch_FormationSpace1231,32057
void BotMatch_Dismiss(bot_state_t *bs, bot_match_t *match) {BotMatch_Dismiss1254,32681
void BotMatch_Suicide(bot_state_t *bs, bot_match_t *match) {BotMatch_Suicide1279,33259
void BotMatch_StartTeamLeaderShip(bot_state_t *bs, bot_match_t *match) {BotMatch_StartTeamLeaderShip1301,33793
void BotMatch_StopTeamLeaderShip(bot_state_t *bs, bot_match_t *match) {BotMatch_StopTeamLeaderShip1327,34591
void BotMatch_WhoIsTeamLeader(bot_state_t *bs, bot_match_t *match) {BotMatch_WhoIsTeamLeader1357,35393
void BotMatch_WhatAreYouDoing(bot_state_t *bs, bot_match_t *match) {BotMatch_WhatAreYouDoing1374,35787
void BotMatch_WhatIsMyCommand(bot_state_t *bs, bot_match_t *match) {BotMatch_WhatIsMyCommand1468,37856
float BotNearestVisibleItem(bot_state_t *bs, char *itemname, bot_goal_t *goal) {BotNearestVisibleItem1481,38154
void BotMatch_WhereAreYou(bot_state_t *bs, bot_match_t *match) {BotMatch_WhereAreYou1515,38989
void BotMatch_LeadTheWay(bot_state_t *bs, bot_match_t *match) {BotMatch_LeadTheWay1616,41613
void BotMatch_Kill(bot_state_t *bs, bot_match_t *match) {BotMatch_Kill1685,43598
void BotMatch_CTF(bot_state_t *bs, bot_match_t *match) {BotMatch_CTF1723,44577
void BotMatch_EnterGame(bot_state_t *bs, bot_match_t *match) {BotMatch_EnterGame1769,45857
void BotMatch_NewLeader(bot_state_t *bs, bot_match_t *match) {BotMatch_NewLeader1783,46240
int BotMatchMessage(bot_state_t *bs, char *message) {BotMatchMessage1799,46614

game/g_utils.c,2071
  char oldShader[MAX_QPATH];oldShader28,1072
  char newShader[MAX_QPATH];newShader29,1101
  float timeOffset;timeOffset30,1130
} shaderRemap_t;shaderRemap_t31,1150
#define MAX_SHADER_REMAPS MAX_SHADER_REMAPS33,1168
int remapCount = 0;remapCount35,1199
shaderRemap_t remappedShaders[MAX_SHADER_REMAPS];remappedShaders36,1219
void AddRemap(const char *oldShader, const char *newShader, float timeOffset) {AddRemap38,1270
const char *BuildShaderStateConfig(void) {BuildShaderStateConfig57,1847
int G_FindConfigstringIndex( char *name, int start, int max, qboolean create ) {G_FindConfigstringIndex84,2509
int G_ModelIndex( char *name ) {G_ModelIndex116,3000
int G_SoundIndex( char *name ) {G_SoundIndex120,3106
void G_TeamCommand( team_t team, char *cmd ) {G_TeamCommand134,3386
gentity_t *G_Find (gentity_t *from, int fieldofs, const char *match)G_Find159,3968
#define MAXCHOICES	MAXCHOICES190,4423
gentity_t *G_PickTarget (char *targetname)G_PickTarget192,4446
void G_UseTargets( gentity_t *ent, gentity_t *activator ) {G_UseTargets235,5237
float	*tv( float x, float y, float z ) {tv277,6056
char	*vtos( const vec3_t v ) {vtos303,6428
void G_SetMovedir( vec3_t angles, vec3_t movedir ) {G_SetMovedir328,6974
float vectoyaw( const vec3_t vec ) {vectoyaw345,7437
void G_InitGentity( gentity_t *e ) {G_InitGentity367,7754
gentity_t *G_Spawn( void ) {G_Spawn389,8347
qboolean G_EntitiesFree( void ) {G_EntitiesFree441,9625
void G_FreeEntity( gentity_t *ed ) {G_FreeEntity464,9953
gentity_t *G_TempEntity( vec3_t origin, int event ) {G_TempEntity486,10431
void G_KillBox (gentity_t *ent) {G_KillBox525,11181
void G_AddPredictableEvent( gentity_t *ent, int event, int eventParm ) {G_AddPredictableEvent559,11977
void G_AddEvent( gentity_t *ent, int event, int eventParm ) {G_AddEvent574,12266
void G_Sound( gentity_t *ent, int channel, int soundIndex ) {G_Sound604,13043
void G_SetOrigin( gentity_t *ent, vec3_t origin ) {G_SetOrigin622,13400
int DebugLine(vec3_t start, vec3_t end, int color) {DebugLine640,13802

game/match.h,4055
#define EC	EC24,1045
#define MTCONTEXT_MISC	MTCONTEXT_MISC27,1090
#define MTCONTEXT_INITIALTEAMCHAT	MTCONTEXT_INITIALTEAMCHAT28,1119
#define MTCONTEXT_TIME	MTCONTEXT_TIME29,1156
#define MTCONTEXT_TEAMMATE	MTCONTEXT_TEAMMATE30,1185
#define MTCONTEXT_ADDRESSEE	MTCONTEXT_ADDRESSEE31,1218
#define MTCONTEXT_PATROLKEYAREA	MTCONTEXT_PATROLKEYAREA32,1252
#define MTCONTEXT_REPLYCHAT	MTCONTEXT_REPLYCHAT33,1289
#define MTCONTEXT_CTF	MTCONTEXT_CTF34,1324
#define MSG_NEWLEADER	MSG_NEWLEADER37,1371
#define MSG_ENTERGAME	MSG_ENTERGAME38,1413
#define MSG_HELP	MSG_HELP39,1463
#define MSG_ACCOMPANY	MSG_ACCOMPANY40,1503
#define MSG_DEFENDKEYAREA	MSG_DEFENDKEYAREA41,1552
#define MSG_RUSHBASE	MSG_RUSHBASE42,1604
#define MSG_GETFLAG	MSG_GETFLAG43,1656
#define MSG_STARTTEAMLEADERSHIP	MSG_STARTTEAMLEADERSHIP44,1705
#define MSG_STOPTEAMLEADERSHIP	MSG_STOPTEAMLEADERSHIP45,1784
#define MSG_WHOISTEAMLAEDER	MSG_WHOISTEAMLAEDER46,1866
#define MSG_WAIT	MSG_WAIT47,1926
#define MSG_WHATAREYOUDOING	MSG_WHATAREYOUDOING48,1971
#define MSG_JOINSUBTEAM	MSG_JOINSUBTEAM49,2028
#define MSG_LEAVESUBTEAM	MSG_LEAVESUBTEAM50,2078
#define MSG_CREATENEWFORMATION	MSG_CREATENEWFORMATION51,2129
#define MSG_FORMATIONPOSITION	MSG_FORMATIONPOSITION52,2191
#define MSG_FORMATIONSPACE	MSG_FORMATIONSPACE53,2274
#define MSG_DOFORMATION	MSG_DOFORMATION54,2346
#define MSG_DISMISS	MSG_DISMISS55,2403
#define MSG_CAMP	MSG_CAMP56,2463
#define MSG_CHECKPOINT	MSG_CHECKPOINT57,2506
#define MSG_PATROL	MSG_PATROL58,2562
#define MSG_LEADTHEWAY	MSG_LEADTHEWAY59,2625
#define MSG_GETITEM	MSG_GETITEM60,2671
#define MSG_KILL	MSG_KILL61,2714
#define MSG_WHEREAREYOU	MSG_WHEREAREYOU62,2755
#define MSG_RETURNFLAG	MSG_RETURNFLAG63,2806
#define MSG_WHATISMYCOMMAND	MSG_WHATISMYCOMMAND64,2855
#define MSG_WHICHTEAM	MSG_WHICHTEAM65,2923
#define MSG_TASKPREFERENCE	MSG_TASKPREFERENCE66,2982
#define MSG_ATTACKENEMYBASE	MSG_ATTACKENEMYBASE67,3053
#define MSG_HARVEST	MSG_HARVEST68,3112
#define MSG_SUICIDE	MSG_SUICIDE69,3154
#define MSG_ME	MSG_ME71,3205
#define MSG_EVERYONE	MSG_EVERYONE72,3230
#define MSG_MULTIPLENAMES	MSG_MULTIPLENAMES73,3259
#define MSG_NAME	MSG_NAME74,3292
#define MSG_PATROLKEYAREA	MSG_PATROLKEYAREA75,3318
#define MSG_MINUTES	MSG_MINUTES76,3351
#define MSG_SECONDS	MSG_SECONDS77,3380
#define MSG_FOREVER	MSG_FOREVER78,3409
#define MSG_FORALONGTIME	MSG_FORALONGTIME79,3438
#define MSG_FORAWHILE	MSG_FORAWHILE80,3470
#define MSG_CHATALL	MSG_CHATALL82,3503
#define MSG_CHATTEAM	MSG_CHATTEAM83,3532
#define MSG_CHATTELL	MSG_CHATTELL84,3561
#define MSG_CTF	MSG_CTF86,3593
#define ST_SOMEWHERE	ST_SOMEWHERE89,3655
#define ST_NEARITEM	ST_NEARITEM90,3682
#define ST_ADDRESSED	ST_ADDRESSED91,3709
#define ST_METER	ST_METER92,3736
#define ST_FEET	ST_FEET93,3760
#define ST_TIME	ST_TIME94,3784
#define ST_HERE	ST_HERE95,3809
#define ST_THERE	ST_THERE96,3834
#define ST_I	ST_I97,3859
#define ST_MORE	ST_MORE98,3882
#define ST_BACK	ST_BACK99,3908
#define ST_REVERSE	ST_REVERSE100,3934
#define ST_SOMEONE	ST_SOMEONE101,3963
#define ST_GOTFLAG	ST_GOTFLAG102,3992
#define ST_CAPTUREDFLAG	ST_CAPTUREDFLAG103,4021
#define ST_RETURNEDFLAG	ST_RETURNEDFLAG104,4054
#define ST_TEAM	ST_TEAM105,4088
#define ST_1FCTFGOTFLAG	ST_1FCTFGOTFLAG106,4116
#define ST_DEFENDER	ST_DEFENDER108,4173
#define ST_ATTACKER	ST_ATTACKER109,4200
#define ST_ROAMER	ST_ROAMER110,4227
#define THE_ENEMY	THE_ENEMY114,4283
#define THE_TEAM	THE_TEAM115,4308
#define NETNAME	NETNAME117,4357
#define PLACE	PLACE118,4381
#define FLAG	FLAG119,4403
#define MESSAGE	MESSAGE120,4424
#define ADDRESSEE	ADDRESSEE121,4448
#define ITEM	ITEM122,4473
#define TEAMMATE	TEAMMATE123,4494
#define TEAMNAME	TEAMNAME124,4518
#define ENEMY	ENEMY125,4542
#define KEYAREA	KEYAREA126,4564
#define FORMATION	FORMATION127,4588
#define POSITION	POSITION128,4613
#define NUMBER	NUMBER129,4637
#define TIME	TIME130,4660
#define NAME	NAME131,4681
#define MORE	MORE132,4702

sys/sys_local.h,129
#define MINSDL_MAJOR MINSDL_MAJOR27,1077
#define MINSDL_MINOR MINSDL_MINOR28,1100
#define MINSDL_PATCH MINSDL_PATCH29,1123

sys/sys_unix.c,1561
static char homePath[ MAX_OSPATH ] = { 0 };homePath40,1345
char *Sys_DefaultHomePath(void)Sys_DefaultHomePath47,1454
unsigned long sys_timeBase = 0;sys_timeBase84,2309
int curtime;curtime90,2625
int Sys_Milliseconds (void)Sys_Milliseconds91,2638
long fastftol( float f )fastftol114,2944
void Sys_SnapVector( float *v )Sys_SnapVector124,3050
qboolean Sys_RandomBytes( byte *string, int len )Sys_RandomBytes138,3215
char *Sys_GetCurrentUser( void )Sys_GetCurrentUser161,3529
char *Sys_GetClipboardData(void)Sys_GetClipboardData176,3739
#define MEM_THRESHOLD MEM_THRESHOLD181,3791
qboolean Sys_LowPhysicalMemory( void )Sys_LowPhysicalMemory190,3899
const char *Sys_Basename( char *path )Sys_Basename200,4016
const char *Sys_Dirname( char *path )Sys_Dirname210,4142
void Sys_Mkdir( const char *path )Sys_Mkdir220,4264
char *Sys_Cwd( void )Sys_Cwd230,4378
#define MAX_FOUND_FILES MAX_FOUND_FILES251,4715
void Sys_ListFilteredFiles( const char *basedir, char *subdirs, char *filter, char **list, int *numfiles )Sys_ListFilteredFiles258,4813
char **Sys_ListFiles( const char *directory, const char *extension, char *filter, int *numfiles, qboolean wantsubs )Sys_ListFiles315,6229
void Sys_FreeFileList( char **list )Sys_FreeFileList415,8163
char *Sys_StripAppBundle( char *dir )Sys_StripAppBundle440,8614
void Sys_Sleep( int msec )Sys_Sleep466,9176
void Sys_ErrorDialog( const char *error )Sys_ErrorDialog496,9627
void Sys_GLimpInit( void )Sys_GLimpInit526,10174
void Sys_PlatformInit( void )Sys_PlatformInit538,10297

sys/sys_loadlib.h,632
#		define Sys_LoadLibrary(Sys_LoadLibrary26,1030
#		define Sys_UnloadLibrary(Sys_UnloadLibrary27,1081
#		define Sys_LoadFunction(Sys_LoadFunction28,1136
#		define Sys_LibraryError(Sys_LibraryError29,1206
#		define Sys_LoadLibrary(Sys_LoadLibrary32,1272
#		define Sys_UnloadLibrary(Sys_UnloadLibrary33,1320
#		define Sys_LoadFunction(Sys_LoadFunction34,1362
#		define Sys_LibraryError(Sys_LibraryError35,1407
#	define Sys_LoadLibrary(Sys_LoadLibrary45,1591
#	define Sys_UnloadLibrary(Sys_UnloadLibrary46,1637
#	define Sys_LoadFunction(Sys_LoadFunction47,1687
#	define Sys_LibraryError(Sys_LibraryError48,1742

sys/sys_main.c,1718
static char binaryPath[ MAX_OSPATH ] = { 0 };binaryPath50,1445
static char installPath[ MAX_OSPATH ] = { 0 };installPath51,1491
void Sys_SetBinaryPath(const char *path)Sys_SetBinaryPath58,1599
char *Sys_BinaryPath(void)Sys_BinaryPath68,1753
void Sys_SetDefaultInstallPath(const char *path)Sys_SetDefaultInstallPath78,1873
char *Sys_DefaultInstallPath(void)Sys_DefaultInstallPath88,2045
char *Sys_DefaultAppPath(void)Sys_DefaultAppPath101,2213
void Sys_In_Restart_f( void )Sys_In_Restart_f113,2363
char *Sys_ConsoleInput(void)Sys_ConsoleInput125,2499
void Sys_Exit( int ex )Sys_Exit137,2660
void Sys_Quit( void )Sys_Quit159,2909
cpuFeatures_t Sys_GetProcessorFeatures( void )Sys_GetProcessorFeatures170,3036
void Sys_Init(void)Sys_Init193,3600
void Sys_AnsiColorPrint( const char *msg )Sys_AnsiColorPrint207,3885
void Sys_Print( const char *msg )Sys_Print274,5007
void Sys_Error( const char *error, ... )Sys_Error285,5139
void Sys_Warn( char *warning, ... )Sys_Warn306,5439
int Sys_FileTime( char *path )Sys_FileTime325,5739
void Sys_UnloadDll( void *dllHandle )Sys_UnloadDll340,5915
static void* Sys_TryLibraryLoad(const char* base, const char* gamedir, const char* fname, char* fqpath )Sys_TryLibraryLoad356,6124
void *Sys_LoadDll( const char *name, char *fqpath ,Sys_LoadDll389,6824
void Sys_ParseArgs( int argc, char **argv )Sys_ParseArgs446,8292
#		define DEFAULT_BASEDIR DEFAULT_BASEDIR466,8686
#		define DEFAULT_BASEDIR DEFAULT_BASEDIR468,8756
void Sys_SigHandler( int signal )Sys_SigHandler477,8872
int main( int argc, char **argv )main504,9350
#define STRING(STRING520,9691
#define XSTRING(XSTRING521,9712
#define MINSDL_VERSION MINSDL_VERSION522,9741

sys/win_resource.h,582
#define IDS_STRING1 IDS_STRING126,1076
#define IDI_ICON1 IDI_ICON127,1118
#define IDB_BITMAP1 IDB_BITMAP128,1160
#define IDB_BITMAP2 IDB_BITMAP229,1202
#define IDC_CURSOR1 IDC_CURSOR130,1246
#define IDC_CURSOR2 IDC_CURSOR231,1290
#define IDC_CURSOR3 IDC_CURSOR332,1334
#define _APS_NO_MFC _APS_NO_MFC38,1480
#define _APS_NEXT_RESOURCE_VALUE _APS_NEXT_RESOURCE_VALUE39,1522
#define _APS_NEXT_COMMAND_VALUE _APS_NEXT_COMMAND_VALUE40,1566
#define _APS_NEXT_CONTROL_VALUE _APS_NEXT_CONTROL_VALUE41,1612
#define _APS_NEXT_SYMED_VALUE _APS_NEXT_SYMED_VALUE42,1657

sys/sys_win32.c,1583
static char homePath[ MAX_OSPATH ] = { 0 };homePath41,1356
char *Sys_DefaultHomePath( void )Sys_DefaultHomePath48,1461
int sys_timeBase;sys_timeBase98,2528
int Sys_Milliseconds (void)Sys_Milliseconds99,2546
void Sys_SnapVector( float *v )Sys_SnapVector119,2887
qboolean Sys_RandomBytes( byte *string, int len )Sys_RandomBytes146,3165
char *Sys_GetCurrentUser( void )Sys_GetCurrentUser169,3568
char *Sys_GetClipboardData( void )Sys_GetClipboardData190,3902
#define MEM_THRESHOLD MEM_THRESHOLD212,4407
qboolean Sys_LowPhysicalMemory( void )Sys_LowPhysicalMemory219,4509
const char *Sys_Basename( char *path )Sys_Basename231,4713
const char *Sys_Dirname( char *path )Sys_Dirname261,5245
void Sys_Mkdir( const char *path )Sys_Mkdir282,5555
char *Sys_Cwd( void ) {Sys_Cwd292,5655
#define MAX_FOUND_FILES MAX_FOUND_FILES309,5941
void Sys_ListFilteredFiles( const char *basedir, char *subdirs, char *filter, char **list, int *numfiles )Sys_ListFilteredFiles316,6031
static qboolean strgtr(const char *s0, const char *s1)strgtr369,7380
char **Sys_ListFiles( const char *directory, const char *extension, char *filter, int *numfiles, qboolean wantsubs )Sys_ListFiles396,7702
void Sys_FreeFileList( char **list )Sys_FreeFileList497,9628
void Sys_Sleep( int msec )Sys_Sleep520,9885
void Sys_ErrorDialog( const char *error )Sys_ErrorDialog546,10306
static qboolean SDL_VIDEODRIVER_externallySet = qfalse;SDL_VIDEODRIVER_externallySet581,11068
void Sys_GLimpInit( void )Sys_GLimpInit591,11233
void Sys_PlatformInit( void )Sys_PlatformInit621,11890

sys/con_passive.c,180
void CON_Shutdown( void )CON_Shutdown34,1141
void CON_Init( void )CON_Init43,1225
char *CON_Input( void )CON_Input52,1306
void CON_Print( const char *msg )CON_Print62,1403

sys/con_win32.c,1169
#define QCONSOLE_HISTORY QCONSOLE_HISTORY28,1085
static WORD qconsole_attrib;qconsole_attrib30,1114
static DWORD qconsole_orig_mode;qconsole_orig_mode33,1168
static CONSOLE_CURSOR_INFO qconsole_orig_cursorinfo;qconsole_orig_cursorinfo34,1201
static char qconsole_history[ QCONSOLE_HISTORY ][ MAX_EDIT_LINE ];qconsole_history37,1270
static int qconsole_history_pos = -1;qconsole_history_pos38,1337
static int qconsole_history_oldest = 0;qconsole_history_oldest39,1375
static char qconsole_line[ MAX_EDIT_LINE ];qconsole_line42,1439
static int qconsole_linelen = 0;qconsole_linelen43,1483
static HANDLE qconsole_hout;qconsole_hout45,1517
static HANDLE qconsole_hin;qconsole_hin46,1546
static BOOL WINAPI CON_CtrlHandler( DWORD sig )CON_CtrlHandler60,2012
static void CON_HistAdd( void )CON_HistAdd71,2159
static void CON_HistPrev( void )CON_HistPrev89,2557
static void CON_HistNext( void )CON_HistNext111,3025
static void CON_Show( void )CON_Show138,3574
void CON_Shutdown( void )CON_Shutdown187,4699
void CON_Init( void )CON_Init200,4964
char *CON_Input( void )CON_Input246,6065
void CON_Print( const char *msg )CON_Print353,7959

sys/con_tty.c,1017
static qboolean ttycon_on = qfalse;ttycon_on44,1568
static int ttycon_hide = 0;ttycon_hide45,1604
static int TTY_erase;TTY_erase48,1707
static int TTY_eof;TTY_eof49,1729
static struct termios TTY_tc;TTY_tc51,1750
static field_t TTY_con;TTY_con53,1781
#define CON_HISTORY CON_HISTORY57,1925
static field_t ttyEditLines[ CON_HISTORY ];ttyEditLines58,1948
static int hist_current = -1, hist_count = 0;hist_current59,1992
static int hist_current = -1, hist_count = 0;hist_count59,1992
static void CON_FlushIn( void )CON_FlushIn69,2176
static void CON_Back( void )CON_Back86,2492
static void CON_Hide( void )CON_Hide107,2811
static void CON_Show( void )CON_Show137,3193
void CON_Shutdown( void )CON_Shutdown167,3648
void Hist_Add(field_t *field)Hist_Add184,3918
field_t *Hist_Prev( void )Hist_Prev209,4349
field_t *Hist_Next( void )Hist_Next230,4717
void CON_Init( void )CON_Init254,5116
char *CON_Input( void )CON_Input306,6313
void CON_Print( const char *msg )CON_Print453,9148

sys/con_log.c,457
#define MAX_LOG MAX_LOG27,1064
static char          consoleLog[ MAX_LOG ];consoleLog29,1087
static unsigned int  writePos = 0;writePos30,1131
static unsigned int  readPos = 0;readPos31,1166
unsigned int CON_LogSize( void )CON_LogSize38,1257
static unsigned int CON_LogFree( void )CON_LogFree51,1452
unsigned int CON_LogWrite( const char *in )CON_LogWrite61,1592
unsigned int CON_LogRead( char *out, unsigned int outSize )CON_LogRead104,2429
